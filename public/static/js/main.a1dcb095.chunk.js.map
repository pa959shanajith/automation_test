{"version":3,"sources":["pages/global/components/ProgressBar.js","pages/global/components/FooterOne.js","pages/global/components/RedirectPage.js","pages/global/components/ScreenOverlay.js","pages/global/components/ScrollBar.js","pages/global/components/PopupMsg.js","pages/global/components/ModalContainer.js","pages/global/components/ActionBar.js","pages/profJ/api.js","pages/profJ/index.js","pages/profJ/components/ChatBot.js","pages/global/components/ReferenceBar.js","pages/global/components/Thumbnail.js","pages/global/components/TaskContents.js","pages/global/components/ResetSession.js","pages/global/components/Report.js","pages/global/components/BrowserFp.js","pages/global/components/IntegrationDropDown.js","pages/global/components/GenerateTaskList.js","pages/global/components/CalendarComp.js","pages/global/components/ErrorPage.js","pages/integration/state/action.js","pages/admin/state/action.js","pages/mindmap/state/action.js","pages/scrape/state/action.js","pages/login/components/LoginFields.js","pages/login/components/StaticElements.js","pages/login/containers/LoginPage.js","pages/login/components/TermsAndConditions.js","pages/login/containers/BasePage.js","pages/login/index.js","pages/admin/containers/LeftPanel.js","pages/admin/api.js","pages/admin/components/UseOnClickOutside.js","pages/admin/index.js","pages/schedule/index.js","pages/global/components/ValidationExpression.js","pages/admin/components/CreateLanding.js","pages/admin/components/EditLanding.js","pages/admin/containers/CreateUser.js","pages/admin/components/ProjectButtons.js","pages/admin/components/ReleaseCycle.js","pages/admin/containers/Project.js","pages/admin/containers/ProjectAssign.js","pages/admin/containers/OidcConfig.js","pages/admin/components/FormComp.js","pages/admin/components/GitButtonActions.js","pages/admin/containers/GitConfig.js","pages/admin/containers/SamlConfig.js","pages/admin/containers/Preferences.js","pages/admin/containers/SessionManagement.js","pages/admin/components/AssignOptionBox.js","pages/admin/containers/EditIcePool.js","pages/admin/containers/CreateIcePool.js","pages/admin/components/IceProvisionForm.js","pages/admin/components/IceProvisionList.js","pages/admin/containers/IceProvision.js","pages/admin/components/TokenMgmtForm.js","pages/admin/components/TokenMgmtList.js","pages/admin/containers/TokenMangement.js","pages/admin/components/LdapConfigurationForm.js","pages/admin/components/LdapDataMapping.js","pages/admin/containers/LdapConfigCreate.js","pages/admin/containers/LdapConfigEdit.js","pages/admin/containers/LdapConfig.js","pages/admin/components/EmailTest.js","pages/admin/containers/EmailConfig.js","pages/admin/components/AllocateByQuantity.js","pages/admin/components/AllocateByIce.js","pages/admin/containers/AllocateIcePool.js","pages/admin/containers/AdminHome.js","pages/plugin/components/PluginBox.js","pages/plugin/components/PluginSection.js","pages/plugin/components/FilterDialog.js","pages/plugin/components/TaskSection.js","pages/plugin/api.js","pages/plugin/containers/PluginHome.js","pages/plugin/index.js","pages/schedule/components/ThumbnailSchedule.js","pages/schedule/components/ActionBarItems.js","pages/schedule/api.js","pages/schedule/components/ScheduleSuitesTopSection.js","pages/schedule/components/Pagination.js","pages/schedule/containers/ScheduleContent.js","pages/schedule/containers/ScheduleHome.js","pages/mindmap/api.js","pages/mindmap/containers/MindmapUtils.js","pages/mindmap/components/ImportMindmap.js","pages/mindmap/components/SearchBox.js","pages/mindmap/components/NavButton.js","pages/mindmap/components/CreateOptions.js","pages/mindmap/components/SaveMapButton.js","pages/mindmap/components/ToolbarMenu.js","pages/mindmap/components/ModuleListDrop.js","pages/mindmap/components/Legends.js","pages/mindmap/components/Controlbox.js","pages/mindmap/components/InputBox.js","pages/mindmap/components/MultiNodeBox.js","pages/mindmap/components/RectangleBox.js","pages/mindmap/components/ExportMapButton.js","pages/mindmap/containers/CanvasNew.js","pages/mindmap/containers/CanvasEnE.js","pages/mindmap/containers/CreateNew.js","pages/mindmap/components/ModuleListDropEnE.js","pages/mindmap/components/ToolbarMenuEnE.js","pages/mindmap/containers/CreateEnE.js","pages/mindmap/components/ToolbarMenuAssign.js","pages/mindmap/components/Complexity.js","pages/mindmap/components/TaskBox.js","pages/mindmap/containers/CanvasAssign.js","pages/mindmap/index.js","pages/mindmap/containers/CreateAssign.js","pages/mindmap/containers/MindmapHome.js","pages/scrape/components/ScrapeObject.js","pages/scrape/components/ScrapeContext.js","pages/scrape/api.js","pages/scrape/containers/ScreenWrapper.js","pages/scrape/components/SubmitTask.js","pages/scrape/containers/ScrapeObjectList.js","pages/scrape/containers/CompareBox.js","pages/scrape/containers/CompareObjectList.js","pages/scrape/containers/WebserviceScrape.js","pages/scrape/components/FilterScrapeObjects.js","pages/scrape/components/ListVariables.js","pages/scrape/index.js","pages/scrape/components/RefBarItems.js","pages/scrape/components/AddObjectModal.js","pages/scrape/components/CompareObjectModal.js","pages/scrape/components/MapObjectModal.js","pages/scrape/components/CertificateModal.js","pages/scrape/components/EditIrisObject.js","pages/scrape/components/CustomObjectModal.js","pages/scrape/components/ActionBarItems.js","pages/scrape/components/LaunchApplication.js","pages/scrape/containers/ScrapeScreen.js","pages/utility/index.js","pages/report/index.js","pages/integration/index.js","pages/design/components/UtilFunctions.js","pages/design/components/TableRow.js","pages/design/components/DetailsDialog.js","pages/design/components/RemarkDialog.js","pages/design/components/PasteStepDialog.js","pages/design/components/SelectMultipleDialog.js","pages/design/api.js","pages/design/containers/DesignContent.js","pages/design/components/ActionBarItems.js","pages/design/components/DependentTestCaseDialog.js","pages/design/components/RefBarItems.js","pages/design/containers/DesignHome.js","pages/design/index.js","pages/utility/components/Leftbar.js","pages/utility/components/Rightbar.js","pages/utility/components/Encryption.js","pages/utility/components/Optimization.js","pages/utility/api.js","pages/utility/components/ExecutionMetrics.js","pages/utility/components/Table.js","pages/utility/components/DataTable.js","pages/utility/containers/UtilityCenter.js","pages/utility/containers/UtilityHome.js","pages/report/api.js","pages/report/components/ModuleList.js","pages/report/components/ToolbarMenu.js","pages/report/components/ExecPanel.js","pages/report/components/ScStatusPanel.js","pages/report/components/ScDetailPanel.js","pages/report/container/TestingReport.js","pages/report/components/AccExecPanel.js","pages/report/components/AccStandardDesc.js","pages/report/components/AccDetailPanel.js","pages/report/components/AccStatusPanel.js","pages/report/container/AccessibilityReport.js","pages/report/container/ReportContainer.js","pages/report/container/ReportHome.js","pages/integration/components/Leftbar.js","pages/integration/components/Rightbar.js","pages/integration/api.js","pages/integration/containers/MappingPage.js","pages/integration/components/ALMTree.js","pages/integration/components/ALMContent.js","pages/integration/components/LoginModal.js","pages/integration/components/InfoPopup.js","pages/integration/components/MappedLabel.js","pages/integration/containers/MappedPage.js","pages/integration/containers/ALM.js","pages/integration/components/QTestTree.js","pages/integration/components/QTestContent.js","pages/integration/containers/QTest.js","pages/integration/components/ZephyrTree.js","pages/integration/components/ZephyrContent.js","pages/integration/containers/Zephyr.js","pages/integration/containers/IntegrationHome.js","App.js","pages/plugin/state/action.js","pages/login/state/action.js","pages/report/state/action.js","pages/global/api.js","pages/execute/api.js","pages/execute/index.js","pages/execute/components/ThumbnailExecute.js","pages/execute/components/ActionBarItems.js","pages/execute/components/MultiSelectDropDown.js","pages/execute/components/ExecuteTable.js","pages/execute/containers/ExecuteContent.js","pages/execute/containers/ExecuteHome.js","pages/login/api.js","pages/global/state/reducer.js","pages/login/state/reducer.js","pages/admin/state/reducer.js","pages/plugin/state/reducer.js","pages/mindmap/state/reducer.js","pages/scrape/state/reducer.js","pages/design/state/reducer.js","pages/report/state/reducer.js","pages/integration/state/reducer.js","reducer.js","pages/global/state/action.js","pages/design/state/action.js","pages/global/components/FooterTwo.js","pages/global/components/ChangePassword.js","pages/global/components/TimeComp.js","pages/global/components/ChangeDefaultIce.js","pages/global/components/NotifyDropDown.js","pages/global/components/Header.js","pages/global/components/DropDownList.js","pages/global/components/AllocateICEPopup.js","SocketFactory.js","serviceWorker.js","index.js"],"names":["SetProgressBar","op","store","dispatch","type","actionTypes","payload","Math","floor","random","ProgressBar","useDispatch","progress","useSelector","state","progressbar","color","onLoaderFinished","FooterOne","className","alt","src","Date","getFullYear","RedirectPage","history","persistor","purge","window","localStorage","clear","logoutUser","then","data","push","catch","error","console","ScreenOverlay","props","content","ScrollBar","useState","size","setSize","useLayoutEffect","updateSize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","width","height","useEffect","scrollId","verticalbarWidth","thumbColor","trackColor","hideYbar","hoverColor","horizontalbarWidth","options","minScrollbarLength","wheelPropagation","suppressScrollX","hideXbar","useBothWheelAxes","suppressScrollY","style","maxHeight","onScrollX","onScrollY","children","PopupMsg","onClick","e","close","title","submit","submitText","ModalContainer","modalClass","data-test","footer","ActionBar","collapse","setCollapse","collapsible","id","bottomContent","upperContent","getTopMatches_ProfJ","userQuery","a","axios","url","method","headers","param","res","status","ChatBot","queryref","useRef","uMsgRef","bMsgRef","lMsgRef","chatBox","setChatBox","chat","setChat","linkMsgArr","setLinkMsgArr","show","popup","setPopup","current","scrollIntoView","block","behavior","callsendbutton","chatArr","value","message","from","callProfJ","chatReturn","callLinkClick","idx","linkIdx","linkMsg_Arr","onCloseClick","map","i","ref","key","mes","display","marginBottom","cursor","onKeyPress","callqueryRaised","placeholder","ProfJ","setshowProfJ","TaskInfoPopup","closePopups","taskPopY","setShowInfo","providedTaskInfo","scrapeScreenURL","dataDict","plugin","FD","current_task","CT","taskInfo","setTaskInfo","newTaskInfo","projectDict","projectId","testSuiteDetails","projectidts","screenName","testCaseName","releaseid","cycleDict","cycleid","screen","taskName","slice","toLowerCase","onClickAway","marginTop","Object","keys","SearchPopup","setShowTask","tasksJson","uid","taskList","setTaskList","searchValue","setSearchValue","searchItems","setSearchItems","GenerateTaskList","searchTask","filteredItem","counter","forEach","item","taskname","includes","type_counter","onChange","event","target","items","taskJson","currUid","ReferenceBar","showTask","showInfo","setTaskPopY","showProfJ","popups","closeAllPopups","toggleTaskPop","clientY","taskTop","hideTask","hideInfo","Thumbnail","disable","action","svg","img","TaskPanel","taskSuiteDetails","dataobj","useHistory","desc","setDesc","rel","setRel","cyc","setCyc","appType","setAppType","descId","setDescId","showPanel","panel_idx","panel-id","disableTask","preventDefault","taskObj","updateTaskStatus","subtaskid","scenarioFlag","scenarioflag","accessibilityParameters","scenarioTaskType","assignedTestScenarioIds","assignedtestscenarioids","screenId","screenid","screenname","projectid","versionnumber","testCaseId","testcaseid","testcasename","apptype","scenarioId","scenarioid","batchTaskIDs","subTask","subtask","subTaskId","reuse","replace","length","substr","setShowPanel","tdes","clktask","maintask","taskDetails","taskType","tasktype","description-id","TaskContents","ResetSession","poll","keepSessionAlive","debug","start","this","eventid","setInterval","pollCall","end","clearInterval","Report","BrowserFp","hardwareOnly","navigator","userAgent","language","languages","platform","hardwareConcurrency","deviceMemory","plugins","entries","name","colorDepth","availWidth","availHeight","timezoneOffset","getTimezoneOffset","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","touchSupport","canvas","document","createElement","ctx","getContext","textBaseline","font","fillStyle","fillRect","fillText","toDataURL","h1","h1b","k1","remainder","bytes","c1","c2","charCodeAt","murmurhash3_32_gc","JSON","stringify","submitModal","errorMsg","saveAction","align","MiddleContent","credentials","setCredentials","urlErrBor","usernameErrBor","passErrBor","qtestSteps","setqtestSteps","userName","password","azephyrPassword","username","IntegrationDropDown","setshowModal","browserTypeExe","integrationCred","setPopupState","setCredentialsExecution","displayError","setUrlErrBor","setUserNameErrBor","setPassErrBor","setErrorMsg","apiIntegration","loginZephyrServer_ICE","loginQCServer_ICE","loginQTestServer_ICE","integration","alm","qtest","qteststeps","zephyr","Zephyr","ALM","qTest","tempDataObj","reviewList","todoList","taskDescription","subTaskType","assignedTo","startDate","expectedEndDate","dataObjList","CalendarComp","showCal","setShowCal","dateRef","setDate","disabled","dateFormat","login","dateformat","dateVal","date","classCalender","closeCal","setCloseCal","inputProps","inputPropsDefault","readOnly","openDate","suiteHeader","getElementById","picker","getElementsByClassName","offset","getBoundingClientRect","y","top","formatDate","replaceAll","splitDate","split","d","month","getMonth","day","getDate","year","def","format","arr","used","index","join","as","closeOnSelect","isValidDate","yesterday","execMetrics","moment","isBefore","subtract","isAfter","open","undefined","timeFormat","onOpen","renderInput","ErrorPage","VIEW_MAPPED_SCREEN_TYPE","INTEGRATION_SCREEN_TYPE","SHOW_POPUP","SHOW_OVERLAY","MAPPED_FILES","SEL_TC_DETAILS","SEL_SCN_IDS","SEL_TC","SYNCED_TC","MAPPED_PAIR","UPDATE_INPUT_USERNAME","UPDATE_INPUT_FIRSTNAME","UPDATE_INPUT_LASTNAME","UPDATE_INPUT_PASSWORD","UPDATE_INPUT_CONFIRMPASSWORD","UPDATE_INPUT_EMAIL","UPDATE_ALLROLES","UPDATE_ALLADDROLES","UPDATE_USERROLE","UPDATE_TYPE","UPDATE_USERID","UPDATE_USERIDNAME","UPDATE_NO_CREATE","UPDATE_ALL_USER_FILTER","UPDATE_LDAP_USER_FILTER","UPDATE_CONF_EXP","UPDATE_SERVER","UPDATE_LDAP","UPDATE_CONF_SERVER_LIST","UPDATE_LDAP_ALLUSER_LIST","UPDATE_LDAP_USER","UPDATE_LDAP_FETCH","UPDATE_ALL_USERS_LIST","UPDATE_FTYPE","UPDATE_ROLENAME","UPDATE_ADDROLES","EDIT_ADDROLES","UPDATE_CONF_SERVER_LIST_PUSH","ADD_ADDROLE","RESET_VALUES","UPDATE_DATA","UPDATE_LDAP_DATA","UPDATE_PROJECTLIST","SELECT_PROJECT","UPDATE_MODULELIST","SELECT_MODULE","SEARCH_MODULELIST","SELECT_SELECTBOX","UPDATE_SELECTNODES","UPDATE_COPYNODES","UPDATE_SCREENDATA","UPDATE_DELETENODES","UPDATE_SCENARIOLIST","SAVE_MINDMAP","UPDATE_UNASSIGNTASK","INIT_ENEPROJECT","IMPORT_MINDMAP","SET_SCRAPEDATA","SET_DISABLEACTION","SET_DISABLEAPPEND","SET_COMPAREFLAG","SET_COMPAREDATA","SET_COMPAREOBJ","SET_OBJVAL","SET_CERT","SET_WSDATA","SET_WSDLERROR","SET_ACTIONERROR","RESET_COMPARE","styles","errorBorder","borderColor","defaultUserIcon","errorUserIcon","defaultPassIcon","errorPassIcon","eyeSlashIcon","eyeIcon","LoginFields","setUsername","setPassword","showPassField","setPassField","showPass","setShowPass","userError","setUserError","passError","setPassError","loginValidation","setLoginValidation","requested","setRequested","restartForm","setRestartForm","redirectTo","setRedirectTo","focusBtn","setFocus","showChangePass","setShowChangePass","showSuccessPass","setSuccessPass","showForgotPassword","setforgotPassword","lockedOut","setLockedOut","unlockCond","setUnlockCond","overlayText","setOverlayText","serverList","resetErrors","hidePassField","checkUser","api","redirect","location","href","proceed","ldapuser","check_credentials","user","active","log","PopUp","PasswordSuccessPopup","setShow","loginCurrPassword","loginPopup","to","server","serverid","serverName","errmsg","restartServer","onSubmit","onFocus","autoFocus","err","StaticElements","LoginPage","TermsAndConditions","tcAction","BasePage","loginAgain","setLoginAgain","showTCPopup","setShowTCPopup","userProfile","setUserProfile","checkLogout","parse","sessionStorage","getItem","reload","userinfo","tandc","loadProfile","emsg","navigateScreen","page","rolename","fullName","email","timeStamp","toLocaleString","bfp","userData","Base","Login","LeftPanel","resetScreen","change","resetMiddleScreen","setResetMiddleScreen","setShowEditUser","setMiddleScreen","middleScreen","getUserRoles","manageUserDetails","userObj","getLDAPConfig","args","opts","getSAMLConfig","manageSAMLConfig","confObj","conf","getOIDCConfig","getUserDetails","getAvailablePlugins","getPreferences","getDomains_ICE","getNames_ICE","requestedids","idtype","createProject_ICE","createprojectObj","createProjectObj","getDetails_ICE","updateProject_ICE","updateProjectObj","userDetails","getAssignedProjects_ICE","getAssignProj","assignProjects_ICE","assignProjectsObj","manageSessionData","reason","fetchICE","provisions","tokeninfo","manageOIDCConfig","getCIUsersDetails","CIUser","manageCIUsers","testLDAPConnection","auth","urlLDAP","baseDN","bindDN","bindCredentials","secure","cert","ldapURL","tlsCert","authType","manageLDAPConfig","updatePool","deleteICE_pools","createPool_ICE","getAvailable_ICE","clearQueue","getPools","val","getNotificationChannels","manageNotificationChannels","testNotificationChannels","fetchLockedUsers","unlockUser","gitSaveConfig","userId","gitAccToken","gitUrl","gitEditConfig","useOnClickOutside","handler","listener","contains","ValidationExpression","regex","CreateLanding","userConf","admin","node","selectedIndex","confServerList","setShowDropdown","showDropdown","click","query","edit","manage","nocreate","selectUserType","defaultValue","clearForm","confServerAddClass","srv","confExpired","checked","ldap","fetch","ldapSwitchFetch","userConf_ldap_fetch","ldapGetUser","autoComplete","ldapDirectoryAddClass","ldapUserFilter","searchFunctionLdap","data-toggle","ldapAllUserList","role","aria-labelledby","ldapUserList","luser","html","maxLength","userNameAddClass","firstname","firstnameAddClass","lastname","lastnameAddClass","submitModalButtons","setshowDeleteModal","EditLanding","showDeleteModal","setShowDropdownEdit","showDropdownEdit","userIdName","marginRight","paddingTop","fType","margin","right","list","setAllUserFilList","allUsersList","searchFunctionUser","allUserFilter","allUserFilList","getUserData","user_idName","marginLeft","selected","CreateUser","toggleAddRoles","setToggleAddRoles","setUserNameAddClass","setfirstnameAddClass","setLastnameAddClass","confirmPasswordAddClass","setConfirmPasswordAddClass","emailAddClass","setEmailAddClass","setLdapDirectoryAddClass","setUserIdNameAddClass","userRolesAddClass","setUserRolesAddClass","setConfServerAddClass","passwordAddClass","setPasswordAddClass","setLdapUserList","loading","setLoading","popupState","showEditUser","MiddleScreen","validate","bAction","charAt","toUpperCase","uType","addRole","createdbyrole","allRoles","filter","userid","passWord","ldapUser","data0","data1","icename","data2","test","errfields","hints","flag","regexPassword","popupOpen","confirmPassword","sort","b","allAddRoles","populateLDAPConf","populateSAMLConf","populateOIDCConf","localeCompare","ldapServer","retainExtra","addrole","confserver","some","_id","indexOf","closePopup","backgroundColor","arid","ProjectButtons","userInfo","create_project","setProjectNameInputErrorBorder","projectName","trim","projectTypeSelected","releaseList","proceedToCreate","relNames","projectDetails","cycles","checkCycle","selDomain","proceeed","response","projectNames","domain","createProjectRes","resetForm","setProjectDetails","refreshDomainList","setSelDomainOptions","j","updateProject","setDomainSelectErrorBorder","setProjectSelectErrorBorder","selProject","setFlag","selProjectId","editedProjectDetails","deletedProjectDetails","newProjectDetails","proceedFlag","relName","testFlag","updateProjectDetails","editProjectName","newProjectName","updateProjectRes","clearUpdateProjectObjects","editProjectTab","ReleaseCycle","clickAddRelease","disableAddRelease","releaseName","count","clickReleaseListName","setActiveRelease","activeRelease","clickEditRelease","clickAddCycle","disableAddCycle","cycleList","cycleName","cycleListClass","clickEditCycle","delCount","ModalContainerMiddleContent","modalInputErrorBorder","Txt","setTxt","ValidExpression","ModalButtonsFooter","editModalcontent","projectEditFunction","projectNameErrorBorder","ProjectNew","setTaskName","setSelProject","setSelProjectId","selProjectOptions","setSelProjectOptions","setProjectName","setSelDomain","setprojectTypeSelected","setDeletedProjectDetails","setUpdateProjectDetails","setNewProjectDetails","setEditedProjectDetails","setDelCount","setCount","setTitle","setPlaceholder","applicationType","setApplicationType","selDomainOptions","showEditModalRelease","setShowEditModalRelease","showEditNameModalRelease","setShowEditNameModalRelease","showEditModalCycle","setShowEditModalCycle","releaseTxt","setReleaseTxt","cycleTxt","setCycleTxt","setModalInputErrorBorder","setReleaseList","setCycleList","setDisableAddRelease","setDisableAddCycle","domainSelectErrorBorder","projectSelectErrorBorder","oldCyclename","setOldCyclename","showEditNameModalCycle","setShowEditNameModalCycle","showProjectEditModal","setShowProjectEditModal","setEditProjectName","getDomains","plugins_list","details","listPlugin","toggleCycleClick","releaseListLen","cyclesListLen","fetchProjectList","requestedname","getDetailsResponse","projectOptions","projectIds","selectProject","domaiprojectId","selProjectRes","RelaseNames","objctNames","cycleNames","optionProject","data-app","concat","CycleList","objectType","editId","oldCycName","releCycObj","createNewRelCyc","dataAdd","ProjectDetails","createCyc","RelID","releaseId","chk","existingReleaseName","editRelid","oldRelText","editRelCyc","oldreleaseName","editStatus","chkPresent","m","existingCycleName","relID","oldCycText","editCycId","editCycle","oldCycleName","cyclename","chkRelPresent","chkcycinrel","n","cycleId","newName","ModalButtons","clickAssignProjects1","setShowAssignProjectModal","userSelectErrorBorder","setUserSelectErrorBorder","selectBox","setSelectBox","allProjectAP","assignedProjectAP","assignProj","setAssignProj","assignedProjectInitial","setAssignedProjectInitial","unAssignedFlag","setUnAssignedFlag","showAssignProjectModal","statechange","setStateChange","selDomainsOptions","setSelDomainsOptions","selectedUserName","setSelectedUserName","selectedProject","setSelectedProject","selectedUserId","setSelectedUserId","getAssignedProjectsLen","setGetAssignedProjectsLen","setShowload","setUnAssignedProjects","setAssignedProjects","setDiffprj","resetAssignProjectForm","fetchUsers","userOptions","clickSelAssignUser","ClickSelDomains","domainname","assignedProjectsArr","assignedProjectNames","unassignedProjectIds","unassignedProjectNames","unAssignedProjects1","detResponse","k","eleContainsInArray","l","element","s","unassignedProj","projectname","assignedProjects1","assignedProj","assignedProjects","currentDiffPrj","getDifferentProjects","deletetasksofprojects","diffprjNew","flag1","data-id","multiple","prj","selectId","newAllProj","newAssignProj","moveItemsRightgo","moveItemsRightall","moveItemsLeftall","moveItemsLeftgo","deleteModalButtons","oidcConfManage","OidcConfig","oidcEdit","setOidcEdit","setName","setUrl","clientId","setClientId","secret","setSecret","nameErrBorder","setNameErrBorder","urlErrBorder","setUrlErrBorder","clientIdErrBorder","setClientIdErrBorder","secretErrBorder","setSecretErrBorder","selBox","setSelBox","oidcReset","onClickEditButton","dataOptions","oidcGetServerData","failMsg","clientid","oidcConfValidate","popupTitle","errHints","popped","FormInput","label","inpRef","validExp","FormSelect","defValue","option","onChangeFn","inpId","FormRadio","htmlFor","FormInpDropDown","setFilter","clickInp","inputRef","setList","dropDown","setDropDown","selectOption","text","currentTarget","innerText","poolname","gitValidate","Project","errBorder","outline","GitButtonActions","updateBtnRef","onClickEdit","token","projectData","resetFields","setShowDeleteModal","gitConfigAction","showEdit","onChangeProject","urlRef","tokenRef","userRef","ProjectRef","refreshFields","domainRef","setDomainList","setProjectList","setProjectData","setUserList","setUserData","fetchDomainList","resetSelectList","GitConfig","domainList","projectList","setShowEdit","userList","header","changeDropDown","SamlConfig","samlEdit","setSamlEdit","idp","setIdp","setCert","certName","setCertName","idpErrBorder","setIdpErrBorder","certNameErrBorder","setCertNameErrBorder","samlReset","samlConfValidate","samlConfManage","samlEditClick","samlGetServerData","updateCert","targetFile","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsBinaryString","certInputClick","srcElement","files","certData","accept","Preferences","resultList","setResultList","SessionManagement","sessions","setSessions","clients","setClients","showSessions","setShowSessions","showClients","setShowClients","showLockedUsers","setShowLockedUsers","lockedusers","setLockedusers","refreshSessMgmt","sessionData","clientData","fetchLocked","unlock","parseInt","dataset","msg","obj","lockedusersData","splice","disconnectLogoff","innerHTML","temp","rootObj","mode","data-target","hour","getHours","minute","getMinutes","loggedin","ip","moveObj","rightBox","leftBox","setRightBox","setLeftBox","lBox","rBox","el","Array","AssignOptionBox","FilterComp","rightArr","leftArr","moveData","Container","selectedPool","whiteSpace","Footer","setClearPop","clickClearQueue","DelContainer","DelFooter","setDeletePop","clickDeletePool","updateIcePool","prop","pool","poolDict","poolName","projectids","ice_added","ice_deleted","resetData","deleteIcePool","clearIceQueue","poolids","filterRef","setSelectedPool","projList","setAllProj","setPoolDict","setProjList","setPoolList","dataPool","poolid","EditIcePool","updateBtn","deleteBtn","clearBtn","allProj","poolList","clearPop","deletePop","prjarr","CreateIcePool","editPool","setEditPool","ClickCreate","dataCreate","IceProvisionForm","firstStop","setFirstStop","copyToolTip","setCopyToolTip","downloadToolTip","setDownloadToolTip","icenameErrBorder","setIcenameErrBorder","selAssignUser2ErrBorder","setSelAssignUser2ErrBorder","users","setUsers","setTokeninfoIcename","setTokeninfoToken","refreshForm","selectProvisionType","provisionsIce","runProvisionsIce","icetype","setToken","setIcename","setRefreshIceList","refreshIceList","setUserid","verifyName","iceName","icelist","setOp","setSelectProvisionType","entry","effect","getContent","data-for","data-tip","tokeninfoToken","setTimeout","select","execCommand","copyTokenFunc","filename","blob","Blob","createEvent","download","URL","createObjectURL","downloadurl","initMouseEvent","dispatchEvent","downloadToken","IceProvisionList","searchTasks","setSearchTasks","icelistModify","setIcelistModify","showList","setShowList","provisionedto","setIcelist","reregister","eventName","provisionDetails","deregister","searchIceList","hostname","IceProvision","setRunProvisionsIce","tokeninfoIcename","TokenMgmtForm","allUsers","setAllUsers","inputProps1Disable","setInputProps1Disable","inputProps1","repopulateEntries","refresh","loadData","targetid","runLoadData","tokenOp","setAllICE","setAllTokens","setTargetid","setdateVal","setTimeVal","clearFields","generatetoken","deactivated","expiry","toString","updateTokenName","allTokens","allICE","hr","min","changeDate","TimeComp","time","timeVal","setTime","classTimer","TokenMgmtList","allTokensModify","setAllTokensModify","searchRef","updateTokenList","deactivate","tokenName","expireson","TokenManagement","setRunLoadData","setRefresh","generateCIusertokens","tokenname","activeTokens","tokendetails","expdate","exptime","today","td","setHours","dt","mon","sldate_2","sltime_2","now","LdapConfigurationForm","certificateUpdate","setCertificateUpdate","switchSecureUrl","secureOpt","url1","startsWith","endsWith","ldapServerURLErrBor","setBasedn","basedn","ldapBaseDNErrBor","setSecure","for","ldapCertErrBor","ldapEdit","setAuth","setBinddn","setBindCredentials","binddn","binddnErrBor","bindCredentialsErrBor","LdapDataMapping","fieldmap","uname","setFieldmap","fname","lname","ldapFMapUnameErrBor","fieldMapOpts","field","ldapFMapFnameErrBor","ldapFMapLnameErrBor","ldapFMapEmailErrBor","LdapConfigCreate","ldapTest","ldapManage","testStatus","setLdapEdit","setServerName","ldapServerNameErrBor","LdapConfigEdit","emptyPopup","setEmptyPopup","LdapEdit","manageEdit","setFieldMapOpts","setTestStatus","setLdapServerURLErrBor","setBinddnErrBor","setBindCredentialsErrBor","setLdapBaseDNErrBor","setLdapFMapUnameErrBor","setLdapFMapFnameErrBor","setLdapFMapLnameErrBor","setLdapFMapEmailErrBor","setLdapCertErrBor","selBoxOptions","getServerData","values","fmo","ldapTestMessage","LdapConfig","setManageEdit","setLdapServerNameErrBor","ldapConfReresh","switchAuthType","fields","bindcredentials","secureLdap","regExURL","emailRef","errMsg","setErrMsg","emailRegEx","arg","channel","provider","recipient","EmailTest","setEmailTest","update","onSelectProvider","clickToggle","servername","selectProvider","showPool","showAuth","showAll","showProxCred","showProxUrl","toggleUppdate","host","port","serverstatus","toggleStatus","secureconnect","tls","security","tlcerror","insecure","selectauth","authname","authpassword","sendername","sender","senderaddr","assureurl","appurl","timeouts","grettimeout","greeting","socktimeout","socket","conctimeout","connection","checkboxpool","enable","maxconnection","maxconnections","maxmessages","proxy","checkproxyurl","proxyurl","checkproxycred","proxyuser","proxypass","pass","toggleTest","factoryFn","getConfObj","enabletls","insecuretls","regExName","EmailConfig","advanceConf","setAdvanceConf","emailTest","setinputRef","setReload","fn","Ref","createRef","AllocateByQuantity","setSaveAction","iceNum","total","available","iceCount","setIceCount","iceData","setIceData","ice_list","availableIce","abs","available_ice","reset","unavailable_ice","dataPools","zIndex","icepool","max","AllocateByIce","poolIceData","setPoolIceData","initAssign","setInitAssign","ice_List","AllocateIcePool","quant","setQuant","AdminHome","tokenTab","provisionTa","sessionTab","gitConfigure","ldapConfigTab","createUser","projectTab","assignProjectTab","samlConfigTab","oidcConfigTab","Admin","PluginBox","pluginName","pluginTitle","PluginSection","pluginList","setPluginList","tempList","availablePlugins","pluginsInfo","pluginsLength","pluginValue","FilterDialog","filterData","filterTasks","proj","setProj","task","setTask","app","setApp","types","onProjSel","rl","cy","project","release","onRelSel","onCycSel","onTaskSel","onAppSel","onResetFields","cycID","tasktypes","apptypes","TaskSection","userRole","showSearch","setShowSearch","activeTab","setActiveTab","reviewItems","setReviewItems","todoItems","setTodoItems","dataObj","setDataObj","dataDictState","setDataDictState","overlay","setOverlay","showFltrDlg","setShowFltrDlg","setFilterData","filtered","setFiltered","showPopup","setShowPopup","resetStates","uuid","fillFilterValues","projectID","dataIdx","releaseID","domains","appTypeName","cycleID","tidx","passFilterTest","pflag","rflag","cflag","aflag","tflag","itm","Popup","review_items","todo_items","length_tasksJson","PluginHome","SR","Plugin","actions","ThumbnailSchedule","UpdateBrowserTypeExe","UpperContent","isMac","renderComp","WebList","icon","oebsList","desktopList","systemList","sapList","webserviceList","mobileAppList","mobileWebList","mainframeList","BottomContent","updateExecAction","execAction","updateExecEnv","execEnv","smartMode","setSmartMode","smartScenario","setSmartScenario","updateSmartMode","readTestSuite_ICE","readTestSuite","fromFlag","getScheduledDetails_ICE","testSuitesScheduler_ICE","executionData","cancelScheduledJob_ICE","schDetails","schedUserid","web","ScheduleSuitesTopSection","setModuleScheduledate","moduleScheduledate","scheduleTableData","setScheduleTableData","rti","parseFloat","readTestSuiteFunct","tableData","moduleScheduledateTime","rowData","testsuiteid","inputPropstime","inputPropsdate","scenarioids","executestatus","updateScenarioStatus","eachData1","sid","changeExecutestatusInitial","zeroExist","oneExist","indeterminate","updateDateTime","date_time","newExecutestatus","changeSelectALL","data-testsuiteid","testsuitename","changeExecutestatus","data-scenarioid","scenarionames","padding","dataparam","condition","projectnames","Pagination","pager","initialPage","setPage","prevProps","prevState","totalPages","getPager","pageOfItems","startIndex","endIndex","setState","onChangePage","totalItems","currentPage","pageSize","startPage","endPage","ceil","pages","React","Component","updateDateTimeValues","cancelThisJob","scheduledatetime","scheduledby","getScheduledDetails","scheduleid","SelectBrowserCheck","browImg","brow","checkSelectedModules","checkDateTimeValues","eachData","doNotSchedule","dateValue","timeValue","diff","parseLogicExecute","schedulePoolDetails","projectdata","moduleInfo","testsuiteDetails","suiteInfo","selectedRowData","relid","cycid","scenarioname","scenariodescription","testsuiteName","testsuiteId","versionNumber","domainName","suiteDetails","targetUser","iceList","timestamp","valueOf","ScheduleContent","syncScenario","setBrowserTypeExe","setExecAction","filter_data","setPageOfItems","scheduledData","setScheduledData","scheduledDataOriginal","setScheduledDataOriginal","allocateICE","setAllocateICE","setIntegration","showIntegrationModal","setShowIntegrationModal","setSort","scheDetails","setScheDetails","schFilterData","scenariodetails","browserlist","executeon","scheduledon","scheduledDataParsed","eachScenarioDetails","newScheduledScenario","testsuitenames","ScheduleTestSuite","modul_Info","AllocateICEPopup","SubmitButton","modalTitle","modalButton","icePlaceholder","exeTypeLabel","exeIceLabel","scheSmartMode","check","valid","checkDateTime","ScheduleTestSuitePopup","selectStatus","sortDateTime","ng-click","data-scheduledatetime","newPageOfItems","ScheduleHome","setSyncScenario","setExecEnv","appVersion","browserId","browserTypeExecute","getSpliceIndex","Schedule","getProjectList","getModules","getScreens","saveMindmap","write","deletednode","unassignTask","prjId","createdthrough","cycId","relId","exportToExcel","responseType","exportMindmap","moduleId","mindmapId","populateScenarios","moduleID","populateUsers","rows","excelToMindmap","importMindmap","pdProcess","importGitMindmap","testscenarios","exportToGit","unfoldtree","parent","revertChild","revertChild1","_children","foldtree","recurseTogChild","nodeDisplay","linkDisplay","v","dLinks","hidden","lid","source","getNonOverlappingPosition","arr_co","new_one","verticalLayout","dist","closestCord","x","dmin","c","sqrt","generateTree","tree","sections","isAssign","translate","d3","cSize","typeNum","levelCount","childCounter","newHeight","d3Tree","dNodes","nodes","links","childIndex","ind","addNode","taskOpacity","taskexists","link","addLink","createNewMap","display_name","img_src","accessibility","p","t","vl","pth","genPathData","moveNodeBegin","pos","deleted","classed","on","stopImmediatePropagation","cSpan","cScale","svgOff","left","attr","moveNodeEnd","pi","toggleNode","nid","createNode","activeNode","nodeID","uNix","pt","tempName","nNext","mapSvg","w","h","objj","path","layout_vertical","getNewPosition","cidxch","currentNode","currentLink","deleteNode","deletedNodes","taskCheck","checkparenttask","parentNode","parent_flag","checkchildrentask","childNode","children_flag","recurseDelChild","tab","parentid","ClickSwitchLayout","setVerticalLayout","moduleSelect","setBlockui","getApptypePD","file","doc","DOMParser","parseFromString","activityJSON","xml","X","toObj","o","nodeType","attributes","nodeName","nodeValue","firstChild","textChild","cdataChild","hasElementChild","nextSibling","match","removeWhite","escape","innerXml","documentElement","alert","toJson","json","asXml","txt","normalize","nxt","removeChild","xml2json","getJsonPd","orderMatrix","dataJSON","orderList","ClickFullScreen","setFullScreen","elt","querySelector","fullScreen","cancelFullScreen","mozCancelFullScreen","webkitCancelFullScreen","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","parseProjList","releases","setError","setSubmit","setOptions","setImportPop","ftypeRef","uploadFileRef","projRef","gitBranchRef","gitVerRef","gitPathRef","sheetRef","importType","setImportType","fileUpload","setFiledUpload","sheetList","setSheetList","importData","gitbranch","gitversion","gitfolderpath","importProj","req","version","moduleid","loadImportData","sheet","pd","excel","git","uploadFile","apptypeName","border","mindmapData","sheetname","validNodeDetails","createnew","createdby","moduledata","screendata","selectProj","selectModule","screenData","moduleList","setData","fileImport","extension","lastIndexOf","read","projFlag","rej","onabort","drag","interval","nName","ImportMindmap","CreateOptions","importPop","blockui","ico","comp","saveNode","projId","isEnE","initEnEProj","mapData","temp_data","namelist","every","key_1","treeIterator","sendNotify","modId","modName","moduleselected","oid","pid","pid_c","id_c","renamed","rnm","orig_name","original_name","SaveMapButton","mindmap","selectedProj","clickSave","rx","ry","paste","copyNodes","dNodes_c","copy","selectNodes","dangling_screen","dLinks_c","dangling_screen_flag","ds_list","f","Toolbarmenu","SearchInp","selectBoxState","prjList","initProj","modlist","setModList","searchModule","Content","loadModule","modID","setWarning","ModuleListDrop","selectedModule","moddrop","setModdrop","warning","cycleRef","completeFlow","getAttribute","Legends","transform","cx","r","idxSearch","SearchBox","inp","setInp","setErr","onSearch","elem","parentElement","nodetf","mptf","center","x_mptf","y_mptf","ccord","zoom","scale","setCtScale","enableResizing","default","bounds","NavButton","move","setMove","extent","transition","duration","tween","iTranslate","interpolate","iScale","onMouseUp","onMouseDown","ControlBox","faRef","ctScale","baseVal","setCtrlBox","classList","clickAddNode","setMultipleNode","setInpBox","clickDeleteNode","initdata","InputBox","InpBox","suggestList","setSuggestList","focus","SetFocus","keyCode","nodetype","filterSuggest","testCaseList","screenList","focuson","scale_mptf","Svgwidth","Svgheight","onEnter","reuseDict","dictTmp","getReuseDetails","tmp","replicateName","defaultvalue","setReset","AddnodeContainer","mnode","setMnode","errList","setErrList","useMemo","ntype","fill","ValidateNode","createMultipleNode","errArr","MultiNodeBox","RectangleBox","resize","xvp","yvp","lt","rctl","rctr","rctt","rctb","alignItems","justifyContent","background","borderRadius","onDrag","onResize","fnameRef","expType","setExpType","clickExport","toExcel","fileURL","body","appendChild","revokeObjectURL","toJSON","jsonDownload","toGit","gitpath","gitVersion","gitFolderPath","gitBranch","toCustom","releaseRef","moduleData","suiteDetailsTemplate","selectedOptions","reqObject","moduleObj","s_data","scenarioName","batchInfo","responseData","ExportMapButton","exportBox","setExportBox","ftype","nodeMoving","pasteNode","cnodes","clinks","cdNodes","cdLinks","csections","activenode_scr","g","bindZoomListner","scaleExtent","call","CanvasNew","setSection","ctrlBox","inpBox","multipleNode","setLinks","setNodes","setdNodes","setdLinks","setCreateNew","CanvasRef","module","typeo","typen","lvl","moveNode","data-nodetype","stopPropagation","nodeClick","opacity","xlinkHref","textAnchor","clickCollpase","CreateNew","importRedirect","ModuleListDropEnE","initScList","setInitScList","scenarioList","setScenarioList","selectedSc","setSelctedSc","dropdown","setDropdown","filterSc","setModName","sceId","sceName","scArr","addScenario","ToolbarMenuEnE","SearchMdInp","SearchScInp","setFilterSc","initmodule","CanvasEnE","CreateEnE","ToolbarMenuAssign","relList","setRelList","relIndex","setRelIndex","cycle","setCycle","updateModuleList","nclist","refs","setRefs","setNclist","cTableData","_","onFormChange","cscore_tmp","textContent","cw","cx_weightage","cs","cx_scale","submitComplexity","getComplexityLevel","nType","csc","Complexity","setShowcomplexity","setComplexity","complexity","clist","clist_tmp","reassignFlag","unAssign","addTask_11","tObj","qid","cTask","taskStatus","checkAndUpdate","taskUndef","origTask","ac","updateTaskObject","ctask","reviewer","rw","enddate","ed","tempTask","copied","copiedidx","replicateTask","taskvn","tvn","batchName","bn","assignedto","at","assignedToName","atName","accessibilityTesting","startdate","sd","reestimation","re","det","nObj","parentlist","unshift","initTaskObject","userAsgList","userRevList","batchNameRef","taskRef","endDate","taskDetailsRef","estimationCount","nodeDateSplit","modDateSplit","accessibilityToggle","taskAssign","scenarios","assignBoxValidator","taskwflow","start_date","setCoordinate","canvSize","removeTask","twf","propagate","task_unassignment","endtoend","modules","screens","testcases","TaskBox","unassignList","initVal","setBatchName","setUserAsgList","setUserRevList","setStartDate","setEndDate","setPropagate","reassign","assignbtn","SetAssignbtn","showcomplexity","setTaskBox","clickUnassign","clickAddTask","nt","batchname","accessibility_testing","detail","changeTask","d1","cval","propList","addTask","tSc","scr","tCa","nativeEvent","aria-hidden","tabIndex","CanvasAssign","taskbox","CreateAssign","MindmapHome","createType","memo","Mindmap","ScrapeObject","object","objName","setObjName","setChecked","setEdit","setActiveEye","objVal","activeEye","onKeyDown","modifyScrapeItem","custname","hideCheckbox","updateChecklist","duplicate","objId","isCustom","onDoubleClick","notEditable","ScrapeContext","createContext","getScrapeDataScreenLevel_ICE","userObjectElement_ICE","custObjProps","updateScreen_ICE","ScreenWrapper","fullHeight","compareContent","buttonGroup","webserviceContent","scrapeObjectList","SubmitTask","useContext","isUnderReview","hideSubmit","setShowConfirmPop","setShowPop","redirectToPlugin","onAction","operation","submitTask","submitOperation","taskid","taskstatus","reviewTask","ScrapeObjectList","user_id","save","delete","search","selAll","disableBtns","setDisableBtns","searchVal","setSearchVal","selAllCheck","setSelAllCheck","setDeleted","modified","setModified","editableObj","setEditableObj","setShowObjModal","fetchScrapeData","saved","setSaved","newScrapedData","setNewScrapedData","mainScrapedData","scrapeItems","setScrapeItems","disableSelect","disableDelete","checkAll","visible","selectedObj","hide","editable","localItems","newProperties","customFlag","localScrapeItems","updNewScrapedData","scrapeItem","tag","xpath","view","objIdx","modifiedDict","substring","saveScrapedObjects","scrapeItemsL","added","views","params","scrapeApi","resp","continueSave","dXpath","dCustname","uniqueCusts","uniqueXPaths","dCusts","dCusts2","newScrapeList","deletedArr","modalObject","cord","CompareBox","setCheckAll","objectList","setObjectList","objList","localChecks","checkedList","loc","setCheckedList","CompareObjectList","scrape","compareObj","changedObj","notChangedObj","notFoundObj","compareData","viewString","setViewString","newViewString","closeCompare","updatedObjects","updatedCompareData","changedobject","changedobjectskeys","allXpaths","allCustnames","WebserviceScrape","disableAction","certificateInfo","WsData","endPointURL","opInput","reqHeader","reqBody","respHeader","respBody","paramHeader","actionError","wsdlError","wsdlURL","setwsdlURL","opDropdown","setOpDropdown","opList","setOpList","activeView","setActiveView","wsdlUrl","wsdlurl","localList","listofoperations","wsdlSelectedMethod","resultFile","certificate","localReqBody","operations","formatted","pad","indent","formatXml","jsonObj","callApi","rReqHeader","rParamHeader","rReqBody","rRespHeader","rRespBody","temp_flag","viewArray","parsedReqBody","XMLParser","reqparams","parseRequestParam","parseRequest","readChild","attrchildren","basexpath","attrindex","newLevel","childrenindex","exception","populationindex","scrapedObjectsWS","xpaths","parseJsonRequest","requestedBody","base_key","cur_key","isArray","Exception","scrapeData","parameters","paramsArray","otherMobileObjects","ScrapeObjectTag","isOtherObject","objectTag","mobileTypeArray","array","found","arrayItem","isInArray","mobileMacFilters","mobileFilters","nonMobileFilters","objectTypes","typeOfElement","tagList","irisObjectTypes","states","RefBarItems","highlightRef","compareFlag","objValue","toFilter","setToFilter","setTagList","showFilterPop","setShowFilterPop","filterY","setFilterY","showScreenPop","setShowScreenPop","screenshotY","setScreenshotY","highlight","setHighlight","mirrorHeight","setMirrorHeight","currMobileType","setCurrMobileType","dsRatio","setDsRatio","scrapedURL","mirror","mirrorImg","Image","ds_height","ds_ratio","clickedObj","scrapeObj","ScrapedObject","round","objurl","highlightScrapElement_ICE","filterMain","dataTag","tempToFilterArr","scrapedItems","ScrapeFilter","newScrapedItems","reversedScrapeItems","reverse","uniqueBucket","selectedFilterTag","isDesiredElement","selectedTag","toggleMobileType","selectedType","newTagList","position","AddObjectModal","tempIdCounter","setTempIdCounter","objType","tempId","objects","setObjects","newField","newTempId","handleInput","handleType","deleteField","emptyFields","errorObj","errorFlag","lastObj","lastVal","duplicateDict","idArr","newObjects","dTitle","CompareObjectModal","setIsMac","macOS","webIcons","startScrape","MapObjectModal","scrapedList","setScrapedList","nonCustomList","setNonCustomList","customList","setCustomList","setSelectedTag","setMap","showName","setShowName","selectedItems","setSelectedItems","tempScrapeList","tempCustomList","tempNonCustom","elementType","onDragOver","onCustomClick","updatedSelectedItems","indexOfItem","mapped","draggable","onDragStart","dataTransfer","onDrop","currObject","draggedObject","getData","mapping","customObjVal","scrapeObjVal","roleId","CertificateModal","certPath","setCertPath","certPass","setCertPass","authName","setAuthName","authPass","setAuthPass","certsDetails","authDetails","newCertPath","newCertPass","newAuthName","newAuthPass","certObj","getImage","base64","EditIrisObject","setSelectedType","selectedStatus","setSelectedStatus","utils","objStatus","pop","existingType","existingStatus","newXpath","irisAppType","updateIrisDataset","datairis","CreateObjectModal","customObj","relXpath","absXpath","qSelect","customObjList","setCustomObjList","showFields","setShowFields","editFlag","customFields","newObj","rpath","apath","classname","selector","updatedShowFields","handleInputs","updatedCustomsObjList","indexOfId","onEdit","flex","missingField","customObject","customObjectsList","onSave","localScrapeList","lastIdx","tempIdArr","duplicateFlag","updatedNewScrapeData","updateScrapeItems","EditObjectModal","disableAppend","appendCheck","setAppendCheck","setShowAppPop","scrapeObjects","hiddenInput","customLen","setCustomLen","scrapeItemsLength","setScrapeLen","customs","savedObjects","lowerList","hasData","info","objectsBlob","msSaveOrOpenBlob","resultString","scrapeinfo","readAsText","ActionBarItems","LaunchApplication","windowName","setWindowName","processID","setProcessID","selectedMethod","setSelectedMethod","onMethodSelect","desktopApp","scrapeObject","appPath","appPop","appName","setAppName","sapApp","os","setOS","setAppPath","sNum","setSNum","appPath2","setAppPath2","verNum","setVerNum","deviceName","setDeviceName","setUUID","mobileApp","winName","setWinName","oebsApp","slNum","setSlNum","vernNum","setVernNum","appDict","ScrapeScreen","showPop","showConfirmPop","setMainScrapedData","setMirror","showAppPop","setIsUnderReview","setScrapedURL","setHideSubmit","showObjModal","haveItems","scrapedurl","generateScrapeItemList","getProcessedBody","localRespBody","responseBody","responseHeader","browserType","testCaseWS","keywordVal","wsdlInputs","getFormattedValue","validateWebserviceInputs","getWSTestCase","testcase","screenViewObject","blockMsg","applicationPath","scrapeMethod","apkPath","mobileSerial","bundleId","ipAddress","mobileDeviceName","mobileUDID","androidVersion","getScrapeViewObject","scrapedItemsLength","irisObjects","ObjId","notchangedobject","notfoundobject","generateCompareObject","scrapeItemList","viewArr","PopupDialog","ConfirmPopup","continueText","rejectText","newList","Provider","newTag","hiddentag","objectStatus","hasOwnProperty","processedBody","extraspace","stepNo","input","keyword","Scrape","replaceHtmlEntites","selectedText","entity","TableRow","rowRef","setObjType","setKeyword","setInput","output","setOutput","inputPlaceholder","setInputPlaceholder","outputPlaceholder","setOutputPlaceholder","keywordList","setKeywordList","focused","setFocused","commented","setCommented","remarks","setRemarks","TCDetails","setTCDetails","escapeFlag","setEscapeFlag","tcAppType","setTcAppType","disableStep","setDisableStep","testCase","inputVal","outputVal","remark","addTestCaseDetailsInfo","rowChange","checkedRows","focusedRow","caseData","placeholders","getKeywords","keywords","getRowPlaceholders","obType","outputval","inputval","setRowData","rowIdx","onRowClick","submitChanges","setFocusedRow","onInputChange","showRemarkDialog","testcaseDetails","actualResult_pass","actualResult_fail","showDetailDialog","DetailsDialog","onSetRowData","setRes","setPass","fail","setFail","TCDetail","RemarkDialog","remarkError","setRemarkError","setRemark","remarkVal","DATE","TIME","getSeconds","Arr","remarkArr","remarkString","PasteStepDialog","stepNum","setStepNum","pasteError","showPasteError","stepList","step","stepInt","isNaN","upperLimit","pasteSteps","SelectMultipleDialog","selectError","showSelectError","steps","Set","stepBlockList","stepsArray","add","lowStep","highStep","selectSteps","readTestCase_ICE","updateTestCase_ICE","testCaseData","import_status","copiedTestCases","testcasesteps","skucodetestcase","tags","DesignContent","copiedContent","design","saveEnable","headerCheckRef","setTestCaseData","testScriptData","setTestScriptData","setCheckedRows","setDraggable","objNameList","setObjNameList","showConfPaste","setShowConfPaste","showPS","setShowPS","showRemarkDlg","setShowRemarkDlg","showDetailDlg","setShowDetailDlg","showSM","setShowSM","changed","setChanged","setRowChange","headerCheck","setHeaderCheck","commentFlag","setCommentFlag","pastedTC","setPastedTC","runClickAway","emptyRowData","tableActionBtnGroup","addRow","editRow","selectMultiple","toggleDrag","copySteps","onPasteSteps","commentRows","designActions","imported","fetchTestCases","setImported","deleteObjectFlag","DesignApi","changeFlag","pluginActions","del_flag","setDisableActionBar","scriptData","projecttypename","keywordData","testcaseArray","obnames","getObjNameList","testCases","outputVal2","onDeleteTestStep","localPastedTc","tcIndex","objectid","insertedRowIdx","selectedRows","copyTestCases","copyContent","copyErrorFlag","sortedSteps","assign","appTypeFlag","ConfPasteStep","selectedIndexes","String","RowIdx","headerCheckFlag","focusIdx","useCallback","objectName","selectedKeywordList","defaultListMobility","defaultList","system","browser","browserPopUp","customDp","customOEBS","custom","defaultListWS","defaultListMF","defaultListDP","generic","genericIos","Android_Custom","CustomiOS","genericiOS","excelList","word","scrappedDataCustnames","ob","objNameArray","pdfList","elementWS","listType","canselectmultiple","button","datepicker","checkbox","radiobutton","iris","iristextbox","irisradiocheck","iristable","irisbutton","irisgeneric","irisscroll","table","tabs","scroll","shell","scontainer","calendar","gridview","toolbar","inputIos","pickerwheel","slider","togglebutton","spinners","timepicker","numberpicker","rangeseekbar","seekbar","listview","scrollbar","internalframe","getKeywordList","keywordName","newChecks","toFocus","testCasesToCopy","btn","col","scrape_data","modifiedObjects","checkList","animation","ghostClass","onEnd","setCheckedTc","setDTcFlag","setShowDlg","dTcFlag","checkedTc","showDlg","mainTestCases","dependCheck","setDependCheck","debugTestCases","selectedBrowserType","testcaseID","browsertypes","testcaseids","DesignActions","importTestCase","overWrite","testCaseBlob","exportTestCase","TestCaseItem","setCheck","disableAndBlock","testCaseID","Handlebars","compile","template","DependentTestCaseDialog","tcList","setTcList","testScenarioId","dependentTestCases","testcaseId","testcaseName","tc","updatedTCList","checkedTestcases","taskId","ReferenceContent","ScreenPopup","DesignHome","disableActionBar","showDpndntTcDlg","setShowDpndntTcDlg","Design","Leftbar","setScreenType","Rightbar","Encrypt","encyptMethod","onDropChange","emptyCall","encyptValue","ontextchange","encyptBtn","callEncrypt","encryptionType","encryptionValue","btnName","callReset","encryptedData","Pairwise","optimizationType","SetOptimizationType","pairwiseClicked","setLevel","setFactor","callKeyDown","factref","levelref","emptyCreateCall","callCreate","callGenerate","gererateClick","setGenerateClick","factor","updateInputFactorTable","level","updateInputLevelTable","setPairwiseClicked","Encrypt_ICE","fetchMetrics","metrics_data","ExecutionMetrics","setErrors","fromDate","setFromDate","toDate","setToDate","lob","setLob","setStatus","executionId","setExecutionId","ui","LOB","isIE","documentMode","Table","headerRef","updateCheckList","newCheckList","ctrlKey","itemIndex","setCheckList","onAdd","setHeaders","scrollTop","scrollLeft","updateHeaders","newHeader","headerId","oldHeaderName","newHeaders","newData","row","columnValue","updateTableData","rowId","columnName","undoStack","colId","Headers","headerIndex","headerName","HeaderCell","setValue","Rows","rowIndex","RowNumColumn","dnd","SubHeaderRow","initialValue","AddRow","SubHeaderCell","onBlur","invalidHeader","Row","DataCell","TableName","currScreen","tableName","setTableName","TableActionButtons","setDnd","onDelete","onUndo","CreateScreenActionButtons","goToEditScreen","displayData","EditScreenActionButtons","SearchDataTable","filteredList","setFilteredList","dataTables","onTableSelect","searchInput","newFilteredList","datatablename","undoData","lastEntry","DataTable","setCurrScreen","headerCounter","setHeaderCounter","setDataTables","locToAdd","UtilityCenter","setEncyptMethod","setEncyptValue","setEncyptBtn","setEncryptedData","setBtnName","setEmptyCall","FactorTable","LevelTable","setEmptyCreateCall","screenType","Encryption","fact","lev","Utilities","Header","Utility","getAllSuites_ICE","getReportsData_ICE","getSuiteDetailsInExecution_ICE","reportStatusScenarios_ICE","viewReport","reportId","reportType","targetURL","getAccessibilityData","ModuleList","FnReport","setModDrop","modDrop","report","suiteSelected","reportData","RD","moduleClick","suiteID","suiteName","CLEAR_REPORTDATA","modImage","basic","ToolbarMenu","autoReport","setAutoReport","projData","setProjData","initProjData","setInitProjData","cycList","setCycList","cycRef","relRef","readme","cyclData","CycChange","dateASC","dateArray","aA","timeA","bB","timeB","dateTimeA","start_time","dateTimeB","fDate","lDate","gDate","mDate","eD","eT","startDat","startTym","sD","sT","end_time","endDat","endTym","ExecPanel","setScDetails","setSelectedDetails","selectedScDetails","suDetails","setSuiteDetails","sortUp","setSortUp","onClickRow","sortTable","dateTime","execution_id","textAlign","ScStatusPanel","P","F","T","I","toFixed","terminate","incomplete","imgs","chrome","firefox","safari","reportID","scName","reportURL","origin","filedata","executedtime","ScDetailPanel","scDetails","setArr","getReport","seconds","reportid","testscenarioname","lineHeight","fontSize","scname","TestingReport","scStatus","setScStatus","skipped","AccExecPanel","AccStandardDesc","standardTypeDetails","descData","setDescData","sNo","description","help","impact","AccDetailPanel","showStandardDescTable","setShowStandardDescTable","setTableData","rulemap","AccStatusPanel","inapplicable","passes","violations","agent","AccessibilityReport","statusData","dropSize","semi","full","ReportContainer","setFnReport","ReportHome","viewMappedFiles","mappedScreenType","callIconClick","iconType","clickedScreen","barRender","loginToQTest_ICE","qcPassword","qcURL","qcUsername","qcaction","qtestProjectDetails_ICE","qtestFolderDetails_ICE","foldername","testCasename","testset","saveQtestDetails_ICE","mappedDetails","viewQtestMappedList_ICE","userID","qcProjectDetails_ICE","qcFolderDetails_ICE","saveQcDetails_ICE","viewQcMappedList_ICE","loginToZephyr_ICE","zephyrurl","zephyrURL","zephyrUserName","zephyrPassword","zephyraction","zephyrProjectDetails_ICE","zephyrCyclePhase_ICE","viewZephyrMappedList_ICE","saveZephyrDetails_ICE","zephyrTestcaseDetails_ICE","treeId","saveUnsyncDetails","undoMapList","MappingPage","pageTitle","onViewMap","onExit","leftBoxTitle","selectTestDomain","selectTestProject","selectTestRelease","testList","rightBoxTitle","selectScenarioProject","searchScenario","TestCaseNode","selectedTCDetails","syncedTestCases","selectedTC","selectedTestCase","selectedScIds","selectedScenarioIds","uniqueTCpath","testSetObject","testsetpath","newSelectedTCDetails","newSelectedTC","selectedTCNames","selectedTSNames","selectedFolderPath","popupMsg","mappedPair","folderpath","FolderNode","subFolders","setSubFolders","subTestSets","setSubTestSets","setTestCases","handleClick","folderObject","testfolder","TestSet","paddingLeft","folder","testSet","ALMContent","folderDetails","setFolderDetails","selectedDomain","setSelectedDomain","scenarioArr","setScenarioArr","scenario_ID","setScenario_ID","projectDropdn1","setProjectDropdn1","projectDropdn2","setProjectDropdn2","releaseDropdn","setReleaseDropdn","SearchIconClicked","setSearchIconClicked","filteredNames","setFilteredName","callProjectDetails_ICE","clearSelections","callFolderDetails_ICE","project_Name","callSaveButton","selectedFolderPaths","callViewMappedFiles","callExitcenter","domainDetails","qc_projects","scenarioID","childNodes","callScenarios","avoassure_projects","project_name","scenario_details","float","newScenarioIds","selectScenarioMultiple","inpPlaceHolder","LoginModal","usernameRef","passwordRef","reqDetails","reqid","reqname","reqcreationdate","reqdescription","setInfo","InfoPopup","MappedLabel","data-type","data-selected","mapIdx","unSynced","handleUnSync","MappedPage","setSelectedSc","selectedTc","setSelectedTc","setUnSynced","maps","unSyncMaps","setUnSyncMaps","setRows","totalCounts","mappedScenarios","mappedTests","counts","setCounts","mappedfilesRes","tempRow","qctestcase","testscenarioid","qcfolderpath","qctestset","qtestsuite","testname","reqdetails","newSelectedList","itemIdx","onUnSync","tempUnSyncMaps","selectedMaps","labelIdx","mapId","testCaseNames","folderPath","testCaseSet","fetchMappedFiles","scenarioNames","setDomainDetails","loginSuccess","setLoginSuccess","loginError","setLoginError","setMappedFilesRes","callLogin_ALM","saveFlag","TestSuiteNode","testSuite","testruns","testRun","testSuiteId","TestRunNode","testsuite","CycleNode","cycleNode","testsuites","QTestContent","selectedAvoProj","setSelectedAvoProj","testProject","setTestProject","avoProject","setAvoProject","setRelease","onProjectChange","onReleaseChange","onViewMappedFiles","scenarioIndex","QTest","mappedFilesICERes","setMappedFIlesICERes","loginQtest","mappedResponse","PhaseNode","phaseid","phase","phasename","phaseId","treeid","cyclePhaseId","testid","phaseList","ZephyrContent","avoProjects","setAvoProjects","screenexit","setScreenExit","releaseArr","setReleaseArr","selectedRel","setSelectedRel","releaseData","onReleaseSelect","testAndScenarioData","project_dets","scenario","viewMappedFlies","zephyrUrlRef","zephyrUsernameRef","zephyrPasswordRef","callLogin_zephyr","zephyrUsername","Integrations","showOverlay","currScreenType","Integration","process","REACT_APP_DEV","RouteApp","selectedRole","roleSwitched","setRole","SWITCHED","SocketFactory","exact","component","Execute","TabCheck","Storage","pathname","oldValue","newValue","App","SET_TASKSJSON","SET_FD","SET_CT","UPDATE_REPORTDATA","SET_USERINFO","SET_SR","SET_SOCKET","UPDATE_NOTIFY","CLEAR_NOTIFY","UPDATE_NOTIFY_COUNT","SET_DATEFORMAT","UPDATE_SUITEDETAILS","RESET_DETAILS","resetPassword","newpassword","currpassword","getRoleNameByRoleId","roleasarray","getUserICE","batchIds","setDefaultUserICE","defaultICE","updateTestSuite_ICE","batchDetails","loadLocationDetails","ExecuteTestSuite_ICE","errorapi","qcUserName","qcType","getICE_list","integrationType","updateAccessibilitySelection","ThumbnailExecute","paradigmDropdown","MultiSelectDropDown","setAccessibilityParameters","acc_param","getElementsByTagName","defaultChecked","batchStatusCheckbox","setEachData","batchStatus","scenarioDetailsContent","scenarioDetails","screennames","testCaseDetails","testcasenames","dat","ExecuteTable","selectAllBatch","updateScreen","updateAfterSave","setScenarioDetails","showModal","initialTableList","setInitialTableList","updateSelectAllBatch","dataLen","eachData2","initialTableData","exeStatus","loadLocationDetailsScenario","cellSpacing","cellPadding","changeParamPath","conditionUpdate","modalHeader","submit_task","ExecuteContent","setupdateAfterSave","modalDetails","setModalDetails","setModuleInfo","setSelectAllBatch","proceedExecution","setProceedExecution","dataExecution","setDataExecution","setScenarioTaskType","batch_name","updateTestSuite","scenarioDescriptionText","scenarioAccNoMap","testscenarioids","getparampaths","conditioncheck","donotexecute","scenarioDescriptions","curr_task","tj","ExecuteTestSuite","iceNameIdMap","ice_id","ExeScreen","setSelectAllBatchClick","ExecuteTestSuitePopup","ExecuteHome","setreadTestSuite","readTestSuiteData","authenticateUser","loadUserInfo","selRole","validateUserState","restartService","storeUserDetails","forgotPasswordEmail","unlockAccountEmail","initialState","reducer","notify","unread","isDuplicateNotificationMsg","notifyMsg","ldapname","ScrapeData","mappedFiles","JSOGTransform","createTransform","inboundState","outboundState","persistConfig","storage","whitelist","transforms","rootReducer","combineReducers","mindmapReducer","progressBarReducer","LoginReducer","adminReducer","pluginReducer","scrapeReducer","designReducer","reportReducer","integrationReducer","pReducer","persistReducer","createStore","persistStore","SET_PROGRESS","SET_COPYTESTCASES","SET_TESTCASES","SET_MODIFIED","SET_SAVEENABLE","ChangePassword","setCurrPassword","setNewPassword","confpassword","setConfPassword","currPassError","setCurrPassError","newPassError","setNewPassError","confPassError","setConfPassError","passwordValidation","setPasswordValid","handleClose","currPassHandler","resetErrorFlags","newPassHandler","confPasshandler","resetPass","currentPass","showTime","setShowTime","timeRef","prevTime","_i","newTime","unavailableLocalServer_msg","ChangeDefaultIce","chooseDefICE","setChooseDefICE","defICE","setDefICE","fetchIce","changeDefICEClick","ice","NotifyDropDown","borderBottom","showChangeDefaultIce","setShowChangeDefaultIce","showUD","setShowUD","showSR","setShowSR","roleList","setRoleList","adminDisable","setAdminDisable","showConfSR","setShowConfSR","showSR_Pop","setShowSR_Pop","clickedRole","setClickedRole","setShowOverlay","clickNotify","setClickNotify","notifyCnt","logout","getIce","resetSuccess","switchedRole","rid","SRPopup","ConfSwitchRole","additionalrole","DropDownList","inputErrorBorder","setInputErrorBorder","selectedICE","setSelectedICE","statusCode","selectedICEData","chooseICEPoolOptions","onChangeChooseICEPool","availableICE","smart","submitModalButton","iceStatus","setIceStatus","setAvailableICE","setChooseICEPoolOptions","setIceNameIdMap","fetchData","dataforApi","populateICElist","unallocated","iceStatusdata","iceStatusValue","ice_ids","statusUpdate","connected","unallocatedICE","iceNameIdMapData","showAfterExecution","setShowAfterExecution","setReportData","executionDATA","Buffer","socketIOClient","forceNew","reconnect","PostExecution","redirectToReports","fontWeight","testSuiteIds","Boolean","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a1dcb095.chunk.js","sourcesContent":["import React from 'react';\nimport * as actionTypes from '../state/action';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoadingBar from 'react-top-loading-bar';\nimport { store } from '../../../reducer';\n\n/*\n    Component: Progress Bar\n    Uses: Provides Progress bar on top of page by call SetProgressBar\n    Props: Arguments for SetProgressBar: \"start\" to start the progress bar\n                                         \"stop\" to complete/stop the progress bar\n\n*/\n\nconst ProgressBar = () => {\n\n    let dispatch = useDispatch();\n    let progress = useSelector(state=>state.progressbar.progress);\n\n    return <LoadingBar progress={progress} color=\"#643693\" onLoaderFinished={()=>{\n        dispatch({type: actionTypes.SET_PROGRESS, payload: 0});\n    }}/>\n  \n\n}\n\nconst SetProgressBar=(op)=>{\n    if (op===\"start\"){\n        store.dispatch({type: actionTypes.SET_PROGRESS, payload: Math.floor(Math.random() * (80-30) + 30)});\n    }\n    else{\n        store.dispatch({type: actionTypes.SET_PROGRESS, payload: 100});\n    }\n}\n\nexport {SetProgressBar};\nexport default ProgressBar;","import React from 'react';\nimport \"../styles/FooterOne.scss\"\n\n/*\n    Component: Footer\n    Uses: Provides Footer with text on top and below each other\n    Props: None\n\n*/\n\nconst FooterOne = () => {\n    return (\n        <div className=\"login-footer\">\n            <div className=\"footer-content\">\n            <span className=\"upper-text\">\n                Powered By\n                <img className=\"footer-logo_one\" alt=\"logo\" src=\"static/imgs/ftr-avo-logo.png\"/>\n            </span>\n            <span className=\"lower-text\">\n                © {new Date().getFullYear()}  Avo Automation. All Rights Reserved\n            </span>\n            </div>\n        </div>\n    );\n}\n\nexport default FooterOne;","import { logoutUser } from '../api';\nimport { persistor } from '../../../reducer'\n\n    /* \n        Method : RedirectPage(arg: useHistory instance)\n        Uses: Redirects user to base page\n        Props :\n            useHistory instance\n    */\n\nconst RedirectPage = (history) => {\n\n    persistor.purge();\n    window.localStorage.clear();\n    logoutUser()\n    .then(data=>{\n        history.push('/')\n    })\n    .catch(error => {\n        console.error(\"Failed to logout user\\nCause:\", error);\n    });\n}\n\nexport default RedirectPage;","import React from 'react';\nimport '../styles/ScreenOverlay.scss'\n\n/*Component ScreenOverlay\n  use: block screen while loading something in background;\n  props: \n    content : \"content to be shown in the box\"\n*/\n\nconst ScreenOverlay = (props) => {\n    return(\n        <div className='overlay__container'>\n            <div className='overlay__content'>{props.content}</div>\n        </div>\n    )\n}\n\nexport default ScreenOverlay;","import React, { useState, useLayoutEffect, Fragment, useEffect } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\n\n/*Component Scrollbar\n  use: Wrapper function extends react-custom-scollbars;\n  props: \n    styles for horizontalTrack,horizontalThumb,verticalTrack,verticalThumb,\n    maxThumbSize : number\n    minThumbSize : number\n    trackColor : color\n    thumbColor : color\n    hideYbar : boolean \n    hideXbar : boolean \n    verticalbarWidth: number\n    scrollId : container id\n*/\n\nfunction useWindowSize() {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n      function updateSize() {\n        setSize([window.innerWidth, window.innerHeight]);\n      }\n      window.addEventListener('resize', updateSize);\n      updateSize();\n      return () => window.removeEventListener('resize', updateSize);\n    }, []);\n    return size;\n}\n\nconst ScrollBar = (props) => {\n\n    const [width, height] = useWindowSize();\n\n    useEffect(()=>{\n\n    }, [width, height])\n\n    return(\n        <>\n         <Fragment>\n         <style type=\"text/css\">\n                {`\n                .ps > .ps__rail-x,\n                .ps > .ps__rail-y {\n                    opacity: 1!important; \n                }\n \n                ${props.scrollId?'#'+props.scrollId+' > .ps ':''}.ps__thumb-y,\n                ${props.scrollId?'#'+props.scrollId+' > .ps ':''}.ps__thumb-y:hover {\n                    opacity: 1!important;\n                    left: 0;\n                    right: 0;\n                    width: ${props.verticalbarWidth?props.verticalbarWidth:'6px'}!important;\n                    background:${props.thumbColor?props.thumbColor:'#000'}!important;\n                }\n                ${props.scrollId?'#'+props.scrollId+' > .ps ':''}.ps__rail-y, \n                ${props.scrollId?'#'+props.scrollId+' > .ps ':''}.ps__rail-y:hover {\n                    border-radius: 3px;\n                    margin-right: 2px;\n                    background: ${props.trackColor?props.trackColor:'white'}!important;\n                    width: ${props.verticalbarWidth?props.verticalbarWidth:'6px'}!important;\n                    ${(props.hideYbar)?'visibility: hidden!important':''};\n                }\n                ${\n                    props.hoverColor ? \n                    `${props.scrollId?`#${props.scrollId}:hover > .ps `:''}.ps__thumb-y,\n                    ${props.scrollId?`#${props.scrollId}:hover > .ps `:''}.ps__thumb-y:hover {\n                        background:${props.hoverColor}!important;\n                    }\n                    `\n                    : ''\n                }\n\n                ${props.scrollId?'#'+props.scrollId+' > .ps ':''}.ps__thumb-x,\n                ${props.scrollId?'#'+props.scrollId+' > .ps ':''}.ps__thumb-x:hover {\n                    opacity: 1!important;\n                    left: 0;\n                    right: 0;\n                    height: ${props.horizontalbarWidth?props.horizontalbarWidth:'6px'}!important;\n                    background:${props.thumbColor?props.thumbColor:'#000'}!important;\n                }\n                ${props.scrollId?'#'+props.scrollId+' > .ps ':''}.ps__rail-x, \n                ${props.scrollId?'#'+props.scrollId+' > .ps ':''}.ps__rail-x:hover {\n                    border-radius: 3px;\n                    margin-right: 2px;\n                    background: ${props.trackColor?props.trackColor:'white'}!important;\n                    height: ${props.horizontalbarWidth?props.horizontalbarWidth:'6px'}!important;\n                    ${(props.hideYbar)?'visibility: hidden!important':''};\n                }\n                ${\n                    props.hoverColor ? \n                    `${props.scrollId?`#${props.scrollId}:hover > .ps `:''}.ps__thumb-x,\n                    ${props.scrollId?`#${props.scrollId}:hover > .ps `:''}.ps__thumb-x:hover {\n                        background:${props.hoverColor}!important;\n                    }\n                    `\n                    : ''\n                }\n                `}\n            </style> \n            <PerfectScrollbar options={{minScrollbarLength:props.minScrollbarLength,wheelPropagation:true,suppressScrollX:props.hideXbar, useBothWheelAxes:false,suppressScrollY:props.hideYbar}} style={{maxHeight:'inherit',height:'inherit'}} onScrollX={props.onScrollX} onScrollY={props.onScrollY} >\n                {props.children}\n            </PerfectScrollbar>\n        </Fragment>\n        </>\n    )\n}\n\nexport default ScrollBar;","import React from 'react';\nimport '../styles/PopupMsg.scss'\n\n/*Component PopupMsg\n  use: block screen and show popup\n  props:\n    content : \"content to be shown in the box\"\n    submitText : \"submit buttons text\"\n    title : \"title of the popup\"\n    submit : \"event on sumbit\"\n    close : \"event on close\"\n*/\n\nconst PopupMsg = (props) => {\n    return(\n        <div className='popup__container'>\n            <div className='popup__content modal-content modal-sm'>\n                <div className='modal-header popup__header'>\n                    <button onClick={(e)=>props.close(e)}>×</button>\n                    <h4 className='modal-title'>{props.title}</h4>\n                </div>\n                <div className='modal-body popup__body'>\n                    <p className='popup__body-content'>{props.content}</p>\n                </div>\n                <div className='modal-footer popup__footer'>\n                    <button onClick={(e)=>props.submit(e)} >{props.submitText}</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PopupMsg;","import React from 'react';\nimport '../styles/ModalContainer.scss'\n\n/*Component ModalContainer\n  use: shows popup\n  props:\n    content : \"content component\"\n    footer : \"footer component\"\n    title : \"title of the popup\"\n    close : \"event on close\"\n    modalClass : bootstrap modal-class for dialogue\n*/\n\nconst ModalContainer = (props) => {\n    return(\n        <div className='modal__container'>\n            <div className={'modal-dialog '+(props.modalClass?props.modalClass:\"\")}>\n                <div className='modal__content modal-content'>\n                    <div className='modal-header modal__header'>\n                        <button data-test=\"modal_close_btn\"onClick={(e)=>props.close(e)}>×</button>\n                        <h4 data-test=\"modal_title_head\" className='modal-title'>{props.title}</h4>\n                    </div>\n                    <div className='modal-body modal__body'>\n                        {props.content}\n                    </div>\n                    <div className='modal-footer modal__footer'>\n                        {props.footer}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ModalContainer;","import React, { useState, useEffect } from 'react';\nimport {ScrollBar} from '../../global';\nimport \"../styles/ActionBar.scss\";\n\n/* \n    Component : ActionBar (Left Bar) Wrapper Component\n    Use : Renders Action Bar on the page\n    Props : \n        collapsible : if true ActionBar can be collapsed or expand. Default is false.\n        children : if one section then main content of the ActionBar. ex- <ActionBar> <YourContents/> </ActionBar>\n        upperContent : if two sections then content on the upper half. \n        bottomContent :  contents of the bottom half. ex- <ActionBar upperContent={} bottomContent={} / \n        collapseEvent : collapse Event return collapse state\n        collapse : set true to collpase Action bar\n    */\n\n    \nconst ActionBar = (props) => {\n\n    const [collapse, setCollapse] = useState(false);\n    useEffect(()=>{\n        setCollapse(props.collapse)\n    },[props.collapse])\n\n    return (\n        <div className={\"action__wrapper \" + (!collapse && \"action__wrapper__expand\")}>\n        <div className=\"action__bar\">\n            { props.collapsible && <div className={\"caret__action_bar \" + (collapse ? \"fa fa-caret-right caret_action_collapsed\" : \"fa fa-caret-left\") } onClick={()=>setCollapse(!collapse)}></div>}\n            { !collapse && \n            <div className=\"action__content\">\n                <div id=\"action_bar_scroll\" className=\"scrollable_action_container\">\n                <ScrollBar scrollId=\"action_bar_scroll\"  thumbColor=\"rgb(255, 255, 255, 0.27)\" trackColor=\"transparent\" hoverColor=\"rgb(255, 255, 255, 0.4)\">    \n                    <div className=\"action__contents\">\n                        <div className={\"ab__contents \" + (props.bottomContent ? \"ab__upper_contents\" : \"\")}>\n                            {props.children || props.upperContent}\n                        </div>\n                        { props.bottomContent &&\n                            <div className=\"ab__bottom_contents\">\n                                {props.bottomContent}\n                            </div>\n                        }\n                    </div>\n                </ScrollBar>    \n                </div>  \n            </div>}\n        </div>\n        </div>\n    );\n\n}\n\nexport default ActionBar;","import axios from 'axios';\r\nimport {RedirectPage} from '../global'\r\nimport {history} from './index'\r\nimport {url} from '../../App'\r\n\r\n/*Component getTopMatches_ProfJ\r\n  use: gets the Reply of ChatBot on Sending UserQuery\r\n  api returns [[0:Number , 1: Reply Message , 2: Number(link)]]\r\n*/\r\nexport const getTopMatches_ProfJ = async(userQuery) => {\r\n    try{\r\n        const res = await axios(url+'/getTopMatches_ProfJ', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-type': 'application/json',\r\n            },\r\n           data: {\r\n            userQuery : userQuery,\r\n            param : 'getTopMatches_ProfJ'\r\n           }\r\n        });\r\n        if(res.status === 401 || res.data === \"Invalid Session\"){\r\n            RedirectPage(history)\r\n            return {error:'invalid session'};\r\n        }\r\n        if(res.status===200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return {error:'Failed to Fetch Results'}\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'Failed to Fetch Results'}\r\n    }\r\n}","import React from 'react';\r\nimport ChatBot from './components/ChatBot';\r\nexport var history;\r\n\r\n/*Renders the main ProfJ Ui */\r\nconst ProfJ = (props)=>{\r\n    const onCloseClick=()=>{\r\n        props.setshowProfJ(false)\r\n    }\r\n    return (\r\n        <ChatBot onCloseClick={onCloseClick}/>\r\n    );\r\n}\r\n\r\nexport default ProfJ;\r\n","import React , {useState ,  useRef , Fragment, useEffect } from 'react';\r\nimport '../styles/ProfJ.scss';\r\nimport {ScrollBar , PopupMsg} from '../../global';\r\nimport {getTopMatches_ProfJ } from '../api';\r\n\r\nconst  ChatBot = (props) => {\r\n    const queryref = useRef(); //ref for query input tag to acess the current value of usermessage onClick.\r\n    const uMsgRef = useRef(); //to check the status of last printed user message for auto-scroll enable\r\n    const bMsgRef = useRef(); //to check the status of last printed bot message for auto-scroll enable\r\n    const lMsgRef = useRef();\r\n    const [chatBox , setChatBox] = useState(false); //State for chat aree open close \r\n    const [chat , setChat] = useState([])//State stores all the list of chat objects.\r\n    const [linkMsgArr , setLinkMsgArr]= useState([])//stores all the links clicked on the Bot Message\r\n    const [popup ,setPopup]= useState({show:false});\r\n\r\n    useEffect(()=>{\r\n        lMsgRef.current && lMsgRef.current.scrollIntoView({block: 'nearest', behavior: 'smooth'})\r\n    }, [linkMsgArr])\r\n\r\n    const displayError = (error) =>{ //the default display error funtion used in each component\r\n        setPopup({\r\n          title:'ERROR',\r\n          content:error,\r\n          submitText:'Ok',\r\n          show:true\r\n        })\r\n      }\r\n    const callqueryRaised=(e)=>{ //Function to be hit on enter after entering the userQuery\r\n        if(e.key === 'Enter'){\r\n            callsendbutton()\r\n        }\r\n    }\r\n    \r\n    const callsendbutton=()=>{ //stores a object containing Query from user\r\n        let chatArr = [...chat]\r\n        if(queryref.current.value){\r\n            const userQuery = queryref.current.value;\r\n        chatArr.push({message: queryref.current.value , from: \"user\"})\r\n        callProfJ(userQuery, chatArr)\r\n        queryref.current.value = null;\r\n        setLinkMsgArr([]);\r\n        }\r\n    }\r\n    \r\n    const callClearbtn=()=>{ //clears chat input field\r\n        queryref.current.value = null;\r\n    }\r\n\r\n    const callProfJ =async(userQuery, chatArr)=>{ //API call and fetch Response from BOT\r\n        const chatReturn = await getTopMatches_ProfJ(userQuery);\r\n        if(chatReturn.error){displayError(chatReturn.error);return;}\r\n        chatArr.push({message: chatReturn , from: \"Bot\"})\r\n        setChat(chatArr) \r\n        uMsgRef.current && uMsgRef.current.scrollIntoView({block: 'nearest', behavior: 'smooth'});\r\n        bMsgRef.current && bMsgRef.current.scrollIntoView({block: 'nearest', behavior: 'smooth'});\r\n    }\r\n\r\n    const callLinkClick=(idx)=>{ //if any of the links are clicked on te BOT message\r\n        const linkIdx = idx;\r\n        const linkMsg_Arr = [...linkMsgArr]\r\n        linkMsg_Arr.push(linkIdx)\r\n        setLinkMsgArr(linkMsg_Arr)\r\n    }\r\n    return (\r\n        <Fragment>\r\n        {(popup.show)?<PopupMsg submit={()=>setPopup({show:false})} close={()=>setPopup({show:false})} title={popup.title} content={popup.content} submitText={popup.submitText}/>:null}\r\n        <div id=\"assistWrap\" className=\"filter__pop\" >\r\n            <h4 className=\"pop_header\">\r\n                <img className=\"assist-image\" alt=\"message\" src=\"static/imgs/ic-message.png\"/>\r\n                <span className=\"pop_title\">Prof J</span>\r\n                <span onClick={()=>setChatBox(!chatBox)}><img className=\"down-arrow-img\" alt=\"message_arrow\" src={chatBox ? \"static/imgs/ic-down.png\": \"static/imgs/ic-up.png\" }/></span>\r\n                <img onClick={()=>props.onCloseClick()} className=\"down-close-img\" alt=\"message_close\" src=\"static/imgs/ic-close.png\"/>\r\n            </h4>\r\n            {chatBox ? \r\n            <div id=\"assistContent\">\r\n                \r\n                <div id=\"chatBot_Scroll\" className=\"chatArea\">\r\n                    <ScrollBar scrollId=\"chatBot_Scroll\" thumbColor=\"#321e4f\">\r\n                        <div id=\"specialdiv\" >\r\n                            <span className=\"defautMssg\">\r\n                                Hello, I'm Prof J. I try to be helpful. (But I'm still just a bot. Sorry!) *Type keywords* and hit _enter_ to send your message.\r\n                            </span>\r\n                            {\r\n                            chat.map((e,i)=>(\r\n                                (e.from === \"user\")? \r\n                                    <span ref={uMsgRef} className=\"userQuerymessage\" key={i} >\r\n                                        {e.message}\r\n                                    </span>\r\n                                : \r\n                                    <div ref={bMsgRef} className=\"defautMssg\">\r\n                                        {e.message && e.message.map((mes , i ) => ((mes[0] ===-1)?  mes[1] :\r\n                                        i === 0 ?\r\n                                            <>Did you mean to ask about one of these? \r\n                                            Please click any of the links below or \r\n                                            type more keywords if you don't see the right option.<br/>\r\n                                                \r\n                                        <p style={{display:\"inline\",marginBottom:\"5px\"}}><u onClick={()=>callLinkClick(mes[2])} style={{cursor:\"pointer\"}}>[{i+1}]{mes[1]}</u><br/></p></> \r\n                                        : \r\n                                        <p style={{display:\"inline\",marginBottom:\"5px\"}}><u onClick={()=>callLinkClick(mes[2])} style={{cursor:\"pointer\"}}>[{i+1}]{mes[1]}</u><br/></p>\r\n                                        ))}\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                            {\r\n                                linkMsgArr  && \r\n                                linkMsgArr.map((e,i)=>(\r\n                                    <><span ref={lMsgRef} className=\"defautMssg\">{e}\r\n                                    </span>\r\n                                    <br/></>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </ScrollBar>\r\n                </div>\r\n                \r\n                <input ref={queryref} onKeyPress={(e)=>callqueryRaised(e)} className=\"profJinpt\" type=\"text\" placeholder=\"Ask Prof.J\"/>\r\n                <div className=\"projBtns_container\">\r\n                    <button onClick ={()=>callClearbtn()}className=\"projBtns\" >Clear</button>\r\n                    <button  onClick={()=>callsendbutton()}className=\"projBtns\" >Send</button>\r\n                </div>\r\n                    \r\n            </div> \r\n            :null\r\n            }\r\n        </div>\r\n        </Fragment> \r\n    )\r\n}\r\n\r\nexport default ChatBot;\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport {ScrollBar, TaskContents, GenerateTaskList } from '../../global';\nimport { useSelector } from 'react-redux';\nimport \"../styles/ReferenceBar.scss\";\nimport ClickAwayListener from 'react-click-away-listener';\nimport ProfJ from '../../profJ';\n\n    /* \n        Component : ReferenceBar (Right Bar)\n        Uses: Renders the Reference bar on the page\n        Props :\n            collapsible : if true ReferenceBar can be collapsed or expand. Default is false \n            hideInfo : to hide the default info Icon . by default hideInfo is false\n            hideTask : to hide the default task Icon . by default hideTask is false\n            children : renders the children passed above the task icon. \n            taskTop : send true to keep task before children\n            collapse : set true to collpase Refernce bar\n            taskName : to let the reference bar know which task to highlight as disabled.\n            popups : to render pop up menus like filter, screenshot \n            closeAllpopups : method to close all passed popups\n            scrapeScreenURL : populating the URL field for scrape screen\n            taskInfo: task Information to display in taskInfo popup\n    */\n\nconst ReferenceBar = (props) => {\n\n    const [collapse, setCollapse] = useState(false);\n    const [showTask, setShowTask] = useState(false);\n    const [showInfo, setShowInfo] = useState(false);\n    const [taskPopY, setTaskPopY] = useState(null);\n    const [showProfJ , setshowProfJ]= useState(false);\n    \n    const { uid } = useSelector(state=>state.plugin.CT);\n\n    useEffect(()=>{\n        setCollapse(props.collapse)\n    },[props.collapse])\n\n    useEffect(()=>{\n        setShowTask(false);\n    }, [uid]);\n\n    const closePopups = () => {\n        if (props.popups) props.closeAllPopups();\n        setShowInfo(false);\n        setShowTask(false);\n    }\n\n    const toggleTaskPop = event => {\n        closePopups();\n        setTaskPopY(event.clientY)\n        setShowTask(!showTask)\n    }\n\n    const toggleInfoPop = event => {\n        closePopups();\n        setTaskPopY(event.clientY);\n        setShowInfo(!showInfo);\n    }\n    const callProfJ = event =>{\n        closePopups();\n        setshowProfJ(!showProfJ);\n    }\n    return (\n        <div className={\"ref__wrapper \" + (!collapse && \"ref__wrapper__expand\")}>\n        <div className=\"ref__bar\">\n            { props.collapsible &&\n                <div className={\"caret__ref_bar \" + (collapse ? \"fa fa-caret-left caret_ref_collapsed\" : \"fa fa-caret-right\") } onClick={()=>{ setCollapse(!collapse); closePopups() }}></div>\n            }\n            { !collapse && \n                <>\n                <div className=\"min_height_div\">\n                    <div id=\"ref_bar_scroll\" className=\"inside_min\">\n                    { props.popups }\n                    {\n                        showTask && \n                        <SearchPopup \n                            closePopups={closePopups}\n                            taskPopY={taskPopY}\n                            setShowTask={setShowTask}\n                        />\n                    }\n                    { showInfo && \n                        <TaskInfoPopup \n                            closePopups={closePopups}\n                            taskPopY={taskPopY}\n                            setShowInfo={setShowInfo}\n                            scrapeScreenURL={props.scrapeScreenURL}\n                            providedTaskInfo={props.taskInfo}\n                        />\n                    }\n                    {\n                        showProfJ && <ProfJ setshowProfJ={setshowProfJ} />\n                    }\n                    <ScrollBar scrollId=\"ref_bar_scroll\" trackColor=\"transparent\" thumbColor=\"#7143b3\">\n                        <div className=\"ref__content\">\n                            <div className=\"rb_upper_contents\">\n                                {props.taskTop?<div className=\"ic_box\" onClick={toggleTaskPop}><img className={\"rb__ic-task thumb__ic \" + (showTask && \"active_rb_thumb\")} alt=\"task-ic\" src=\"static/imgs/ic-task.png\"/><span className=\"rb_box_title\">Tasks</span></div>:null}\n                                    {props.children}\n                                {!props.taskTop && !props.hideTask?<div className=\"ic_box\" onClick={toggleTaskPop}><img className={\"rb__ic-task thumb__ic \" + (showTask && \"active_rb_thumb\")} alt=\"task-ico\" src=\"static/imgs/ic-task.png\"/><span className=\"rb_box_title\">Tasks</span></div>:null}\n                                {!props.hideInfo && <div className=\"ic_box\"  onClick={toggleInfoPop} ><img className=\"rb__ic-info thumb__ic\" alt=\"info-ic\" src=\"static/imgs/ic-info.png\"/><span className=\"rb_box_title\">Info</span></div>}\n                            </div>\n                        </div>\n                    </ScrollBar>\n                    \n                </div>\n            </div>\n            <div className=\"rb__bottom_content\">\n                <div className=\"ic_box\"><img className=\"rb__ic-assist thumb__ic\" alt=\"assist-ic\" src=\"static/imgs/ic-assist.png\" onClick={(e)=>callProfJ(e)}/><span className=\"rb_box_title\">Assist</span></div>\n            </div>\n        </>\n        }\n        </div>\n        </div>\n    );\n}\n\n/* \n    closePopups\n    taskPopY\n    setShowInfo\n    taskInfo\n    scrapeScreenURL\n*/\n\nconst TaskInfoPopup = ({ closePopups, taskPopY, setShowInfo, providedTaskInfo, scrapeScreenURL}) => {\n\n    const dataDict = useSelector(state=>state.plugin.FD);\n    const current_task = useSelector(state=>state.plugin.CT);\n\n    const [taskInfo, setTaskInfo] = useState({});\n\n    useEffect(()=>{\n        let newTaskInfo = {};\n\n        if ('uid' in current_task) {\n            newTaskInfo = {\n                'Project Name': dataDict.projectDict[current_task.projectId] || dataDict.projectDict[current_task.testSuiteDetails[0].projectidts],\n                'Screen': current_task.screenName,\n                'TestCase': current_task.testCaseName,\n                'Release': current_task.releaseid,\n                'Cycle': dataDict.cycleDict[current_task.cycleid],\n                'URL': scrapeScreenURL || '',\n            }\n    \n            let screen = current_task.taskName.slice(0, 3).toLowerCase();\n    \n            if (screen === 'exe') {\n                delete newTaskInfo['Screen'];\n                delete newTaskInfo['TestCase'];\n                delete newTaskInfo['URL'];\n            }\n            else if (screen === 'des') delete newTaskInfo['URL'];\n            else if (screen === 'scr') delete newTaskInfo['TestCase'];\n        }\n\n        setTaskInfo(providedTaskInfo || newTaskInfo);\n    }, [taskPopY, providedTaskInfo])\n\n    return (\n        <ClickAwayListener onClickAway={closePopups}>\n        <div className={\"ref_pop\" + (taskInfo?\" info_pop\":\"\")} style={{marginTop: `calc(${taskPopY}px - 15vh)`}}>\n            <h4 className=\"pop__header\" onClick={()=>setShowInfo(false)}><span className=\"pop__title\">Information</span><img className=\"task_close_arrow\" alt=\"task_close\" src=\"static/imgs/ic-arrow.png\"/></h4>\n            <div className=\"info_pop__contents\">\n            {\n                Object.keys(taskInfo).map(key => <>\n                    <div className=\"task_info__title\">{key}:</div>\n                    <div className=\"task_info__content\">{taskInfo[key]}</div>\n                </>)\n            }\n            </div>\n        </div>\n        </ClickAwayListener> \n    );\n}\n\n\n/* \n    closePopups\n    taskPopY\n    setShowTask\n*/\n\n\nconst SearchPopup = ({ closePopups, taskPopY, setShowTask }) => {\n\n    const { cycleDict } = useSelector(state=>state.plugin.FD);\n    const tasksJson = useSelector(state=>state.plugin.tasksJson);\n    const { uid } = useSelector(state=>state.plugin.CT);\n\n    const [taskList, setTaskList] = useState([]);\n    const [searchValue, setSearchValue] = useState(\"\");\n    const [searchItems, setSearchItems] = useState([]);\n\n    useEffect(()=>{\n        let taskList = GenerateTaskList(tasksJson, \"refList\");\n        setTaskList(taskList);\n    }, [tasksJson]);\n\n    const onSearchHandler = event => {\n        searchTask(event.target.value)\n        setSearchValue(event.target.value);\n    };\n\n    const searchTask = (value) => {\n        let items = taskList;\n        let filteredItem = [];\n        let counter = 1;\n        items.forEach(item => {\n            if (item.taskname.toLowerCase().includes(value.toLowerCase())) {\n                item.type_counter = counter++;\n                filteredItem.push(item)\n            }\n        });\n        setSearchItems(filteredItem);\n    }\n\n    return (\n        <ClickAwayListener onClickAway={closePopups}>\n        <div className=\"ref_pop task_pop\" style={{marginTop: `calc(${taskPopY}px - 15vh)`}}>\n            <h4 className=\"pop__header\" onClick={()=>setShowTask(false)}><span className=\"pop__title\">My task(s)</span><img className=\"task_close_arrow\" alt=\"close_task\" src=\"static/imgs/ic-arrow.png\"/></h4>\n            <div className=\"input_group\">\n                <span className=\"search_task__ic_box\">\n                    <img className=\"search_task__ic\" alt=\"search-ic\" src=\"static/imgs/ic-search-icon.png\"/>\n                </span>\n                <input className=\"search_task__input\" onChange={onSearchHandler} value={searchValue} placeholder=\"Seach My task(s)\"/>\n            </div>\n            <div className=\"task_pop__list\">\n                <div id='task_pop_scroll' className=\"task_pop__overflow\">\n                    <ScrollBar scrollId='task_pop_scroll' trackColor={'transparent'} thumbColor={'grey'}>\n                        <div className=\"task_pop__content\" id=\"rb__pop_list\">\n                            <TaskContents items={searchValue ? searchItems : taskList} cycleDict={cycleDict} taskJson={tasksJson} currUid={uid} />\n                        </div>\n                    </ScrollBar>\n                </div>\n            </div>\n        </div>\n        </ClickAwayListener>\n    );\n}\n\nexport default ReferenceBar;","import React from 'react';\nimport \"../styles/Thumbnail.scss\";\n\n/*\n    Component: Icon Thumbnail for ActionBar\n    Uses: Render Action Bar Icon by passing only img, title and on click event\n    Props : action -> onClick event\n            title -> title/caption of the icon, also the alt for img\n            img -> img-src string or svg -> for svg images (pass svg jsx as whole)\n            disable -> disables the thumbnail and renders it unclickable\n*/\n\nconst Thumbnail = (props) => {\n\n    return (\n        <div className={\"thumbnail\" + (props.disable ? \" disable-thumbnail\" : \"\")} onClick={props.action}>\n            <img className={\"thumbnail__img \" + (props.svg ? \"svg_ic\" : \"\" )} src={props.img || props.svg} alt={props.title}/>\n            <span className=\"thumbnail__title\">{props.title}</span>\n        </div>\n    );\n}\n\nexport default Thumbnail;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { updateTaskStatus } from '../api';\nimport * as actionTypes from \"../../plugin/state/action\";\nimport \"../styles/TaskContents.scss\";\n\n/*\n    Component: Task List for Plugin Page and Reference Bar (Right Bar)\n    Uses: Renders a list of task for above mentioned components\n    Props : items -> array of tasks to populate\n            cycleDict -> cycle dictionary from FD state\n            taskJson -> tasksJson from redux store (can be called here using useSelector, modifications may require in taskSection.js )\n*/\n\nconst TaskContents = (props) => {\n\n    const [showPanel, setShowPanel] = useState(\"\");\n\n    useEffect(()=>{\n        setShowPanel(\"\");\n    }, [props.items]);\n\n    return (\n        <>\n        {props.items.length !== 0 &&\n        <>\n        {props.items.map((item, i)=>{\n            return <TaskPanel \n                        key={i}\n                        item={item}\n                        counter={i+1}\n                        showPanel={showPanel} \n                        setShowPanel={setShowPanel}\n                        disableTask = { props.currUid === props.taskJson[item.panel_idx].uid }\n                        taskJson = {props.taskJson}\n                        cycleDict={props.cycleDict}\n                        taskJson={props.taskJson}\n                    />\n        })}\n        </> }\n        </>\n    );\n\n}\n\n\nconst TaskPanel = props => {\n\n    const taskSuiteDetails = props.item.testSuiteDetails;\n    const dataobj = props.item.dataobj;\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [desc, setDesc] = useState(null);\n    const [rel, setRel] = useState(null);\n    const [cyc, setCyc] = useState(null);\n    const [appType, setAppType] = useState(null);\n    const [descId, setDescId] = useState(null);\n\n    const taskRedirection = event => {\n        event.preventDefault();\n            \n        let taskObj = {};\n        if(dataobj.status==='assigned'){\n            dataobj.status='inprogress';\n            updateTaskStatus(dataobj.subtaskid)\n                .then(data => dataobj.status=data)\n                .catch(error=> console.error(\"Error updating task status. ERROR::::\", error.data));\n        }\n        taskObj.testSuiteDetails = taskSuiteDetails;\n        taskObj.scenarioFlag = dataobj.scenarioflag;\n        taskObj.accessibilityParameters  = dataobj.accessibilityParameters;\n\t\ttaskObj.scenarioTaskType = dataobj.scenarioTaskType;\n        taskObj.assignedTestScenarioIds = dataobj.assignedtestscenarioids;\n        taskObj.screenId = dataobj.screenid;\n        taskObj.screenName = dataobj.screenname;\n        taskObj.projectId = dataobj.projectid;\n        taskObj.taskName = dataobj.taskname;\n        taskObj.versionnumber = dataobj.versionnumber;\n        taskObj.testCaseId = dataobj.testcaseid;\n        taskObj.testCaseName = dataobj.testcasename;\n        taskObj.appType = dataobj.apptype;\n        taskObj.status=dataobj.status;\n        taskObj.scenarioId = dataobj.scenarioid;\n        taskObj.batchTaskIDs=dataobj.batchTaskIDs;\n        taskObj.subTask = dataobj.subtask; \n        taskObj.subTaskId=dataobj.subtaskid;\n        taskObj.releaseid = dataobj.releaseid;\n        taskObj.cycleid = dataobj.cycleid;\n        taskObj.reuse = dataobj.reuse;\n        taskObj.uid = dataobj.uid;\n\n        dispatch({type: actionTypes.SET_CT, payload: taskObj});\n\n        if(dataobj.subtask === \"Scrape\"){\n            window.localStorage['navigateScreen'] = \"Scrape\";\n            window.localStorage['navigateScrape'] = true;\n            history.replace(\"/scrape\")\n        }\n        else if(dataobj.subtask === \"TestCase\"){\n            window.localStorage['navigateScreen'] = \"TestCase\"; // Can I change it to \"Design\"?\n            window.localStorage['navigateTestcase'] = true;\n            history.replace(\"/design\")\n        }\n        else if(dataobj.subtask === \"TestSuite\"){\n            window.localStorage['navigateScreen'] = \"TestSuite\";\n            history.replace(\"/execute\")\n            // $window.location.assign(\"/execute\"); \n        }\n        else if(dataobj.subtask === \"Scheduling\"){\n            window.localStorage['navigateScreen'] = \"scheduling\";\n            history.replace(\"/plugin\")\n            // $window.location.assign(\"/scheduling\");\n        }\n    }\n\n    const expandDetails = event =>{\n        event.preventDefault();\n        \n        if (props.showPanel === props.item.panel_idx) props.setShowPanel(null);\n        else props.setShowPanel(props.item.panel_idx)\n\n        let tdes = dataobj['taskdes']\n        \n        let clktask = props.taskJson[props.item.panel_idx];\n        let maintask = clktask;\n        if(clktask.taskDetails[0].taskType !== 'Design') clktask = clktask.testSuiteDetails[0];\n        \n        setDescId(props.item.panel_idx);\n        setDesc(tdes);\n        setRel(clktask.releaseid);\n        setCyc(props.cycleDict[clktask.cycleid]);\n        setAppType(maintask.appType);\n    }\n\n\n    return (  \n        <>\n            <div className={\"task-panel \" + (props.showPanel === props.item.panel_idx ? \"active-task \" : \"\")} panel-id={props.item.panel_idx}>\n            <div className=\"panel-content \" id={`panelBlock_${props.item.panel_idx}`}>\n                <h4 className={\"task-num\" + (props.disableTask ? \" disable-task\" : \"\")}>{props.counter}</h4>\n                <span className={\"assign-task\" + (props.disableTask ? \"  disable-task\" : \"\")} onClick={taskRedirection} >\n                    {props.item.taskname.length >= 45 ? props.item.taskname.substr(0, 44)+\"...\" : props.item.taskname}\n                </span>\n                <div className={\"tasktype-btndiv\" + (props.disableTask ? \" dark-bg \" : \"\")}>\n                    <button className=\"tasktype-btn\" onClick={expandDetails}>{props.item.tasktype}</button>\n                </div>\n            </div>\n            { props.showPanel === props.item.panel_idx &&\n            <div className=\"task-description\" description-id={descId}>\n                <div>Description: {desc}</div>\n                <div>Release: {rel}</div>\n                <div>Cycle: {cyc}</div>\n                <div>Apptype: {appType}</div>\n            </div>\n            }\n            </div>\n        </>\n    );\n}\n\nexport default TaskContents;","import { keepSessionAlive } from \"../api\";\n\nconst ResetSession = {\n    poll: function pollingCall() {\n        keepSessionAlive()\n        .then(data=> console.debug(\"User Session Extended\"))\n        .catch(error => console.error(\"Failed to extend User Session.\\nCause:\", error));\n    },\n    start: function startInterval() {\n        this.poll();\n        this.eventid = setInterval(function(pollCall){ pollCall(); }, 1200000, this.poll);\n    },\n    end: function endInterval() {\n        clearInterval(this.eventid);\n        this.poll();\n    }\n};\n\nexport default ResetSession;","const Report = `<style>\n        body{font-family: 'LatoWeb', sans-serif; height: 98%; margin: 0;}\n        .mainContainer{\n                float: left;\n                padding: 5px;\n                width: calc(100% - 12px);\n        }\n        .leftSummary{width: 50%; float: left; padding: 25px 0 25px 25px; font-size: 14px;}\n        .leftSummary label{\n                text-align: left;\n                float: left;\n                width: 29%;\n                padding-right: 5px;\n                padding-bottom: 5px;\n        }\n        .leftSummary span{\n                float: left;\n                width: 64%;\n                padding-bottom: 5px;\n                font-weight: bold;\n        }\n        .midContainer{\n                border-collapse: collapse;\n                border: 1px solid #cfcfcf;\n                width: 100%;\n                float: left;\n                margin: 1% 0;\n                font-size: 14px;\n        }\n        .midContainer td{padding-top: 5px; border: 1px solid #cfcfcf;float: left;}\n        .midContainer td label{\n                text-align: right;\n                float: left;\n                width: 35%;\n                font-family: 'LatoWeb',sans-serif;\n                padding-right: 5px;\n                padding-bottom: 5px;\n        }\n        .reportsDetails{border: 1px solid #cfcfcf;     background-color: #dfd0fa; font-size: 15px;}\n        .reportsDetails th:nth-child(1),.rDid{width: 4%;  word-break: break-word; }\n        .reportsDetails th:nth-child(2),.rDstep{width: 5%;  word-break: break-word;}\n        .reportsDetails th:nth-child(3),.rDstepDes{width: 12%; word-break: break-word; text-align:left}\n        .reportsDetails th:nth-child(4),.rDstatus{width: 5%; word-break: break-word; text-align:left}\n        .reportsDetails th:nth-child(5),.rDellaps{width: 5.5%; word-break: break-word; text-align:left}\n        .reportsDetails th:nth-child(6),.rDcomments{width: 9%; word-break: break-word; text-align:left}\n        .reportsDetails th:nth-child(7),.rDremarks{width: 9%; word-break: break-word; text-align:left}\n        .reportsDetails th:nth-child(8),.rDActualRes{width: 9%; word-break: break-word; text-align:left}\n        .reportsDetails th:nth-child(9),.rDExpectedRes{width: 7%; word-break: break-word; text-align:left}\n        .maintabCont{float: left; width: 100%; border: 1px solid #dcdcdc;}\n        .tabCont{display: table-cell; border-bottom: 1px solid #ececec; border-right: 1px solid #ececec;word-wrap:break-word}\n        .reportsDetail{line-height: 2; text-align: center; height: calc(100% - 35px); overflow: auto;font-size: 14px;}\n        .reportsDetail tr { page-break-inside: avoid; }\n        .rDstepDes{text-align: left; word-break: break-word;}\n        .reportsDetail tr.reportdetailsrow:nth-child(even){background: #d9d9d9;}\n        .reportdetailsrow td{padding-top: 9px;}\n        @media screen and (max-height: 675px) {\n                .reportsDetail{\n                        height: 174px;\n                }\n        }\n        .reportsDetails th\n        {\n                text-align: center !important;\n                padding: 8px;\n                width: 10%;\n        }\n        .reportsDetails td\n        {\n                text-align: left !important;\n                padding: 2px;\n                width: 10%;\n        }\t\n        .pdfReport{\n                float:left;\n                width: 100%;\n                table-layout: table;\n        }\n        .latobold{\n                font-weight: bold;\n        }\n</style>\n\n\n<div class=\"mainContainer\" >\n        {{#each name}}\n\n        <div class=\"leftSummary\">\n                <h3>Details</h3>\n                <label>Testcase Name</label><span>: {{testcasename}}</span><br/>\n        </div>\n        {{/each}}\n        <div class=\"maintabCont\">\n                <table class='pdfReport' style=\"width: 100%;\" >\n                        <thead class=\"reportsDetails\">\n                                <tr><th>Sl. No.</th>\n                                        <th>Object Name</th>\n                                        <th>Keyword</th>\n                                        <th>Input</th>\n                                        <th>Output</th></tr>\n                        </thead>\n                        <tbody class=\"reportsDetail\" >\n                                {{#each rows}}\n                                    <tr style=\"width: 100%;\" class=\"reportdetailsrow\">\n                                        <td>{{stepNo}}</td>\n                                        <td>{{custname}}</td>\n                                        <td>{{keywordVal}}</td>\n                                        <td>{{inputVal}}</td>\n                                        <td>{{outputVal}}</td>\n                                    </tr>                \n\n                                {{/each}}\n                        </tbody>\n                </table>\n\n        </div>\n</div>`\n\nexport default Report;","const BrowserFp = hardwareOnly => {\n    const { userAgent, language, languages, platform, hardwareConcurrency, deviceMemory } = window.navigator;\n    const plugins = Object.entries(window.navigator.plugins).map(([, plugin]) => plugin.name);\n    const { colorDepth, availWidth, availHeight } = window.screen;\n    const timezoneOffset = new Date().getTimezoneOffset();\n    const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    const touchSupport = 'ontouchstart' in window;\n    const canvas = (() => {\n        try {\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n            ctx.textBaseline = 'top';\n            ctx.font = \"14px 'Arial'\";\n            ctx.textBaseline = 'alphabetic';\n            ctx.fillStyle = '#f60';\n            ctx.fillRect(125, 1, 62, 20);\n            ctx.fillStyle = '#069';\n            ctx.fillText(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`~1!2@3#4$5%6^7&8*9(0)-_=+[{]}|;:',<.>/?\", 2, 15);\n            ctx.fillStyle = 'rgba(102, 204, 0, 0.7)';\n            ctx.fillText(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`~1!2@3#4$5%6^7&8*9(0)-_=+[{]}|;:',<.>/?\", 4, 17);\n\n            const result = canvas.toDataURL();\n            return result;\n        }\n        catch (error) {\n            return error;\n        }\n    })();\n\n    const data = hardwareOnly ?\n        JSON.stringify({\n            platform,\n            hardwareConcurrency,\n            deviceMemory,\n            colorDepth,\n            availWidth,\n            availHeight,\n            touchSupport,\n            canvas,\n        }) :\n        JSON.stringify({\n            userAgent,\n            language,\n            languages,\n            platform,\n            hardwareConcurrency,\n            deviceMemory,\n            plugins,\n            colorDepth,\n            availWidth,\n            availHeight,\n            timezoneOffset,\n            timezone,\n            touchSupport,\n            canvas,\n        });\n\n    const murmurhash3_32_gc = key => {\n        const remainder = key.length & 3; // key.length % 4\n        const bytes = key.length - remainder;\n        const c1 = 0xcc9e2d51;\n        const c2 = 0x1b873593;\n\n        let h1, h1b, k1;\n\n        for (let i = 0; i < bytes; i++) {\n            k1 =\n            ((key.charCodeAt(i) & 0xff)) |\n            ((key.charCodeAt(++i) & 0xff) << 8) |\n            ((key.charCodeAt(++i) & 0xff) << 16) |\n            ((key.charCodeAt(++i) & 0xff) << 24);\n            ++i;\n\n            k1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n            k1 = (k1 << 15) | (k1 >>> 17);\n            k1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n            h1 ^= k1;\n            h1 = (h1 << 13) | (h1 >>> 19);\n            h1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n            h1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n        }\n\n        const i = bytes - 1;\n\n        k1 = 0;\n\n        switch (remainder) {\n            case 3: {\n                k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n                break;\n            }\n            case 2: {\n                k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n                break;\n            }\n            case 1: {\n                k1 ^= (key.charCodeAt(i) & 0xff);\n                break\n            }\n            default: break;\n        }\n\n        k1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n        k1 = (k1 << 15) | (k1 >>> 17);\n        k1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n        h1 ^= k1;\n\n        h1 ^= key.length;\n\n        h1 ^= h1 >>> 16;\n        h1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n        h1 ^= h1 >>> 13;\n        h1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n        h1 ^= h1 >>> 16;\n\n        return h1 >>> 0;\n    }\n\n    const result = murmurhash3_32_gc(data);\n    return result;\n};\n\nexport default BrowserFp;","import React , { useState} from 'react';\nimport {ModalContainer} from '../../global' \nimport '../styles/IntegrationDropDown.scss'\nimport { loginQCServer_ICE, loginQTestServer_ICE, loginZephyrServer_ICE } from '../../execute/api';\n\n/*Component IntegrationDropDown\n  use: renders integration popup for ALM/ qTest/ Zypher\n*/\n\nconst IntegrationDropDown = ({setshowModal, type, browserTypeExe, appType, integrationCred, setPopupState, setCredentialsExecution, displayError}) => {\n    const [credentials,setCredentials] = useState({url: \"\", userName: \"\", password: \"\"});\n    const [urlErrBor,setUrlErrBor] = useState(false)\n    const [usernameErrBor,setUserNameErrBor] = useState(false)\n    const [passErrBor,setPassErrBor] = useState(false)\n    const [qtestSteps,setqtestSteps] = useState(false)\n    const [errorMsg,setErrorMsg] = useState(\"\")\n    \n    const saveAction = async () => {\n        setPassErrBor(false);setUrlErrBor(false);setUserNameErrBor(false);\n\t\tif (!credentials.url) {\n            setUrlErrBor(true);\n            setErrorMsg(\"Please \"+placeholder[type].url);\n\t\t} else if (!credentials.userName) {\n            setUserNameErrBor(true);\n            setErrorMsg(\"Please \"+placeholder[type].username);\n\t\t} else if (!credentials.password) {\n            setPassErrBor(true);\n            setErrorMsg(\"Please \"+placeholder[type].password);\n\t\t} else if (appType !== \"SAP\" && browserTypeExe.length === 0) {\n            setshowModal(false);\n            setPopupState({show:true,title:\"Execute Test Suite\",content:\"Please select a browser\"});\n        }\n        else {\n            setErrorMsg(\"\");\n            var apiIntegration = loginZephyrServer_ICE;\n            if(type === \"ALM\") apiIntegration = loginQCServer_ICE;\n            else if(type === \"qTest\") apiIntegration = loginQTestServer_ICE;\n\t\t\tconst data = await apiIntegration(credentials.url, credentials.userName, credentials.password, type);\n            if(data.error){displayError(data.error);return;}\n            else if (data === \"unavailableLocalServer\") {\n                setErrorMsg(\"Unavailable LocalServer\");\n            } else if (data === \"Invalid Session\") {\n                setErrorMsg(\"Invalid Session\");\n            } else if (data === \"invalidcredentials\") {\n                setErrorMsg(\"Invalid Credentials\");\n            } else if (data === \"invalidurl\") {\n                setErrorMsg(\"Invalid URL\");\n            } else {\n                var integration = {...integrationCred};\n                if(type === \"ALM\"){\n                    integration.alm = {\n\t\t\t\t\t\turl:credentials.url,\n\t\t\t\t\t\tusername: credentials.userName,\n\t\t\t\t\t\tpassword: credentials.password\n\t\t\t\t\t}\n                }\n                else if(type === \"qTest\"){\n                    integration.qtest = {\n\t\t\t\t\t\turl:credentials.url,\n\t\t\t\t\t\tusername: credentials.userName,\n                        password: credentials.password,\n                        qteststeps:qtestSteps\n\t\t\t\t\t}\n                }\n                else if(type === \"Zephyr\"){\n                    integration.zephyr = {\n\t\t\t\t\t\turl: credentials.url,\n\t\t\t\t\t\tusername: credentials.userName,\n\t\t\t\t\t\tpassword: credentials.password,\n\t\t\t\t\t}\n                }\n                setCredentialsExecution(integration)\n                setshowModal(false);\n            }\n\t\t}\n    }\n\n    return(\n        <ModalContainer \n            title={type} \n            footer={submitModal(errorMsg, saveAction)} \n            close={()=>{setshowModal(false)}} \n            content={MiddleContent(credentials, setCredentials, urlErrBor, usernameErrBor, passErrBor, type, qtestSteps, setqtestSteps)} \n            modalClass=\" i__modal\"\n        />\n    )\n}\n\nconst submitModal = (errorMsg, saveAction) => {\n    return(\n        <div className=\"i__popupWrapRow\">\n            <div className=\"i__textFieldsContainer\">\n            <p align=\"right\" className=\"i__textFieldsContainer-cust\">\n                <span className=\"i__error-msg\">{errorMsg}</span>\n                <button type=\"button\" className=\"e__btn-md \" onClick={()=>{saveAction()}} >Save</button>\n            </p>\n            </div>\n        </div>\n    )\n}\n\nconst MiddleContent = (credentials, setCredentials, urlErrBor, usernameErrBor, passErrBor, type, qtestSteps, setqtestSteps) => {\n    return(\n        <div className=\"popupWrapRow\">\n            <div className=\"textFieldsContainer\">\n                <p><input value={credentials.url} onChange={(event)=>{setCredentials({url: event.target.value, userName: credentials.userName, password: credentials.password})}} type=\"text\" className={(urlErrBor ? \" i__inputErrBor \" : \"\")+\"i__input-cust i__input e__modal-alm-input \"} placeholder={placeholder[type].url} /></p>\n                <p className=\"halfWrap halfWrap-margin\" ><input value={credentials.userName} onChange={(event)=>{setCredentials({url: credentials.url, userName: event.target.value, password: credentials.azephyrPassword})}} type=\"text\" className={\"i__input-cust i__input e__modal-alm-input\"+ (usernameErrBor ? \" i__inputErrBor\" : \"\")} placeholder={placeholder[type].username} /></p>\n                <p className=\"halfWrap\"><input value={credentials.password} onChange={(event)=>{setCredentials({url: credentials.url, userName: credentials.userName, password: event.target.value})}} type=\"password\" className={\"i__input-cust i__input e__modal-alm-input\"+ (passErrBor ? \" i__inputErrBor\" : \"\")} placeholder={placeholder[type].password} /></p>\n                {type===\"qTest\"?\n                    <p className=\"qtestSteps\" ><input value={qtestSteps} onChange={()=>{setqtestSteps(!qtestSteps)}} type=\"checkbox\" title=\"Update steps status\"/><span className=\"i__step\">Update step status</span></p>\n                :null}\n                </div>\n        </div>\n    )\n}\n\nexport default IntegrationDropDown;\n\n\nconst placeholder={\n    Zephyr:{url:\"Enter Zephyr URL (Ex. http(s)://SERVER[:PORT])\" ,username:\"Enter Zephyr Username\", password:\"Enter Zephyr Password\"  },\n    ALM:{url:\"Enter ALM Url\" ,username:\"Enter User Name\", password:\"Enter Password\" },\n    qTest:{url:\"Enter qTest Url\" ,username:\"Enter User Name\", password:\"Enter Password\" },\n}\n\n\n\n","const GenerateTaskList = (tasksJson, type) => {\n\n    let tempDataObj = [];\n    let reviewList = [];\n    let todoList = [];\n    let taskList = [];\n\n    for(let i=0; i < tasksJson.length; i++) {\n        let testSuiteDetails =tasksJson[i].testSuiteDetails;\n        let tasktype = tasksJson[i].taskDetails[0].taskType;\n        let taskname = tasksJson[i].taskDetails[0].taskName;\n        let status = tasksJson[i].taskDetails[0].status;\n\n        let dataobj = {\n            'uid': tasksJson[i].uid,\n            'accessibilityParameters': tasksJson[i].accessibilityParameters,\n            'scenarioflag':tasksJson[i].scenarioFlag,\n            'scenarioTaskType': tasksJson[i].scenarioTaskType || 'disable',\n            'apptype':tasksJson[i].appType,\n            'projectid':tasksJson[i].projectId,\n            'screenid':tasksJson[i].screenId,\n            'screenname':tasksJson[i].screenName,\n            'testcaseid':tasksJson[i].testCaseId,\n            'testcasename':tasksJson[i].testCaseName,\n            'scenarioid':tasksJson[i].scenarioId,\n            'taskname':taskname,\n            'taskdes':tasksJson[i].taskDetails[0].taskDescription,\n            'tasktype':tasktype,\n            'subtask':tasksJson[i].taskDetails[0].subTaskType,\n            'subtaskid':tasksJson[i].taskDetails[0].subTaskId,\n            'assignedtestscenarioids':tasksJson[i].assignedTestScenarioIds,\n            'assignedto':tasksJson[i].taskDetails[0].assignedTo,\n            'startdate':tasksJson[i].taskDetails[0].startDate,\n            'exenddate':tasksJson[i].taskDetails[0].expectedEndDate,\n            'status': status,\n            'versionnumber':tasksJson[i].versionnumber,\n            'batchTaskIDs':tasksJson[i].taskDetails[0].batchTaskIDs,\n            'releaseid':tasksJson[i].taskDetails[0].releaseid,\n            'cycleid':tasksJson[i].taskDetails[0].cycleid,\n            'reuse':tasksJson[i].taskDetails[0].reuse\n        }\n\n        if (type === \"refList\")\n            taskList.push({'panel_idx': i, 'testSuiteDetails': testSuiteDetails, 'dataobj': dataobj, 'taskname': taskname, 'tasktype': tasktype});\n        else if (type === \"pluginList\"){\n            tempDataObj.push(dataobj);\n            if (status === 'underReview') reviewList.push({'panel_idx': i, 'testSuiteDetails': tasksJson[i].testSuiteDetails, 'dataobj': dataobj, 'taskname': taskname, 'tasktype': tasktype})\n            else todoList.push({'panel_idx': i, 'testSuiteDetails': tasksJson[i].testSuiteDetails, 'dataobj': dataobj, 'taskname': taskname, 'tasktype': tasktype})\n        }\n    }\n\n    if (type === \"refList\") return taskList;\n    else if (type === \"pluginList\") \n        return { \n            dataObjList: tempDataObj,\n            reviewList: reviewList, \n            todoList: todoList\n        }\n    else return [];\n}\n\nexport default GenerateTaskList;","\nimport React, { useRef, useState, useEffect } from 'react';\nimport Datetime from \"react-datetime\";\nimport ClickAwayListener from 'react-click-away-listener';\nimport {useSelector} from 'react-redux';\nimport moment from \"moment\";\nimport '../styles/CalendarComp.scss'\n\n\n/*Component CalendarComp\n  use: returns Calendar component\n  props : {setDate:state,date:datevalue,disbled:boolean,classCalender:string,error:boolean,closeCal:boolean,setCloseCal:bool,idx:int(optional),screen:string(optional)}\n*/\n\nconst CalendarComp = (props) => {\n    const [showCal,setShowCal] = useState(false)\n    const dateRef = useRef()\n    const setDate = props.setDate\n    const disabled = props.disabled\n    var dateFormat = useSelector(state=>state.login.dateformat);\n    dateFormat = dateFormat.replace(/-/g,\"/\")\n    var dateVal = props.date;\n    const classCalender = props.classCalender\n    const error = props.error\n    const closeCal = props.closeCal\n    const setCloseCal = props.setCloseCal\n\n    const inputProps = props.inputProps\n    useEffect(()=>{\n        if(closeCal)setShowCal(false)\n    },[closeCal])\n    const valid = (current) =>{\n        var yesterday;\n        if(props.execMetrics){\n            yesterday = moment();\n            return current.isBefore(yesterday);\n        }\n        else {\n            const yesterday = moment().subtract(1, \"day\");\n            return current.isAfter(yesterday);\n        }\n    }\n    const inputPropsDefault = {\n\t\tplaceholder: \"Select Date\",\n\t\treadOnly:\"readonly\" ,\n        className:\"fc-datePicker\",\n        disabled:disabled\n    };\n    const openDate = ()=> {\n        if(disabled)return;\n        setShowCal(true);\n        setCloseCal && setCloseCal(false);\n        // (props.dateRef || dateRef).current._onInputClick()\n        if (props.screen === \"scheduleSuiteTop\"){\n            let suiteHeader = document.getElementById(`ss-id${props.idx}`);\n            if (suiteHeader) {\n                const picker = suiteHeader.getElementsByClassName(\"rdtPicker\");\n                if (picker.length === 2){\n                    let offset = `${suiteHeader.getBoundingClientRect().y + suiteHeader.getBoundingClientRect().height}px`\n                    picker[1].style.top = offset;\n                }\n            }\n        }\n    }\n    const submit = (event) => {\n        setDate(event.format(\"DD-MM-YYYY\"))\n        setShowCal(false);\n    }\n    const formatDate = (date) => {\n        if (!(date.includes(\"/\") || date.includes(\"-\"))) return date;\n        if (date.includes(\"/\")) date = date.replaceAll(\"/\",\"-\");\n        let splitDate = date.split(\"-\");\n        let d = new Date(splitDate[2], splitDate[1] - 1, splitDate[0]),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n\n        let map = {\"MM\":month,\"YYYY\": year, \"DD\": day};\n        let def = [day,month,year];\n        let format = dateFormat.split(\"/\");\n        let arr = []\n        let used = {}\n        for (let index in format){\n            if (!(format[index] in map) || format[index] in used){\n                return def.join('-');\n            }\n            arr.push(map[format[index]]) \n            used[format[index]] = 1\n        }\n        return arr.join('-');\n    }\n\n\n\n    return(\n        <ClickAwayListener onClickAway={()=> setShowCal(false)} data-test='calendar-comp' className={\"date-container \" + (classCalender? \" \"+classCalender:\"\")} as=\"span\">\n            <Datetime\n                ref={dateRef} \n                closeOnSelect={true}\n                isValidDate={valid}\n                value={dateVal} \n                open={showCal}\n                onChange={submit}\n                dateFormat=\"DD-MM-YYYY\"\n                inputProps={inputProps!==undefined?inputProps:inputPropsDefault} \n                timeFormat={false} \n                id=\"data-token\"\n                onOpen={openDate}\n                renderInput={(props) => {\n                    return <input {...props}value={ formatDate(dateVal) ? formatDate(props.value) : ''} className={(inputProps!==undefined ? inputProps.className:\" fc-datePicker \")+(error ? \" inputError\":\"\")} />\n                }}\n            />\n            <img  data-test=\"datePickerIcon\"onClick={openDate} className={\"datepickerIconToken\"+(disabled?\" disabled\":\"\")} src={\"static/imgs/ic-datepicker.png\"} alt=\"datepicker\" />\n        </ClickAwayListener>\n    )\n}\n\nexport default CalendarComp","import React from 'react';\nimport \"../styles/ErrorPage.scss\";\n\nconst ErrorPage = () => {\n    return <span className=\"errPage__msg\">The page could not be found or you don't have permission to view it.</span>\n}\n\nexport default ErrorPage;","export const VIEW_MAPPED_SCREEN_TYPE = \"VIEW_MAPPED_SCREEN_TYPE\";\nexport const INTEGRATION_SCREEN_TYPE = \"INTEGRATION_SCREEN_TYPE\";\nexport const SHOW_POPUP = \"INTEGRATION_POP_UP\";\nexport const SHOW_OVERLAY = \"INTEGRATION_OVERLAY\";\nexport const MAPPED_FILES = \"INTEGRATION_MAPPED_FILES\";\nexport const SEL_TC_DETAILS = \"INTEGRATION_SELECTED_TC_DETAILS\";\nexport const SEL_SCN_IDS = \"INTEGRATION_SELECTED_SCENARIO_IDS\";\nexport const SEL_TC = \"INTEGRATION_SELECTED_TESTCASE\";\nexport const SYNCED_TC = \"INTEGRATION_SYNCED_TESTCASES\";\nexport const MAPPED_PAIR = \"INTEGRATION_MAPPED_PAIR\";","export const UPDATE_INPUT_USERNAME = 'UPDATE_INPUT_USERNAME';\nexport const UPDATE_INPUT_FIRSTNAME = 'UPDATE_INPUT_FIRSTNAME';\nexport const UPDATE_INPUT_LASTNAME = 'UPDATE_INPUT_LASTNAME';\nexport const UPDATE_INPUT_PASSWORD = 'UPDATE_INPUT_PASSWORD';\nexport const UPDATE_INPUT_CONFIRMPASSWORD = 'UPDATE_INPUT_CONFIRMPASSWORD';\nexport const UPDATE_INPUT_EMAIL = 'UPDATE_INPUT_EMAIL';\nexport const UPDATE_ALLROLES = 'UPDATE_ALLROLES';\nexport const UPDATE_ALLADDROLES = 'UPDATE_ALLADDROLES';\nexport const UPDATE_USERROLE = 'UPDATE_USERROLE';\nexport const UPDATE_TYPE = 'UPDATE_TYPE';\nexport const UPDATE_USERID = 'UPDATE_USERID';\nexport const UPDATE_USERIDNAME = 'UPDATE_USERIDNAME';\nexport const UPDATE_NO_CREATE = 'UPDATE_NO_CREATE';\nexport const UPDATE_ALL_USER_FILTER = 'UPDATE_ALL_USER_FILTER';\nexport const UPDATE_LDAP_USER_FILTER = 'UPDATE_LDAP_USER_FILTER';\nexport const UPDATE_CONF_EXP = 'UPDATE_CONF_EXP';\nexport const UPDATE_SERVER = 'UPDATE_SERVER';\nexport const UPDATE_LDAP = 'UPDATE_LDAP';\nexport const UPDATE_CONF_SERVER_LIST = 'UPDATE_CONF_SERVER_LIST';\nexport const UPDATE_LDAP_ALLUSER_LIST = 'UPDATE_LDAP_ALLUSER_LIST';\nexport const UPDATE_LDAP_USER= 'UPDATE_LDAP_USER';\nexport const UPDATE_LDAP_FETCH= 'UPDATE_LDAP_FETCH';\nexport const UPDATE_ALL_USERS_LIST= 'UPDATE_ALL_USERS_LIST';\nexport const UPDATE_FTYPE= 'UPDATE_FTYPE';\nexport const UPDATE_ROLENAME= 'UPDATE_ROLENAME';\nexport const UPDATE_ADDROLES= 'UPDATE_ADDROLES';\nexport const EDIT_ADDROLES= 'EDIT_ADDROLES';\nexport const UPDATE_CONF_SERVER_LIST_PUSH= 'UPDATE_CONF_SERVER_LIST_PUSH';\nexport const ADD_ADDROLE= 'ADD_ADDROLE';\nexport const RESET_VALUES= 'RESET_VALUES';\nexport const UPDATE_DATA= 'UPDATE_DATA';\nexport const UPDATE_LDAP_DATA= 'UPDATE_LDAP_DATA';","export const UPDATE_PROJECTLIST = 'MINDMAP_UPDATE_PROJECTLIST';\n\nexport const SELECT_PROJECT = 'MINDMAP_SELECT_PROJECT';\n\nexport const UPDATE_MODULELIST = 'MINDMAP_UPDATE_MODULELIST';\n\nexport const SELECT_MODULE = 'MINDMAP_SELECT_MODULE';\n\nexport const SEARCH_MODULELIST = 'MINDMAP_SEARCH_MODULELIST';\n\nexport const SELECT_SELECTBOX = 'MINDMAP_SELECT_SELECTBOX';\n\nexport const UPDATE_SELECTNODES = 'MINDMAP_UPDATE_SELECTNODES';\n\nexport const UPDATE_COPYNODES = 'MINDMAP_UPDATE_COPYNODES';\n\nexport const UPDATE_SCREENDATA = 'MINDMAP_UPDATE_SCREENDATA';\n\nexport const UPDATE_DELETENODES = 'MINDMAP_UPDATE_DELETENODES';\n\nexport const UPDATE_SCENARIOLIST = 'MINDMAP_UPDATE_SCENARIOLIST';\n\nexport const SAVE_MINDMAP = 'MINDMAP_SAVE_MINDMAP';\n\nexport const UPDATE_UNASSIGNTASK = 'MINDMAP_UPDATE_UNASSIGNTASK';\n\nexport const INIT_ENEPROJECT = 'MINDMAP_INIT_ENEPROJECT';\n\nexport const IMPORT_MINDMAP = 'MINDMAP_IMPORT_MINDMAP';","export const SET_SCRAPEDATA = \"SS_SET_SCRAPEDATA\";\nexport const SET_DISABLEACTION = \"SS_SET_DISABLEACTION\";\nexport const SET_DISABLEAPPEND = \"SS_SET_DISABLEAPPEND\";\nexport const SET_COMPAREFLAG = \"SS_SET_COMPAREFLAG\";\nexport const SET_COMPAREDATA = \"SS_SET_COMPAREDATA\";\nexport const SET_COMPAREOBJ = \"SS_SET_COMPAREOBJ\";\nexport const SET_OBJVAL = \"SS_SET_OBJVAL\";\nexport const SET_CERT = \"WS_SET_CERT\";\nexport const SET_WSDATA = \"WS_SET_WSDATA\";\nexport const SET_WSDLERROR = \"WS_SET_WSDLWERROR\";\nexport const SET_ACTIONERROR = \"WS_SET_ACTIONERROR\";\nexport const RESET_COMPARE = \"SS__RESET_COMPARE\";","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { ScreenOverlay , PopupMsg , ChangePassword } from '../../global';\nimport * as api from '../api';\nimport \"../styles/LoginFields.scss\";\n\n/*\n    Component: LoginFields\n    Props: dispatch and SetProgressBar\n    Uses: Renders input fields for user to login\n    Todo: modal popups\n*/\n\nconst LoginFields = (props) => {\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [showPassField, setPassField] = useState(false);\n    const [showPass, setShowPass] = useState(false);\n    const [userError, setUserError] = useState(false);\n    const [passError, setPassError] = useState(false);\n    const [loginValidation, setLoginValidation] = useState(\"\");\n    const [requested, setRequested] = useState(false);\n    const [restartForm, setRestartForm] = useState(false);\n    const [redirectTo, setRedirectTo] = useState(\"\");\n    const [focusBtn, setFocus] = useState(\"\");\n    const [showChangePass, setShowChangePass] = useState(false);\n    const [showSuccessPass, setSuccessPass] = useState(false);\n    const [showForgotPassword, setforgotPassword] = useState(true);\n    const [lockedOut,setLockedOut] = useState(false);\n    const [unlockCond,setUnlockCond] = useState(false);\n    const [overlayText, setOverlayText] = useState(\"\");\n    const [popup, setPopup] = useState(\"\");\n\n    let serverList = [{\"name\": \"License Server\", \"active\": false}, {\"name\": \"DAS Server\", \"active\": false}, {\"name\": \"Web Server\", \"active\": false}];\n    let SetProgressBar = props.SetProgressBar;\n\n    const handleShowPass = () => {\n        setShowPass(!showPass);\n    }\n\n    const toggleChangePass = () => setShowChangePass(!showChangePass);\n    \n    const handleUsername = event => {\n        resetErrors();\n        if (showPassField){\n            hidePassField();\n        }\n        setUsername(event.target.value);\n    }\n    const handlePassword = event => {\n        resetErrors();\n        setPassword(event.target.value);\n    }\n\n    const resetErrors = () =>{\n        setPassError(false);\n        setUserError(false);\n        setLoginValidation(\"\");\n        setLockedOut(false);\n    }\n\n    const hidePassField = () => {\n        setPassField(false);\n        setPassword(\"\");\n        setPassError(false);\n        setPassField(false);\n    }\n\n    const checkUser = () => {\n        if (requested) return false;\n        let err = \"Failed to Login.\";\n        if (!username) {\n            setUserError(true);\n            // SetProgressBar(\"stop\", dispatch);\n            return false;\n        }\n        setRequested(true);\n        (async()=>{\n            try{\n                let data = await api.checkUser(username)\n                // SetProgressBar(\"stop\", dispatch);\n                setRequested(false);\n                if (data.redirect) {\n                    window.location.href = data.redirect;\n                }\n                else if (data.proceed) {\n                    setPassField(true);\n                    if(data.ldapuser) setforgotPassword(false);\n                    else setforgotPassword(true);\n                } \n                else if (data === \"invalidServerConf\") setLoginValidation(\"Authentication Server Configuration is invalid!\");\n                else setLoginValidation(err);    \n            }\n            catch(err){\n                setLoginValidation(err);\n                // cfpLoadingBar.complete();\n                setRequested(false);\n            }\n        })()\n    }\n\n    const login = event => {\n        event.preventDefault();\n        if (focusBtn ===\"checkpass\") handleShowPass();\n        else if (focusBtn !== \"checkuser\" && focusBtn !== \"checkpass\"){\n            resetErrors();\n            if (!showPassField) checkUser();\n            else if (!password) setPassError(true);\n            else check_credentials();\n        }\n    }\n\n    const unlock = event => {\n        SetProgressBar(\"start\");\n\t\tsetLoginValidation(\"\");\n\t\tsetLockedOut(false);\n\t\tresetErrors();\n\t\tif (!username) {\n\t\t\tsetUserError(true);\n\t\t\tsetLoginValidation(\"Please Enter Username\");\n\t\t\tSetProgressBar(\"stop\");\n\t\t} else if (!password) {\n\t\t\tsetPassError(true);\n\t\t\tsetLoginValidation(\"Please Enter Password\");\n\t\t\tSetProgressBar(\"stop\");\n\t\t} else {\n\t\t\tsetRequested(true);\n            api.unlock(username.toLowerCase(), password)\n            .then(data => {\n                SetProgressBar(\"stop\");\n                setRequested(false);\n                if (data === 'success') {\n                    setUserError(false);\n                    setPassError(false);\n                    setUnlockCond(false);\n                    setLockedOut(false);\n                    setPassField(false);\n                    setPassword(\"\");\n                    setUsername(\"\");\n                    setforgotPassword(true);\n                    setPopup({\"title\": \"Unlock Account\", \"content\": \"Successfully unlocked the user account! Please login again\"})\n                } else if (data === \"invalid_username_password\") {\n                    setUserError(true);\n                    setPassError(true);\n                    setLoginValidation(\"The username or password you entered isn't correct. Please try again.\");\n                } else if(data === \"timeout\") setLoginValidation(\"Password expired.\"); \n                else if (data === \"userUnlocked\") setLoginValidation(\"User account is already unlocked!\"); \n                else setLoginValidation(\"Failed to Login.\");\n            })\n            .catch(error=> {\n                console.error(\"Failed to Authenticate User. ERROR::::\", error);\n                setLoginValidation(\"Failed to Authenticate User.\");\n                SetProgressBar(\"stop\");\n                setRequested(false);\n            });\n        }\n    }\n    \n    const check_credentials = () => {\n        if (username && password){\n            setRequested(true);\n            SetProgressBar(\"start\");\n            let user = username.toLowerCase();\n            (async()=>{\n                try{\n                    let data = await api.authenticateUser(user, password)\n                    SetProgressBar(\"stop\");\n                    setRequested(false);\n                    if (data === \"restart\") {\n                        setOverlayText(\"Fetching active services...\");\n                        api.restartService(\"query\")\n                        .then(data=> {\n                            if (data === \"fail\") {\n                                setLoginValidation(\"Failed to fetch services.\");\n                            } else {\n                                setRestartForm(true);\n                                data.forEach((e, i)=>{\n                                    serverList[i].active = e;\n                                });\n                            }\n                            setOverlayText(\"\");\n                        })\n                        .catch(error=> {\n                            setOverlayText(\"\");\n                            console.log(\"Failed to fetch services. Error::\", error)\n                            setLoginValidation(\"Failed to fetch services.\");\n                        });\n                    }\n                    else if (data === 'validCredential')  setRedirectTo(\"/\")\n                    else if (data === 'inValidCredential' || data === \"invalid_username_password\") {\n                        setUserError(true);\n                        setPassError(true);\n                        setLoginValidation(\"The username or password you entered isn't correct. Please try again.\");\n                    } else if (data === \"changePwd\") {\n                        setShowChangePass(true);\n                    } else if(data === \"timeout\") {\n                       setLoginValidation(\"User Password has expired. Please reset forgot password or contact admin\");\n                    } else if (data === \"userLocked\") {\n                        setLoginValidation(\"User account is locked!\");\n                        setLockedOut(true);\n                        setforgotPassword(false);\n                    }\n                    else if (data === \"userLogged\") setLoginValidation(\"User is already logged in! Please logout from the previous session.\");\n                    else if (data === \"inValidLDAPServer\") setLoginValidation(\"LDAP Server Configuration is invalid!\");\n                    else if (data === \"invalidUserConf\") setLoginValidation(\"User-LDAP mapping is incorrect!\");\n                    else setLoginValidation(\"Failed to Login.\");\n                }\n                catch(err){\n                    setRequested(false);\n                    console.error(\"Error::\", err)\n                }\n            })()\n        }\n    }\n\n    const restartServer = (serverid, serverName) => {\n        let errmsg = \"Fail to restart \" + serverName + \" service!\";\n        setOverlayText(\"Please wait while \" + serverName + \" service is being restarted...\");\n        api.restartService(serverid)\n        .then(data => {\n            if (data === \"success\") {\n                setOverlayText(\"\");\n                setPopup({'title': \"Restart Service\", \"content\": serverName+\" service is restarted successfully!!\"})                \n            } else {\n                setOverlayText(\"\");\n                if (data === \"na\") errmsg = \"Service is not found. Ensure \"+serverName+\" is running as a service.\";\n                setPopup({\"title\": \"Restart Service\", \"content\": errmsg})\n            }\n        })\n        .catch(error=> {\n            setOverlayText(\"\");\n            setPopup({'title': \"Restart Service\", 'content': errmsg})\n        });\n    };\n    \n    const forgotPasswordEmail = () => {\n        SetProgressBar(\"start\");\n        setLoginValidation(\"\");\n\t\tsetLockedOut(false);\n\t\tsetUserError(false);\n\t\tif (username===\"\") {\n            setUserError(true);\n            setLoginValidation(\"Please Enter Username\")\n\t\t} else {\n            api.forgotPasswordEmail(username.toLowerCase())\n            .then(data => {\n                SetProgressBar(\"stop\");\n\t\t\t\tif (data === 'success' || data === \"invalid_username_password\") {\n\t\t\t\t\tsetUserError(false);\n                    setPassError(false);\n                    setPassword(\"\");\n                    setPopup({'title': \"Forgot Password\", \"content\":\"Successfully sent an email to reset your password! Please login with the temporary password sent in the email\"})                \n                } else if (data === \"userLocked\") {\n\t\t\t\t\tsetLockedOut(true);\n                    setLoginValidation(\"User account is locked!\");\n                    setforgotPassword(false);\n\t\t\t\t}\n\t\t\t\telse setLoginValidation(\"Failed to Login.\");\n            })\n            .catch(err=> {\n                setLoginValidation(err);\n\t\t\t\tSetProgressBar(\"stop\");\n                setRequested(false);\n            });\n\t\t}\n    };\n    \n    const unlockAccountEmail = () => {\n        SetProgressBar(\"start\");\n        setLoginValidation(\"\")\n        setUserError(false);\n        setLockedOut(false);\n\t\tif (username===\"\") {\n            setUserError(true);\n            setLoginValidation(\"Please Enter Username\")\n\t\t} else {\n            api.unlockAccountEmail(username.toLowerCase())\n            .then(data => {\n                SetProgressBar(\"stop\");\n\t\t\t\tif (data === 'success') {\n\t\t\t\t\tsetUserError(false);\n                    setPassError(false);\n\t\t\t\t\tsetPassword(\"\");\n                    setforgotPassword(false);\n                    setUnlockCond(true);\n                    setPopup({'title': \"Unlock Account\", \"content\":\"Successfully sent an email! Please unlock the account using verification password sent in the email\"})                \n                } else if (data === \"invalid_username_password\") {\n\t\t\t\t\tsetUserError(false);\n                    setPassError(true);\n                    setLoginValidation(\"The username or password you entered isn't correct. Please try again.\");\n\t\t\t\t} else if (data === \"userUnlocked\") setLoginValidation(\"User account is already unlocked!\");  \n\t\t\t\telse setLoginValidation(\"Failed to Login.\");\n            })\n            .catch(err=> {\n                console.error(err);\n\t\t\t\tsetLoginValidation(err);\n\t\t\t\tSetProgressBar(\"stop\");\n                setRequested(false);\n            });\n\t\t}\n\t};\n\n    const PopUp = () => (\n        <PopupMsg \n            title={popup.title}\n            content={popup.content}\n            submitText=\"OK\"\n            close={()=>setPopup(\"\")}\n            submit={()=>setPopup(\"\")}\n        />\n    );\n\n    const PasswordSuccessPopup = () => (\n        <PopupMsg \n            title={\"Change Password\"}\n            close={()=>setSuccessPass(false)}\n            content={\"Password change successfull! Please login again with new password\"}\n            submitText={\"OK\"}\n            submit={setSuccessPass(false)}\n        />\n    );\n\n    return (\n        <>\n        { popup && <PopUp /> }\n        { overlayText && <ScreenOverlay content={overlayText}/>}\n        { showSuccessPass && <PasswordSuccessPopup /> }\n        { showChangePass && <ChangePassword setShow={toggleChangePass} setSuccessPass={setSuccessPass} loginCurrPassword={password} loginPopup={true} /> }\n        {redirectTo ? <Redirect to={redirectTo} /> :\n            <>\n            { restartForm \n            ?\n            <div>\n                {serverList.map((server, index)=>{\n                    return <button key={index} className=\"restart-service-btn\" disabled={!server.active} onClick={()=>restartServer(index, server.name)} type=\"submit\">Restart {server.name}</button>\n                })}\n            </div>\n            :\n            <form data-test='login-form' className=\"login-form\" onSubmit={login}>\n            <div data-test='login-username' className=\"username-wrap\" style={userError ? loginValidation ? {borderColor: \"#d33c3c\"} : styles.errorBorder : null }>\n                <span data-test='username-icon' className=\"ic-holder\"><img data-test=\"username-image\" className=\"ic-username\" alt=\"user-ic\" src={userError ? res.errorUserIcon : res.defaultUserIcon}/></span>\n                <input data-test='username-input' className=\"field\" placeholder=\"Username\" onFocus={()=>setFocus(\"username\")} value={username} onChange={handleUsername}></input>\n                {showPassField && username ? true : <button data-test='login-username-button' className=\"ic-rightarrow fa fa-arrow-circle-right arrow-circle no-decor\" onFocus={()=>setFocus(\"checkuser\")} onClick={checkUser}></button>}\n            </div>\n            {userError && !loginValidation ? <div data-test='login-username-error' className=\"error-msg\">Please Enter Username</div> : null}\n            {\n            showPassField &&\n                <>\n                <div data-test='login-password' className=\"password-wrap\" style={passError ? styles.errorBorder : null }>\n                    <span data-test=\"password-icon\" className=\"ic-holder\"><img data-test=\"password-image\" className=\"ic-password\" alt=\"pass-ic\" src={passError ? res.errorPassIcon : res.defaultPassIcon}/></span>\n                    <input data-test=\"password-input\" className=\"field\" type={showPass ? \"text\" : \"password\"} autoFocus onFocus={()=>setFocus(\"password\")} placeholder=\"Password\" value={password} onChange={handlePassword}></input>\n                    <button data-test=\"password-eyeIcon\" className={ \"no-decor \" + (showPass ? res.eyeSlashIcon : res.eyeIcon) } onFocus={()=>setFocus(\"checkpass\")}></button>\n                </div>\n                {showForgotPassword?\n                <div ><a id=\"forgotPassword\" className=\"forget-password\" onClick={()=>{forgotPasswordEmail()}} >Forgot Password?</a></div>:null}\n                {passError && !loginValidation? <div data-test='password-error' className=\"error-msg\">Please Enter Password</div> : null}\n                <div data-test=\"login-validation\" className=\"error-msg\">{loginValidation}\n                {lockedOut?\n                    <span className=\"error-msg\"> Click \n                    <a className=\"error-msg-hyperlink\" onClick={()=>{unlockAccountEmail()}} > <b>here</b></a> to unlock.\n                    </span>\n                :\"\"}</div>\n                <button data-test='login-button'  className=\"login-btn\" type=\"submit\" disabled={requested} onFocus={()=>{setFocus(\"login\")}} onClick={unlockCond?unlock:login}>{unlockCond?\"Unlock\":\"Login\"}</button>\n                </>\n            }\n            </form>\n        } </> }\n        </>\n    );\n}\n\nconst styles = {\n    errorBorder : { borderColor: \"#d33c3c\", marginBottom: '19px'},\n}\n\nconst res = {\n    defaultUserIcon : \"static/imgs/ic-username.png\",\n    errorUserIcon :  \"static/imgs/ic-username-error.png\",\n    defaultPassIcon : \"static/imgs/ic-password.png\",\n    errorPassIcon : \"static/imgs/ic-password-error.png\",\n    eyeSlashIcon : \"password-eye fa fa-eye-slash eye-ic\",\n    eyeIcon : \"password-eye fa fa-eye eye-ic\",\n}\n\n\nexport default LoginFields;\n\n","import React from 'react';\nimport { FooterOne } from '../../global';\nimport \"../styles/StaticElements.scss\";\n\n\n/*\n    Component: StaticElements\n    Props: Child Elements (children)\n    Uses: Renders the Bg-Img and Greeting text and puts child elements in it\n    Todo: none\n*/\n\nconst StaticElements = ({children}) => {\n\n    return (\n        <div className=\"bg-container\">\n            <img className=\"bg-img\" alt=\"bg-img\" src=\"static/imgs/login-bg.png\"/>\n            <div className=\"element-holder\">\n                <div className=\"greet-text\">\n                    <h1>Hello.</h1>\n                    <h2>Welcome to Avo Assure!</h2>\n                    <h3>Login to Experience Intelligence</h3>\n                </div>\n                <div className=\"login-block\">\n                    <span className=\"logo-wrap\"><img className=\"logo-img\" alt=\"logo\" src=\"static/imgs/logo.png\"/></span>\n                    {children}\n                </div>\n            </div>\n            <FooterOne/>\n        </div>\n    );\n\n}\n\nexport default StaticElements;","import React, { useEffect } from 'react';\nimport LoginFields from \"../components/LoginFields.js\";\nimport { SetProgressBar} from '../../global';\nimport { persistor } from '../../../reducer';\nimport StaticElements from '../components/StaticElements';\n\n/*\n    Component: LoginPage\n    Props: None\n    Uses: Renders the Login page.\n    Todo: None\n*/\n\n\nconst LoginPage = () => {\n     \n    useEffect(()=>{\n        persistor.purge();\n        SetProgressBar('complete');\n    }, []);\n\n    return (\n        <StaticElements>\n             <LoginFields SetProgressBar={SetProgressBar}/>\n        </StaticElements>\n    );\n}\n\nexport default LoginPage;","import React from 'react';\nimport { ModalContainer, ScrollBar } from '../../global';\nimport \"../styles/TermsAndConditions.scss\";\n\nconst TermsAndConditions = props => (\n    <div className=\"tnc_modal\">\n    <ModalContainer \n        title=\"Terms and Conditions - License Agreement\"\n        content={\n            <ScrollBar>\n            <div id=\"tnc_content\">\n                <h4 className=\"tnc_header\">SOFTWARE TRIAL LICENSE AGREEMENT</h4>\n                <p className=\"tnc_bold\">THIS SOFTWARE TRIAL LICENSE AGREEMENT (“LICENSE AGREEMENT”) IS A LEGAL CONTRACT BETWEEN AVO AUTOMATION PTE. LTD (“LICENSOR”) AND YOU, EITHER AS AN INDIVIDUAL OR AN ENTITY (“LICENSEE”). IF THE LICENSEE IS ACCEPTING ON BEHALF OF AN ENTITY, THE LICENSEE REPRESENTS AND WARRANTS THAT THE LICENSEE HAS THE AUTHORITY TO BIND THAT ENTITY TO THIS AGREEMENT  LICENSORIS WILLING TO AUTHORIZE LICENSEE’S USE OF THE SOFTWARE ASSOCIATED WITH THIS LICENSE AGREEMENT ONLY UPON THE CONDITION THAT LICENSEE ACCEPTS THIS LICENSE AGREEMENT WHICH GOVERNS LICENSEE’S USE OF THE SOFTWARE. BY DOWNLOADING, INSTALLING, OR ACCESSING AND USING THE SOFTWARE, LICENSEE INDICATES LICENSEE’S ACCEPTANCE OF THIS LICENSE AGREEMENT AND LICENSEE’S AGREEMENT TO COMPLY WITH THE TERMS AND CONDITIONS OF THIS LICENSE AGREEMENT.</p>\n                <div>\n                    <br/>\n                    <h5><span className=\"tnc_num_idx\">1.        </span> DEFINITIONS</h5>\n                    <div>\n                        <p><span className=\"tnc_num_idx\">1.1.    </span> <b>Specific Words or Phrases.</b> For purposes of this License Agreement, each word or phrase listed below shall have the meaning designated. Other words or phrases used in this License Agreement may be defined in the context in which they are used and shall have the respective meaning there designated.</p>\n                        <p>\"<b>Affiliate</b>\" means and includes any entity that directly or indirectly controls, is controlled by, or is under common control with Licensee, where \"control\" means the ownership of, or the power to vote, at least fifty percent (50%) of the voting stock, shares or interests of such entity. An entity that otherwise qualifies under this definition will be included within the meaning of \"Affiliate\" even though it qualifies after the execution of this Agreement.</p>\n                        <p>\"<b>License Agreement</b>\" or \"<b>Agreement</b>\" means the terms of this Software Trial License Agreement, together with the appendices and other exhibits attached hereto or incorporated herein by reference.</p>\n                        <p>\"<b>Authorized Users</b>\" shall mean and include Licensee, its employees and contract employees of the Licensee who are working for the Licensee.</p>\n                        <p>\"<b>Intellectual Property Rights</b>\" means all trade secrets, patents and patent applications, trademarks (whether registered or unregistered and including any goodwill acquired in such trade marks), service marks, trade names, business names, internet domain names, e-mail address names, copyrights (including rights in computer software), moral rights, database rights, design rights, rights in know-how, rights in confidential information, rights in inventions (whether patentable or not) and all other intellectual property and proprietary rights (whether registered or unregistered, and any application for the foregoing), and all other equivalent or similar rights which may subsist anywhere in the world.</p>\n                        <p>\"<b>License</b>\" means a license to use the Software granted pursuant to the terms and conditions of this License Agreement.</p>\n                        <p>\"<b>Licensee</b>\" means the person or entity that has entered into this License Agreement.</p>\n                        <p>\"<b>Licensor</b>\" means Avo Automation Pte Ltd.</p>\n                        <p>\"<b>Party</b>\" means either the \"Licensor\" or \"Licensee\", individually as the context so requires; and \"<b>Parties</b>\" means the \"Licensor\" and \"Licensee\", collectively.</p>\n                        <p>\"<b>Personnel</b>\" means and includes a Party’s or an Affiliate’s directors, officers, employees, agents, auditors, consultants, contract employees and subcontractors.</p>\n                        <p>\"<b>Software</b>\" means the appropriate software product licenses made available to Licensee and its Authorized Users by Licensor under this License Agreement.</p>\n                    </div>\n                </div>\n                <div>\n                    <br/>\n                    <h5><span className=\"tnc_num_idx\">2.        </span> TERM AND TERMINATION</h5>\n                    <p><span className=\"tnc_num_idx\">2.1.    </span> <b>Term.</b> This License Agreement shall remain in effect for a period of fifteen (15) days from the date of download of the Software (‘Term’). The License term shall automatically expire on the end of the Term.</p>\n                    <p><span className=\"tnc_num_idx\">2.2.    </span> <b>Termination for Cause.</b> If Licensee breaches a material obligation under this Agreement, then Licensor may terminate this Agreement with immediate effect.</p>\n                </div>\n                <div>\n                    <br/>\n                    <h5><span className=\"tnc_num_idx\">3.        </span> CONSEQUENCE OF TERMINATION</h5>\n                    <p><span className=\"tnc_num_idx\">3.1.    </span> <b> Return of Software.</b> Upon termination of this License Agreement, under any or all of the reasons mentioned in this License Agreement or on expiry of the License Agreement, the license granted to Licensee by Licensor herein shall terminate and Licensee shall cease to use the Software immediately and return or destroy, at Licensor’s option, the original and all copies of the Software and Documentation including partial copies immediately on the date of such termination/expiration. Licensee shall not from the date of termination or expiry of the License Agreement, be entitled to use or access the Software or Documentation in any manner whatsoever, and Licensor shall have a reasonable opportunity to conduct an inspection of Licensee's place of business to assure compliance with this provision.</p>\n                </div>\n                <div>\n                    <br/>\n                    <h5><span className=\"tnc_num_idx\">4.        </span> SCOPE OF LICENSE</h5>\n                    <p><span className=\"tnc_num_idx\">4.1.    </span> <b>Proprietary Rights to Software.</b> As between Licensor and Licensee, Licensor shall be deemed to own the Intellectual Property Rights in or to the Software; and nothing contained in this License Agreement shall be construed to convey any Intellectual Property Rights in or to the Software to Licensee (or to any party claiming through Licensee) other than the license rights expressly set forth in this License Agreement.</p>\n                    <p><span className=\"tnc_num_idx\">4.2.    </span> <b>License Grant.</b></p>\n                    <p className=\"tnc_third\"><span className=\"tnc_num_idx\">4.2.1.  </span> As between Licensor and Licensee, Licensor shall be deemed to own the Intellectual Property Rights in or to the Software; and nothing contained in this License Agreement shall be construed to convey any Intellectual Property Rights in or to the Software to Licensee (or to any party claiming through Licensee) other than the license rights expressly set forth in this License Agreement.</p>\n                    <p><span className=\"tnc_num_idx\">4.3.    </span> <b>Restrictions.</b> Except to the extent authorized or permitted in this License Agreement or by applicable law without the possibility of contractual waiver, Licensee shall not directly or indirectly: (i) copy, modify, create derivative work; (ii), transfer or distribute the Software (electronically or otherwise); (iii) reverse assemble, reverse engineer, reverse compile, or otherwise translate the Software; (iv) sublicense or assign the license for the Software; (v) remove, delete or alter any content, trademark, copyright or other intellectual property rights from the Software including any copies thereof; (vi) use the Software in violation of the applicable laws.</p>\n                </div>\n                <div>\n                    <br/>\n                    <h5><span className=\"tnc_num_idx\">5.        </span> REPRESENTATIONS AND WARRANTIES</h5>\n                    <p><span className=\"tnc_num_idx\">5.1.    </span> <b>Authority and Non-Infringement.</b> Licensor represents and warrants that Licensor has all rights and authority required to enter into this License Agreement, and to provide the Software and perform the services contemplated by this License Agreement, free from all liens, claims, encumbrances, security interests and other restrictions. Subject to the applicable terms and conditions of this License Agreement, Licensee will be entitled to use and enjoy the benefit of all Software without adverse interruption or disturbance by Licensor or any entity asserting a claim under or through Licensor. Licensor further represents and warrants that the Software  and the use thereof by Licensee in accordance with the terms and conditions of this License Agreement, will not infringe (whether directly, contributorily, by inducement or otherwise), misappropriate or violate the Intellectual Property Rights of any third party, or violate the laws, regulations or orders of any governmental or judicial authority. Licensee represents and warrants that Licensee has all rights and authority required to enter into this License Agreement and Licensee has provided inaccurate information about itself for accessing the Software.</p>\n                    <p><span className=\"tnc_num_idx\">5.2.    </span> <b>Standard of Service.</b> Licensor warrants that the maintenance service provided by Licensor pursuant to this License Agreement or any other agreement relating to the Software, will be performed in a timely and professional manner, in conformity with standards generally accepted in the software industry, by qualified and skilled individuals. Licensor further warrants that its personnel will provide services with a minimal amount of interference to Licensee’s normal business operations and subject to Licensee’s security and work place policies and procedures.</p>\n                    <p><span className=\"tnc_num_idx\">5.3.    </span> <b>Disabling Devices.</b> Licensor represents and warrants that at the time of download the Software shall not contain any computer code or any other procedures, routines or mechanisms designed by Licensor (or its personnel or licensors) to: (i) disrupt, disable, harm or impair in any way the Software’s (or any other software’s) orderly operation based on the elapsing of a period of time advancement to a particular date or other numeral (sometimes referred to as “time bombs”, “time locks”, or “drop dead” devices); (ii) cause the Software to damage or corrupt any of Licensee’s, data, storage media, programs, equipment or communications, or otherwise interfere with Licensee’s use of the Software in accordance with this Agreement, or (iii) permit Licensor, its personnel, or any other third party, to access the Software (or any other software or Licensee’s or its Affiliates’ computer systems) for any reason (sometimes referred to as “traps”, “access codes” or “trap door” devices).</p>\n                    <p><span className=\"tnc_num_idx\">5.4.    </span> <b>Disclaimer. EXCEPT FOR THE REPRESENTATIONS AND WARRANTIES EXPRESSLY SET FORTH IN THIS LICENSE AGREEMENT OR THE AGREEMENT, THE SOFTWARE AND DOCUMENTATION ARE LICENSED “AS IS,” AND LICENSOR DISCLAIMS ANY AND ALL OTHER WARRANTIES, EXPRESS OR IMPLIED, WITH RESPECT TO THE SOFTWARE, THE DOCUMENTATION, INCLUDING WITHOUT LIMITATION ANY IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE</b></p>\n                </div>\n                <div>\n                    <br/>\n                    <h5><span className=\"tnc_num_idx\">6.        </span> CONFIDENTIAL INFORMATION</h5>\n                    <p><span className=\"tnc_num_idx\">6.1.    </span> <b>Licensor’s Confidential Information.</b> Licensor’s “Confidential Information” means and refers to (i) the Software, (ii) the Documentation, (iii) information or materials related to Licensor’s trade secrets, business plans, strategies, forecasts or forecast assumptions, operations, methods of doing business, records, finances, assets, technology, (iv) information or materials that reveal research, technology, practices, procedures, processes, methodologies, know how, or other systems or controls by which Licensor’s products, services, applications and methods of operations or doing business are developed, conducted or operated, and (v) all other materials furnished by Licensor that are expressly identified or marked by Licensor as “confidential” at the time of their delivery to Licensee.</p>\n                    <p><span className=\"tnc_num_idx\">6.2.    </span> <b>Licensee’s “Confidential Information”.</b> Licensee’s “Confidential Information” means and refers to all information and materials, in any form or medium (and without regard to whether the information or materials are owned by Licensee or by a third party), furnished or disclosed to Licensor by Licensee , or otherwise obtained, accessed or observed by Licensor from Licensee).</p>\n                    <p><span className=\"tnc_num_idx\">6.3.    </span> <b>Duty of Care.</b> The Party receiving (“Receiving Party”) Confidential Information of the other Party (“Disclosing Party”) will exercise at least the same degree of care with respect to the Disclosing Party’s Confidential Information that the Receiving Party exercises to protect its own Confidential Information; and, at a minimum, the Receiving Party will maintain adequate security measures to safeguard the Disclosing Party’s Confidential Information from unauthorized disclosure, access, use and misappropriation. Without limiting the generality of the foregoing, the Receiving Party will only use or reproduce the Disclosing Party’s Confidential Information to the extent necessary to enable the Receiving Party to fulfill its obligations under this Agreement, or in the case of Licensee, to exercise its rights as contemplated by this Agreement. In addition, the Receiving Party will disclose the Disclosing Party’s Confidential Information only to those of the Receiving Party’s (or in the case of Licensee, also to its Affiliates’) Personnel who have a “need to know” such Confidential Information (and only to the extent necessary) in order to fulfill the purposes contemplated by the Agreement. Prior to disclosing Licensee’s Confidential Information to any of its Personnel, Licensor will ensure that each of its Personnel who will be providing services for Licensee is bound by a written non-disclosure agreement with terms and conditions no less restrictive than those set forth herein. If the Receiving Party becomes aware of any threatened or actual unauthorized access to, use or disclosure of, or any inability to account for, the Disclosing Party’s Confidential Information, the Receiving Party will promptly notify the Disclosing Party thereof and will assist the Disclosing Party with its efforts to terminate such access, to curtail such threatened or actual unauthorized use or disclosure, or to recover such information or materials. The Receiving Party will be liable to the Disclosing Party for any non-compliance by its agents or contractors to the same extent it would be liable for non-compliance by its employees.</p>\n                    <p><span className=\"tnc_num_idx\">6.4.    </span> <b>Exclusions.</b> The obligations of confidentiality assumed under this Agreement shall not apply to the extent the Receiving Party can demonstrate, by clear and convincing evidence, that such information:</p>\n                    <p className=\"tnc_third\"><span className=\"tnc_num_idx\">6.4.1.  </span> is or has become generally available to the public, without any breach by the Receiving Party of the provisions of this Agreement or any other applicable agreement between the Parties;</p>\n                    <p className=\"tnc_third\"><span className=\"tnc_num_idx\">6.4.2.  </span> was rightfully in the possession of the Receiving Party, without confidentiality restrictions, prior to such Party’s receipt pursuant to this Agreement;</p>\n                    <p className=\"tnc_third\"><span className=\"tnc_num_idx\">6.4.3.  </span> was rightfully acquired by the Receiving Party from a third party who was entitled to disclose such information, without confidentiality or proprietary restrictions;</p>\n                    <p className=\"tnc_third\"><span className=\"tnc_num_idx\">6.4.4.  </span> was independently developed by the Receiving Party without using or referring to the Disclosing Party’s Confidential Information; or,</p>\n                    <p className=\"tnc_third\"><span className=\"tnc_num_idx\">6.4.5.  </span> is subject to a written agreement pursuant to which the Disclosing Party authorized the Receiving Party to disclose the subject information.</p>\n                    <p><span className=\"tnc_num_idx\">6.5.    </span> <b>Legally Required Disclosures.</b> The obligations of confidentiality assumed under this Agreement shall not apply to the extent that the Receiving Party is required to disclose the Disclosing Party’s Confidential Information under any applicable law, regulation or an order from a court, regulatory agency or other governmental authority having competent jurisdiction, provided that the Receiving Party:</p>\n                    <p className=\"tnc_third\"><span className=\"tnc_num_idx\">6.5.1.  </span> promptly notifies the Disclosing Party of the order in order to provide the Disclosing Party an opportunity to seek a protective order;</p>\n                    <p className=\"tnc_third\"><span className=\"tnc_num_idx\">6.5.2.  </span> provides the Disclosing Party with reasonable cooperation in its efforts to resist the disclosure, upon reasonable request by the Disclosing Party and at the Disclosing Party’s expense; and,</p>\n                    <p className=\"tnc_third\"><span className=\"tnc_num_idx\">6.5.3.  </span> Disclose only the portion of the Disclosing Party’s Confidential Information that is required to be disclosed under such law, regulation or order.</p>\n                    <p><span className=\"tnc_num_idx\">6.6.    </span> <b>Accounting for Confidential Information.</b> Except as otherwise expressly provided in this Agreement, upon the request of the Disclosing Party at any time after the termination of this Agreement, the Receiving Party will return (or purge its systems and files of, and suitably account for) all Confidential Information supplied to, or otherwise obtained by, the Receiving Party in connection with this Agreement. The Receiving Party will certify in writing that it has fully complied with its obligations under this Section within seven (7) days after its receipt of a request by the Disclosing Party for such a certification. For the avoidance of doubt, this Section 6.6 shall not be construed to limit either Party’s right to seek relief from damages that are caused by the other Party’s default.</p>\n                    <p><span className=\"tnc_num_idx\">6.7.    </span> <b>DISCLAIMER ON DATA:- LICENSOR DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, LIABILITY RELATING TO SECURITY, CONFIDENTIALITY AND PROTECTION OF ALL DATA PROVIDED/TRANSFERRED/UPLOADED, IF ANY, BY LICENSEE IN THE ANY CLOUD ENVIRONMENT AS A PART OF LICENSING/USING THE SOFTWARE FROM ANY CLOUD ENVIRONMENT AND ANY SUCH TRANSFER/UPLOAD OF DATA SHALL BE AT LICENSEE’S OWN RISK.</b></p>\n                </div>\n                <div>\n                    <br/>\n                    <h5><span className=\"tnc_num_idx\">7.        </span> INDEMNITY</h5>\n                    <p><span className=\"tnc_num_idx\">7.1.    </span> Notwithstanding any limitations, exclusions, restrictions or exculpatory provisions as to liability or damages set forth in this License Agreement, Licensor agrees to indemnify, hold harmless and defend Licensee and its directors, officers, shareholders, employees, successors, assigns, agents, contractors, subcontractors, attorneys, and affiliates from and against any and all losses, costs, claims, liabilities, damages and expenses, including (without limitation) reasonable attorneys’ fees, arising as the result of (a) any breach of any of the representations, warranties, covenants, agreements or obligations of Licensor, (b) any negligence or willful misconduct on the part of Licensor, its employees, agents, subcontractors or subservicers, or (c) any judgment or finding, or any demand, assertion or claim, that any evaluation products or intellectual property provided to Licensee by Licensor in connection with the License Agreement infringes upon any patent, copyright, and/or trademark or any other enforceable proprietary or intellectual property rights of any third party or parties. The provisions of this section shall survive the expiration or termination of this Agreement.</p>\n                </div>\n                <div>\n                    <br/>\n                    <h5><span className=\"tnc_num_idx\">8.        </span> LIMITATION OF LIABILITY</h5>\n                    <p>LICENSOR WILL NOT BE LIABLE TO THE OTHER PARTY (OR TO ANY PERSON OR ENTITY CLAIMING THROUGH THE OTHER PARTY) FOR LOST PROFITS OR FOR SPECIAL, INCIDENTAL, INDIRECT, CONSEQUENTIAL OR EXEMPLARY DAMAGES ARISING OUT OF OR IN ANY MANNER CONNECTED WITH THIS AGREEMENT OR THE SUBJECT MATTER HEREOF, REGARDLESS OF THE FORM OF ACTION AND WHETHER OR NOT SUCH PARTY HAS BEEN INFORMED OF, OR OTHERWISE MIGHT HAVE ANTICIPATED, THE POSSIBILITY OF SUCH DAMAGES. NOTWITHSTANDING ANYTHING CONTAINED HEREIN, LICENSOR’S TOTAL LIABILITY, (WHETHER IN CONTRACT, TORT, INCLUDING NEGLIGENCE, OR OTHERWISE) UNDER OR IN CONNECTION WITH THIS AGREEMENT SHALL NOT EXCEED USD $1.</p>\n                </div>\n                <div>\n                    <br/>\n                    <h5><span className=\"tnc_num_idx\">9.        </span> SUBCONTRACTORS</h5>\n                    <p>Licensor may subcontract its obligations under this Agreement without obtaining Licensee’s prior written approval.</p>\n                </div>\n                <div>\n                    <br/>\n                    <h5><span className=\"tnc_num_idx\">10.        </span> ASSIGNMENT</h5>\n                    <p>Licensee may, with notice to Licensor, assign this Agreement or any of its rights or interests hereunder, or delegate any of its obligations hereunder, to (i) an Affiliate, (ii) Licensee's successor pursuant to a merger, reorganization, consolidation or sale, or (iii) an entity that acquires all or substantially all of that portion of Licensee’s assets or business for which the Licensor’s Software or services were acquired or being used.  Licensor may, with notice to Licensee, assign this Agreement (in whole and not in part), to (i) a wholly owned subsidiary, or (ii) Licensee's successor pursuant to a merger, reorganization, consolidation or sale. Except as otherwise provided above, neither Party may assign this Agreement nor any of its rights or interests hereunder, nor delegate any obligation to be performed hereunder, without the prior written consent of the other Party, which consent shall not be unreasonably withheld or delayed. Any attempted assignment or delegation in contravention of this Section shall be null and void, and of no force or effect. This Agreement shall be binding upon, and shall inure to the benefit of, the legal successors and permitted assigns of the Parties.</p>\n                </div>\n                <div>\n                    <br/>\n                    <h5><span className=\"tnc_num_idx\">11.        </span> NOTICES</h5>\n                    <p>Any notice, demand or other communication (collectively “notice”) required or permitted under this Agreement shall be made in writing and shall be deemed to have been duly given (i) when delivered personally to the representative(s) designated to receive notices for the intended recipient, or (ii) when mailed by certified mail (return receipt requested) or sent by overnight courier to the representative(s) designated to receive notices for the intended recipient at the address set forth in the introductory paragraph of this Agreement, as appropriate. Notices concerning the Agreement shall be given to the person who signed the Agreement on behalf of the intended recipient. Any notice from Licensor that alleges Licensee committed a material breach shall also be sent to Licensee’s General Counsel’s Office, to the attention of the managing attorney responsible for intellectual property and technology. Either Party may change its address (es) or representative(s) for receiving notices upon notice to the other.</p>\n                </div>\n                <div>\n                    <br/>\n                    <h5><span className=\"tnc_num_idx\">12.        </span> COMPLIANCE WITH LAW</h5>\n                    <p><span className=\"tnc_num_idx\">12.1.    </span> <b>General.</b> In performing its obligations under this Agreement, both the parties will comply, and will cause its Personnel to comply, with the requirements of all applicable laws, ordinances, regulations, codes and executive orders.</p>\n                    <p><span className=\"tnc_num_idx\">12.2.    </span> <b>Export Controls.</b> Without limiting the generality of Section 12.1, Licensor specifically agrees to comply, and will cause its Personnel to comply, with the requirements of all applicable export laws and regulations, including but not limited to the U.S. Export Administration Regulations. Unless authorized by U.S. regulation or Export License, Licensor will not export or re-export, directly or indirectly, any software or technology received from Licensee, or allow the direct product thereof to be exported or re-exported, directly or indirectly, to (a) any country in Country Group E:2 of the Export Administration Regulations of the Department of Commerce or any other country subject to sanctions administered by the Office of Foreign Assets Control or (b) any non-civil (i.e. military) end-users or for any non-civil end-uses in any country in Country Group D:1 of the Export Administration Regulations, as revised from time to time. Licensor understands that countries other than the U.S. may restrict the import or use of strong encryption products and may restrict exports, and Licensor agrees that it shall be solely responsible for compliance with any such import or use restriction.</p>\n                </div>\n                <div>\n                    <br/>\n                    <h5><span className=\"tnc_num_idx\">13.        </span> CHOICE OF LAW, JURISDICTION</h5>\n                    <p><b>Governing Law.</b> The Parties hereby agrees that this License Agreement shall be governed by and construed in accordance with the laws of Singapore.</p>\n                </div>\n                <div>\n                    <br/>\n                    <h5><span className=\"tnc_num_idx\">14.        </span> REMEDIES</h5>\n                    <p><b>Equitable Relief.</b> Licensor and Licensee each acknowledge that the failure to perform their respective duties under <b>Sections 6, 7 or 8</b> may cause the other Party to suffer irreparable injury for which such injured Party will not have an adequate remedy available at law. Accordingly, the injured Party may seek to obtain injunctive or other equitable relief to prevent or curtail any such breach, threatened or actual, without posting a bond or security and without prejudice to such other rights as may be available under this Agreement or under applicable law. For purposes of this Agreement, \"equitable relief\" means and includes those remedies traditionally and historically granted by courts of equity, including without limitation, injunction, attachment, declaratory relief.</p>\n                </div>\n                <div>\n                    <br/>\n                    <h5><span className=\"tnc_num_idx\">15.        </span> WAIVER</h5>\n                    <p>No course of dealing, failure by either Party to require the strict performance of any obligation assumed by the other hereunder, or failure by either Party to exercise any right or remedy to which it is entitled, shall constitute a waiver or cause a diminution of the obligations or rights provided under this Agreement. No provision of this Agreement shall be deemed to have been waived by any act or knowledge of either Party, but only by a written instrument signed by a duly authorized representative of the Party to be bound thereby. Waiver by either Party of any default shall not constitute a waiver of any other or subsequent default.</p>\n                </div>\n                <div>\n                    <br/>\n                    <h5><span className=\"tnc_num_idx\">16.        </span> FORCE MAJEURE</h5>\n                    <p>A Party will be excused from a delay in performing, or a failure to perform, its obligations under this Agreement to the extent such delay or failure is caused by the occurrence of any contingency beyond the reasonable control, and without any fault, of such Party. In such event, the performance times shall be extended for a period of time equivalent to the time lost because of the excusable delay. However, if an excusable delay continues more than sixty (60) days, the Party not relying on the excusable delay may, at its option, terminate the Agreement in whole or in part, upon notice to the other Party. In order to avail itself of the relief provided in this Section for an excusable delay, the Party must act with due diligence to remedy the cause of, or to mitigate or overcome, such delay or failure.</p>\n                </div>\n                <div>\n                    <br/>\n                    <h5><span className=\"tnc_num_idx\">17.        </span> CONSTRUCTION</h5>\n                    <p><span className=\"tnc_num_idx\">17.1.    </span> <b>Inconsistencies.</b> In the event of any inconsistency between the provisions of this Agreement and the Appendix-A, the provisions of the Appendix-A shall govern for purposes of such Appendix-A. The provisions of this Agreement and the Appendix-A shall supersede the provisions of any shrink-wrap, click wrap or other license provisions included with the Software.</p>\n                    <p><span className=\"tnc_num_idx\">17.2.    </span> <b>Modification.</b> The terms, conditions, covenants and other provisions of this Agreement may hereafter be modified, amended, supplemented or otherwise changed only by a written instrument (excluding e-mail or similar electronic transmissions) that specifically purports to do so and is physically executed by a duly authorized representative of each Party.</p>\n                    <p><span className=\"tnc_num_idx\">17.3.    </span> <b>Severability.</b> If a court of competent jurisdiction declares any provision of this Agreement to be invalid, unlawful or unenforceable as drafted, the Parties intend that such provision be amended and construed in a manner designed to effectuate the purposes of the provision to the fullest extent permitted by law. If such provision cannot be so amended and construed, it shall be severed, and the remaining provisions shall remain unimpaired and in full force and effect to the fullest extent permitted by law.</p>\n                </div>\n                <br/>\n                <p><b>By clicking the “Agree” button, Licensee hereby agrees to be bound by all the terms and conditions stated herein</b></p>\n            </div>\n            </ScrollBar>\n        }\n        close={()=>props.tcAction('decline')}\n        footer={\n            <>\n            <button onClick={()=>props.tcAction('Accept')}>Accept</button>\n            <button onClick={()=>props.tcAction('Decline')}>Decline</button>\n            </>\n        }\n    />\n    </div>\n)\n\nexport default TermsAndConditions;","import React, { useState, useEffect } from 'react';\nimport { Redirect, Link, useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport * as actionTypes from '../state/action';\nimport { SetProgressBar, BrowserFp, RedirectPage } from '../../global';\nimport StaticElements from '../components/StaticElements';\nimport TermsAndConditions from '../components/TermsAndConditions';\nimport * as api from '../api';\nimport \"../styles/BasePage.scss\";\n\n/*\n    Component: BasePage\n    Props: None\n    Uses: Renders the base page for avo assure\n    Todo: None\n*/\n\nconst BasePage = () => {\n\n    const [loginValidation, setLoginValidation] = useState(\"Loading Profile...\");\n    const [loginAgain, setLoginAgain] = useState(true);\n    const [redirectTo , setRedirectTo] = useState(null);\n    const [showTCPopup, setShowTCPopup] = useState(null);\n    const [userProfile, setUserProfile] = useState(null);\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    useEffect(()=>{\n        (async()=>{\n            const checkLogout = JSON.parse(window.sessionStorage.getItem('checkLoggedOut'));\n            window.localStorage.clear();\n            window.sessionStorage.clear();\n            if (checkLogout) {\n                if ((typeof(checkLogout) === \"object\") && (checkLogout.length === 2)) {\n                    if (checkLogout[1] === \"dereg\") setLoginValidation(\"Reason: User is deleted from Avo Assure\");\n                    else setLoginValidation(\"Your session has been terminated by \"+checkLogout[0]);\n                } else if ((typeof(checkLogout) === \"object\") && (checkLogout.length === 1)) {\n                    setLoginValidation(checkLogout[0]);\n                } else setLoginValidation(\"You Have Successfully Logged Out!\");\n                SetProgressBar(\"stop\");\n            }\n            else {\n                setLoginAgain(false);\n                try{\n                    let data = await api.validateUserState()\n                    SetProgressBar(\"stop\");\n                    setLoginValidation(\"Loading Profile...\");\n                    if (data === \"fail\") setLoginValidation(\"Failed to load user profile.\");\n                    else if (data === \"unauthorized\") setLoginValidation(\"User is not authorized to use Avo Assure.\");\n                    else if (data === \"badrequest\") setLoginValidation(\"User does not have sufficient permission to view this page.\");\n                    else if (data === \"nouser\") setLoginValidation(\"User profile not found in Avo Assure.\");\n                    else if (data === \"nouserprofile\") setLoginValidation(\"User profile not found in Authorization Server.\");\n                    else if (data === \"userLogged\") setLoginValidation(\"User is already logged in! Please logout from the previous session.\");\n                    else if (data === \"inValidCredential\" || data === \"invalid_username_password\") setLoginValidation(\"The username or password you entered isn't correct. Please try again.\");\n                    else if (data === \"noProjectsAssigned\") setLoginValidation(\"To Login, user must be allocated to a Domain and Project. Please contact Admin.\");\n                    else if (data === \"reload\") window.location.reload();\n                    else if (data === \"redirect\") setRedirectTo('/login');\n                    else if (data === \"Invalid Session\") {\n                        setLoginValidation(\"Your session has expired!\");\n                        setLoginAgain(true);\n                    } else {\n                        try{\n                            let userinfo = await api.loadUserInfo()\n                            if (userinfo === \"fail\") setLoginValidation(\"Failed to Login.\");\n                            else if (userinfo === \"Invalid Session\") {\n                                setLoginValidation(\"Your session has expired!\");\n                                setLoginAgain(true);\n                            } else {\n                                if (userinfo.tandc) {\n                                    setUserProfile(userinfo);\n                                    setShowTCPopup(true);\n                                }\n                                else loadProfile(userinfo)\n                            }\n                        }\n                        catch(err){\n                            setLoginValidation(\"Failed to Login.\");\n                            console.error(\"Fail to Load UserInfo. Error::\", err);    \n                        }\n                    }    \n                }\n                catch(err){\n                    const emsg = \"Failed to load user profile. Error::\";\n                    console.error(emsg, err);\n                    setLoginValidation(emsg);\n                    SetProgressBar(\"stop\");\n                }\n            }\n        })()\n        //eslint-disable-next-line\n    }, []);\n\n    const loadProfile = userinfo => {\n        window.localStorage.navigateScreen = userinfo.page;\n        dispatch({type:actionTypes.SET_DATEFORMAT, payload: userinfo.dateformat})\n        dispatch({type:actionTypes.SET_SR, payload: userinfo.rolename});\n        dispatch({type:actionTypes.SET_USERINFO, payload: userinfo});\n        SetProgressBar(\"start\");\n        setRedirectTo(`/${userinfo.page}`);\n    }\n\n    const tcAction = action => {\n        let fullName = userProfile[\"firstname\"] + \" \" + userProfile[\"lastname\"];\n\t\tlet email = userProfile[\"email_id\"];\n\t\tlet timeStamp = new Date().toLocaleString();\n\t\tlet bfp = BrowserFp()\n\t\tlet userData = {\n\t\t\t'fullname': fullName,\n\t\t\t'emailaddress': email,\n\t\t\t'acceptance': action,\n\t\t\t'timestamp': timeStamp,\n\t\t\t'browserfp': bfp\n        };\n        api.storeUserDetails(userData)\n\t\t.then(data => {\n\t\t\tif(data === \"Invalid Session\") {\n                setShowTCPopup(false);\n                RedirectPage(history);\n\t\t\t} else if (data !== \"success\") {\n                setLoginValidation(\"Failed to record user preference. Please Try again!\");\n                setShowTCPopup(false);\n                RedirectPage(history);\n            }\n            else {\n\t\t\t\tif (action === \"Accept\") loadProfile(userProfile);\n\t\t\t\telse {\n                    setLoginValidation(\"Please accept our terms and conditions to continue to use Avo Assure!\");\n                    setShowTCPopup(false);\n                    RedirectPage(history);\n                }\n\t\t\t}\n        })\n        .catch(error => {\n\t\t\tsetLoginValidation(\"Failed to record user preference. Please Try again!\");\n\t\t\tsetLoginAgain(false);\n            setShowTCPopup(false);\n\t\t\tconsole.error(\"Error updating user tnc preference\", error);\n        });\n        \n    }\n\n    return (\n        <>\n        {redirectTo ? <Redirect to={redirectTo} /> :\n        <>\n        { showTCPopup && <TermsAndConditions tcAction={tcAction}/> }\n        < StaticElements> \n            <div className=\"error-msg\">{loginValidation}</div>\n            {loginAgain && <span className=\"error-msg\">Click <Link to=\"/login\" className=\"base__redirect\">here</Link> to login again.</span>}\n        </ StaticElements>\n        </>\n        }\n        </>\n    );\n}\n\nexport default BasePage;","import React from 'react';\nimport LoginPage from './containers/LoginPage'\nimport BasePage from './containers/BasePage'\n\n/*Component App\n  use: defines components for each url\n*/\n\nconst Login = () => {\n  return (\n      <LoginPage/>\n  );\n}\n\nconst Base = () => {\n  return (\n      <BasePage/>\n  );\n}\n\nexport {Base};\nexport default Login;","import React ,  { Fragment} from 'react';\nimport { ActionBar } from '../../global'\nimport '../styles/LeftPanel.scss'\n\n\n/*Component LeftPanel\n  use: Admin Screen-Left Panel with multiple options\n  todo: Scrollbar add \n*/\n\nconst LeftPanel = (props) => {\n\n\tconst resetScreen = (screen) =>{\n\t\tvar change = {...props.resetMiddleScreen};\n\t\tvar value = change[screen];\n\t\tchange[screen] = !value;\n\t\tprops.setResetMiddleScreen(change);\n\t}\n\n    return (\n    <Fragment>\n\t\t<ActionBar>\n\t\t\t<div id=\"left-top-section\" className='left-top-section-div'>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><span><i id='managePanel' className='scrapeOnTxt'>Manage</i></span></li>\n                    <li><i id='userTab' title=\"Manage Users\" onClick={()=>{props.setShowEditUser(false);props.setMiddleScreen(\"createUser\");}} className=\"selectBrowser\">\n\t\t\t\t\t\t<span><span className={\"fa fa-user\" + ((props.middleScreen===\"createUser\") ? \"  selected-icon\" : \"\")}  ></span></span>User</i></li>\n                    <li><i id='tokenTab'  title=\"Manage Tokens\" onClick={()=>{props.setMiddleScreen(\"tokenTab\");resetScreen(\"tokenTab\")}} className=\"selectBrowser\" >\n\t\t\t\t\t\t<span><span className={\"fa fa-tags\" + ((props.middleScreen===\"tokenTab\") ? \" selected-icon\" : \"\")} ></span></span>Tokens</i></li>\n\t\t\t\t\t<li><i id='provisionTab' title=\"Manage Provision\" onClick={()=>{props.setMiddleScreen(\"provisionTa\");resetScreen(\"provisionTa\")}} className=\"selectBrowser\">\n\t\t\t\t\t\t<span><span className={'fa fa-cogs'+ ((props.middleScreen===\"provisionTa\") ? \" selected-icon\" : \"\")} ></span></span>ICE Provision</i></li>\n\t\t\t\t\t<li><i id='projectTab' title=\"Create/Update Project\" onClick={()=>{props.setMiddleScreen(\"projectTab\");resetScreen(\"projectTab\")}} className=\"selectBrowser\">\n\t\t\t\t\t\t<span><span className={'fa fa-briefcase'+ ((props.middleScreen===\"projectTab\") ? \" selected-icon\" : \"\")} ></span></span>Project</i></li>\n\t\t\t\t\t<li><i id='assignProjectTab' title=\"Assign Project\" onClick={()=>{props.setMiddleScreen(\"assignProjectTab\");resetScreen(\"assignProjectTab\");}} className=\"selectBrowser\">\n\t\t\t\t\t\t<span><span className={'fa fa-link'+ ((props.middleScreen===\"assignProjectTab\") ? \" selected-icon\" : \"\")} ></span></span>Assign Projects</i></li>\n\t\t\t\t\t<li><i id='CreateIcePool' title=\"ICE Pool\" onClick={()=>{props.setMiddleScreen(\"CreateIcePool\");resetScreen(\"CreateIcePool\");}} className=\"selectBrowser\">\n\t\t\t\t\t\t<span><img style={{height:'60px'}} src={\"static/imgs/CreateICEPool.png\"} alt={\"Create ICE Pool\"} className={((props.middleScreen===\"CreateIcePool\") ? \" selected-icon\" : \"\")} ></img></span><span>ICE Pool</span></i></li>\n\t\t\t\t\t<li className='userDivider'><i id='AllocateIcePool' alt={\"Allocate ICE Pool\"} onClick={()=>{props.setMiddleScreen(\"AllocateIcePool\");resetScreen(\"AllocateIcePool\");}} className=\"selectBrowser\">\n\t\t\t\t\t\t<span><img style={{height:'60px'}} src={\"static/imgs/AllocateICEPool.png\"} alt={\"Allocate ICE Pool\"} className={((props.middleScreen===\"AllocateIcePool\") ? \" selected-icon\" : \"\")} ></img></span><span>Allocate ICE Pool</span></i></li>\n\t\t\t\t\t<li><i id='gitConfigure' title=\"Manage Git Configuration\" onClick={()=>{props.setMiddleScreen(\"gitConfigure\");resetScreen(\"gitConfigure\")}} className=\"selectBrowser\" >\n\t\t\t\t\t\t<span><img style={{height:'47px'}} src={\"static/imgs/GitIcon.png\"} alt={\"Create Git Configuration\"}  className={((props.middleScreen===\"gitConfigure\") ? \" selected-icon\" : \"\")} ></img></span>Git Configuration</i></li>\n\t\t\t\t\t<li><i id='ldapConfigTab' title=\"Manage LDAP Configuration\" onClick={()=>{props.setMiddleScreen(\"ldapConfigTab\");resetScreen(\"ldapConfigTab\")}} className=\"selectBrowser\" >\n\t\t\t\t\t\t<span><span className={'fa fa-address-book' + ((props.middleScreen===\"ldapConfigTab\") ? \" selected-icon\" : \"\")} ></span></span>LDAP Configuration</i></li>\n\t\t\t\t\t<li><i id='samlConfigTab' title=\"Manage SAML Configuration\" onClick={()=>{props.setMiddleScreen(\"samlConfigTab\");resetScreen(\"samlConfigTab\")}} className=\"selectBrowser\" >\n\t\t\t\t\t\t<span><span className={'fa fa-lock'+ ((props.middleScreen===\"samlConfigTab\") ? \" selected-icon\" : \"\")}  ></span></span>SAML Configuration</i></li>\n\t\t\t\t\t<li><i id='oidcConfigTab' title=\"Manage OpenID Connect Configuration\" onClick={()=>{props.setMiddleScreen(\"oidcConfigTab\");resetScreen(\"oidcConfigTab\")}} className=\"selectBrowser\" >\n\t\t\t\t\t\t<span><span className={'fa fa-openid'+ ((props.middleScreen===\"oidcConfigTab\") ? \" selected-icon\" : \"\")}></span></span>OpenID Connect Configuration</i></li>\n\t\t\t\t\t<li><i id='emailConfigTab' title=\"Manage Email Server Configuration\" onClick={()=>{props.setMiddleScreen(\"emailConfigTab\");resetScreen(\"emailConfigTab\")}} className=\"selectBrowser\" >\n\t\t\t\t\t\t<span><span className={'fa fa-envelope'+ ((props.middleScreen===\"emailConfigTab\") ? \" selected-icon\" : \"\")}  ></span></span>Email Server Configuration</i></li>\n\t\t\t\t\t<li><i id='sessionTab' title=\"Session Management\" onClick={()=>{props.setMiddleScreen(\"sessionTab\");resetScreen(\"sessionTab\");}} className=\"selectBrowser\" >\n\t\t\t\t\t\t<span><span className={'fa fa-users'+ ((props.middleScreen===\"sessionTab\") ? \" selected-icon\" : \"\")} ></span></span>Session Management</i></li>\n\t\t\t\t\t<li className='left-top-section__preferencesTab'><i id='Preferences' title=\"Preferences\" onClick={()=>{props.setMiddleScreen(\"Preferences\");resetScreen(\"Preferences\")}} className=\"selectBrowser\" >\n\t\t\t\t\t\t<span><span className={'fa fa-sliders'+ ((props.middleScreen===\"Preferences\") ? \" selected-icon\" : \"\")} ></span></span>Preferences</i></li>\n                    </ul> \n\t\t\t</div>\n\t\t</ActionBar>\n    </Fragment>\n  );\n}\n\nexport default LeftPanel;","import axios from 'axios';\nimport {RedirectPage} from '../global'\nimport {history} from './index'\nimport {url} from '../../App'\n\n/* Component\n  api returns [[\"Admin\": \"\"],[\"Test Lead\": \"\"],[\"\": \"\"],[\"\": \"\"]...]\n*/\n\nexport const getUserRoles = async() => { \n    try{\n        const res = await axios(url+'/getUserRoles', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Failed to fetch user roles'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to fetch user roles'}\n    }\n}\n\n/* Component\n  api returns string \"sucess\" , \"fail\"\n*/\n\nexport const manageUserDetails = async(action, userObj) => { \n    try{\n        const res = await axios(url+'/manageUserDetails', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {action: action,user: userObj},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to \"+action+\" user.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to \"+action+\" user.\"}\n    }\n}\n\n/* Component\n  api returns [{name:\"\",_id:\"\"},{name:\"\",_id:\"\"},{name:\"\",_id:\"\"},{name:\"\",_id:\"\"},,,]\n*/\n\nexport const getLDAPConfig = async(action, args, opts) => { \n    try{\n        const res = await axios(url+'/getLDAPConfig', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {action: action,args: args,opts: opts},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        else if(res.status === \"fail\" ){\n            return {error:\"Failed to fetch LDAP server configurations.\"}\n        }\n        else if(res.status === \"insufficient_access\" ){\n            return {error:\"Either Credentials provided in LDAP server configuration does not have required privileges for fetching users or there is no such user\"}\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to fetch LDAP server configurations\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to fetch LDAP server configurations\"}\n    }\n}\n\n/* Component\n  api returns [{name:\"\",_id:\"\"},{name:\"\",_id:\"\"},{name:\"\",_id:\"\"},{name:\"\",_id:\"\"},,,]\n*/\n\nexport const getSAMLConfig = async(name) => { \n    try{\n        const res = await axios(url+'/getSAMLConfig', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {name: name},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        else if(res.status === \"fail\" ){\n            return {error:\"Failed to fetch SAML server configurations.\"}\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to fetch SAML server configurations\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to fetch SAML server configurations\"}\n    }\n}\n\n/* Component\n  api returns string ex. \"success\" \n*/\n\nexport const manageSAMLConfig = async(action, confObj) => { \n    try{\n        const res = await axios(url+'/manageSAMLConfig', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {action: action,conf: confObj},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to manage SAML server configurations\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to manage SAML server configurations\"}\n    }\n}\n\n/* Component\n  api returns [{name:\"\",_id:\"\"},{name:\"\",_id:\"\"},{name:\"\",_id:\"\"},{name:\"\",_id:\"\"},,,]\n*/\n\nexport const getOIDCConfig = async(name) => { \n    try{\n        const res = await axios(url+'/getOIDCConfig', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {name: name},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        else if(res.status === \"fail\" ){\n            return {error:\"Failed to fetch OpenID server configurations.\"}\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to fetch OpenID server configurations\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to fetch OpenID server configurations\"}\n    }\n}\n\n/* Component\n  api returns data in array - [{\"username\",\"id\",\"id\",\"userRole\"},{\"username\",\"id\",\"id\",\"userRole\"},,,]\n*/\n\nexport const getUserDetails = async(action, args) => { \n    try{\n        const res = await axios(url+'/getUserDetails', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {action: action,args: args},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\" ){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        else if(res.status === \"fail\" ){\n            return {error:\"Failed to fetch users.\"}\n        }\n        else if(res.status === \"empty\" ){\n            return {error:\"There are no users created yet.\"}\n        }\n        else if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to fetch users.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to fetch users.\"}\n    }\n}\n\nexport const restartService = async(i) => {\n    try{\n        const res = await axios(url+\"/restartService\", {\n            method : 'POST',\n            headers : {\n                'Content-type' : \"application/json\"\n            },\n            data: {id: i},\n            credentials : 'include'\n        });\n        if (res.status === 200) {\n            return res.data;\n        }\n        else{\n            console.log(res.status);\n        }\n    }\n    catch(err){\n        console.log(err)\n    }\n} \n\n/* Component\n  api returns array of available plugins - [\"\",\"\",\"\",..]\n*/\n\nexport const getAvailablePlugins = async() => { \n    try{\n        const res = await axios(url+'/getAvailablePlugins', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\" ){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }else if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to fetch available plugins.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to fetch available plugins.\"}\n    }\n}\n\n/* Component\n  api returns [{name: \"rolename\", plugins: {…}},{},{},]\n*/\n\nexport const getPreferences = async() => { \n    try{\n        const res = await axios(url+'/getPreferences', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to fetch Preferences.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to fetch Preferences.\"}\n    }\n}\n\n/* Component\n  api returns array containing domain names\n*/\n\nexport const getDomains_ICE = async() => { \n    try{\n        const res = await axios(url+'/getDomains_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\" ){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }else if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to fetch domains.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to fetch domains.\"}\n    }\n}\n\n/* Component\n  api returns string ex. \"success\" or {projectIds:[],projectNames:[]}\n*/\n\nexport const getNames_ICE = async(requestedids, idtype) => { \n    try{\n        const res = await axios(url+'/getNames_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {requestedids: requestedids,idtype: idtype},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\" ){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }else if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to get names.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to get names.\"}\n    }\n}\n\n/* Component\n  api returns string ex. \"success\"\n*/\n\nexport const createProject_ICE = async(createprojectObj) => { \n    try{\n        const res = await axios(url+'/createProject_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {createProjectObj: createprojectObj},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\" ){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }else if(res.status===200 && res.data !== \"fail\"){            \n            if(res.data === 'invalid_name_spl') return {error:\"Failed to create project. Special characters found in project/release/cycle name\"};\n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to create project.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to create project.\"}\n    }\n}\n\n/* Component\n  api returns {projectIds: [],projectNames:[]}\n*/\n\nexport const getDetails_ICE = async(idtype, requestedids) => { \n    try{\n        const res = await axios(url+'/getDetails_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {idtype: idtype,requestedids: requestedids},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\" ){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }else if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to fetch domains details.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to fetch domains details.\"}\n    }\n}\n\n/* Component\n  api returns string ex. \"success\"\n*/\n\nexport const updateProject_ICE = async(updateProjectObj, userDetails) => { \n    try{\n        const res = await axios(url+'/updateProject_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {updateProjectObj: updateProjectObj,\n                userDetails: userDetails},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\" ){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }else if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to update project.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to update project.\"}\n    }\n}\n\n/* Component\n  api returns [{name:\"\",_id:\"\"},{name:\"\",_id:\"\"},{name:\"\",_id:\"\"},{name:\"\",_id:\"\"},,,]\n*/\n\nexport const getAssignedProjects_ICE = async(getAssignProj) => { \n    try{\n        const res = await axios(url+'/getAssignedProjects_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {getAssignProj: getAssignProj},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\" ){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }else if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to fetch assigned projects.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to fetch assigned projects.\"}\n    }\n}\n\n/* Component\n  api returns string ex. \"success\"\n*/\n\nexport const assignProjects_ICE = async(assignProjectsObj) => { \n    try{\n        const res = await axios(url+'/assignProjects_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {assignProjectsObj: assignProjectsObj},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\" ){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }else if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to assign projects.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to assign projects.\"}\n    }\n}\n\n/* Component\n  api returns an object containing clientData: [] sessionData: []\n*/\n\nexport const manageSessionData = async(action, user, key, reason) => { \n    try{\n        const res = await axios(url+'/manageSessionData', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {action: action,\n                    user: user,\n                    key: key,\n                    reason: reason},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to manage session Data.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to manage session Data.\"}\n    }\n}\n\n/* Component\n  api returns [{icename: \"\",icetype: \"\",provisionedon: \"\",provisionedto: \"\",status: \"\",token: \"\",username: \"\",_id: \"\"},{...},]\n*/\n\nexport const fetchICE = async(args) => { \n    try{\n        const res = await axios(url+'/fetchICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {user: args},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if( res.status === \"empty\"){\n            return {error:\"There are no ICE provisioned\"};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to fetch ICE Details\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to fetch ICE Details\"}\n    }\n}\n\n/* Component\n  api returns token or message(string)\n*/\n\nexport const provisions = async(tokeninfo) => { \n    try{\n        const res = await axios(url+'/provisionIce', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {tokeninfo:tokeninfo},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 ){    \n            if(res.data === 'DuplicateIceName') return {error:\"ICE Provisioned Failed!<br/>ICE name or User already exists\"};\n            if(res.data === 'invalid_splname') return {error:\"ICE Provisioned Failed!<br/>Special characters found in icename\"};\n            return res.data;\n        }\n        console.error(res.data)\n    }catch(err){\n        console.error(err)\n        return {error:\"ICE Provisioning Failed\"}\n    }\n}\n\n/* Component\n  api returns string ex. \"success\" \n*/\n\nexport const manageOIDCConfig = async(action, confObj) => { \n    try{\n        const res = await axios(url+'/manageOIDCConfig', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {action: action, conf: confObj},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to manage OIDC configuration.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to manage OIDC configuration.\"}\n    }\n} \n\n/* Component\n  api returns [{deactivated: \"\",expireson: \"\",generatedon: \"\",icetype: \"\",name: \"\",projects: [],type: \"\",userid: \"\",_id: \"\"},{...},]\n*/\n\n\nexport const getCIUsersDetails = async(CIUser) => { \n    try{\n        const res = await axios(url+'/getCIUsersDetails', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {CIUser: CIUser},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\" ){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        else if(res.status === \"fail\" ){\n            return {error:\"Failed to fetch user details.\"}\n        }\n        else if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to fetch user details.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to fetch user details.\"}\n    }\n} \n\n/* Component\n  api returns token\n*/\n\nexport const manageCIUsers = async(action,CIUser) => { \n    try{\n        const res = await axios(url+'/manageCIUsers', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {action: action, CIUser: CIUser},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            if(res.data === 'invalid_name_special') return {error:\"Failed to generate token, Special characters found in token name\"};\n            if(res.data === 'invalid_past_time') return {error:\"Expiry time should be 8 hours more than current time\"};\n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to manage user\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to manage user\"}\n    }\n}\n\nexport const testLDAPConnection = async(auth, urlLDAP, baseDN, bindDN, bindCredentials, secure, cert) => { \n    try{\n        const res = await axios(url+'/testLDAPConnection', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {ldapURL: urlLDAP,\n                    baseDN: baseDN,\n                    secure: secure,\n                    tlsCert: cert,\n                    authType: auth,\n                    username: bindDN,\n                    password: bindCredentials},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Test Connection Failed!\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Test Connection Failed!\"}\n    }\n} \n\n\nexport const manageLDAPConfig = async(action, confObj) => { \n    try{\n        const res = await axios(url+'/manageLDAPConfig', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {action: action, conf: confObj},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to manage LDAP config!\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to manage LDAP config!\"}\n    }\n}\n\nexport const updatePool = async(data) => { \n    try{\n        const res = await axios(url+'/updatePool', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: data,\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){ \n            if(res.data === 'invalid_splname') return {error:\"Failed to update ICE Pool. Special characters found in poolname.\"};\n            if(res.data === 'success')return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to Update ICE pool!\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to Update ICE pool!\"}\n    }\n} \n\nexport const deleteICE_pools = async(data) => { \n    try{\n        const res = await axios(url+'/deleteICE_pools', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: data,\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){ \n            if(res.data === 'success')return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to Delete ICE pool!\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to Delete ICE pool!\"}\n    }\n}\n\nexport const createPool_ICE = async(data) => { \n    try{\n        const res = await axios(url+'/createPool_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: data,\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){ \n            if(res.data === 'Pool exists') return {error:\"Pool name already exist!\"};\n            if(res.data === 'invalid_splname') return {error:\"Special characters found in poolname.\"};\n            if(res.data === 'success')return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to create ICE pool!\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to create ICE pool!\"}\n    }\n}\n\n\nexport const getICEinPools = async(data) => { \n    try{\n        const res = await axios(url+'/getICEinPools', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: data,\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){ \n            if(res.data === \"empty\") return{error:\"No ICE available!\"}\n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to fetch ICE!\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to fetch ICE!\"}\n    }\n}\n\nexport const getAvailable_ICE = async(data) => { \n    try{\n        const res = await axios(url+'/getAvailable_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: data,\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){ \n            if(res.data.length<1) return{error:\"No active ICE available!\"}\n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to fetch available ICE!\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to fetch available ICE!\"}\n    }\n}\n\nexport const clearQueue = async(data) => { \n    try{\n        const res = await axios(url+'/clearQueue', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: data,\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){ \n            if(res.data === 'empty') return {error:\"Queue is already empty.\"} \n            if(res.data === 'success') return res.data\n        }\n        console.error(res.data)\n        return {error:\"Failed Clear Queue!\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed Clear Queue!\"}\n    }\n} \n\nexport const getPools = async(data) => { \n    try{\n        const res = await axios(url+'/getPools', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: data,\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){ \n            if(res.data === 'empty' || Object.keys(res.data).length<1) return {val:\"empty\",error:\"There are no ICE pools created yet.\"}           \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to fetch pools!\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to fetch pools!\"}\n    }\n} \n\n//{\"action\":\"provider\",\"channel\":\"email\",\"args\":\"smtp\"}\nexport const getNotificationChannels = async(data) => { \n    try{\n        const res = await axios(url+'/getNotificationChannels', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: data,\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){  \n            // if(res.data === 'empty')return {error : \"Fail to fetch configured details for selected provider.\"}          \n            // return {\"_id\":\"5fab88ae911ebf83599cc1bc\",\"active\":true,\"appurl\":\"https://srv01nineteen68\",\"auth\":false,\"channel\":\"email\",\"host\":\"10.41.31.131\",\"name\":\"smtpconf\",\"pool\":{\"enable\":true,\"maxconnections\":10,\"maxmessages\":120},\"port\":587,\"provider\":\"smtp\",\"proxy\":{\"auth\":false,\"enable\":false,\"pass\":\"\",\"url\":\"\",\"user\":\"\"},\"sender\":{\"email\":\"avoassure-alerts@avoautomation.com\",\"name\":\"Avo Assure Alerts\"},\"timeouts\":{\"connection\":240000,\"greeting\":60000,\"socket\":1200000},\"tls\":{\"insecure\":\"true\",\"security\":\"auto\"}}\n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Fail to fetch configured details for selected provider.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Fail to fetch configured details for selected provider.\"}\n    }\n}\n\nexport const manageNotificationChannels = async(data) => { \n    try{\n        const res = await axios(url+'/manageNotificationChannels', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: data,\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){  \n            if(res.data === 'empty')return {error : \"Fail to update configuration for selected provider.\"}          \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Fail to update configuration for selected provider.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Fail to update configuration for selected provider.\"}\n    }\n}\n\nexport const testNotificationChannels = async(data) => { \n    try{\n        const res = await axios(url+'/testNotificationChannels', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: data,\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){  \n            if(res.data === 'empty') return \"Fail to fetch configured details for selected provider.\";\n            else if (res.data === \"invalidprovider\")  return \"Selected Provider is not supported yet!\";\n            else if (res.data === \"invalidrecipient\") return \"Recipient address is invalid!\";\n            else if (res.data === \"success\") return \"Test Email Sent!\";\n        }\n        console.error(res.data)\n        return {error:\"Failed! Re-check the configuration.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed! Re-check the configuration.\"}\n    }\n}\n\n\n/* Component Session Management\n  api returns\n*/\n\nexport const fetchLockedUsers = async() => { \n    try{\n        const res = await axios(url+'/fetchLockedUsers', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\" ){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }else if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to fetch locked users.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to fetch locked users\"}\n    }\n}\n\n/* Component Session Management\n  api returns\n*/\n\nexport const unlockUser = async(user) => { \n    try{\n        const res = await axios(url+'/unlockUser', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {user: user},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\" ){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }else if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to unlocked users.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to unlocked users\"}\n    }\n}\n\n/* Component \n  api returns\n*/\n\nexport const gitSaveConfig = async(action, userId,projectId,gitAccToken,gitUrl) => { \n    try{\n        const res = await axios(url+'/gitSaveConfig', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {action: action,\n                    userId: userId,\n                    projectId: projectId,\n                    gitAccToken: gitAccToken,\n                    gitUrl: gitUrl},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\" ){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }else if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Error while Git \"+action+ \" Configuration\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Error while Git \"+action+ \" Configuration\"}\n    }\n}\n\n\n/* Component GitConfig\n  api returns\n*/\n\nexport const gitEditConfig = async(userId, projectId) => { \n    try{\n        const res = await axios(url+'/gitEditConfig', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {userId: userId,\n\t\t\t\tprojectId: projectId},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\" ){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }else if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to fetch git configurations.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to fetch git configurations.\"}\n    }\n}","import {useEffect} from 'react';\n\nfunction useOnClickOutside(ref, handler) {\n    useEffect(\n      () => {\n        const listener = event => {\n          // Do nothing if clicking ref's element or descendent elements\n          if (!ref.current || ref.current.contains(event.target)) {\n            return;\n          }\n  \n          handler(event);\n        };\n  \n        document.addEventListener('mousedown', listener);\n        document.addEventListener('touchstart', listener);\n  \n        return () => {\n          document.removeEventListener('mousedown', listener);\n          document.removeEventListener('touchstart', listener);\n        };\n      },\n      [ref, handler]\n    );\n  }\n\nexport default useOnClickOutside;","import React from 'react';\nimport AdminHome from './containers/AdminHome'\nimport { useHistory } from 'react-router-dom';\nexport var history\n\n/*Component App\n  use: defines components for each url\n*/\n\nconst Admin = () => {\n  history =  useHistory()\n  return (\n      <AdminHome/>\n  );\n}\n\nexport default Admin;","import React, {useEffect} from 'react';\nimport ScheduleHome from './containers/ScheduleHome'\nimport { useHistory } from 'react-router-dom';\nimport {RedirectPage} from '../global'\nexport var history\n\n/*Component App\n  use: defines components for each url\n*/\n\nconst Schedule = () => {\n  history = useHistory();\n\n  useEffect(()=>{\n    if(window.localStorage['navigateScreen'] !== \"scheduling\"){\n        RedirectPage(history);\n    }\n  }, []);\n  \n  return (\n      <ScheduleHome/>\n  );\n}\n\nexport default Schedule;","const ValidationExpression = (value,id) =>{\n    \n    var regex;\n    if (id === 'userName')\n        // eslint-disable-next-line\n        regex = /[\\\\\\~`|;:\"',<>?/%*()+=]/g;\n    else if (['ldapServerName', 'samlServerName', 'oidcServerName', 'poolName','GitToken'].includes(id))\n        regex = /[^a-zA-Z0-9]/g;\n    else if (['iceName', 'tokenName', 'emailServerName'].includes(id))\n        regex = /[^a-zA-Z0-9 \\n]/g;\n    else if (id === \"password\")\n        regex = /\\s/g;\n    else if (id === \"email\")\n        regex = /[^a-zA-Z0-9@._-]/g;\n    else if (['projectName', 'releaseTxt', 'cycleTxt'].includes(id))\n        regex = /[~`%*()+=|:;\"'?><,\\/\\\\]/g;\n    else if(id === \"optimazationInput\")\n        regex = /[^0-9]/g;\n    else\n        return value;\n    var replacedValue = value.replace(regex, \"\");\n    return replacedValue;\n}\n\nexport default ValidationExpression;","import React ,  { Fragment,  useRef, useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {ScrollBar} from '../../global' \nimport * as actionTypes from '../state/action';\nimport '../styles/CreateLanding.scss';\nimport useOnClickOutside from './UseOnClickOutside'\nimport ValidationExpression from '../../global/components/ValidationExpression';\n\n/*Component CreateLanding\n  use: renders create New User Landing page\n  todo: \n*/\n    \nconst CreateLanding = (props) => {\n    const dispatch = useDispatch()\n    const userConf = useSelector(state=>state.admin.userConf)\n    const node = useRef();\n\n    useEffect(()=>{\n        if(document.getElementById(\"confServer\") !== null)\n            document.getElementById(\"confServer\").selectedIndex = \"0\";  \n    },[userConf.confServerList])\n\n    useOnClickOutside(node, () => {props.setShowDropdown(!props.showDropdown);props.click({query:'retaintype'});});\n\n    const userNameChange = (value) => {\n        value = ValidationExpression(value.toLowerCase(),\"userName\")\n        dispatch({type:actionTypes.UPDATE_INPUT_USERNAME,payload:value})\n    }\n\n    return (\n        <Fragment>\n            <div className=\"adminActionBtn\">\n                <button data-test=\"editButton\" className=\" a__btn pull-right \" onClick={()=>{props.setShowEditUser(true);props.edit();}}  title=\"Edit User\">Edit</button>\n                <button data-test=\"createButton\" className=\" a__btn pull-right Create-User__btn btn-create-cust\"  onClick={()=>{props.manage({action:\"create\"})}} disabled={userConf.nocreate} title=\"Create User\" >Create</button>\n                <button data-test=\"clearButton\" className=\" a__btn pull-right Create-User__btn btn-create-cust\" title=\"Clear\" onClick={()=>{props.click();dispatch({type:actionTypes.UPDATE_TYPE,payload:\"inhouse\"})}}  >Clear</button>               \n            </div>\n\n            <div className=\"Create-outer form-group__conv-create\" >\n                <div className=\"selectRole-create adminControl-create\">\n\t\t\t\t\t<label data-test=\"userTypeLabel\" className=\"leftControl-create primaryRole-create\">User Type</label>\n\t\t\t\t\t<select data-test=\"userTypeDropdown\" value={userConf.type} onChange={(event)=>{props.click(); props.selectUserType({type:event.target.value});dispatch({type:actionTypes.UPDATE_TYPE,payload:event.target.value});}} className='adminSelect-create form-control__conv-create ' id=\"userTypes-create\"   >\n\t\t\t\t\t\t<option value=\"inhouse\" >Default</option>\n\t\t\t\t\t\t<option value=\"ldap\">LDAP</option>\n\t\t\t\t\t\t<option value=\"saml\">SAML</option>\n\t\t\t\t\t\t<option value=\"oidc\">OpenID</option>\n\t\t\t\t\t</select>\n                </div>\n\n                {(userConf.type !== \"inhouse\")?\n                        <div className=\"adminControl-create\" >\n                            <select data-test=\"confServer\" defaultValue={\"\"} onChange={(event)=>{props.clearForm();dispatch({type:actionTypes.UPDATE_SERVER,payload:event.target.value});}} className={props.confServerAddClass?'adminSelect-create  form-control__conv-create selectErrorBorder confServer-cust':'adminSelect-create  form-control__conv-create confServer-cust'} id=\"confServer\">\n                                <option key=\"0\" disabled={true} value=\"\" >Select Server</option>                                \n                                {userConf.confServerList.map((srv,index) => (      \n                                    <option key={index} value={srv.name} disabled={userConf.confExpired===srv.name}>{srv.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                    : null\n                }\n\n                {(userConf.type === \"ldap\")?\n                    <Fragment>\n                        <div data-test=\"userLDAPFetch\" className=\"userLDAPFetch adminControl-create\">\n                            <div className=\"Create-outer Create-outer-cust\">\n                                <label className=\"adminFormRadio\">\n                                    <input data-test=\"ldapRadioMap\" checked={userConf.ldap.fetch===\"map\"} type=\"radio\"  value=\"map\" onChange={()=>{dispatch({type:actionTypes.UPDATE_LDAP_FETCH,payload:\"map\"});props.ldapSwitchFetch({userConf_ldap_fetch:\"map\"});}} name=\"ldapFetch\" disabled={userConf.server === ''} />\n                                    <span >Map New User</span>\n                                </label>\n                                <label className=\"adminFormRadio\">\n                                    <input data-test=\"ldapRadioImport\" checked={userConf.ldap.fetch===\"import\"} type=\"radio\" value=\"import\" onChange={()=>{dispatch({type:actionTypes.UPDATE_LDAP_FETCH,payload:\"import\"});props.ldapSwitchFetch({userConf_ldap_fetch:\"import\"});}} name=\"ldapFetch\" disabled={userConf.server === ''}/>\n                                    <span >Import User</span>\n                                </label>\n                            </div>\n                            {(userConf.ldap.fetch !== 'import')?\n                                <div className=\"userForm-create\">\n                                    <button data-test=\"fetchButtonLdap\" title=\"Fetch\" disabled={userConf.server === ''} onClick={()=>{props.ldapGetUser();}} className=\" a__btn pull-right  Create-User__btn btn-disabled\" >Fetch</button>\n                                    <input data-test=\"userDomainName\" type=\"text\" autoComplete=\"off\" id=\"ldapDirectory\" name=\"ldapDirectory\" value={userConf.ldap.user} onChange={(event)=>{dispatch({type:actionTypes.UPDATE_LDAP_USER,payload:event.target.value})}}  className={props.ldapDirectoryAddClass?((props.ldapDirectoryAddClass===\"selectErrorBorder\")?\"middle__input__border-create form-control__conv-create form-control-custom-create create selectErrorBorder\":\"middle__input__border-create form-control__conv-create form-control-custom-create create inputErrorBorder\"):\"middle__input__border-create form-control__conv-create form-control-custom-create create\"}  placeholder=\"User Domain Name\"/>\n                                </div>\n                                :null\n                            }\n                            {(userConf.ldap.fetch === 'import')?\n                                <div className=\"dropdown dropdown-scroll userForm-create\" >\n                                    <input data-test=\"userListInput\" value={userConf.ldapUserFilter} onChange={(event)=>{dispatch({type:actionTypes.UPDATE_LDAP_USER_FILTER,payload:event.target.value});props.searchFunctionLdap(event.target.value);}} onClick={()=>{props.click({query:'retaintype'});props.setShowDropdown(!props.showDropdown);}}  className={props.ldapDirectoryAddClass?((props.ldapDirectoryAddClass===\"selectErrorBorder\")?\"btn btn-users dropdown-toggle selectErrorBorder search-cust c__search-dropdown\":\"btn btn-users dropdown-toggle inputErrorBorder  search-cust c__search-dropdown\"):\"btn btn-users dropdown-toggle search-cust c__search-dropdown\"}    type=\"text\" autoComplete=\"off\" id=\"ldapDirectory\" data-toggle=\"dropdown\" placeholder=\"Search User..\"></input>\n                                    {(props.showDropdown && userConf.ldapAllUserList!==[])?\n                                    <ul ref={node} className=\" dropdown-menu-edit dropdown-menu-users-ldap create-user__dropdown ldapDirectory-cust\" role=\"menu\" aria-labelledby=\"ldapDirectory\" >\n                                    <ScrollBar scrollId='ldap' thumbColor=\"#929397\" >\n                                        {props.ldapUserList.map((luser,index) => (      \n                                            <li index={index} role=\"presentation\" onClick={()=>{props.setShowDropdown(!props.showDropdown);dispatch({type:actionTypes.UPDATE_LDAP_USER,payload:luser.value});dispatch({type:actionTypes.UPDATE_LDAP_USER_FILTER,payload:luser.html});props.ldapGetUser({luser:luser.value});}} value={luser.value} className=\"ldap-user__li\">{luser.html}</li>\n                                        ))}\n                                    </ScrollBar>\n                                    </ul>\n                                    :null}\n                                </div>\n                            :null}\n                        </div> \n                    </Fragment>\n                    : null\n                }\n\n                <div className='userForm-create adminControl-create'>\n                    <input data-test=\"userName-input__create\" type=\"text\" autoComplete=\"User-name\" id=\"userName\" value={userConf.userName} onChange={(event)=>{userNameChange(event.target.value)}} name=\"userName\" maxLength=\"100\" className={props.userNameAddClass?((props.userNameAddClass===\"selectErrorBorder\")?\"middle__input__border-create form-control-custom-create form-control__conv-create  selectErrorBorder username-cust\":\"middle__input__border-create form-control-custom-create form-control__conv-create username-cust inputErrorBorder\"):\"username-cust middle__input__border-create form-control-custom-create form-control__conv-create   \"} placeholder=\"User Name\"/>\n                </div>\n\n                <div className='leftControl-create adminControl-create'>\n                    <input data-test=\"firstName-input__create\" type=\"text\" autoComplete=\"First-name\" name=\"firstname\" id=\"firstname\" value={userConf.firstname} onChange={(event)=>{dispatch({type:actionTypes.UPDATE_INPUT_FIRSTNAME,payload:event.target.value})}} maxLength=\"100\" className={props.firstnameAddClass?\"middle__input__border-create form-control__conv-create form-control-custom-create inputErrorBorder\":\"middle__input__border-create form-control__conv-create form-control-custom-create \"} placeholder=\"First Name\"/>\n                </div>\n                <div className='rightControl-create adminControl-create'>\n                    <input data-test=\"lastName-input__create\" type=\"text\" autoComplete=\"Last-name\" name=\"lastname\" id=\"lastname\" value={userConf.lastname} onChange={(event)=>{dispatch({type:actionTypes.UPDATE_INPUT_LASTNAME,payload:event.target.value})}} maxLength=\"100\" className={props.lastnameAddClass?\"middle__input__border-create form-control__conv-create form-control-custom-create inputErrorBorder\":\"middle__input__border-create form-control__conv-create form-control-custom-create  \"} placeholder=\"Last Name\"/>\n                </div>\n            </div>\n        </Fragment>\n    )\n}  \n\nexport default CreateLanding;","import React ,  { Fragment , useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actionTypes from '../state/action';\nimport '../styles/EditLanding.scss';\nimport useOnClickOutside from './UseOnClickOutside'\nimport {ScrollBar, ModalContainer} from '../../global' \n\n/*Component EditLanding\n  use: renders edit New User Landing page\n  todo: \n*/\n    \nconst EditLanding = (props) => {\n    const dispatch = useDispatch()\n    const userConf = useSelector(state=>state.admin.userConf)\n    const [showDeleteModal,setshowDeleteModal] = useState(false)\n    const node = useRef();\n\n    useOnClickOutside(node, () => props.setShowDropdownEdit(!props.showDropdownEdit));\n\n    return (\n        <Fragment>\n            <div className=\"adminActionBtn\">\n                <button data-test=\"updateButton\" className=\" a__btn pull-right Create-User__btn_edit\" onClick={()=>props.manage({action:'update'})} disabled={userConf.userIdName===''} title=\"Update User\">Update</button>\n                <button data-test=\"deleteButton\" className=\" a__btn pull-right Create-User__btn_edit\" onClick={()=>{setshowDeleteModal(true)}} disabled={userConf.userIdName===''} style={{marginRight:\"10px\"}} title=\"Delete Configuration\">Delete</button>           \n            </div>\n\n            <div className=\"col-xs-9 \" style={{paddingTop:\"5%\"}}>\n                <div className='userForm-edit adminControl-edit'>\n                    <button title={userConf.fType} className=\"userTypeBtn_conv-edit \" style={{margin:\"4px 0\",right:\"0\",cursor:\"default\"}}>{userConf.fType}</button>\n                    <input data-test=\"userListInputEdit\" list=\"allUsersListauto\" className=\" btn-users edit-user-dropdown-edit\" onClick = {()=>{props.click();props.setShowDropdownEdit(!props.showDropdownEdit);props.setAllUserFilList(userConf.allUsersList);}} type=\"text\"  id=\"userIdName\"  onChange={(event)=>{dispatch({type:actionTypes.UPDATE_ALL_USER_FILTER,payload:event.target.value});props.searchFunctionUser(event.target.value);}} value={userConf.allUserFilter}  placeholder=\"Search User..\" autoComplete=\"none\"/>\n                    {(props.showDropdownEdit && userConf.allUsersList!==[])?\n                        <div ref={node} className=\" dropdown-menu-edit dropdown-menu-users-edit create-user__dropdown c__usersList\" role=\"menu\" style={{}}>\n                            <ScrollBar scrollId='allUsersListauto' thumbColor=\"#929397\" >\n                            {props.allUserFilList.map((uid,index) => (  \n                                <option key={index} role=\"presentation\" onClick = {()=>{props.setShowDropdownEdit(!props.showDropdownEdit);dispatch({type:actionTypes.UPDATE_USERIDNAME,payload:uid[1]+';'+uid[0]});dispatch({type:actionTypes.UPDATE_ALL_USER_FILTER,payload:uid[0]});props.getUserData({user_idName:uid[1]+';'+uid[0]});}} value={uid[1] +\";\"+uid[0]} className=\"user-select__option\"> {uid[0]}</option> \n                            ))}\n                            </ScrollBar>\n                        </div>\n                        :null\n                    }\n                </div>\n\n                {(userConf.type !== \"inhouse\"  && userConf.userIdName!=='')?\n                    <div className=\"adminControl-edit\" >\n                        <select onChange={(event)=>{props.clearForm();dispatch({type:actionTypes.UPDATE_SERVER,payload:event.target.value});}} className={props.confServerAddClass?'adminSelect-edit  form-control__conv-edit selectErrorBorder':'adminSelect-edit  form-control__conv-edit'} id=\"confServer\" style={{marginLeft:\"0\",width:\"100%\"}}>\n                            {userConf.confServerList.map((srv,index) => (      \n                                <option key={index} value={srv.name} selected={srv.name===userConf.server} disabled={userConf.confExpired===srv.name}>{srv.name}</option>\n                            ))}\n                        </select>\n                    </div>\n                    : null\n                }\n\n                {( userConf.userIdName!=='' && userConf.type === \"ldap\")?\n                    \n                    <div className=\"userForm-edit\" style={{display:\"inline-flex\"}}>\n                        <input type=\"text\" autoComplete=\"off\" id=\"ldapDirectory\" name=\"ldapDirectory\" value={userConf.ldap.user} onChange={(event)=>{dispatch({type:actionTypes.UPDATE_LDAP_USER,payload:event.target.value})}}  className={props.ldapDirectoryAddClass?((props.ldapDirectoryAddClass===\"selectErrorBorder\")?\"middle__input__border-edit form-control__conv-edit form-control-custom-edit create selectErrorBorder\":\"middle__input__border-edit form-control__conv-edit form-control-custom-edit create inputErrorBorder\"):\"middle__input__border-edit form-control__conv-edit form-control-custom-edit create\"}  placeholder=\"User Domain Name\"/>\n                        <button title=\"Fetch\" disabled={userConf.server === ''} onClick={()=>{props.ldapGetUser();}} className=\" a__btn pull-right  Create-User__btn_edit btn-disabled\" >Fetch</button>\n                    </div>\n                    :null\n                }\n                <div className='leftControl-edit adminControl-edit'>\n                    <input data-test=\"firstName-input__edit\" type=\"text\" autoComplete=\"First-name\" name=\"firstname\" id=\"firstname\" value={userConf.firstname} onChange={(event)=>{dispatch({type:actionTypes.UPDATE_INPUT_FIRSTNAME,payload:event.target.value})}} maxLength=\"100\" className={props.firstnameAddClass?\"middle__input__border-edit form-control__conv-edit form-control-custom-edit  inputErrorBorder\":\"middle__input__border-edit form-control__conv-edit form-control-custom-edit \"} placeholder=\"First Name\"/>\n                </div>\n                <div className='rightControl-edit adminControl-edit'>\n                    <input data-test=\"lastName-input__edit\" type=\"text\" autoComplete=\"Last-name\" name=\"lastname\" id=\"lastname\" value={userConf.lastname} onChange={(event)=>{dispatch({type:actionTypes.UPDATE_INPUT_LASTNAME,payload:event.target.value})}} maxLength=\"100\" className={props.lastnameAddClass?\"middle__input__border-edit form-control__conv-edit form-control-custom-edit inputErrorBorder\":\"middle__input__border-edit form-control__conv-edit form-control-custom-edit   \"} placeholder=\"Last Name\"/>\n                </div>\n            </div>\n            {showDeleteModal?\n                <ModalContainer title=\"Delete User\" footer={submitModalButtons(props.manage, setshowDeleteModal)} close={()=>{setshowDeleteModal(false);}} content= \"Are you sure you want to delete ? All task assignment information and ICE provisions will be deleted for this user.\" modalClass=\" modal-sm\" />\n            :null} \n        </Fragment>\n    )\n}  \n\nconst submitModalButtons = (manage, setshowDeleteModal) => {\n    return(\n        <div>\n            <button onClick={()=>{manage({action:\"delete\"});setshowDeleteModal(false);}} type=\"button\" className=\"edit__modal_button\" >Yes</button>\n            <button type=\"button\" onClick={()=>{setshowDeleteModal(false);}} >No</button>\n        </div>\n    )\n}\n\nexport default EditLanding;","import React, { Fragment, useState, useEffect , useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {ScreenOverlay, PopupMsg, ScrollBar} from '../../global' \nimport {getUserRoles, manageUserDetails, getLDAPConfig, getSAMLConfig, getOIDCConfig, getUserDetails, fetchICE, manageSessionData} from '../api';\nimport * as actionTypes from '../state/action';\nimport '../styles/CreateUser.scss'\nimport CreateLanding from '../components/CreateLanding';\nimport EditLanding from '../components/EditLanding';\nimport useOnClickOutside from '../components/UseOnClickOutside'\nimport ValidationExpression from '../../global/components/ValidationExpression';\n\n/*Component CreateUser\n  use: defines Admin middle Section for create user\n  ToDo:\n*/\n\nconst CreateUser = (props) => {\n    const dispatch = useDispatch()\n    const userConf = useSelector(state=>state.admin.userConf)\n    \n    const node = useRef();\n    const [toggleAddRoles,setToggleAddRoles] = useState(false)\n    const [showDropdown,setShowDropdown] = useState(false)\n    const [showDropdownEdit,setShowDropdownEdit] = useState(false)\n    const [userNameAddClass,setUserNameAddClass] = useState(false)\n    const [firstnameAddClass,setfirstnameAddClass] = useState(false)\n    const [lastnameAddClass,setLastnameAddClass] = useState(false)\n    const [confirmPasswordAddClass,setConfirmPasswordAddClass] = useState(false)\n    const [emailAddClass,setEmailAddClass] = useState(false)\n    const [ldapDirectoryAddClass,setLdapDirectoryAddClass] = useState(false)\n    const [userIdNameAddClass,setUserIdNameAddClass] = useState(false)\n    const [userRolesAddClass,setUserRolesAddClass] = useState(false)\n    const [confServerAddClass,setConfServerAddClass] = useState(false)\n    const [passwordAddClass,setPasswordAddClass] = useState(false)\n    const [allUserFilList,setAllUserFilList] = useState(userConf.allUsersList)\n    const [ldapUserList,setLdapUserList] = useState([])\n    const [loading,setLoading] = useState(false)\n    const [popupState,setPopupState] = useState({show:false,title:\"\",content:\"\"})\n    \n    useEffect(()=>{\n        \n        click();\n        dispatch({type:actionTypes.UPDATE_TYPE,payload:\"inhouse\"});\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[props.resetMiddleScreen[\"createUser\"],props.showEditUser,props.MiddleScreen])\n\n    useOnClickOutside(node, () => setToggleAddRoles(false));\n\n    const displayError = (error) =>{\n        setLoading(false)\n        setPopupState({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n\n    //Fetch UserRoles\n    const updateUserRoles = (props) =>{\n        (async()=>{\n            var res = await getUserRoles()\n            if(res.error){displayError(res.error);return;}\n            else if(res!==undefined){\n                res.sort(function(a,b){ return a[0] >  b[0]; });\n                var allAddRoles = res.filter((e)=> (e[0].toLowerCase() !== \"admin\"))\n                dispatch({type:actionTypes.UPDATE_ALLROLES,payload:res})\n                dispatch({type:actionTypes.UPDATE_ALLADDROLES,payload:allAddRoles})\n            }\n        })()\n    }\n\n    //Transaction Activity for Create/ Update/ Delete User button Action\n    const manage = (props) =>{\n        const action = props.action;\n        if (!validate({action:action})) return;\n        const bAction = action.charAt(0).toUpperCase() + action.substr(1);\n        const uType = userConf.type;\n        const addRole = [];\n        for (let role in userConf.addRole) {\n            if (userConf.addRole[role]) addRole.push(role);\n        }\n        const createdbyrole = userConf.allRoles.filter((e)=> (e[0].toLowerCase() === \"admin\"));;\n        var userObj = {\n            userid: userConf.userId,\n            username: userConf.userName,\n            password: userConf.passWord,\n            firstname: userConf.firstname,\n            lastname: userConf.lastname,\n            email: userConf.email,\n            role: userConf.role,\n            addRole: addRole,\n            type: uType,\n            createdbyrole: createdbyrole,\n            server: userConf.server\n        };\n        if (uType===\"ldap\") userObj.ldapUser = userConf.ldap.user;\n        setLoading(bAction.slice(0,-1)+\"ing User...\");\n        \n        \n        (async()=>{\n            try{\n                var data = await manageUserDetails(action, userObj);\n                if(data.error){displayError(data.error);return;}\n                setLoading(false);\n                if(data === \"success\") {\n                    if (action === \"create\") click();\n                    else edit();\n                    setPopupState({show:true,title:bAction+\" User\",content:\"User \"+action+\"d successfully!\"});\n                    if (action === \"delete\") {\n                        const data0 = await manageSessionData('logout', userObj.username, '?', 'dereg')\n                        if(data0.error){displayError(data0.error);return;}\n                        var data1 = await fetchICE(userObj.userid)\n                        if(data1.error){displayError(data1.error);return;}\n                        else if (data1.length === 0) return false;\n                        const icename = data1[0].icename;\n                        var data2 = await manageSessionData('disconnect', icename, '?', 'dereg')\n                        if(data2.error){displayError(data2.error);return;}\n                    }\n                } else if(data === \"exists\") {\n                    setPopupState({show:true,title:bAction+\" User\",content:\"User already Exists!\"});\n                } else if(data === \"fail\") {\n                    if (action === \"create\") click();\n                    else edit();\n                    setPopupState({show:true,title:bAction+\" User\",content:\"Failed to \"+action+\" user.\"});\n                } \n                else if(/^2[0-4]{8}$/.test(data)) {\n                    if (JSON.parse(JSON.stringify(data)[1])) {\n                        setPopupState({show:true,title:bAction+\" User\",content:\"Failed to \"+action+\" user. Invalid Request!\"});\n                        return;\n                    }\n                    var errfields = [];\n                    let hints = 'Hint:';\n                    if (JSON.parse(JSON.stringify(data)[2])) errfields.push(\"User Name\");\n                    if (JSON.parse(JSON.stringify(data)[3])) errfields.push(\"First Name\");\n                    if (JSON.parse(JSON.stringify(data)[4])) errfields.push(\"Last Name\");\n                    if (JSON.parse(JSON.stringify(data)[5])) errfields.push(\"Password\");\n                    if (JSON.parse(JSON.stringify(data)[6])) errfields.push(\"Email\");\n                    if (JSON.parse(JSON.stringify(data)[7])) errfields.push(\"Authentication Server\");\n                    if (JSON.parse(JSON.stringify(data)[8])) errfields.push(\"User Domain Name\");\n                    if (JSON.stringify(data)[5] === '1') hints += \" Password must contain atleast 1 special character, 1 numeric, 1 uppercase and lowercase alphabet, length should be minimum 8 characters and maximum 16 characters.\";\n\t\t\t\t    if (JSON.stringify(data)[5] === '2') hints += \" Password provided does not meet length, complexity or history requirements of application.\";\n\t\t\t\t    setPopupState({show:true,title:bAction+\" User\",content:\"Following values are invalid: \"+errfields.join(\", \")+\" \"+hints});\n                }\n            }\n            catch(error){\n                setPopupState({show:true,title:bAction+\" User\",content:\"Failed to \"+action+\" user.\"});\n            }\n        })()\n    }\n\n    //Validate Input Fields Before Doing Action\n    const validate = ({action}) =>{\n\t\tvar flag = true;\n\t\tsetUserNameAddClass(false);setfirstnameAddClass(false);setLastnameAddClass(false);setPasswordAddClass(false);\n        setConfirmPasswordAddClass(false);setEmailAddClass(false);setLdapDirectoryAddClass(false);setUserIdNameAddClass(false);\n        setUserRolesAddClass(false);setConfServerAddClass(false);\n        //eslint-disable-next-line\n        var emailRegEx = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\t\tvar regexPassword = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]).{8,16}$/;\n        var popupOpen = false;\n        // eslint-disable-next-line\n\t\tvar reg = /^[a-zA-Z0-9\\.\\@\\-\\_]+$/;\n\n        if(userIdNameAddClass);\n        if (userConf.userName === \"\") {\n            var nameErrorClass = (action === \"update\")? \"selectErrorBorder\":\"inputErrorBorder\";\n            if(nameErrorClass===\"selectErrorBorder\") setUserNameAddClass(\"setUserNameAddClass\");\n            else setUserNameAddClass(true)\n\t\t\tflag = false;\n\t\t}else if (!reg.test(userConf.userName)) {\n\t\t\tif (!popupOpen){\n                setPopupState({show:true,title:\"Error\",content:\"Cannot contain special characters other than ._-\"});\n            }\n            popupOpen = true;\n\t\t\tsetUserNameAddClass(true);\n\t\t\tflag = false;\n\t\t}\n\t\tif (userConf.userIdName === \"\" && action===\"update\") {\n            setUserIdNameAddClass(true);\n\t\t\tflag = false;\n\t\t}\n\t\tif (userConf.firstname === \"\") {\n            setfirstnameAddClass(true);\n\t\t\tflag = false;\n\t\t}\n\t\tif (userConf.lastname === \"\") {\n            setLastnameAddClass(true);\n\t\t\tflag = false;\n\t\t}\n\t\tif (userConf.type!==\"inhouse\") {\n\t\t\tif (userConf.server === \"\") {\n                setConfServerAddClass(\"selectErrorBorder\");\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t\tif (userConf.confExpired && action !== \"delete\") {\n\t\t\t\tif (!popupOpen){\n                    setPopupState({show:true,title:\"Error\",content:\"This configuration is deleted/invalid...\"});\n                }\n\t\t\t\tpopupOpen = true;\n                setConfServerAddClass(\"selectErrorBorder\");\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t}\n\t\tif (userConf.type===\"ldap\" && userConf.ldap.user === \"\") {\n            setLdapDirectoryAddClass(\"selectErrorBorder\");\n\t\t\tflag = false;\n\t\t}\n\t\tif (userConf.type===\"inhouse\" && action !== \"delete\" && !(action === \"update\" && userConf.passWord === \"\" && userConf.confirmPassword === \"\")) {\n\t\t\tif (userConf.passWord === \"\") {\n                setPasswordAddClass(true);\n\t\t\t\tflag = false;\n\t\t\t} else if (!regexPassword.test(userConf.passWord)) {\n\t\t\t\tif (!popupOpen){\n                    setPopupState({show:true,title:\"Error\",content:\"Password must contain atleast 1 special character, 1 numeric, 1 uppercase and lowercase, length should be minimum 8 characters and maximum 16 characters..\"});\n                }\n                popupOpen = true;\n                setPasswordAddClass(true);\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t\tif (userConf.confirmPassword === \"\") {\n                setConfirmPasswordAddClass(true);\n\t\t\t\tflag = false;\n\t\t\t} else if (!regexPassword.test(userConf.confirmPassword)) {\n\t\t\t\tif (!popupOpen){\n                    setPopupState({show:true,title:\"Error\",content:\"Password must contain atleast 1 special character, 1 numeric, 1 uppercase and lowercase, length should be minimum 8 characters and maximum 16 characters..\"});\n                }\n                popupOpen = true;\n                setConfirmPasswordAddClass(true);\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t\tif (userConf.passWord !== userConf.confirmPassword) {\n\t\t\t\tif (!popupOpen){\n                    setPopupState({show:true,title:\"Error\",content:\"Password and Confirm Password did not match\"});\n                }\n                popupOpen = true;\n                setConfirmPasswordAddClass(true);\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t}\n\t\tif (userConf.email === \"\") {\n            setEmailAddClass(true);\n\t\t\tflag = false;\n        } else if (!emailRegEx.test(userConf.email)) {\n\t\t\tif (!popupOpen){\n                setPopupState({show:true,title:\"Error\",content:\"Email address is not valid\"});\n            }\n            popupOpen = true;\n\t\t\tsetEmailAddClass(true);\n\t\t\tflag = false;\n\t\t}\n\t\tif (userConf.role === \"\") {\n            setUserRolesAddClass(\"selectErrorBorder\");\n\t\t\tflag = false;\n\t\t}\n\t\treturn flag;\n\t};\n\n    //Clear Input values and red Borders( if any)\n    const click = (props) =>{\n        setUserNameAddClass(false);\n        setfirstnameAddClass(false);\n        setLastnameAddClass(false);\n        setEmailAddClass(false);\n        setPasswordAddClass(false);\n        setConfServerAddClass(false);\n        setConfirmPasswordAddClass(false);\n        setUserRolesAddClass(false);\n        setConfServerAddClass(false);\n        setUserIdNameAddClass(false);\n        setLdapDirectoryAddClass(false);\n\n        dispatch({type:actionTypes.RESET_VALUES,payload:\"\"})\n        updateUserRoles();\n\n\t\tif (props!==undefined && props.query!==undefined && props.query !== \"retaintype\") {\n            dispatch({type:actionTypes.UPDATE_TYPE,payload:\"inhouse\"})\n            dispatch({type:actionTypes.UPDATE_SERVER,payload:\"\"})\n            dispatch({type:actionTypes.UPDATE_LDAP,payload:{fetch: \"map\", user: ''}})\n            dispatch({type:actionTypes.UPDATE_CONF_SERVER_LIST,payload:[]})\n            dispatch({type:actionTypes.UPDATE_LDAP_ALLUSER_LIST,payload:[]})\n\t\t}\n    };\n    \n    //Switch between multiple Usertypes\n    const selectUserType = async(props) =>{\n        dispatch({type:actionTypes.UPDATE_SERVER,payload:\"\"})\n        dispatch({type:actionTypes.UPDATE_CONF_SERVER_LIST,payload:[]})\n\t\tif (props.type === \"ldap\") {\n            populateLDAPConf();\n        }\n\t\telse if (props.type === \"saml\") populateSAMLConf();\n        else if (props.type === \"oidc\") populateOIDCConf();\n    }\n\n    const  populateLDAPConf = async() =>{\n       \n        dispatch({type:actionTypes.UPDATE_LDAP,payload:{fetch: \"map\", user: ''}})\n        dispatch({type:actionTypes.UPDATE_NO_CREATE,payload:true})\n        setLoading(\"Fetching LDAP Server configurations...\");\n        var data = await getLDAPConfig(\"server\");\n        if(data.error){displayError(data.error);return;}\n        setLoading(false);\n        if (data === \"empty\") {\n            setPopupState({show:true,title:\"Edit Configuration\",content: \"There are no LDAP server configured. To proceed create a server configuration in LDAP configuration section.\"});\n        } else {\n            dispatch({type:actionTypes.UPDATE_NO_CREATE,payload:false})\n            data.sort((a,b)=>a.name.localeCompare(b.name));\n            dispatch({type:actionTypes.UPDATE_CONF_SERVER_LIST,payload:data})\n        }\n    }\n\n    const  populateSAMLConf = () =>{\n        (async()=>{\n            dispatch({type:actionTypes.UPDATE_NO_CREATE,payload:true})\n            setLoading(\"Fetching SAML Server configurations...\");\n            var data = await getSAMLConfig();\n            if(data.error){displayError(data.error);return;}\n            setLoading(false);\n            if (data === \"empty\") {\n                setPopupState({show:true,title:\"Edit Configuration\",content: \"There are no SAML server configured. To proceed create a server configuration in SAML configuration section.\"});\n            } else {\n                dispatch({type:actionTypes.UPDATE_NO_CREATE,payload:false})\n                data.sort();\n                dispatch({type:actionTypes.UPDATE_CONF_SERVER_LIST,payload:data})\n            }\n        })()\n    }\n\n    const  populateOIDCConf = () =>{\n        (async()=>{\n            dispatch({type:actionTypes.UPDATE_NO_CREATE,payload:true})\n            setLoading(\"Fetching OpenID Server configurations...\");\n            var data = await getOIDCConfig();\n            if(data.error){displayError(data.error);return;}\n            setLoading(false);\n            if(data === \"empty\" ){\n                setPopupState({show:true,title:\"Edit Configuration\",content: \"There are no OpenID server configured. To proceed create a server configuration in OpenID configuration section.\"});\n            } else {\n                dispatch({type:actionTypes.UPDATE_NO_CREATE,payload:false})\n                data.sort((a,b)=>a.name.localeCompare(b.name));\n                dispatch({type:actionTypes.UPDATE_CONF_SERVER_LIST,payload:data})\n            }\n        })()\n    }\n\n    const ldapSwitchFetch = async ({userConf_ldap_fetch} )=>{\n        dispatch({type:actionTypes.UPDATE_LDAP_USER_FILTER,payload:\"\"})\n        dispatch({type:actionTypes.UPDATE_LDAP_USER,payload:\"\"})\n        clearForm(true);\n        setLdapDirectoryAddClass(false);\n\t\tif (userConf_ldap_fetch !== \"import\") return false;\n\t\tconst ldapServer = userConf.server;\n        dispatch({type:actionTypes.UPDATE_NO_CREATE,payload:true})\n        dispatch({type:actionTypes.UPDATE_LDAP_ALLUSER_LIST,payload:[]})\n        setLoading(\"Fetching LDAP users...\");\n        const data = await getLDAPConfig(\"user\", ldapServer);\n        if(data.error){displayError(data.error);return;}\n        setLoading(false);\n        if (data === \"empty\") {\n            setPopupState({show:true,title:\"Edit Configuration\",content: \"There are no LDAP server configured. To proceed create a server configuration in LDAP configuration section.\"});\n        }\n        else if(data!==undefined) {\n            dispatch({type:actionTypes.UPDATE_NO_CREATE,payload:false})\n            data.sort();\n            const ldapAllUserList = data.map(e=>({value:e[1],html:e[0]}));\n            dispatch({type:actionTypes.UPDATE_LDAP_ALLUSER_LIST,payload:ldapAllUserList})  \n            setLdapUserList(ldapAllUserList);  \n        }\n    }\n\n    const clearForm = ( retainExtra)=>{\n        dispatch({type:actionTypes.UPDATE_INPUT_USERNAME,payload:\"\"})\n        dispatch({type:actionTypes.UPDATE_INPUT_FIRSTNAME,payload:\"\"})\n        dispatch({type:actionTypes.UPDATE_INPUT_LASTNAME,payload:\"\"})\n        dispatch({type:actionTypes.UPDATE_INPUT_EMAIL,payload:\"\"})\n\t\tif (!retainExtra && userConf.type === \"ldap\") {\n            dispatch({type:actionTypes.UPDATE_LDAP,payload:{fetch: \"map\", user: ''}})\n\t\t}\n    };\n    \n    //Fetch LDAP User detail\n    const ldapGetUser = async(props)=>{\n        let ldapUser = userConf.ldap.user;\n        if(props!==undefined) {\n            ldapUser = props.luser;\n        }\n        const ldapServer = userConf.server;\n\t\tdispatch({type:actionTypes.UPDATE_NO_CREATE,payload:true})\n\t\tif (ldapUser === '') {\n            setLdapDirectoryAddClass(true);\n\t\t\treturn;\n\t\t}\n\t\tclearForm(true);\n        setLoading(\"Fetching User details...\");\n        const data = await getLDAPConfig(\"user\", ldapServer, ldapUser);\n        if(data.error){displayError(data.error);return;}\n        setLoading(false);\n        if (data === \"empty\") {\n            setPopupState({show:true,title:\"Edit Configuration\",content: \"User not found\"});\n        } else {\n            dispatch({type:actionTypes.UPDATE_LDAP_DATA,payload:data})\n        }\n    }\n\n    //load Users for Edit\n    const edit = async(props)=>{\n        click(); \n        dispatch({type:actionTypes.UPDATE_TYPE,payload: \"inhouse\"})\n        dispatch({type:actionTypes.UPDATE_FTYPE,payload: \"Default\"})\n        setLoading(\"Fetching users...\");\n        var data = await getUserDetails(\"user\");\n        if(data.error){displayError(data.error);return;}\n        else {\n            setLoading(false);\n            data.sort();\n            dispatch({type:actionTypes.UPDATE_ALL_USERS_LIST,payload: data})\n            setAllUserFilList(data);\n        }\n    }\n    \n    const getUserData = async(props)=>{\n        const userObj = props.user_idName.split(';');\n        dispatch({type:actionTypes.UPDATE_USERID,payload: userObj[0]});\n        dispatch({type:actionTypes.UPDATE_INPUT_USERNAME,payload: userObj[1]});\n        setLoading(\"Fetching User details...\");\n        try{\n            const data = await getUserDetails(\"userid\", userObj[0]);\n            if(data.error){displayError(data.error);return;}\n            else {\n                setLoading(false);\n                const uType = data.type;\n                dispatch({type:actionTypes.UPDATE_DATA,payload: data});\n                dispatch({type:actionTypes.UPDATE_ADDROLES,payload: {}});\n                data.addrole.forEach((e) => dispatch({type:actionTypes.ADD_ADDROLE,payload: e}));\n                dispatch({type:actionTypes.UPDATE_FTYPE,payload:  (uType===\"inhouse\")? \"Default\":((uType===\"oidc\")? \"OpenID\":uType.toUpperCase())});\n\n                if (data.type !== \"inhouse\") {\n                    var confserver = data.server;\n                    dispatch({type:actionTypes.UPDATE_SERVER,payload:\"\"})\n                    dispatch({type:actionTypes.UPDATE_CONF_SERVER_LIST,payload:[]})\n                    if (data.type === \"ldap\") {\n                        dispatch({type:actionTypes.UPDATE_LDAP,payload:{fetch: \"map\", user: ''}})\n                        dispatch({type:actionTypes.UPDATE_NO_CREATE,payload:true})\n                        setLoading(\"Fetching LDAP Server configurations...\");\n                        var data1 = await getLDAPConfig(\"server\");\n                        if(data1.error){displayError(data1.error);return;}\n                        setLoading(false);\n                        if (data1 === \"empty\") {\n                            setPopupState({show:true,title:\"Edit Configuration\",content: \"There are no LDAP server configured. To proceed create a server configuration in LDAP configuration section.\"});\n                        } else {\n                            dispatch({type:actionTypes.UPDATE_NO_CREATE,payload:false})\n                            data1.sort((a,b)=>a.name.localeCompare(b.name));\n                            dispatch({type:actionTypes.UPDATE_CONF_SERVER_LIST,payload:data1})\n                        }\n                    }\n                    else if (data.type === \"saml\"){\n                        dispatch({type:actionTypes.UPDATE_NO_CREATE,payload:true})\n                        setLoading(\"Fetching SAML Server configurations...\");\n                        data1 = await getSAMLConfig();\n                        if(data1.error){displayError(data1.error);return;}\n                        setLoading(false);\n                        if (data === \"empty\") {\n                            setPopupState({show:true,title:\"Edit Configuration\",content: \"There are no SAML server configured. To proceed create a server configuration in SAML configuration section.\"});\n                        } else {\n                            dispatch({type:actionTypes.UPDATE_NO_CREATE,payload:false})\n                            data1.sort();\n                            dispatch({type:actionTypes.UPDATE_CONF_SERVER_LIST,payload:data1})\n                        }\n                    }\n                    else if (data.type === \"oidc\"){ \n                        dispatch({type:actionTypes.UPDATE_NO_CREATE,payload:true})\n                        setLoading(\"Fetching OpenID Server configurations...\");\n                        data1 = await getOIDCConfig();\n                        if(data1.error){displayError(data1.error);return;}\n                        setLoading(false);\n                        if(data1 === \"empty\" ){\n                            setPopupState({show:true,title:\"Edit Configuration\",content: \"There are no OpenID server configured. To proceed create a server configuration in OpenID configuration section.\"});\n                        } else {\n                            dispatch({type:actionTypes.UPDATE_NO_CREATE,payload:false})\n                            data1.sort((a,b)=>a.name.localeCompare(b.name));\n                            dispatch({type:actionTypes.UPDATE_CONF_SERVER_LIST,payload:data1})\n                        }\n                    }\n                    if (!data1.some(function(e) { return e.name === confserver;})) {\n                        dispatch({type:actionTypes.UPDATE_CONF_SERVER_LIST_PUSH,payload: {_id: '', name: confserver}});\n                        dispatch({type:actionTypes.UPDATE_CONF_EXP,payload: confserver});\n                    }\n                    dispatch({type:actionTypes.UPDATE_SERVER,payload: confserver});\n                    dispatch({type:actionTypes.UPDATE_LDAP_USER,payload: data.ldapuser || ''});\n                }\n            }  \n        }catch(error){\n            setLoading(false);\n            setPopupState({show:true,title:\"Edit User\",content:\"Failed to fetch user details.\"});\n        }  \n    }\n\n    const searchFunctionUser = async(val)=>{\n        setShowDropdownEdit(true);\n        const items = userConf.allUsersList.filter((e)=>e[0].toUpperCase().indexOf(val.toUpperCase())!==-1)\n        setAllUserFilList(items);\n    }\n\n    const searchFunctionLdap = async(val)=>{\n        let items = [];\n        if(userConf.ldapAllUserList!==\"\") items = userConf.ldapAllUserList.filter((e)=>e.html.toUpperCase().indexOf(val.toUpperCase())!==-1)\n        setLdapUserList(items);\n    }\n    \n    const closePopup = () =>{\n        setPopupState({show:false,title:\"\",content:\"\"});\n    }\n\n    const passwordChange = (value) => {\n        value = ValidationExpression(value,\"password\")\n        dispatch({type:actionTypes.UPDATE_INPUT_PASSWORD,payload:value})\n    }\n\n    \n    const confirmPasswordChange = (value) => {\n        value = ValidationExpression(value,\"password\")\n        dispatch({type:actionTypes.UPDATE_INPUT_CONFIRMPASSWORD,payload:value})\n    }\n\n    const emailChange = (value) => {\n        value = ValidationExpression(value,\"email\")\n        dispatch({type:actionTypes.UPDATE_INPUT_EMAIL,payload:value})\n    }\n\n    return (\n        <Fragment>\n            {popupState.show?<PopupMsg content={popupState.content} title={popupState.title} submit={closePopup} close={closePopup} submitText={\"Ok\"} />:null}\n            {loading?<ScreenOverlay content={loading}/>:null}\n            \n            <ScrollBar thumbColor=\"#929397\">\n            <div data-test=\"create__container\" className=\"createUser-container\">\n            <div data-test=\"heading\" id=\"page-taskName\"><span>{(props.showEditUser===false)?\"Create User\":\"Edit User\"}</span></div>\n            \n            {(props.showEditUser===false)?\n                <CreateLanding firstnameAddClass={firstnameAddClass} lastnameAddClass={lastnameAddClass} ldapSwitchFetch={ldapSwitchFetch} userNameAddClass={userNameAddClass} setShowDropdown={setShowDropdown} ldapUserList={ldapUserList} searchFunctionLdap={searchFunctionLdap}  ldapDirectoryAddClass={ldapDirectoryAddClass} confServerAddClass={confServerAddClass} clearForm={clearForm} setShowEditUser={props.setShowEditUser} ldapGetUser={ldapGetUser} click={click} edit={edit} manage={manage} selectUserType={selectUserType} setShowDropdownEdit={setShowDropdownEdit} showDropdownEdit={showDropdownEdit} showDropdown={showDropdown} />\n                :<EditLanding firstnameAddClass={firstnameAddClass} lastnameAddClass={lastnameAddClass} confServerAddClass={confServerAddClass} ldapGetUser={ldapGetUser} ldapDirectoryAddClass={ldapDirectoryAddClass} clearForm={clearForm} allUserFilList={allUserFilList} manage={manage} setAllUserFilList={setAllUserFilList} searchFunctionUser={searchFunctionUser} click={click} setShowDropdownEdit={setShowDropdownEdit} showDropdownEdit={showDropdownEdit} getUserData={getUserData} />\n            }    \n\n            <div className=\"col-xs-9 form-group__conv\">\n\n                {(userConf.type === \"inhouse\")?\n                    <Fragment>\n                        <div className='leftControl adminControl'>\n                            <input data-test=\"password\" value={userConf.passWord} onChange={(event)=>{passwordChange(event.target.value)}} type=\"password\" autoComplete=\"new-password\" name=\"passWord\" id=\"password\" maxLength=\"16\" className={passwordAddClass?\"middle__input__border form-control__conv form-control-custom inputErrorBorder\" :\"middle__input__border form-control__conv form-control-custom\"} placeholder=\"Password\" />\n                        </div>\n                        <div className='rightControl adminControl'>\n                            <input data-test=\"confirmPassword\" value={userConf.confirmPassword} onChange={(event)=>{confirmPasswordChange(event.target.value)}} type=\"password\" autoComplete=\"new-password\" name='confirmPassword' id='confirmPassword' maxLength=\"16\" className={confirmPasswordAddClass?\"middle__input__border form-control__conv form-control-custom inputErrorBorder\" :\"middle__input__border form-control__conv form-control-custom\"}  placeholder=\"Confirm Password\"/>\n                        </div>\n                    </Fragment>\n                    :null\n                }   \n                \n                {/* PRESENT FOR EACH USERTYPE */}\n                <div className='adminControl'>\n\t\t\t\t\t<input data-test=\"email\" value={userConf.email} onChange={(event)=>{emailChange(event.target.value)}} autoComplete=\"off\" name=\"email\" id=\"email\" maxLength=\"100\" className={emailAddClass?\"middle__input__border form-control__conv form-control-custom inputErrorBorder\":\"middle__input__border form-control__conv form-control-custom\"} placeholder=\"Email Id\"/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"selectRole  adminControl role-padding\" >\n\t\t\t\t\t<label data-test=\"primaryRoleLabel\" className=\"leftControl primaryRole\">Primary Role</label>\n\t\t\t\t\t<select data-test=\"primaryRoleDropdown\" value={userConf.role} disabled={props.showEditUser===true} className={userRolesAddClass?'adminSelect form-control__conv selectErrorBorder':'adminSelect form-control__conv '} onChange={(event)=>{dispatch({type:actionTypes.UPDATE_USERROLE,payload:event.target.value})}} id=\"userRoles\" style={(props.showEditUser===true)?{backgroundColor: \"#eee\",cursor: \"not-allowed\"}:{}} >\n\t\t\t\t\t\t<option value=\"\" >Select User Role</option>\n                        {userConf.allRoles.map((i,index) => (      \n                            <option key={index} value={i[1]}>{i[0]}</option>\n                        ))}\n                    </select>\n\t\t\t\t</div> \n\n                {( userConf.rolename!=='Admin' && props.showEditUser === true  && userConf.userIdName!=='')?\n                    <div  className=\"col-xs-6 selectRole\" >\n                        <label className=\"leftControl primaryRole\" id=\"additionalRoleTxt\">Additional Role: </label>\n                        <label className=\"chooseRole dropdown-toggle\" id=\"additionalRole_options\" data-toggle=\"dropdown\" onClick={()=>{setToggleAddRoles(!toggleAddRoles)}} title=\"Select Additional Role\">Select Additional Role</label>\n                        {(toggleAddRoles===true)?\n                            <ul ref={node} className=\"dropdown-menu-multiselect\" id=\"additionalRoles\" >\n                                \n                                {userConf.allAddRoles.map((arid,index) => (  \n                                    (arid[1]!==userConf.role)? \n                                        <li className='RolesCheck' key={index}  checked={userConf.addRole[arid[1]]} onClick={()=>{dispatch({type:actionTypes.EDIT_ADDROLES,payload:arid[1]})}}>\n                                            <span className='rolesSpan'><input className='addcheckBox' name=\"additionalRole\" type='checkbox' checked={userConf.addRole[arid[1]]} /><label className='rolesChecklabel'>{arid[0]}</label></span> \n                                        </li>\n                                    :null\n                                ))}\n                            </ul>\n                        :null}\n                    </div>\n                :null}\n                \n\t\t\t</div>\t\n            </div>\n            </ScrollBar>\n      </Fragment>\n  );\n}\n\nexport default CreateUser;\n","import React ,  { Fragment, useState} from 'react';\nimport { getNames_ICE, createProject_ICE, updateProject_ICE, getDomains_ICE} from '../api';\nimport {ScreenOverlay, PopupMsg} from '../../global'\nimport { useSelector} from 'react-redux'; \nimport '../styles/ProjectButtons.scss';\n\n/*Component ProjectButtons\n  use: Contains Project Management Buttons and Create and Update Actions\n  todo: Modals\n*/\n    \nconst ProjectButtons = (props) => {\n    const userInfo = useSelector(state=>state.login.userinfo);\n    const [loading,setLoading] = useState(false)\n    const [popupState,setPopupState] = useState({show:false,title:\"\",content:\"\"}) \n\n    // Create Project Action\n    const create_project = async()=>{\n        document.getElementById(\"create_button\").disabled = true;\n        props.setProjectNameInputErrorBorder(false);\n        if (props.projectName.trim() === \"\") props.setProjectNameInputErrorBorder(true);\n        else if (props.projectTypeSelected=== \"\"){\n            setPopupState({show:true,title:\"Create Project\",content:\"Please select Application Type\"});\n        } else if (props.releaseList.length === 0) {\n            setPopupState({show:true,title:\"Create Project\",content:\"Please add atleast one release\"});\n        }else {\n\t\t\tvar proceedToCreate = true;\n\t\t\tvar relNames = \"\";\n\t\t\tfor (var i = 0; i < props.projectDetails.length; i++) {\n\t\t\t\tif (props.projectDetails[i].cycles.length <= 0) {\n\t\t\t\t\trelNames = relNames.length > 0 ? relNames + \", \" + props.projectDetails[i].name : props.projectDetails[i].name;\n\t\t\t\t\tproceedToCreate = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (proceedToCreate === false) {\n                setPopupState({show:true,title:\"Update Project\",content:\"Please add atleast one cycle for release: \" + relNames});\n            } \n            else if (proceedToCreate === true) {\n\t\t\t\tvar requestedids = [];\n\t\t\t\tvar idtype = [];\n\t\t\t\tif ( checkCycle(props.flag)){\n                    document.getElementById(\"create_button\").disabled = false;\n                    return false;\n                } \n                else if (props.selDomain !== \"\") {\n                    requestedids.push(props.selDomain);\n                    idtype.push('domainsall');\n                    var proceeed = false;\n                    const response = await getNames_ICE(requestedids, idtype)\n                    if(response.error){displayError(response.error);document.getElementById(\"create_button\").disabled = false;return;}\n                    else if (response === \"No Projects\") {\n                        proceeed = true;\n                    } else if (response.projectNames.length > 0) {\n                        for ( i = 0; i < response.projectNames.length; i++) {\n                            if (props.projectName === response.projectNames[i]) {\n                                setPopupState({show:true,title:\"Create Project\",content:\"Project Name already Exists\"});\n                                document.getElementById(\"create_button\").disabled = false;\n                                return false;\n                            } else proceeed = true;\n                        }\n                    } else {\n                        setPopupState({show:true,title:\"Create Project\",content:\"Failed to create project\"});\n                        document.getElementById(\"create_button\").disabled = false;\n                        return false;\n                    }\n                    if (proceeed === true) {\n                        setLoading(\"Saving...\");\n                        const createprojectObj = {};\n                        createprojectObj.domain = props.selDomain;\n                        createprojectObj.projectName = props.projectName.trim();\n                        createprojectObj.appType = props.projectTypeSelected;\n                        createprojectObj.projectDetails = props.projectDetails;\n                        console.log(\"Controller: \" + createprojectObj);\n                        const createProjectRes = await createProject_ICE(createprojectObj)\n                        if(createProjectRes.error){displayError(createProjectRes.error);document.getElementById(\"create_button\").disabled = false;return;}\n                        else if (createProjectRes === 'success') {\n                            setPopupState({show:true,title:\"Create Project\",content:\"Project created successfully\"});\n                            props.resetForm();\n                            props.setProjectDetails([]);\n                            refreshDomainList();\n                        } else {\n                            setPopupState({show:true,title:\"Create Project\",content:\"Failed to create project\"});\n                            props.resetForm();\n                        }\n                        setLoading(false);\n                    }\n\t\t\t\t}\n            }\n            else {\n\t\t\t\tsetLoading(false);\n                setPopupState({show:true,title:\"Create Project\",content:\"Please add atleast one cycle for a release\"});\n\t\t\t}\n        }\n        document.getElementById(\"create_button\").disabled = false;\n    }\n\n    const refreshDomainList = async () => {\n        let data = await getDomains_ICE() \n        if(data.error){displayError(data.error);return;}\n        else if(data.length===0){\n            data=['Banking','Manufacturing','Finance'];\n        }\n        props.setSelDomainOptions(data);\n    }\n\n    const checkCycle = (flag)=>{\n        for (var j = 0; j < props.releaseList.length; j++) {    \n\t\t\tfor (var i = 0; i < props.projectDetails.length; i++) {\n\t\t\t\tif (props.releaseList[j] === props.projectDetails[i].name) {\n\t\t\t\t\tif (props.projectDetails[i].cycles.length === 0) {\n                        setPopupState({show:true,title:\"Create Project\",content:\"Please add atleast one cycle for a release\"});\n                        return true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n        };\n        return false;\n    }\n    \n    //Update Project Action\n    const updateProject = async () =>{\n        props.setDomainSelectErrorBorder(false);props.setProjectSelectErrorBorder(false);\n        \n        if (props.selDomain === \"\") {\n\t\t\tprops.setDomainSelectErrorBorder(true);\n\t\t} else if (props.selProject === \"\") {\n\t\t\tprops.setProjectSelectErrorBorder(true);\n\t\t} else if (props.releaseList.length === 0) {\n            setPopupState({show:true,title:\"Update Project\",content:\"Please add atleast one release\"});\n\t\t}else {\n            setLoading(\"Loading...\");\n\t\t\tprops.setFlag(false);\n\t\t\t//Update project details json with editedProjectDetails, deletedProjectDetails, newProjectDetails\n            \n            var updateProjectObj = {};\n\t\t\tupdateProjectObj.projectId = props.selProjectId;\n\t\t\tupdateProjectObj.projectName = props.selProject;\n\t\t\tupdateProjectObj.appType = props.projectTypeSelected;\n\t\t\tupdateProjectObj.editedProjectDetails = \"\";\n\t\t\tupdateProjectObj.deletedProjectDetails = \"\";\n            updateProjectObj.newProjectDetails = \"\";\n\n            if (updateProjectObj.editedProjectDetails.length <= 0)\n\t\t\t\tupdateProjectObj.editedProjectDetails = props.editedProjectDetails;\n\t\t\telse\n\t\t\t\tupdateProjectObj.editedProjectDetails.push(props.editedProjectDetails);\n\n\t\t\tif (updateProjectObj.deletedProjectDetails.length <= 0)\n\t\t\t\tupdateProjectObj.deletedProjectDetails = props.deletedProjectDetails;\n\t\t\telse\n\t\t\t\tupdateProjectObj.deletedProjectDetails.push(props.deletedProjectDetails);\n            \n            var proceedFlag = true;\n            var relName = \"\";\n            if (props.newProjectDetails.length > 0) {\n                for (var i = 0; i < props.newProjectDetails.length; i++) {\n                    var testFlag = true;\n                    if (props.newProjectDetails[i].cycles.length <= 0) {\n                        for (var j = 0; j < props.updateProjectDetails.length; j++) {\n                            if (props.updateProjectDetails[j].name === props.newProjectDetails[i].name && props.updateProjectDetails[j].cycles.length <= 0) {\n                                relName = relName.length > 0 ? relName + \", \" + props.newProjectDetails[i].name : relName + props.newProjectDetails[i].name;\n                                proceedFlag = false;\n                                testFlag = false;\n                            }\n                        }\n                        if (testFlag) {\n                            relName = relName.length > 0 ? relName + \", \" + props.newProjectDetails[i].name : relName + props.newProjectDetails[i].name;\n                            proceedFlag = false;\n                        }\n                    }\n                }\n            }\n            if (props.updateProjectDetails.length > 0) {\n\t\t\t\tfor ( i = 0; i < props.updateProjectDetails.length; i++) {\n\t\t\t\t\tif (props.updateProjectDetails[i].cycles.length <= 0) {\n\t\t\t\t\t\ttestFlag = true;\n\t\t\t\t\t\tfor (j = 0; j < props.newProjectDetails.length; j++) {\n\t\t\t\t\t\t\tif (props.updateProjectDetails[i].name === props.newProjectDetails[j].name) {\n\t\t\t\t\t\t\t\ttestFlag = false;\n\t\t\t\t\t\t\t\tif (props.newProjectDetails[j].cycles.length <= 0) {\n\t\t\t\t\t\t\t\t\trelName = relName.length > 0 ? relName + \", \" + props.updateProjectDetails[i].name : relName + props.updateProjectDetails[i].name;\n\t\t\t\t\t\t\t\t\tproceedFlag = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (props.newProjectDetails.length <= 0 || testFlag) {\n\t\t\t\t\t\t\trelName = relName.length > 0 ? relName + \", \" + props.updateProjectDetails[i].name : relName + props.updateProjectDetails[i].name;\n\t\t\t\t\t\t\tproceedFlag = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n            }\n            if (proceedFlag === false) {\n                setPopupState({show:true,title:\"Update Project\",content:\"Please add atleast one cycle for release: \" + relName});\n                setLoading(false);\n                return false;\n            }\n            if (proceedFlag === true) {\n                if (updateProjectObj.newProjectDetails.length <= 0)\n\t\t\t\t\tupdateProjectObj.newProjectDetails = props.newProjectDetails;\n\t\t\t\telse\n\t\t\t\t\tupdateProjectObj.newProjectDetails.push(props.newProjectDetails);\n                if( updateProjectObj.projectName !== props.editProjectName && props.editProjectName !== \"\" && props.editProjectName!==false){\n                    var requestedids = [];\n                    var idtype = [];\n                    requestedids.push(props.selDomain);\n                    idtype.push('domainsall');\n                    var proceeed = false;\n                    const response = await getNames_ICE(requestedids, idtype)\n                    if(response.error){displayError(response.error);return;}\n                    else if (response === \"No Projects\") {\n                        proceeed = true;\n                    } else if (response.projectNames.length > 0) {\n                        for ( i = 0; i < response.projectNames.length; i++) {\n                            if (props.editProjectName.trim() === response.projectNames[i]) {\n                                setPopupState({show:true,title:\"Create Project\",content:\"Project Name already Exists\"});\n                                proceeed = false;\n                                setLoading(false);\n                                return;\n                            } else proceeed = true;\n                        }\n                    } \n                    if (proceeed === true) updateProjectObj.newProjectName  = props.editProjectName.trim();\n                }\n                 \n                const updateProjectRes = await updateProject_ICE(updateProjectObj, userInfo);\n                if(updateProjectRes.error){displayError(updateProjectRes.error);return;}\n                props.clearUpdateProjectObjects();\n                props.resetForm();\n                if (updateProjectRes === 'success') {\n                    setPopupState({show:true,title:\"Update Project\",content:\"Project updated successfully\"});\n                } else {\n                    setPopupState({show:true,title:\"Update Project\",content:\"Failed to update project\"});\n                    // props.resetForm();\n                }\n                setLoading(false);   \n            }\n        }    \n    }\n\n    const closePopup = () =>{\n        setPopupState({show:false,title:\"\",content:\"\"});\n    }\n\n    const displayError = (error) =>{\n        setLoading(false)\n        setPopupState({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n\n    return(\n        <Fragment>\n            {popupState.show?<PopupMsg content={popupState.content} title={popupState.title} submit={closePopup} close={closePopup} submitText={\"Ok\"} />:null}\n            {loading?<ScreenOverlay content={loading}/>:null}\n            \n            <div className=\"adminActionBtn\">\n                {props.taskName===\"Create Project\"?\n                    <Fragment>\n                        <button className=\"a__btn pull-right \" onClick={()=>props.editProjectTab()}  title=\"Edit Project\">Edit</button>\n                        <button id=\"create_button\" onClick={()=>{create_project()}} title=\"Create Project\"  className=\"a__btn pull-right  btn-project-cust\">Create</button>            \n                    </Fragment>\n                :<button className=\"a__btn pull-right \" onClick={()=>{updateProject()}}  title=\"Update Project\">Update</button>\n                }\n            </div> \n        </Fragment>\n    )\n}\n\nexport default ProjectButtons;\n","import React ,  { Fragment} from 'react';\nimport '../styles/ReleaseCycle.scss';\n\n/*Component ReleaseCycle\n  use: renders ReleaseCycle for Project Assign page\n  todo: \n*/\n    \nconst ReleaseCycle = (props) => {\n    \n  return (\n    <Fragment>\n        <div className=\"containerWrap-project relCycContainer\" id='createRelContainer'>\n            <div className=\"containerWrap-project releaseContainer rcContainer\">\n                <div className=\"addContainer\"><span onClick={()=>{props.clickAddRelease()}} id=\"addRelease\" title=\"Add Release\" className={props.disableAddRelease && props.taskName ===\"Update Project\" ?\"disableAddRelease\":\"\"}><img src={\"static/imgs/ic-add-sm.png\"} alt=\"Add Release\" />Add Release</span></div>\n                <ul id=\"releaseList\" className=\"containerWrap-project containerWrap-project-cust \">\n                {props.releaseList.map((releaseName,index) => ( \n                    <li key={index} id={'releaseList_' + props.count} onClick={()=>{props.clickReleaseListName({id:'releaseList_' + props.count,releaseName:releaseName});props.setActiveRelease(releaseName);}} className={(releaseName===props.activeRelease)?\"active-release\":\"\"} >\n                        <img src={\"static/imgs/ic-release.png\"} alt=\"Release\"/><span title={releaseName} className='releaseName'>{releaseName}</span>\n                        {(releaseName===props.activeRelease)?\n                        <span >\n                            <img onClick={()=>{props.clickEditRelease(\"editReleaseName_\" + props.count)}} id={\"editReleaseName_\" + props.count} title='Edit Release Name' src={\"static/imgs/ic-edit-sm.png\"} alt=\"Edit Release Name\" className='editReleaseName'/>\n                        </span>\n                        :null}\n                    </li>\n                ))}\n                </ul>\n            </div>\n            <div className=\"containerWrap-project cycleContainer rcContainer\">\n                <div className=\"addContainer\"><span onClick={()=>{props.clickAddCycle()}} id=\"addCycle\" title=\"Add Cycle\" className={props.disableAddCycle?\"disableAddCycle\":\"\"}><img src={\"static/imgs/ic-add-sm.png\"} alt=\"Add Cycle\" />Add Cycle</span></div>\n                <ul id=\"cycleList\" className=\"containerWrap-project containerWrap-project-cust\">\n                {props.cycleList.map((cycleName,index) => ( \n                    <li key={index} className={props.cycleListClass?'cycleList createCycle':\"createCycle\"}>\n                        <img src={\"static/imgs/ic-cycle.png\"} alt=\"Cycle\" />\n                        <span title=\"cycleName\" className='cycleName'>{cycleName}</span>\n                        <span >\n                            <img onClick={()=>{props.clickEditCycle(\"editReleaseName_\" + props.count,cycleName)}} id={\"editCycleName_\" + props.delCount}  title='Edit Cycle Name' src={\"static/imgs/ic-edit-sm.png\"} alt='Edit Cycle Name' className='editCycleName'/>\n                            {/* <img id={\"deleteCycleName_\" + delCount } title='Delete Cycle' src={\"static/imgs/ic-delete-sm.png\"} class='deleteCycle'/> */}\n                        </span>\n                    </li>\n                ))}\n                </ul>\n            </div>\n        </div>\n\t</Fragment>\n  )\n}  \n\n\nexport default ReleaseCycle;","import React ,  { useEffect, useState } from 'react';\nimport {getAvailablePlugins , getDomains_ICE, getDetails_ICE} from '../api';\nimport {ScreenOverlay,PopupMsg, ModalContainer, ScrollBar} from '../../global' \nimport ProjectButtons from '../components/ProjectButtons';\nimport ReleaseCycle from '../components/ReleaseCycle';\nimport ValidationExpression from '../../global/components/ValidationExpression';\nimport '../styles/Project.scss';\n\n/*Component ProjectNew\n  use: renders create New Project page\n  todo: \n*/\n    \nconst ProjectNew = (props) => {\n\n    const [taskName,setTaskName] = useState(\"Create Project\")\n    const [selProject,setSelProject] = useState(\"\")\n    const [selProjectId,setSelProjectId] = useState(\"\")\n    const [selProjectOptions,setSelProjectOptions] = useState([])\n    const [projectName,setProjectName] = useState(\"\")\n    const [selDomain,setSelDomain] = useState(\"\")\n    const [projectTypeSelected,setprojectTypeSelected] = useState(\"\")\n    const [flag,setFlag] = useState(true);\n    const [deletedProjectDetails,setDeletedProjectDetails] = useState([])\n    const [updateProjectDetails,setUpdateProjectDetails] = useState([])\n    const [newProjectDetails,setNewProjectDetails] = useState([])\n    const [editedProjectDetails,setEditedProjectDetails] = useState([])\n    const [projectDetails,setProjectDetails] = useState([])\n    const [delCount,setDelCount] = useState(0)\n    const [count,setCount] = useState(0)\n    const [title,setTitle] = useState([])\n    const [placeholder,setPlaceholder] = useState([])\n    const [applicationType,setApplicationType] = useState([])\n    const [selDomainOptions,setSelDomainOptions] = useState([])\n    const [showEditModalRelease,setShowEditModalRelease] = useState(false)\n    const [showEditNameModalRelease,setShowEditNameModalRelease] = useState(false)\n    const [showEditModalCycle,setShowEditModalCycle] = useState(false)\n    const [releaseTxt,setReleaseTxt] = useState(\"\")\n    const [cycleTxt,setCycleTxt] = useState(\"\")\n    const [modalInputErrorBorder,setModalInputErrorBorder] = useState(\"\")\n    const [projectNameErrorBorder,setProjectNameInputErrorBorder] = useState(false)\n    const [releaseList,setReleaseList] = useState([])\n    const [cycleList,setCycleList] = useState([])\n    const [disableAddRelease,setDisableAddRelease] = useState(true)\n    const [disableAddCycle,setDisableAddCycle] = useState(true)\n    const [activeRelease,setActiveRelease] = useState(undefined)\n    const [domainSelectErrorBorder,setDomainSelectErrorBorder] = useState(false)\n    const [projectSelectErrorBorder,setProjectSelectErrorBorder] = useState(false)\n    // const [editReleaseID,setEditReleaseId] = useState(\"\")\n    const [oldCyclename,setOldCyclename] = useState(\"\")\n    const [showEditNameModalCycle,setShowEditNameModalCycle] = useState(\"\")\n    const [showProjectEditModal,setShowProjectEditModal] = useState(false)\n    const [editProjectName,setEditProjectName] = useState(false)\n    const [loading,setLoading] = useState(false)\n    const [popupState,setPopupState] = useState({show:false,title:\"\",content:\"\"})\n\n    useEffect(()=>{\n        getDomains(\"Create Project\");\n        setDisableAddRelease(true);\n        setDisableAddCycle(true);\n        setSelProject(\"\");\n        setModalInputErrorBorder(false);\n        setDomainSelectErrorBorder(false);\n        setProjectSelectErrorBorder(false);\n        setProjectNameInputErrorBorder(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[props.resetMiddleScreen[\"projectTab\"]])\n\n    const displayError = (error) =>{\n        setLoading(false)\n        setPopupState({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n\n    const getDomains = (screen) => {\n        (async()=>{    \n            setTaskName(\"Create Project\")\n            resetForm(screen);\n            setProjectDetails([]);\n            setUpdateProjectDetails([]);\n            var plugins = []; \n            setLoading(\"Loading...\");\n            const plugins_list = await getAvailablePlugins();\n            if(plugins_list.error){displayError(plugins_list.error);return;}\n            for (var i = 0; i < plugins_list.length; i++) {\n                plugins[i] = plugins_list[i];\n            }\n            let data = await getDomains_ICE() \n            if(data.error){displayError(data.error);return;}\n            else if(data.length===0){\n                data=['Banking','Manufacturing','Finance'];\n            }\n            setSelDomainOptions(data);\n            var details = {\n                \"web\":{\"data\":\"Web\",\"title\":\"Web\",\"img\":\"web\"},\n                \"webservice\":{\"data\":\"Webservice\",\"title\":\"Web Service\",\"img\":\"webservice\"},\n                \"desktop\":{\"data\":\"Desktop\",\"title\":\"Desktop Apps\",\"img\":\"desktop\"},\n                \"oebs\":{\"data\":\"OEBS\",\"title\":\"Oracle Apps\",\"img\":\"oracleApps\"},\n                \"mobileapp\":{\"data\":\"MobileApp\",\"title\":\"Mobile Apps\",\"img\":\"mobileApps\"},\n                \"mobileweb\":{\"data\":\"MobileWeb\",\"title\":\"Mobile Web\",\"img\":\"mobileWeb\"},\n                \"sap\":{\"data\":\"SAP\",\"title\":\"SAP Apps\",\"img\":\"sapApps\"},\n                \"system\":{\"data\":\"System\",\"title\":\"System Apps\",\"img\":\"desktop\"},\n                \"mainframe\":{\"data\":\"Mainframe\",\"title\":\"Mainframe\",\"img\":\"mainframe\"}\n            };\n            var listPlugin = [];\n            for ( i = 0; i < plugins.length; i++) {\n                listPlugin.push(details[plugins[i]]);\n            }\n            if(screen !== undefined) setSelDomain(data[0]);\n            else if(taskName===\"Create Project\") setSelDomain(data[0]);\n            else if(taskName===\"Update Project\") setSelDomain(\"\");\n            setApplicationType(listPlugin);\n            setLoading(false); \n        })()\n    }\n    const toggleCycleClick = (props)=>{\n        var releaseListLen = releaseList.length;\n        var cyclesListLen = cycleList.length;\n        if (cyclesListLen === 0 && releaseListLen === 0) setDisableAddCycle(true);\n        else if (releaseListLen === 0) setDisableAddCycle(true);\n        else setDisableAddCycle(false);\n    }   \n\n    const editProjectTab = ()=>{\n        setTaskName(\"Update Project\");\n        setNewProjectDetails([]);\n        setDeletedProjectDetails([]);\n        setEditedProjectDetails([]);\n        setProjectDetails([]);\n        setUpdateProjectDetails([]);\n        setprojectTypeSelected(\"\");\n        setSelDomain(\"\");\n        setReleaseList([])\n        setCycleList([])\n        setModalInputErrorBorder(false);\n        setDomainSelectErrorBorder(false);\n        setProjectSelectErrorBorder(false);\n        setProjectNameInputErrorBorder(false);\n    }\n\n    const resetForm = (screen)=>{\n        setProjectDetails([]);\n        setProjectName(\"\");\n        setEditProjectName(false);\n        setSelProjectId(\"\");\n        setprojectTypeSelected(\"\");\n        setReleaseList([]);\n        setCycleList([]);\n        setSelProjectOptions([]);\n        toggleCycleClick();\n        setDisableAddRelease(true);\n        setDisableAddCycle(true);\n        if (screen===undefined && taskName===\"Update Project\"){\n            setSelProject(\"\");\n            setSelDomain(\"\");\n        } \n        if(document.getElementById(\"selProjectOption\") !== null)\n            document.getElementById(\"selProjectOption\").value=\"\";\n\t}\n    \n    const clearUpdateProjectObjects = ()=>{\n\t\tsetNewProjectDetails([])\n        setDeletedProjectDetails([])\n        setEditedProjectDetails([])\n    }\n\n    const clickAddRelease = (props)=>{\n        setFlag(false);\n        setTitle(\"Add Release\"); setPlaceholder(\"Add Release Name\");\n        setModalInputErrorBorder(false);\n        setReleaseTxt(\"\");\n        setShowEditModalRelease(true);\n    }\n\n    const clickAddReleaseName = (props)=>{\n        // eslint-disable-next-line\n        var reg = /^[a-zA-Z0-9\\s\\.\\-\\_]+$/;\n        if (releaseTxt.trim() === \"\") {\n            setModalInputErrorBorder(true);\n            return false;\n        } \n        else if (!reg.test(releaseTxt)) {\n            setModalInputErrorBorder(true);\n            setReleaseTxt(\"\");\n            return false;\n        } else {\n            setModalInputErrorBorder(false);\n            for( var i = 0; i < releaseList.length; i++){\n                if ( releaseList[i] === releaseTxt) {\n                    setShowEditModalRelease(false);\n                    setPopupState({show:true,title:\"Add Release\",content:\"Release Name already exists\"});\n                    setFlag(true);\n                    setShowEditModalRelease(false);\n                    return false;\n                }\n            }\n            \n            setShowEditModalRelease(false);\n            if (taskName === \"Create Project\") {\n                releaseList.push(releaseTxt);\n                setReleaseList(releaseList);\n                setActiveRelease(releaseList[releaseList.length-1]);\n                \n                var releCycObj = {\n                    \"name\": '',\n                    \"cycles\": []\n                };\n                releCycObj.name = releaseTxt;\n                projectDetails.push(releCycObj);\n                setProjectDetails(projectDetails);\n                toggleCycleClick();\n                setCount(count+1);\n                setCycleList([]);\n            }\n            if (taskName === \"Update Project\") {\n                \n                var createNewRelCyc = {\n                    \"name\": releaseTxt,\n                    \"newStatus\": true,\n                    \"cycles\": []\n                };\n                releaseList.push(releaseTxt);\n                setReleaseList(releaseList);\n                const dataAdd = [...newProjectDetails];\n                dataAdd.push(createNewRelCyc);\n                setNewProjectDetails(dataAdd);\n                toggleCycleClick();\n                setActiveRelease(releaseList[releaseList.length-1]);\n                setCount(count+1);\n                setCycleList([]);\n            }\n        }\n    }\n\n    const updateReleaseName = ()=>{\n\t\tvar existingReleaseName = activeRelease;\n\t\tsetFlag(false);\n        var editRelid = existingReleaseName;\n        // eslint-disable-next-line\n        var reg = /^[a-zA-Z0-9\\s\\.\\-\\_]+$/;\n        if (releaseTxt=== \"\") {\n            setModalInputErrorBorder(true);\n            return false;\n        } else if (!reg.test(releaseTxt)) {\n            setModalInputErrorBorder(true);\n            setReleaseTxt(\"\");\n            return false;\n        } else {\n            setModalInputErrorBorder(false);\n            for (var i = 0; i < releaseList.length; i++) {\n                if (releaseList[i] === releaseTxt) {\n                    setPopupState({show:true,title:\"Add Release\",content:\"Release Name already exists\"});\n                    setFlag(true);\n                    return false;\n                }\n            }\n            const releaseName = releaseTxt;\n            if (taskName === \"Create Project\") {\n                setShowEditNameModalRelease(false);\n                for (i = 0; i < projectDetails.length; i++) {\n                    if (projectDetails[i].name === existingReleaseName) {\n                        projectDetails[i].name = releaseName;\n                        setProjectDetails(projectDetails);\n                        break;\n                    }\n                }\n                for (i = 0; i < releaseList.length; i++) {\n                    if (releaseList[i] === existingReleaseName) {\n                        releaseList[i] = releaseName;\n                        setReleaseList(releaseList);\n                        break;\n                    }\n                }\n                setActiveRelease(releaseName);\n            } \n            else if (taskName === \"Update Project\") {\n                for (i = 0; i < updateProjectDetails.length; i++) {\n                    if (releaseName.trim() === updateProjectDetails[i].name) {\n                        setShowEditNameModalRelease(false);\n                        setPopupState({show:true,title:\"Add Release\",content:\"Release Name already exists\"});\n                        return false;\n                    }\n                }\n                for (i = 0; i < newProjectDetails.length; i++) {\n                    if (releaseName.trim() === newProjectDetails[i].name) {\n                        setShowEditNameModalRelease(false);\n                        setPopupState({show:true,title:\"Edit Release Name\",content:\"Release Name already exists\"});\n                        return false;\n                    } else {\n                        if (existingReleaseName === newProjectDetails[i].name) {\n                            newProjectDetails[i].name = releaseName.trim();\n                            setNewProjectDetails(newProjectDetails);\n                        }\n                    }\n                }\n                setShowEditNameModalRelease(false);\n                var oldRelText = existingReleaseName;\n                for ( i = 0; i < projectDetails.length; i++) {\n                    if (projectDetails[i].name === existingReleaseName) {\n                        projectDetails[i].name = releaseName;\n                        setProjectDetails(projectDetails);\n                        break;\n                    }\n                }\n                for ( i = 0; i < releaseList.length; i++) {\n                    if (releaseList[i] === existingReleaseName) {\n                        releaseList[i] = releaseName;\n                        setReleaseList(releaseList);\n                        break;\n                    }\n                }\n                for (i = 0; i < updateProjectDetails.length; i++) {\n                    if(updateProjectDetails[i].name === existingReleaseName){\n                        var editRelCyc = {\n                            \"releaseId\": \"\",\n                            \"name\": \"\",\n                            \"oldreleaseName\": \"\",\n                            \"cycles\": [],\n                            \"editStatus\": false\n                        };\n                        updateProjectDetails[i].name = releaseName;\n                        setUpdateProjectDetails(updateProjectDetails);\n\n                        //For update project json\n                        if (editedProjectDetails.length <= 0) {\n                            editRelCyc.releaseId = editRelid; //updateProjectDetails[i].releaseId;\n                            editRelCyc.name = releaseName; //updateProjectDetails[i].name;\n                            editRelCyc.oldreleaseName = oldRelText;\n                            editRelCyc.editStatus = true;\n                            editedProjectDetails.push(editRelCyc);\n                            setEditedProjectDetails(editedProjectDetails);\n                        } else {\n                            var chkPresent = true;\n                            for (var m = 0; m < editedProjectDetails.length; m++) {\n                                if (editedProjectDetails[m].releaseId === editRelid /*updateProjectDetails[i].releaseId*/) {\n                                    editedProjectDetails[m].name = releaseName; //updateProjectDetails[i].name;\n                                    editedProjectDetails[m].oldreleaseName = oldRelText;\n                                    editedProjectDetails[m].editStatus = true;\n                                    setEditedProjectDetails(editedProjectDetails);\n                                    chkPresent = false;\n                                    break;\n                                }\n                            }\n                            if (chkPresent === true) {\n                                editRelCyc.releaseId = editRelid; //updateProjectDetails[i].releaseId;\n                                editRelCyc.name = releaseName; //updateProjectDetails[i].name;\n                                editRelCyc.oldreleaseName = oldRelText;\n                                editRelCyc.editStatus = true;\n                                editedProjectDetails.push(editRelCyc);\n                                setEditedProjectDetails(editedProjectDetails);\n                            }\n                        }\n                        //For update project json\n                        break;\n                    }\n                }\n                setActiveRelease(releaseName);\n            }\n        }\n    }\n\n    const clickEditRelease = (editId) =>{\n        // setEditReleaseId(editId);\n        setTitle(\"Edit Release Name\");setPlaceholder(\"Enter New Release Name\");\n        if (editId !== \"releaseName\") {\n            setModalInputErrorBorder(false);\n        }\n        setShowEditNameModalRelease(true);\n    }\n\n    const clickEditCycle = (editId,oldCycName) =>{\n        setOldCyclename(oldCycName);\n        setTitle(\"Edit Cycle Name\");setPlaceholder(\"Enter New Cycle Name\");\n        setCycleTxt(oldCycName);\n        setModalInputErrorBorder(false);\n        if (editId !== \"cycleName\") {\n            setModalInputErrorBorder(false);\n        }\n        setShowEditNameModalCycle(true);\n    }\n    \n    const updateCycleName = () =>{\n        var existingCycleName = oldCyclename;\n        setFlag(false);\n        // eslint-disable-next-line\n        var reg = /^[a-zA-Z0-9\\s\\.\\-\\_]+$/;\n        \n        for (var i = 0; i < cycleList.length; i++) {\n            if (cycleList[i] === cycleTxt.trim()) {\n                setPopupState({show:true,title:\"Add Cycle\",content:\"Cycle Name already exists for this release\"});\n                setFlag(true);\n                return false;\n            }\n        }\n        if (cycleTxt === \"\") {\n            setModalInputErrorBorder(true);\n            return false;\n        } else if (!reg.test(cycleTxt)) {\n            setModalInputErrorBorder(true);\n            setCycleTxt(\"\");\n            return false;\n        }  else {\n            var relID = activeRelease;\n            for (i = 0; i < updateProjectDetails.length; i++) {\n                if (relID === updateProjectDetails[i].name) {\n                    for (var j = 0; j < updateProjectDetails[i].cycles.length; j++) {\n                        if (cycleTxt.trim() === updateProjectDetails[i].cycles[j].name) {\n                            setShowEditNameModalCycle(false);\n                            setPopupState({show:true,title:\"Edit Cycle Name\",content:\"Cycle Name already exists\"});\n                            return false;\n                        }\n                    }\n                    break;\n                }\n            }\n            setModalInputErrorBorder(false);\n            var cycleName = cycleTxt;\n            setShowEditNameModalCycle(false);\n            if (taskName === \"Create Project\") {\n                for ( i = 0; i < cycleList.length; i++) {\n                    if (cycleList[i] === existingCycleName) {\n                        cycleList[i] = cycleName;\n                        setCycleList(cycleList);\n                        break;\n                    }\n                }\n                for ( i = 0; i < projectDetails.length; i++) {\n                    if (projectDetails[i].name === activeRelease) {\n                        for ( j = 0; j < projectDetails[i].cycles.length; j++) {\n                            if (projectDetails[i].cycles[j].name === existingCycleName) {\n                                projectDetails[i].cycles[j] = {\"name\":cycleTxt};\n                                setProjectDetails(projectDetails);\n                            }\n                        }\n                    }\n                }\n            } else if (taskName === \"Update Project\") {\n                var oldCycText = oldCyclename;\n                for ( i = 0; i < cycleList.length; i++) {\n                    if (cycleList[i] === existingCycleName) {\n                        cycleList[i] = cycleName;\n                        setCycleList(cycleList);\n                        break;\n                    }\n                }\n                \n                for ( i = 0; i < updateProjectDetails.length; i++) {\n                    if (updateProjectDetails[i].name === activeRelease) {\n                        for ( j = 0; j < updateProjectDetails[i].cycles.length; j++) {\n                            var objectType = typeof(updateProjectDetails[i].cycles[j]);\n                            if (objectType === \"object\" && (updateProjectDetails[i].cycles[j].name === existingCycleName) && (updateProjectDetails[i].name === activeRelease) ) {\n                                var editCycId= updateProjectDetails[i].cycles[j]._id;\n                                var editRelCyc = {\n                                    \"releaseId\": \"\",\n                                    \"name\": \"\",\n                                    \"oldreleaseName\": \"\",\n                                    \"cycles\": [],\n                                    \"editStatus\": false\n                                };\n                                var editCycle = {\n                                    \"oldCycleName\": \"\",\n                                    \"name\": \"\",\n                                    \"_id\": \"\",\n                                    \"editStatus\": false\n                                };\n                                updateProjectDetails[i].cycles[j].name = cycleTxt;\n\n                                //For update project json\n                                if (editedProjectDetails.length <= 0) {\n                                    //building release details\n                                    editRelCyc.releaseId = relID; //updateProjectDetails[i].releaseId;\n                                    editRelCyc.name = activeRelease; //updateProjectDetails[i].releaseName;\n                                    //building cycle details with release\n                                    editCycle.oldCycleName = oldCycText;\n                                    editCycle.cyclename = cycleTxt; //updateProjectDetails[i].cycles[j].cycleName;\n                                    editCycle._id = editCycId; //updateProjectDetails[i].cycles[j].cycleId;\n                                    editCycle.editStatus = true;\n                                    editRelCyc.cycles.push(editCycle);\n                                    //pushing all data to an array\n                                    editedProjectDetails.push(editRelCyc);\n                                    setEditedProjectDetails(editedProjectDetails);\n                                } else {\n                                    var chkRelPresent = true;\n                                    for (var m = 0; m < editedProjectDetails.length; m++) {\n                                        if (editedProjectDetails[m].name === relID /*updateProjectDetails[i].releaseId*/) {\n                                            var chkcycinrel = true;\n                                            for (var n = 0; n < editedProjectDetails[m].cycles.length; n++) {\n                                                if (editedProjectDetails[m].cycles[n].cycleId === editCycId /*updateProjectDetails[i].cycles[j].cycleId*/) {\n                                                    editedProjectDetails[m].cycles[n].cycleName = cycleTxt; //updateProjectDetails[i].cycles[j].cycleName;\n                                                    editedProjectDetails[m].cycles[n].oldCycleName = oldCycText;\n                                                    editedProjectDetails[m].cycles[n].editStatus = true;\n                                                    setEditedProjectDetails(editedProjectDetails);\n                                                    chkcycinrel = false;\n                                                    break;\n                                                }\n                                            }\n                                            if (chkcycinrel === true) {\n                                                //building cycle details with release\n                                                editCycle.oldCycleName = oldCycText;\n                                                editCycle.cycleName = cycleTxt; //updateProjectDetails[i].cycles[j].cycleName;\n                                                editCycle.cycleId = editCycId; //updateProjectDetails[i].cycles[j].cycleId;\n                                                editCycle.editStatus = true;\n                                                editedProjectDetails[m].cycles.push(editCycle);\n                                                setEditedProjectDetails(editedProjectDetails);\n                                                break;\n                                            }\n                                            chkRelPresent = false;\n                                        }\n                                    }\n                                    if (chkRelPresent === true) {\n                                        //building release details\n                                        editRelCyc.releaseId = relID; //updateProjectDetails[i].releaseId;\n                                        editRelCyc.name = activeRelease; //updateProjectDetails[i].releaseName;\n                                        //building cycle details with release\n                                        editCycle.oldCycleName = oldCycText;\n                                        editCycle.cycleName = cycleTxt; //updateProjectDetails[i].cycles[j].cycleName;\n                                        editCycle.cycleId = editCycId; //updateProjectDetails[i].cycles[j].cycleId;\n                                        editCycle.editStatus = true;\n                                        editRelCyc.cycles.push(editCycle);\n                                        //pushing all data to an array\n                                        editedProjectDetails.push(editRelCyc);\n                                        setEditedProjectDetails(editedProjectDetails);\n                                    }\n                                }\n                                break;\n                            }\n                            //For update project json\n                            if (objectType === \"string\" && (updateProjectDetails[i].cycles[j].name === existingCycleName)) {\n                                updateProjectDetails[i].cycles[j] = cycleTxt;\n                                setUpdateProjectDetails(updateProjectDetails);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    const clickAddCycle = (props)=>{\n        setFlag(false);\n        setTitle(\"Add Cycle\");setPlaceholder(\"Add Cycle Name\");\n        setModalInputErrorBorder(false);\n        setCycleTxt(\"\");\n        setShowEditModalCycle(true);\n    }\n\n    //Add Cycle Name Functionality\n    const clickAddCycleName = (props)=>{\n        // eslint-disable-next-line \n        var reg = /^[a-zA-Z0-9\\s\\.\\-\\_]+$/;\n        var relName = activeRelease;\n        // e.preventDefault();\n        setModalInputErrorBorder(false);\n        if (cycleTxt.trim() === \"\") {\n            setModalInputErrorBorder(true);\n            return false;\n        } else if (!reg.test(cycleTxt)) {\n            setModalInputErrorBorder(true);\n            setCycleTxt(\"\");\n            return false;\n        }else {\n            for( var i = 0; i < cycleList.length; i++){\n                if ( cycleList[i] === cycleTxt) {\n                    setShowEditModalCycle(false);\n                    setPopupState({show:true,title:\"Add Cycle\",content:\"Cycle Name already exists for this release\"});\n                    setFlag(true);\n                    return false;\n                }\n            }\n            setModalInputErrorBorder(false);\n            const cycleName = cycleTxt;\n\n            setShowEditModalCycle(false);\n            if (taskName === \"Create Project\") {\n                cycleList.push(cycleName);\n                \n                const ProjectDetails = projectDetails;\n                for (i = 0; i < ProjectDetails.length; i++) {\n                    if (ProjectDetails[i].name === activeRelease) {\n                        ProjectDetails[i].cycles.push({\"name\":cycleName});\n                    }\n                }\n                setProjectDetails(ProjectDetails);\n                toggleCycleClick();\n                setDelCount(delCount+1);\n            }\n            if (taskName === \"Update Project\") {\n                var createNewRelCyc = {\n                    \"name\": \"\",\n                    \"releaseId\": \"\",\n                    \"newStatus\": false,\n                    \"cycles\": []\n                };\n                var createCyc = {\n                    \"name\": \"\",\n                    \"newStatus\": true\n                };\n                setDelCount((delCount + 1) * 3);\n                cycleList.push(cycleName);\n                // var RelID = activeRelease;\n                var RelID = activeRelease;// please check why in orignal also undefined \n                //For update project json\n                if (newProjectDetails.length <= 0) {\n                    createNewRelCyc.name = relName;\n                    createNewRelCyc.releaseId = RelID;\n                    createCyc.name = cycleName;\n                    createNewRelCyc.cycles.push(createCyc);\n                    newProjectDetails.push(createNewRelCyc);\n                    setNewProjectDetails(newProjectDetails);\n                } else {\n                    var chk = true;\n                    for (var j = 0; j < newProjectDetails.length; j++) {\n                        // if (newProjectDetails[j].name === relName && newProjectDetails[j].releaseId === RelID) {\n                        //check when cycle is added to new created release RelID is undefined (check not needed)\n                        if (newProjectDetails[j].name === relName ) {\n                            createCyc.name = cycleName;\n                            newProjectDetails[j].cycles.push(createCyc);\n                            setNewProjectDetails(newProjectDetails);\n                            chk = false;\n                            break;\n                        }\n                    }\n                    if (chk === true) {\n                        createNewRelCyc.name = relName;\n                        createNewRelCyc.releaseId = RelID;\n                        createCyc.name = cycleName;\n                        createNewRelCyc.cycles.push(createCyc);\n                        newProjectDetails.push(createNewRelCyc);\n                        setNewProjectDetails(newProjectDetails);\n                    }\n                }\n                //console.log(newProjectDetails); \n                toggleCycleClick();\n                setDelCount(delCount+1);\n                \n            }\n        }    \n    }\n\n    const clickReleaseListName = (props)=>{\n        var releaseName = props.releaseName;\n        setActiveRelease(props.releaseName);\n        setReleaseTxt(props.releaseName);\n        if (releaseList.length === 0) {\n            setCycleList([]);\n\t\t\tsetUpdateProjectDetails([]);\n\t\t}\n\t\ttoggleCycleClick();\n        var id = \"#\".concat(props.id);\n\t\tif (taskName === \"Create Project\" && id.indexOf(\"edit\") !== 0 && id.indexOf(\"delete\") !== 0) {\n            const CycleList = [];\n\t\t\tif (projectDetails.length > 0) {\n\t\t\t\tfor (var i = 0; i < projectDetails.length; i++) {\n\t\t\t\t\tif (projectDetails[i].name === releaseName && 'cycles' in projectDetails[i]) {\n\t\t\t\t\t\tfor (var j = 0; j < projectDetails[i].cycles.length; j++) {\n                            CycleList.push(projectDetails[i].cycles[j].name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n            }\n            setCycleList(CycleList);\n        }\n\n        if (taskName === \"Update Project\" && id.indexOf(\"edit\") !== 1 && id.indexOf(\"delete\") !== 1) {\n            const CycleList = [];\n\t\t\t//Check Release details if already exist\n\t\t\tif (updateProjectDetails.length > 0) {\n\t\t\t\tfor ( i = 0; i < updateProjectDetails.length; i++) {\n\t\t\t\t\tif (updateProjectDetails[i].name === releaseName && 'cycles' in updateProjectDetails[i]) {\n\t\t\t\t\t\tfor ( j = 0; j < updateProjectDetails[i].cycles.length; j++) {\n\t\t\t\t\t\t\tvar objectType = typeof(updateProjectDetails[i].cycles[j]);\n\t\t\t\t\t\t\tif (objectType === \"object\") {\n                                CycleList.push(updateProjectDetails[i].cycles[j].name);\n\t\t\t\t\t\t\t} else if (objectType === \"string\") {\n                                CycleList.push(updateProjectDetails[i].cycles[j])\n                            }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                }\n                setCycleList(CycleList);\n\t\t\t}\n\n\t\t\t//Check Release details if newly added\n\t\t\tif (newProjectDetails.length > 0) {\n\t\t\t\tfor (i = 0; i < newProjectDetails.length; i++) {\n\t\t\t\t\tif (newProjectDetails[i].name === releaseName && 'cycles' in newProjectDetails[i]) {\n\t\t\t\t\t\tfor (j = 0; j < newProjectDetails[i].cycles.length; j++) {\n\t\t\t\t\t\t\tobjectType = typeof(newProjectDetails[i].cycles[j]);\n\t\t\t\t\t\t\tif (objectType === \"object\") {\n                                CycleList.push(newProjectDetails[i].cycles[j].name);\n                            } else if (objectType === \"string\") {\n                                CycleList.push(newProjectDetails[i].cycles[j])\n                            }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                }\n                setCycleList(CycleList);\n            }\n\t\t}\n    }\n\n    const fetchProjectList = async (domain) =>{\n        if(taskName===\"Update Project\"){\n            setLoading(\"Loading Projects...\")\n            var domainName =domain;\n\t\t\tvar requestedname = [];\n            requestedname.push(domainName);\n            var idtype = [\"domaindetails\"];\n\n            const getDetailsResponse = await getDetails_ICE(idtype, requestedname)\n            if(getDetailsResponse.error){displayError(getDetailsResponse.error);return;}\n            setSelProjectOptions([])\n            const projectOptions=[];\n            for (var i = 0; i < getDetailsResponse.projectNames.length; i++) {\n                projectOptions.push({id:getDetailsResponse.projectIds[i],name:getDetailsResponse.projectNames[i]})\n            }    \n            \n            projectOptions.sort((a,b)=>a.name.localeCompare(b.name));\n            setSelProjectOptions(projectOptions);\n            document.getElementById(\"selProjectOption\").selectedIndex = \"0\";  \n            setEditProjectName(false);\n            setSelProject(\"\")\n            setLoading(false);\n            clearUpdateProjectObjects();\n        }    \n    }\n   \n    const selectProject = async (projectId) =>{\n        setModalInputErrorBorder(false);\n        setSelProjectId(projectId);\n        for (var i = 0; i < selProjectOptions.length; i++) {\n            if(selProjectOptions[i].id === projectId){\n                setSelProject(selProjectOptions[i].name);\n                setEditProjectName(selProjectOptions[i].name)\n                break;\n            }\n        }\n        setDisableAddRelease(false);\n        setUpdateProjectDetails([])\n        var domaiprojectId = projectId;\n        var projects = [];\n        var requestedids = [domaiprojectId];\n        var idtype = [\"projectsdetails\"];\n        projects.push(domaiprojectId);\n        const selProjectRes = await getDetails_ICE(idtype, requestedids);\n        if(selProjectRes.error){displayError(selProjectRes.error);return;}\n        setprojectTypeSelected(selProjectRes.appType);\n        setUpdateProjectDetails(selProjectRes.projectDetails);\n        setCycleList([]);\n        const RelaseNames = [];\n        selProjectRes.projectDetails.map((objctNames)=>(\n            RelaseNames.push(objctNames.name)\n        ))\n        const cycleNames = [];\n        selProjectRes.projectDetails[0].cycles.map((objctNames)=>(\n            cycleNames.push(objctNames.name)\n        ))\n        setReleaseList(RelaseNames);\n        setCycleList(cycleNames)\n        setActiveRelease(RelaseNames[0]);\n        setDisableAddCycle(false);\n        clearUpdateProjectObjects();\n    }\n\n    const closePopup = () =>{\n        setPopupState({show:false,title:\"\",content:\"\"});\n    }\n\n    const closeModal = () =>{\n        setShowProjectEditModal(false);\n    }\n\n    const editModalButtons = () =>{\n        return(\n            <div>\n                <button type=\"button\" onClick={()=>{setShowProjectEditModal(false);}} >Save</button>\n            </div>\n        )\n    } \n\n    const projectEditFunction = (newName) =>{\n        newName = ValidationExpression(newName,\"projectName\");\n        setEditProjectName(newName);\n        setModalInputErrorBorder(false);\n        if(newName.trim() === \"\"){\n            setModalInputErrorBorder(true);\n        } \n    } \n\n    const updateProjectName = (value) => {\n        value = ValidationExpression(value,\"projectName\");\n        setProjectName(value);\n    }\n\n    return (\n    <ScrollBar thumbColor=\"#929397\">\n    <div className=\"project_conatiner\">\n        {popupState.show?<PopupMsg content={popupState.content} title={popupState.title} submit={closePopup} close={closePopup} submitText={\"Ok\"} />:null}\n        {loading?<ScreenOverlay content={loading}/>:null}\n        <div id=\"page-taskName\">\n\t\t\t\t{taskName===\"Create Project\"?\n                <span>Create Project</span>\n                :<span>Update Project</span>\n                }\n\t\t</div>\n        \n        <ProjectButtons setSelDomainOptions={setSelDomainOptions} editProjectName={editProjectName} setProjectDetails={setProjectDetails} selDomain={selDomain} resetForm={resetForm} newProjectDetails={newProjectDetails} projectDetails={projectDetails} releaseList={releaseList} selProject={selProject} updateProjectDetails={updateProjectDetails} projectTypeSelected={projectTypeSelected} projectName={projectName} flag={flag} clearUpdateProjectObjects={clearUpdateProjectObjects} setProjectNameInputErrorBorder={setProjectNameInputErrorBorder} taskName={taskName} setFlag={setFlag} editProjectTab={editProjectTab} selProjectId={selProjectId} editedProjectDetails={editedProjectDetails} deletedProjectDetails={deletedProjectDetails} setDomainSelectErrorBorder={setDomainSelectErrorBorder} setProjectSelectErrorBorder={setProjectSelectErrorBorder}/>\n\n        <div className=\"col-xs-9 form-group\" style={{width: \"83%\"}}>\n            <div className='userForm-project projectForm-project display-project' >\n                <div className='domainTxt'>Domain</div>\n                <select defaultValue={\"\"} value={selDomain} onChange={(event)=>{fetchProjectList(event.target.value);setSelDomain(event.target.value);}} className={domainSelectErrorBorder===true?'selectErrorBorder adminSelect-project form-control__conv-project domain-custom':\"adminSelect-project form-control__conv-project domain-custom\"} id=\"selDomain\" >\n                    {(taskName===\"Update Project\")?\n                        <option disabled={true} value=\"\">Please Select Your Domain</option>\n                    :null}\n                    {selDomainOptions.map((e,i)=>(\n                        <option key={i}  value={selDomainOptions[i]} onClick={()=>{fetchProjectList();setSelDomain(selDomainOptions[i]);}}>{selDomainOptions[i]}</option>\n                    ))}\n                </select>\n            </div>\n            {(taskName===\"Update Project\")?\n            <div className='userForm-project projectForm-project display-project'  >\n                <div className='domainTxt'>Project</div>\n                <select onChange={(event)=>{selectProject(event.target.value);}}  className={projectSelectErrorBorder===true?'selectErrorBorder adminSelect-project form-control__conv-project sel-domain-wid':\"adminSelect-project form-control__conv-project sel-domain-wid\"} id=\"selProjectOption\" >\n                        <option disabled={true} value=\"\" selected>Please Select Your Project</option>\n                        {selProjectOptions.map((optionProject)=>(\n                            <option key={optionProject.id} name={optionProject.name} value={optionProject.id}>{optionProject.name}</option>\n                        ))}\n                </select>\n                <span  className={\"edit-project \"+(selProject===\"\"?\" disableEditProject-span\":\"\")} >\n                    <img onClick={()=>{setShowProjectEditModal(true)}} title='Edit Project Name' src={\"static/imgs/ic-edit-sm.png\"} alt=\"Edit Project Name\" className={'editProjectName'+(selProject===\"\"?\" disableEditProject\":\"\")}/>\n                </span>\n            </div>\n            \n            :<div className='userForm-project adminControl-project display-project' >\n                <div className='domainTxt'>Name</div>\n                <input value={projectName} onChange={(event)=>{updateProjectName(event.target.value)}} type=\"text\" autoComplete=\"off\" id=\"projectName\" name=\"projectName\" maxLength=\"100\" className={projectNameErrorBorder?\"inputErrorBorder middle__input__border form-control__conv-project form-control-custom def-margin\":\"middle__input__border form-control__conv-project form-control-custom def-margin\"} placeholder=\"Project Name\"/>\n            </div>\n            }\n            <div className='userForm-project adminControl-project display-project'>\n                {editProjectName!==selProject && editProjectName!==\"\" && editProjectName!==false && showProjectEditModal===false? \n                <div className='edit-project__label'>New Project Name : {editProjectName}. Please click on Update.</div>:null}\n            </div>\n            \n            <div className='domainTxt appTypeTxt'>Application Type</div>\n\n            <div className={taskName===\"Update Project\"?\" disableApplicationType appTypesContainer\":\"appTypesContainer\"}>\n                {applicationType.map((e,i)=>(\n                    <div key={i} onClick={()=>{setprojectTypeSelected(applicationType[i]['data'])}}  className={(projectTypeSelected===applicationType[i]['data'])?\"projectTypeSelected projectTypes_create\":\"projectTypes_create\"} data-app={applicationType[i]['data']}  title={applicationType[i]['title']} ><img src={\"static/imgs/\"+applicationType[i]['img']+\".png\"} alt={applicationType[i]['title']}/><label>{applicationType[i]['title']}</label></div>\n                ))}\n            </div>\n        </div>\n\n        <ReleaseCycle clickAddRelease={clickAddRelease} releaseList={releaseList} clickReleaseListName={clickReleaseListName} setActiveRelease={setActiveRelease} clickEditRelease={clickEditRelease} activeRelease={activeRelease} count={count} clickAddCycle={clickAddCycle} cycleList={cycleList} clickEditCycle={clickEditCycle} delCount={delCount} disableAddRelease={disableAddRelease} taskName={taskName} disableAddCycle={disableAddCycle} />\n       \n        {(showEditModalRelease)? <ModalContainer title={title} footer={ModalButtonsFooter(clickAddReleaseName)} close={()=>{setShowEditModalRelease(false)}} content={ModalContainerMiddleContent(modalInputErrorBorder, releaseTxt, setReleaseTxt, placeholder, \"releaseTxt\" )} modalClass=\" modal-sm\" />:null}   \n        {(showEditModalCycle)? <ModalContainer title={title} footer={ModalButtonsFooter(clickAddCycleName)} close={()=>{setShowEditModalCycle(false)}} content={ModalContainerMiddleContent(modalInputErrorBorder, cycleTxt, setCycleTxt, placeholder, \"cycleTxt\" )} modalClass=\" modal-sm\" /> :null} \n        {(showEditNameModalRelease)? <ModalContainer title={title} footer={ModalButtonsFooter(updateReleaseName)} close={()=>{setShowEditNameModalRelease(false)}} content={ModalContainerMiddleContent(modalInputErrorBorder, releaseTxt, setReleaseTxt, placeholder, \"releaseTxt\" )} modalClass=\" modal-sm\" />:null} \n        {(showEditNameModalCycle)? <ModalContainer title={title} footer={ModalButtonsFooter(updateCycleName)} close={()=>{setShowEditNameModalCycle(false)}} content={ModalContainerMiddleContent(modalInputErrorBorder, cycleTxt, setCycleTxt, placeholder, \"cycleTxt\" )} modalClass=\" modal-sm\" /> :null}\n        {showProjectEditModal? <ModalContainer title=\"Edit Project Name\" footer={editModalButtons()} close={closeModal} content={editModalcontent(editProjectName, projectEditFunction, modalInputErrorBorder, projectNameErrorBorder)} modalClass=\" modal-sm\" /> :null}  \n    </div>\n    </ScrollBar>\n  );\n}\n\nconst ModalContainerMiddleContent = (modalInputErrorBorder,Txt,setTxt, placeholder, ValidExpression) => {\n    const updateName = (value) => {\n        value = ValidationExpression(value,ValidExpression);\n        setTxt(value);\n    }\n    return(\n        <p><input autoComplete=\"off\" value={Txt} onChange={(event)=>{updateName(event.target.value)}} maxLength=\"100\" type=\"text\" className={(modalInputErrorBorder)?\"middle__input__border form-control__conv form-control-custom inputErrorBorder\":\"middle__input__border form-control__conv form-control-custom\"}  placeholder={placeholder}/></p>\n    )\n}\n\nconst ModalButtonsFooter = (saveAction) =>{\n    return(\n        <div>\n            <button type=\"button\" onClick={()=>{saveAction();}} >Save</button>\n        </div>\n    )\n} \n\nconst editModalcontent = (editProjectName, projectEditFunction, modalInputErrorBorder, projectNameErrorBorder) =>{\n    return(\n        <div>\n            <input value={editProjectName} onChange={(event)=>{projectEditFunction(event.target.value)}} type=\"text\" autoComplete=\"off\" id=\"editProjectName\" name=\"editProjectName\" maxLength=\"100\" className={ (modalInputErrorBorder?\"inputErrorBorder \":\"\") + (projectNameErrorBorder?\"inputErrorBorder \":\"\") + \"middle__input__border form-control__conv-project form-control-custom\"} placeholder=\"Project Name\"/>\n        </div>\n    )\n} \n\n\nexport default ProjectNew;","import React ,  { useEffect, useState} from 'react';\nimport {getUserDetails, getDomains_ICE, getAssignedProjects_ICE, getDetails_ICE, assignProjects_ICE} from '../api';\nimport {ScreenOverlay, PopupMsg, ModalContainer, ScrollBar} from '../../global'\nimport { useSelector} from 'react-redux'; \nimport '../styles/ProjectAssign.scss';\n\n/*Component ProjectAssign\n  use: renders Project Assign Middle Screen\n  todo: \n*/\n    \nconst ProjectNew = (props) => {\n    \n    const userInfo = useSelector(state=>state.login.userinfo);\n    const [userSelectErrorBorder,setUserSelectErrorBorder] = useState(false)\n    const [domainSelectErrorBorder,setDomainSelectErrorBorder] = useState(false)\n    const [selectBox,setSelectBox] = useState([])\n    const [assignProj,setAssignProj] = useState({allProjectAP:[],assignedProjectAP:[]})\n    const [assignedProjectInitial,setAssignedProjectInitial] = useState([])\n    const [unAssignedFlag,setUnAssignedFlag] = useState(false)\n    const [showAssignProjectModal,setShowAssignProjectModal] = useState(false)\n    const [statechange,setStateChange] = useState(true)\n    const [selDomainsOptions,setSelDomainsOptions] = useState([])\n    const [selectedUserName,setSelectedUserName] = useState(\"\")\n    const [selectedProject,setSelectedProject] = useState(\"\")\n    const [selectedUserId,setSelectedUserId] = useState(\"\")\n    const [loading,setLoading] = useState(false)\n    const [popupState,setPopupState] = useState({show:false,title:\"\",content:\"\"})\n    const [getAssignedProjectsLen,setGetAssignedProjectsLen] = useState(0)\n    // eslint-disable-next-line\n    const [showload,setShowload] = useState(false)\n    // eslint-disable-next-line\n    const [unAssignedProjects,setUnAssignedProjects] = useState([])\n    // eslint-disable-next-line\n    const [assignedProjects,setAssignedProjects] = useState([])\n    // eslint-disable-next-line\n    const [diffprj,setDiffprj] = useState(\"\")\n    \n\n    useEffect(()=>{\n        setShowload(false);\n            resetAssignProjectForm();\n            fetchUsers();\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[props.resetMiddleScreen[\"assignProjectTab\"]])\n\n    const displayError = (error) =>{\n        setLoading(false)\n        setPopupState({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n\n    const fetchUsers= async ()=>{\n        const data = await getUserDetails(\"user\");\n        if(data.error){displayError(data.error);return;}\n        var userOptions = [];\n        for(var i=0; i<data.length; i++){\n            if(data[i][3] !== \"Admin\"){\n                userOptions.push(data[i]);\n            }\n        }\n        setSelectBox(userOptions.sort());\n        if(document.getElementById(\"selAssignUser\") !== null)\n            document.getElementById(\"selAssignUser\").selectedIndex = \"0\"; \n        if(document.getElementById(\"selDomains\") !== null)\n        document.getElementById(\"selDomains\").selectedIndex = \"0\";       \n\n    }\n\n    const resetAssignProjectForm = () =>{\n        setAssignProj({allProjectAP:[],assignedProjectAP:[]});   \n        setSelDomainsOptions([]);\n        setSelectBox([]);\n    }\n\n    const clickSelAssignUser = async (userName)=>{\n        \n        \n        for(var i=0; i<selectBox.length; i++){\n            if(selectBox[i][0] === userName){\n                setSelectedUserId(selectBox[i][1])\n                break;\n            }\n        }\n        setSelectedUserName(userName);\n        setAssignedProjectInitial([]);\n\t\tsetAssignProj({allProjectAP:[],assignedProjectAP:[]});\n\t\tsetShowload(true);\n        const data = await getDomains_ICE();\n        if(data.error){displayError(data.error);return;}\n        setSelDomainsOptions(data);  \n        document.getElementById(\"selDomains\").selectedIndex = \"0\";  \n    }\n\n    const ClickSelDomains = async(domainname) =>{\n        setSelectedProject(domainname);\n\t\tsetAssignProj({allProjectAP:[],assignedProjectAP:[]});\n\t\tvar requestedids = [];\n\t\trequestedids.push(domainname);\n\t\tvar idtype = [\"domaindetails\"];\n\t\tvar userId = selectedUserId;\n\t\tvar getAssignProj = {};\n\t\tgetAssignProj.domainname = domainname;\n\t\tgetAssignProj.userId = userId;\n\t\tvar assignedProjectsArr = [];\n\t\tvar assignedProjectNames = [];\n\t\tvar unassignedProjectIds = [];\n\t\tvar unassignedProjectNames = [];\n        var unAssignedProjects1 = {};\n        try{\n            const data1 = await getAssignedProjects_ICE(getAssignProj);\n            if(data1.error){displayError(data1.error);return;}\n            setGetAssignedProjectsLen(data1.length);\n            assignProj.assignedProjectAP = [];\n            setAssignProj(assignProj);\n            if (data1.length > 0) {\n                for (var i = 0; i < data1.length; i++) {\n                    assignProj.assignedProjectAP.push({'projectid':data1[i]._id,'projectname':data1[i].name});\n                }\n                setAssignProj(assignProj);\n                setAssignedProjectInitial(assignProj.assignedProjectAP);\n                for (var j = 0; j < data1.length; j++) {\n                    assignedProjectsArr.push(data1[j]._id);\n                    assignedProjectNames.push(data1[j].name);\n                }\n                const detResponse = await getDetails_ICE(idtype, requestedids);\n                if(detResponse.error){displayError(detResponse.error);return;}\n                assignProj.allProjectAP = [];\n                setAssignProj(assignProj);\n                if (detResponse.projectIds.length > 0) {\n                    for (var k = 0; k < detResponse.projectIds.length; k++) {\n                        if (!eleContainsInArray(assignedProjectsArr, detResponse.projectIds[k])) {\n                            unassignedProjectIds.push(detResponse.projectIds[k]);\n                        }\n                    }\n\n                    for (var l = 0; l < detResponse.projectNames.length; l++) {\n                        if (!eleContainsInArray(assignedProjectNames, detResponse.projectNames[l])) {\n                            unassignedProjectNames.push(detResponse.projectNames[l]);\n                        }\n                    }\n\n                    unAssignedProjects1.projectIds = unassignedProjectIds;\n                    unAssignedProjects1.projectNames = unassignedProjectNames;\n                    for (var m = 0; m < unAssignedProjects1.projectIds.length; m++) {\n                        assignProj.allProjectAP.push({'projectname':unAssignedProjects1.projectNames[m],'projectid':unAssignedProjects1.projectIds[m]});\n                    }\n                    setAssignProj(assignProj);\n                    if (selectedUserName === '') {\n                        setAssignProj({allProjectAP:[],assignedProjectAP:[]});\n                    }\n                    setShowload(false);\n                }\n            } else {\n                const res = await getDetails_ICE(idtype, requestedids);\n                if(res.error){displayError(res.error);return;}\n                if (res.projectIds.length > 0) {\n                    assignProj.allProjectAP = [];\n                    assignProj.assignedProjectAP = [];\n                    for (var n = 0; n < res.projectIds.length; n++) {\n                        assignProj.allProjectAP.push({'projectname':res.projectNames[n],'projectid':res.projectIds[n]});\n                    }\n                    setAssignProj(assignProj);\n                }\n                setShowload(false);\n            }  \n        }catch(error){\n            console.log(\"Error:::::::::::::\", error);\n        } \n    }\n\n    const eleContainsInArray = (arr, element)=> {\n        if (arr !== null && arr.length > 0) {\n            for (var s = 0; s < arr.length; s++) {\n                if (arr[s] === element)\n                    return true;\n            }\n        }\n        return false;\n    }\n    \n\tconst moveItemsLeftgo = (to,from) =>{\n\t\tsetUnAssignedFlag(true);\n        \n        var selectId = document.getElementById(\"assignedProjectAP\");\n\n        var newAllProj = [];\n        var newAssignProj = [];\n        for(var i=0;i<selectId.options.length;i++){\n            if(selectId.options[i].selected ===  true){\n                newAllProj.push(JSON.parse(selectId.options[i].value));\n            }\n            else{\n                newAssignProj.push(JSON.parse(selectId.options[i].value));\n            }\n        }\n        newAllProj = assignProj.allProjectAP.concat(newAllProj);\n        setAssignProj({allProjectAP:newAllProj,assignedProjectAP:newAssignProj});\n        selectId.selectedIndex = \"-1\";\n    };\n    \n\tconst moveItemsRightgo = (from,to) =>{\n\t\tsetUnAssignedFlag(false);\n\n        var selectId = document.getElementById(\"allProjectAP\");\n        var newAllProj = [];\n        var newAssignProj = [];\n        for(var i=0;i<selectId.options.length;i++){\n            if(selectId.options[i].selected ===  true){\n                newAssignProj.push(JSON.parse(selectId.options[i].value));\n            }\n            else{\n                newAllProj.push(JSON.parse(selectId.options[i].value));\n            }\n        }\n        newAssignProj = assignProj.assignedProjectAP.concat(newAssignProj);\n        setAssignProj({allProjectAP:newAllProj,assignedProjectAP:newAssignProj});\n        selectId.selectedIndex = \"-1\";\n\t};\n\n\tconst moveItemsLeftall =  ()=> {\n\t\tsetUnAssignedFlag(true);\n        for(var i=0; i<assignProj.assignedProjectAP.length; i++){\n            assignProj.allProjectAP.push(assignProj.assignedProjectAP[i]);\n        }\n        assignProj.assignedProjectAP=[];\n        setAssignProj(assignProj);\n        setStateChange(!statechange);\n\t};\n\n\tconst moveItemsRightall =() =>{\n\n        setUnAssignedFlag(false);\n        for(var i=0; i<assignProj.allProjectAP.length; i++){\n            assignProj.assignedProjectAP.push(assignProj.allProjectAP[i]);\n        }\n        assignProj.allProjectAP=[];\n        setAssignProj(assignProj);\n        setStateChange(!statechange);\n    };\n\n    const clickAssignProjects = () =>{\n        if(unAssignedFlag === true) setShowAssignProjectModal(true);\n        else clickAssignProjects1();\n    }\n\n    const clickAssignProjects1 = async () =>{\n        setShowAssignProjectModal(false);\n        setUnAssignedProjects([]);\n\t\tsetAssignedProjects([]);\n        \n        setUserSelectErrorBorder(false);\n        setDomainSelectErrorBorder(false);\n        \n        if (selectedUserName === \"\") {\n            setUserSelectErrorBorder(true);\n\t\t\treturn false;\n\t\t} else if (selectedProject === \"\") {\n            setDomainSelectErrorBorder(true);\n\t\t\treturn false;\n\t\t}\n\n        var unAssignedProjects1 = [];\n        for(var i=0; i<assignProj.allProjectAP.length; i++){\n            var unassignedProj = {};\n\t\t\tunassignedProj.projectId = assignProj.allProjectAP[i].projectid;\n\t\t\tunassignedProj.projectName = assignProj.allProjectAP[i].projectname;\n            unAssignedProjects1.push(unassignedProj);\n            setUnAssignedProjects(unAssignedProjects1);\n        }\n\n        var assignedProjects1 = [];\n        for( i=0; i<assignProj.assignedProjectAP.length; i++){\n            var assignedProj = {};\n\t\t\tassignedProj.projectId = assignProj.assignedProjectAP[i].projectid;\n\t\t\tassignedProj.projectName = assignProj.assignedProjectAP[i].projectname;\n            assignedProjects1.push(assignedProj);\n            setAssignedProjects(assignedProjects1);\n        }\n\n        // var userDetails = JSON.parse(window.localStorage['_UI']);\n\t\tvar userId = selectedUserId;\n\n\t\tvar assignProjectsObj = {};\n\t\tassignProjectsObj.domainname = selectedProject;\n\t\t// assignProjectsObj.userInfo = userDetails;\n\t\tassignProjectsObj.userId = userId;\n\t\tassignProjectsObj.assignedProjects = assignedProjects1;\n        assignProjectsObj.getAssignedProjectsLen = getAssignedProjectsLen;\n        assignProjectsObj.userInfo = userInfo\n\n\t\t/* Logic to get unassigned project list */\n        setDiffprj([]);\n        var currentDiffPrj = getDifferentProjects(assignedProjects1);\n\t\t//console.log($scope.diffprj);\n\t\t/*End of logic to get unassigned project list */\n\t\tassignProjectsObj.deletetasksofprojects = currentDiffPrj;\n\t\t//console.log(assignProjectsObj);\n\n\t\t//Transaction Activity for Assign Project Button Action\n\t\t// var labelArr = [];\n\t\t// var infoArr = [];\n\t\t// labelArr.push(txnHistory.codesDict['AssignProjects']);\n        // txnHistory.log($event.type,labelArr,infoArr,$location.$$path);\n        \n        setLoading('Saving in Progress. Please Wait...');\n        const data = await assignProjects_ICE(assignProjectsObj)\n        if(data.error){displayError(data.error);return;}\n        setLoading(false);\n        if (data === 'success') {\n            if (assignedProjects1.length !== 0){\n                setPopupState({show:true,title:\"Assign Project\",content:\"Projects assigned to user successfully\"});\n            }\n            else{\n                setPopupState({show:true,title:\"Assign Project\",content:\"Projects unassigned successfully\"});\n            } \n            resetAssignProjectForm();\n        } else {\n            setPopupState({show:true,title:\"Assign Project\",content:\"Failed to assign projects to user\"});\n        }\n        fetchUsers();\n    }\n\n    const getDifferentProjects= (assignedProjects1)=>{\n        setDiffprj(assignedProjectInitial);\n        var diffprjNew = [];\n        \n        for (var i = 0; i < assignedProjectInitial.length; i++) { \n            var flag1 = false; \n            for (var j = 0; j < assignedProjects1.length; j++) { \n                if(assignedProjectInitial[i].projectid === assignedProjects1[j].projectId){\n                    flag1 = true;\n                    break;\n                }\n            }\n            if(flag1 === false) diffprjNew.push(assignedProjectInitial[i]);\n        }\n        setDiffprj(diffprjNew);\n        return diffprjNew\n    }\n\n    const closePopup = () =>{\n        setPopupState({show:false,title:\"\",content:\"\"});\n    }\n    \n    return (\n        <ScrollBar thumbColor=\"#929397\">\n        <div className=\"projAssign_container\">\n            {popupState.show?<PopupMsg content={popupState.content} title={popupState.title} submit={closePopup} close={closePopup} submitText={\"Ok\"} />:null}\n            {loading?<ScreenOverlay content={loading}/>:null}\n            <div id=\"page-taskName\">\n                <span>Assign Project</span>\n\t\t    </div>\n\n            <div className=\"adminActionBtn\">\n                <button className=\" a__btn \" onClick={()=>{clickAssignProjects()}}  title=\"Save\">Save</button>\n            </div> \n\n            <div className=\"col-xs-9 form-group\" style={{width: \"83%\"}}>\n                <div className='userForm-project projectForm-project project-custom-top' >\n                    <div className='domainTxt'>User</div>\n                    <select defaultValue={\"\"} onChange={(event)=>{clickSelAssignUser(event.target.value)}} className={userSelectErrorBorder===true?'selectErrorBorder adminSelect-project-assign form-control__conv-project select-margin':\"adminSelect-project-assign form-control__conv-project select-margin\"} id=\"selAssignUser\" >\n                        <option disabled={true} key=\"\" value=\"\" >Select User</option>\n                        {selectBox.map((data)=>(\n                            <option key={data[0]} data-id={data[1]} value={data[0]}>{data[0]}</option>\n                        ))}\n                    </select>\n                </div>\n                \n                <div className='userForm-project projectForm-project display-project'  >\n                    <div className='domainTxt'>Domain</div>\n                    <select defaultValue={\"\"} onChange={(event)=>{ClickSelDomains(event.target.value)}}  className={domainSelectErrorBorder===true?'selectErrorBorder adminSelect-project-assign form-control__conv-project ':\"adminSelect-project-assign form-control__conv-project \"} id=\"selDomains\" style={{width: \"100%\",marginLeft:\"16px\"}} >\n                            <option disabled={true} key=\"\" value=\"\">Please Select Your Domain</option>\n                            {selDomainsOptions.map((data)=>(\n                                <option key={data} value={data}>{data}</option>\n                            ))}\n                    </select>\n                </div>\n            </div>\n\n\n            <div className=\"col-xs-9 form-group assign-container\" style={{width: \"100%\"}}>\n\t\t\t\t<div className=\"project-left2\">\n\t\t\t\t\t{/* <!--Left Select Box--> */}\n\t\t\t\t\t<div className=\"wrap assign-select\">\n\t\t\t\t\t\t{/* <!--Labels--> */}\n\t\t\t\t\t\t<label className=\"labelStyle1\">All Projects</label>\n\t\t\t\t\t\t<div className=\"seprator\" >\n                            <select multiple id=\"allProjectAP\">\n                                {assignProj.allProjectAP.map((prj) => ( \n                                    <option key={prj.projectname} value={JSON.stringify(prj)} >{prj.projectname} </option>\n                                ))}\n                            </select>\n                        </div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* <!--Left Select Box--> */}\n\n\t\t\t\t\t{/* <!--Center Input--> */}\n\t\t\t\t\t<div className=\"wrap wrap-editpro center-button\">\n\t\t\t\t\t\t<button type=\"button\" id=\"rightgo\"  onClick={()=>{moveItemsRightgo('#allProjectAP', '#assignedProjectAP')}} title=\"Move to right\"> &gt; </button>\n\t\t\t\t\t\t<button id=\"rightall\" type=\"button\" onClick={()=>{moveItemsRightall('#allProjectAP', '#assignedProjectAP')}} title=\"Move all to right\"> &gt;&gt; </button>\n\t\t\t\t\t\t<button id=\"leftall\" type=\"button\" onClick={()=>{moveItemsLeftall('#assignedProjectAP','#allProjectAP')}} title=\"Move all to left\"> &lt;&lt; </button>\n                        <button type=\"button\" id=\"leftgo\" onClick={()=>{moveItemsLeftgo('#assignedProjectAP','#allProjectAP')}} title=\"Move to left\"> &lt; </button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/* <!--Center Input--> */}\n\n\t\t\t\t\t{/* <!--Right Select Box--> */}\n\t\t\t\t\t<div className=\"wrap assign-select\">\n\t\t\t\t\t\t{/* <!--Labels--> */}\n\t\t\t\t\t\t<label className=\"labelStyle1\">Assigned Projects</label>\n                        <div className=\"seprator seprator-custom\" >\n\t\t\t\t\t\t\t<select multiple id=\"assignedProjectAP\"  size=\"\">\n\t\t\t\t\t\t\t\t{assignProj.assignedProjectAP.map((prj,index) => ( \n                                   <option key={index} value={JSON.stringify(prj)}  >{prj.projectname} </option>\n                                ))}\n                            </select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* <!--Right Select Box--> */}\n\t\t\t\t</div>\n            </div>    \n\n            {showAssignProjectModal? <ModalContainer title=\"Update Projects\" footer={ModalButtons(clickAssignProjects1, setShowAssignProjectModal)} close={()=>{setShowAssignProjectModal(false)}} content=\"All the tasks that has been assigned to this user will be removed from this user's queue from the project(s) which are being unassigned (if any). Do you want to proceed?\" modalClass=\" modal-sm\" /> :null}  \n        </div>\n        </ScrollBar>\n    )\n}\n\nconst ModalButtons = (clickAssignProjects1, setShowAssignProjectModal) =>{\n    return(\n        <div className=\"modal-footer-edit\">\n            <button onClick={()=>{clickAssignProjects1()}} className=\" btn-assign-popup\">Yes</button>\n            <button  onClick={()=>{setShowAssignProjectModal(false)}} >No</button>\n        </div>\n    )\n}\n\nexport default ProjectNew;","import React, { Fragment, useState, useEffect } from 'react';\nimport {ScreenOverlay, PopupMsg, RedirectPage, ModalContainer, ScrollBar} from '../../global' \nimport {getOIDCConfig, manageOIDCConfig} from '../api';\nimport ValidationExpression from '../../global/components/ValidationExpression';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/OidcConfig.scss'\n\n\n/*Component OidcConfig\n  use: defines Admin middle Section for Oidc Configuration\n  ToDo:\n*/\n\nconst OidcConfig = (props) => {\n\n    const history = useHistory();\n    const [oidcEdit,setOidcEdit] = useState(false)\n    const [loading,setLoading] = useState(false)\n    const [popupState,setPopupState] = useState({show:false,title:\"\",content:\"\"}) \n    const [name,setName] = useState(\"\")\n    const [url,setUrl] = useState(\"\")\n    const [clientId,setClientId] = useState(\"\")\n    const [secret,setSecret] = useState(\"\")\n    const [nameErrBorder,setNameErrBorder] = useState(false)\n    const [urlErrBorder,setUrlErrBorder] = useState(false)\n    const [clientIdErrBorder,setClientIdErrBorder] = useState(false)\n    const [secretErrBorder,setSecretErrBorder] = useState(false)\n    const [selBox,setSelBox] = useState([])\n    const [showDeleteModal,setshowDeleteModal] = useState(false)\n\n    useEffect(()=>{\n        setOidcEdit(false);\n        oidcReset();\n        // eslint-disable-next-line\n    },[props.resetMiddleScreen[\"oidcConfigTab\"],props.MiddleScreen])\n   \n    const oidcReset = () =>{\n        setName(\"\");\n\t\tsetUrl(\"\");\n\t\tsetClientId(\"\");\n        setSecret(\"\");\n        setUrlErrBorder(false);\n        setClientIdErrBorder(false);\n        setSecretErrBorder(false);\n        setNameErrBorder(false);\n    }\n\n    const displayError = (error) =>{\n        setLoading(false)\n        setPopupState({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n\n    const onClickEditButton = async () =>{\n        oidcReset();\n        setLoading(\"Fetching details...\");\n        const data = await getOIDCConfig()\n        if(data.error){displayError(data.error);return;}\n        setLoading(false);\n        if(data === \"empty\") {\n            setPopupState({show:true,title:\"Edit Configuration\",content:\"There are no configurations created yet.\"});\n            setSelBox([]);\n        } else {\n            data.sort();\n            var dataOptions = [];\n            for(var i = 0; i < data.length; i++) dataOptions.push(data[i].name);\n            setSelBox(dataOptions);\n        }\n    }\n\n    const oidcGetServerData = async (name) =>{\n\t\tconst failMsg = \"Failed to fetch details for '\"+name+\"' configuration.\";\n        setLoading(\"Fetching details...\");\n\t\tconst data = await getOIDCConfig(name);\n        if(data.error){displayError(data.error);return;}\n        setLoading(false);\n        if(data === \"empty\") setPopupState({show:true,title:\"Edit Configuration\",content:failMsg + \"No such configuration exists\"});\n        else {\n            setUrl(data.url);\n            setClientId(data.clientid);\n            setSecret(data.secret);\n        }\n    }\n\n    const oidcConfManage = async (action) =>{\n\n\t\tif (!oidcConfValidate(action)) return;\n\t\tconst bAction = action.charAt(0).toUpperCase() + action.substr(1);\n\t\tvar confObj = {\n\t\t\tname: name,\n\t\t\turl: url,\n\t\t\tclientid: clientId,\n\t\t\tsecret: secret\n\t\t};\n\t\tconst popupTitle = bAction+\" OIDC Configuration\";\n\t\tconst failMsg = \"Failed to \"+action+\" '\"+confObj.name+\"' configuration.\";\n        setLoading(bAction.slice(0,-1)+\"ing configuration...\");\n\t\t//Transaction Activity for Create/ Update/ Delete OIDC conf button Action\n\t\t// var labelArr = [];\n\t\t// var infoArr = [];\n\t\t// labelArr.push(txnHistory.codesDict['OidcConfmanage']);\n\t\t// infoArr.push(action);\n\t\t// txnHistory.log($event.type,labelArr,infoArr,$location.$$path);\n            \n        const data = await manageOIDCConfig(action, confObj);\n        if(data.error){displayError(data.error);return;}\n        setLoading(false);\n        if(data === \"Invalid Session\") {\n            RedirectPage(history);\n        } else if(data === \"success\") {\n            if (action === \"create\") oidcReset();\n            else onClickEditButton();\n            setPopupState({show:true,title:popupTitle,content: \"Configuration '\"+confObj.name+\"' \"+action+\"d successfully!\"});\n        } else if(data === \"exists\") {\n            setNameErrBorder(true);\n            setPopupState({show:true,title:popupTitle,content: \"Configuration '\"+confObj.name+\"' already Exists!\"});\n        } else if(data === \"fail\") {\n            if (action === \"create\") oidcReset();\n            else onClickEditButton();\n            setPopupState({show:true,title:popupTitle,content: \"Failed to \"+action+\" '\"+confObj.name+\"' configuration.\"});\n        } else if(/^1[0-3]{4}$/.test(data)) {\n            if (JSON.parse(JSON.stringify(data)[1])) {\n                setPopupState({show:true,title:popupTitle,content: failMsg+\" Invalid Request!\"});\n                return;\n            }\n            let errHints = \"<br/>\";\n            if (JSON.parse(JSON.stringify(data)[2])) setNameErrBorder(true);\n            if (JSON.parse(JSON.stringify(data)[3])) setUrl(true);\n            if (JSON.parse(JSON.stringify(data)[3]) === 2) errHints += \"Issuer must start with http:// or https://<br/>\";\n            if (JSON.parse(JSON.stringify(data)[4])) setClientIdErrBorder(true);\n            if (JSON.parse(JSON.stringify(data)[5])) setSecretErrBorder(true);\n            setPopupState({show:true,title:popupTitle,content: \"Some values are Invalid!\" + errHints});\n        }\n    }\n\n    const oidcConfValidate = (action) =>{\n        let flag = true;\n\t\tlet popped = false;\n\t\tsetUrlErrBorder(false);\n        setClientIdErrBorder(false);\n        setSecretErrBorder(false);\n        setNameErrBorder(false);\n\t\tconst regExName = /^[A-Za-z0-9]+([A-Za-z0-9-]*[A-Za-z0-9]+|[A-Za-z0-9]*)$/;\n\t\tconst regExURL = /^http[s]?:\\/\\/[A-Za-z0-9._-].*$/i;\n\t\tif (name === \"\") {\n\t\t\tsetNameErrBorder(true);\n\t\t\tflag = false;\n\t\t} else if (!regExName.test(name) && action === \"create\") {\n            setNameErrBorder(true);\n            setPopupState({show:true,title:\"Error\",content:\"Invalid Server Name provided! Name cannot contain any special characters other than hyphen. Also name cannot start or end with hyphen.\"});\n\t\t\tflag = false;\n\t\t\tpopped = true;\n\t\t}\n\t\tif (url === \"\") {\n\t\t\tsetUrlErrBorder(true);\n\t\t\tflag = false;\n\t\t} else if (regExURL.test(url) === false) {\n\t\t\tsetUrlErrBorder(true);\n\t\t\tif (!popped)setPopupState({show:true,title:\"Error\",content:\"Invalid URL provided! URL must start with http:// or https://\"});\n\t\t\tflag = false;\n\t\t\tpopped = true;\n\t\t}\n\t\tif (clientId === \"\") {\n\t\t\tsetClientIdErrBorder(true);\n\t\t\tflag = false;\n\t\t}\n\t\tif (secret === \"\") {\n\t\t\tsetSecretErrBorder(true);\n\t\t\tflag = false;\n\t\t}\n\t\treturn flag;\n    }\n\n    const oidcConfDelete = () =>{\n        setshowDeleteModal(true);\n    }\n\n    const closePopup = () =>{\n        setPopupState({show:false,title:\"\",content:\"\"});\n    }\n\n    const closeModal = () =>{\n        setshowDeleteModal(false);\n    }\n\n    const updateOidcServerName = (value) => {\n\t\tvalue = ValidationExpression(value,\"oidcServerName\");\n        setName(value);\n\t};\n;\n    return (\n        <ScrollBar thumbColor=\"#929397\">\n        <div className=\"oidc_container\">\n            {popupState.show?<PopupMsg content={popupState.content} title={popupState.title} submit={closePopup} close={closePopup} submitText={\"Ok\"} />:null}\n            {loading?<ScreenOverlay content={loading}/>:null}\n            \n            <div id=\"page-taskName\"><span>{(oidcEdit===false)?\"Create OpenID Connect Configuration\":\"Edit OpenID Connect Configuration\"}</span></div>\n            <div className=\"adminActionBtn\">\n                {oidcEdit===false?\n                    <Fragment>\n                        <button className=\"a__btn pull-right \" onClick={()=>{setOidcEdit(true);onClickEditButton();}}  title=\"Edit Configuration\">Edit</button>\n                        <button className=\"a__btn pull-right btn-margin\" onClick={()=>{oidcConfManage(\"create\")}} title=\"Create Project\">Create</button>            \n                    </Fragment>\n                :   <Fragment>\n                        <button className=\"a__btn pull-right oidc__btn_edit\" onClick={()=>{oidcConfManage(\"update\")}} disabled={name===''} title=\"Update Configuration\">Update</button>\n                        <button className=\"a__btn pull-right oidc__btn_edit btn-margin\" onClick={()=>{oidcConfDelete()}} disabled={name===''} title=\"Delete Configuration\">Delete</button>\n                    </Fragment>\n                }\n            </div> \n            <div className=\"col-xs-9 form-group__conv-oidc adminForm\" >\n                <div className={oidcEdit?'userForm-oidc adminControl-oidc':'adminControl-oidc'}><div>\n                    {(oidcEdit===false)?\n                    <Fragment>\n                        <span className=\"leftControl-oidc\" title=\"Server Name\">Server Name</span>\n                        <input type=\"text\" autoComplete=\"off\" id=\"oidcServerName\" name=\"oidcServerName\" value={name} onChange={(event)=>{updateOidcServerName(event.target.value)}} maxLength=\"100\" className={nameErrBorder?\"inputErrorBorder middle__input__border-oidc form-control-oidc form-control-custom-oidc validationKeydown preventSpecialChar create\":\" middle__input__border-oidc form-control-oidc form-control-custom-oidc validationKeydown preventSpecialChar create\"} placeholder=\"Server Name\"/>\n                    </Fragment>\n                    :<Fragment>\n                        <span className=\"leftControl-oidc\" title=\"Server Name\">Server Name</span>\n                        <select defaultValue={\"\"} onChange = {(event)=>{setName(event.target.value);oidcGetServerData(event.target.value);}} className={nameErrBorder?'selectErrorBorder adminSelect-oidc form-control-oidc':'adminSelect-oidc form-control-oidc'} id=\"oidcServerName\" >\n                            <option value=\"\" disabled>Select Server</option>\n                            {selBox.map((data,index)=>(\n                                <option key={index}  value={data}>{data}</option>\n                            ))}\n                        </select>\n                    </Fragment>\n                }    \n            \t</div></div>\n                <div className='adminControl-oidc'><div>\n\t\t\t\t\t<span className=\"leftControl-oidc\" title=\"Issuer URL\">Issuer</span>\n\t\t\t\t\t<input type=\"text\" autoComplete=\"off\" id=\"oidcUrl\" name=\"oidcUrl\" value={url} onChange={(event)=>{setUrl(event.target.value)}} maxLength=\"250\" className={urlErrBorder?\"inputErrorBorder middle__input__border-oidc form-control-oidc form-control-custom-oidc create\":\"middle__input__border-oidc form-control-oidc form-control-custom-oidc create\"} placeholder=\"Issuer URL\"/>\n\t\t\t\t</div></div>\n\t\t\t\t<div className='adminControl-oidc'><div>\n\t\t\t\t\t<span className=\"leftControl-oidc\" title=\"Public identifier for the client\">Client ID</span>\n\t\t\t\t\t<input type=\"text\" autoComplete=\"off\" id=\"oidcClientId\" name=\"oidcClientId\" value={clientId} onChange={(event)=>{setClientId(event.target.value)}}  maxLength=\"250\" className={clientIdErrBorder?\"inputErrorBorder middle__input__border-oidc form-control-oidc form-control-custom-oidc create\":\"middle__input__border-oidc form-control-oidc form-control-custom-oidc create\"} placeholder=\"Public identifier for the client\" />\n\t\t\t\t</div></div>\n\t\t\t\t<div className='adminControl-oidc'><div>\n\t\t\t\t\t<span className=\"leftControl-oidc\" title=\"Public identifier for the client\">Client Secret</span>\n\t\t\t\t\t<input type=\"text\" autoComplete=\"off\" id=\"oidcClientSecret\" name=\"oidcClientSecret\" value={secret} onChange={(event)=>{setSecret(event.target.value)}} maxLength=\"250\" className={secretErrBorder?\"inputErrorBorder middle__input__border-oidc form-control-oidc form-control-custom-oidc create\":\"middle__input__border-oidc form-control-oidc form-control-custom-oidc create\"} placeholder=\"Secret used by the client to exchange an authorization code for a token\"/>\n\t\t\t\t</div></div>\n            </div>\n\n            {showDeleteModal?\n                <ModalContainer title=\"Delete Configuration\" footer={deleteModalButtons(oidcConfManage, setshowDeleteModal)} close={closeModal} content=\"Are you sure you want to delete ? Users depending on this configuration will not be able to login.\" />\n            :null} \n        </div>\n        </ScrollBar>\n  );\n}\n\nconst deleteModalButtons = (oidcConfManage, setshowDeleteModal) =>{\n    return(\n        <div>\n            <button id=\"deleteGlobalModalButton\" onClick={()=>{oidcConfManage(\"delete\");setshowDeleteModal(false);}} type=\"button\" className=\"btn-default btnGlobalYes btn-margin\">Yes</button>\n            <button type=\"button\" onClick={()=>{setshowDeleteModal(false)}} className=\"btn-default\">No</button>\n        </div>\n    )\n}    \n\nexport default OidcConfig;","import React ,  { Fragment, useEffect, useState} from 'react';\nimport ClickAwayListener from 'react-click-away-listener';\nimport { ScrollBar } from '../../global';\nimport ValidationExpression from '../../global/components/ValidationExpression';\n\nimport '../styles/FormComp.scss'\n\n/*Component FormInput\n  use: renders input box and label in a form\n  props: name: label , placeholder : placeholder text , inpref = ref\n*/\n    \nconst FormInput = (props) => {\n    const name = props.label\n    const type = props.type\n    const placeholder = props.placeholder\n    const inpRef = props.inpRef\n    const validExp = props.validExp\n    const upateInput=()=>{\n        inpRef.current.value = ValidationExpression(inpRef.current.value,validExp);\n    }\n    return(\n        <Fragment>\n            <div className='col-xs-9 form-group input-label'>\n                <label>{name}</label>\n                <input type={type} ref={inpRef} onChange={()=>{upateInput()}} className={'middle__input__border form-control__conv-project form-control-custom left-opt'} placeholder={placeholder} maxLength={validExp===\"poolName\" || validExp=== \"emailServerName\"?\"100\":\"\"}></input>\n            </div>\n        </Fragment>\n    )\n}\n\n/*Component FormSelect\n  use: renders select box and label in a form\n  props: name: label , option : [option1,option2] , inpRef : [ref1,ref2] , defValue : default value in options\n\n*/\n    \nconst FormSelect = (props) => {\n    const name = props.label\n    const defValue = props.defValue\n    const option = props.option\n    const inpRef = props.inpRef\n    const onChangeFn = props.onChangeFn\n    const inpId = props.inpId\n    return(\n        <Fragment>\n            <div className='col-xs-9 form-group input-label'>\n                <label>{name}</label>\n                <select data-test=\"select_comp\" onChange={onChangeFn} ref={inpRef} defaultValue={'def-opt'} className={\"adminSelect-project-assign form-control__conv-project left-opt\"} id={inpId || \"selectForm\"}>\n                    <option key={'def-opt'} value={'def-opt'} disabled={true}>{defValue}</option>\n                    {option.map((e,i)=><option key={i+'_def'} value={e}>{e}</option>)}\n                </select>            \n            </div>\n        </Fragment>\n    )\n}\n\n/*Component FormRadio\n  use: renders radio button and label in a form\n  props: name: label , option : [option1,option2] , inpRef : [ref1,ref2]\n*/\n\nconst FormRadio = (props) => {\n    const name = props.label\n    const option = props.option\n    const inpRef = props.inpRef\n    return(\n        <Fragment>\n            <div className='col-xs-9 form-group input-label'>\n                <label>{name}</label>\n                <div className='conf-radio left-opt'>\n                    {Object.keys(inpRef).map((e,i)=>(\n                    <span key={\"rad_\"+name+i}>\n                        <input id={name+i} name={name} value={e} ref={inpRef[e]} type=\"radio\"></input>\n                        <label htmlFor={name+i}>{option[i]}</label>\n                    </span>)\n                    )}\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\n/*Component FormInpDropDown\n  use: renders searchable pool dropdown\n*/\n\nconst FormInpDropDown = ({data,setFilter,clickInp,inpRef}) => {\n    const inputRef = inpRef\n    const [list,setList] =  useState([])\n    const [dropDown,setDropDown] = useState(false)\n    useEffect(()=>{\n        setList([...data])\n    },[data])\n    const inputFilter = () =>{\n        var val = inputRef.current.value\n        var items = [...data].filter((e)=>e[1].poolname.toUpperCase().indexOf(val.toUpperCase())!==-1)\n        setList(items)\n    }\n    const resetField = () => {\n        inputRef.current.value = \"\"\n        setList([...data])\n        setDropDown(true)\n        if(clickInp)clickInp()\n    }\n    const selectOption = (e) =>{\n        var text = e.currentTarget.innerText\n        inputRef.current.value = text\n        setDropDown(false)\n        setFilter(e)\n    }\n    return(\n        <Fragment>\n            <ClickAwayListener onClickAway={()=>setDropDown(false)}>\n            <div>\n                <input type={'text'} autoComplete={\"off\"} ref={inputRef} className=\"btn-users edit-user-dropdown-edit\" onChange={inputFilter} onClick = {resetField} id=\"userIdName\" placeholder=\"Search ICE Pool..\"/>\n                <div className=\"form-inp-dropdown\" role=\"menu\" aria-labelledby=\"userIdName\" style={{display: (dropDown?\"block\":\"none\")}}>\n                    <ScrollBar thumbColor=\"#929397\" >\n                    {list.map((e) => (  \n                        <option key={e[0]} onClick={selectOption} value={e[0]}> {e[1].poolname}</option> \n                    ))}\n                    </ScrollBar>\n                </div>\n            </div>\n            </ClickAwayListener>\n        </Fragment>\n    )\n}\nexport {FormInput,FormSelect,FormRadio,FormInpDropDown};\n\n","import React, { useState, useEffect, useRef } from 'react';\nimport { ModalContainer } from '../../global';\nimport {gitSaveConfig} from '../api';\nimport '../styles/GitConfig.scss'\n\n/*Component GitButtonActions\n  use: defines Admin middle Section for Git Configuration buttons\n  ToDo:\n*/\n\nconst GitButtonActions = (props) => {\n    const updateBtnRef = useRef()\n    const onClickEdit = props.onClickEdit;\n    const user = props.user \n    const Project = props.Project\n    const gitAccToken = props.token\n    const gitUrl = props.url\n    const userData = props.userData\n    const projectData = props.projectData\n    const setLoading = props.setLoading\n    const setPopupState = props.setPopupState\n    const resetFields = props.resetFields\n    const displayError = props.displayError\n    const domain = props.domain\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\n\n    useEffect(()=>{\n        if(updateBtnRef!== undefined && updateBtnRef.current !==undefined )\n        updateBtnRef.current.disabled = (gitAccToken.current.value === 'none' || gitUrl.current.value === \"def-opt\")\n    },[gitAccToken, gitUrl])\n\n    const gitConfigAction = async (action) => {\n        if (!gitValidate(action, user, domain, Project, gitAccToken, gitUrl, setPopupState)) return;\n        setLoading(\"Loading...\");\n        const data = await gitSaveConfig(action, userData[user.current.value],projectData[Project.current.value],gitAccToken.current.value.trim(),gitUrl.current.value.trim());\n        if(data.error){displayError(data.error);return;}\n        else if(data  === 'GitUser Exists')  setPopupState({show:true,title:\"Save Git Config\",content:\"Git config already exist for this user.\"});\n        else setPopupState({show:true,title:\"Save Git Config\",content:\"Git user \"+action+ \"d successfully\"});\n        setLoading(false);\n        resetFields();\n    }\n\n    return (\n        <>\n            <div className=\"adminActionBtn\">\n                {!props.showEdit?\n                    <>\n                        <button data-test=\"git_create\" onClick={()=>gitConfigAction('create')} className=\"a__btn btn-edit\" title=\"Create\">Create</button>\n                        <button data-test=\"git_edit\" onClick={onClickEdit} className=\"a__btn\" title=\"Edit\">Edit</button>\n                    </>:<>\n                        <button data-test=\"git_update\" ref={updateBtnRef} onClick={()=>gitConfigAction('update')} className=\"a__btn btn-edit\" title=\"Update\" disabled={Project.current.value ===\"def-opt\"}>Update</button>\n                        <button data-test=\"git_delete\" onClick={()=>setShowDeleteModal(true)} className=\"a__btn\" title=\"Delete\" disabled={Project.current.value ===\"def-opt\"} >Delete</button>\n                    </>\n                }\n            </div>  \n            {showDeleteModal?\n                <ModalContainer\n                    title=\"Delete Git Configuration\"\n                    content={\"Are you sure you want to delete ? Users depending on this configuration will not be able to perform git operation.\"}\n                    close={()=>setShowDeleteModal(false)}\n                    footer={\n                        <>\n                        <button onClick={()=>{gitConfigAction('delete');setShowDeleteModal(false);}}>Yes</button>\n                        <button onClick={()=>setShowDeleteModal(false)}>No</button>\n                        </>\n                    }\n                    modalClass=\" modal-sm\"\n                />\n            :null}\n        </>\n    );\n}\n\nconst gitValidate = (action, user, domain, Project, gitAccToken, gitUrl, setPopupState) => {\n    var flag = true;\n    const errBorder = '2px solid red';\n    var regExUrl = /^https:\\/\\//g;\n    user.current.style.outline = \"\";\n    domain.current.style.outline = \"\";\n    Project.current.style.outline = \"\";\n    gitAccToken.current.style.outline = \"\";\n    gitUrl.current.style.outline = \"\";\n\n    if(user.current.value === 'def-opt'){\n        user.current.style.outline = errBorder;\n        flag = false;\n    }\n    if (domain.current.value === 'def-opt') {\n        domain.current.style.outline = errBorder\n        flag = false;\n    }\n    if (Project.current.value === 'def-opt') {\n        Project.current.style.outline = errBorder\n        flag = false;\n    }\n    if(gitAccToken.current.value === \"\" && action!==\"delete\"){\n        gitAccToken.current.style.outline = errBorder\n        flag = false;\n    }\n    if(gitUrl.current.value === \"\" && action!==\"delete\"){\n        gitUrl.current.style.outline = errBorder\n        flag = false;\n    }\n    if(!regExUrl.test(gitUrl.current.value.trim())){\n        gitUrl.current.style.outline = errBorder;\n        setPopupState({show:true,title:\"Error\",content:\"Invalid URL provided! URL must start with 'https://' !!\"});\n        flag = false;\n    }\n    return flag;\n}\n\nexport default GitButtonActions;    ","import React, { useState, useEffect, useRef } from 'react';\nimport {ScreenOverlay, PopupMsg, ScrollBar} from '../../global' \nimport {FormInput,FormSelect} from '../components/FormComp'\nimport {getUserDetails, getDomains_ICE, getDetails_ICE, gitEditConfig } from '../api';\nimport GitButtonActions from '../components/GitButtonActions'\nimport '../styles/GitConfig.scss'\n\n/*Component GitConfig\n  use: defines Admin middle Section for Git Configuration\n  ToDo:\n*/\n\nconst GitConfig = (props) => {\n    const userRef =  useRef();\n    const domainRef =  useRef();\n    const ProjectRef =  useRef();\n    const tokenRef =  useRef();\n    const urlRef =  useRef();\n    const [domainList,setDomainList] = useState([])\n    const [projectList,setProjectList] = useState([])\n    const [userData,setUserData] = useState({})\n    const [projectData,setProjectData] = useState({})\n    const [showEdit,setShowEdit] = useState(false)\n    const [userList,setUserList] = useState([])\n    const [loading,setLoading] = useState(false)\n    const [popupState,setPopupState] = useState({show:false,title:\"\",content:\"\"}) \n    \n    \n    useEffect(()=>{\n        setShowEdit(false);\n\t\trefreshFields(domainRef, ProjectRef, userRef, tokenRef, urlRef, setDomainList, setProjectList, setProjectData, setUserList, setUserData, displayError, setLoading);\n        // eslint-disable-next-line\n\t},[props.resetMiddleScreen[\"gitConfigure\"],props.MiddleScreen])\n\n    const onClickEdit = () => {\n        setShowEdit(true);\n        refreshFields(domainRef, ProjectRef, userRef, tokenRef, urlRef, setDomainList, setProjectList, setProjectData, setUserList, setUserData, displayError, setLoading); \n    }\n\n    const displayError = (error,header) =>{\n        setLoading(false)\n        setPopupState({\n            title:header?header:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n\n    const resetSelectList = (changeDropDown) => {\n        if(changeDropDown === \"userChange\") {\n            if(document.getElementById(\"domainGit\") !== null) document.getElementById(\"domainGit\").selectedIndex = \"0\"; \n            if(document.getElementById(\"projectGit\") !== null) document.getElementById(\"projectGit\").selectedIndex = \"0\";\n            setProjectList([])\n            setProjectData({})\n        } else if(changeDropDown === \"domainChange\")  if(document.getElementById(\"projectGit\") !== null) document.getElementById(\"projectGit\").selectedIndex = \"0\";\n        urlRef.current.style.outline = \"\";\n        tokenRef.current.style.outline = \"\";\n        domainRef.current.style.outline = \"\";\n        ProjectRef.current.style.outline = \"\";\n        userRef.current.style.outline = \"\";\n        if(showEdit) {\n            tokenRef.current.value = \"\";\n            urlRef.current.value = \"\";\n        }\n    } \n\n    const resetFields = () => {\n        refreshFields(domainRef, ProjectRef, userRef, tokenRef, urlRef, setDomainList, setProjectList, setProjectData, setUserList, setUserData, displayError, setLoading); \n    }\n\n    return (\n        <ScrollBar thumbColor=\"#929397\">\n            <div className=\"git_container\">\n                {popupState.show?<PopupMsg content={popupState.content} title={popupState.title} submit={()=>{setPopupState({show:false,title:\"\",content:\"\"})}} close={()=>{setPopupState({show:false,title:\"\",content:\"\"})}} submitText={\"Ok\"} />:null}\n                {loading?<ScreenOverlay content={loading}/>:null}\n\n                <div id=\"page-taskName\"><span>{(showEdit===false)?\"Git Configuration\":\"Edit Git Configuration\"}</span></div>\n                <GitButtonActions resetFields={resetFields} showEdit={showEdit} onClickEdit={onClickEdit} domain={domainRef} user={userRef} Project={ProjectRef} token={tokenRef} url={urlRef} userData={userData} projectData={projectData} setLoading={setLoading} displayError={displayError} refreshFields={refreshFields} setPopupState={setPopupState} />        \n                <div className=\"git_token\" >\n                <FormSelect data-test=\"user_git\" inpId={'userGit'} inpRef={userRef} onChangeFn={()=>fetchDomainList(resetSelectList, setDomainList, displayError, setLoading)} defValue={\"Select User\"} label={\"User\"} option={userList}/>\n                <FormSelect data-test=\"domain_git\" inpId={'domainGit'} inpRef={domainRef} onChangeFn={()=>fetchProjectList(resetSelectList, domainRef.current.value, setProjectList, setProjectData, displayError, setLoading)} defValue={\"Select Domain\"} label={\"Domain\"} option={domainList}/>\n                <FormSelect data-test=\"project_git\" inpId={'projectGit'} inpRef={ProjectRef} onChangeFn={()=>{onChangeProject(resetFields,displayError, showEdit, urlRef, tokenRef ,userData, userRef, projectData, ProjectRef, setLoading, setPopupState)}} defValue={\"Select Project\"} label={\"Project\"} option={projectList}/>\n                    <FormInput data-test=\"token_git\" inpRef={tokenRef} label={'Git Access Token'} placeholder={'Enter Git Access Token'} />\n                    <FormInput data-test=\"url_git\" inpRef={urlRef} label={'Git URL'} placeholder={'Enter Git URL'}/>\n                </div>\n            </div>\n        </ScrollBar>\n    );\n}\n\nconst onChangeProject = async (resetFields, displayError, showEdit, urlRef, tokenRef ,userData, userRef, projectData, ProjectRef, setLoading, setPopupState ) =>{\n    urlRef.current.style.outline = \"\";\n    tokenRef.current.style.outline = \"\";\n    ProjectRef.current.style.outline = \"\";\n    if(!showEdit) return;\n    setLoading(\"Loading...\");\n    const data = await gitEditConfig(userData[userRef.current.value], projectData[ProjectRef.current.value]);\n    if(data.error){displayError(data.error);return;}\n    else if(data == \"empty\") {\n        setPopupState({show:true,title:\"Edit Git User\",content:\"No git configuration created yet.\"})\n        resetFields();\n    } else {\n        tokenRef.current.value = data[0];\n        urlRef.current.value = data[1]\n    }\n    setLoading(false);\n}\n\nconst refreshFields = ( domainRef, ProjectRef, userRef, tokenRef, urlRef, setDomainList, setProjectList, setProjectData, setUserList, setUserData, displayError, setLoading) => {\n    fetchUsers(setUserList, setUserData, displayError, setLoading);\n    setDomainList([])\n    setProjectList([])\n    setUserData({})\n    setProjectData({})\n    tokenRef.current.value = \"\";\n    urlRef.current.value = \"\";\n    if(document.getElementById(\"userGit\") !== null) document.getElementById(\"userGit\").selectedIndex = \"0\"; \n    if(document.getElementById(\"domainGit\") !== null) document.getElementById(\"domainGit\").selectedIndex = \"0\"; \n    if(document.getElementById(\"projectGit\") !== null) document.getElementById(\"projectGit\").selectedIndex = \"0\";\n    urlRef.current.style.outline = \"\";\n    tokenRef.current.style.outline = \"\";\n    domainRef.current.style.outline = \"\";\n    ProjectRef.current.style.outline = \"\";\n    userRef.current.style.outline = \"\";\n}\n\nconst fetchDomainList = async (resetSelectList, setDomainList, displayError, setLoading) => {\n    setLoading(\"Loading...\");\n    let data = await getDomains_ICE() \n    if(data.error){displayError(data.error);return;}\n    setDomainList(data);\n    resetSelectList(\"userChange\");\n    setLoading(false);\n}\n\nconst fetchUsers = async (setUserList, setUserData, displayError, setLoading)=>{\n    setLoading(\"Loading...\");\n    const data = await getUserDetails(\"user\");\n    if(data.error){displayError(data.error);return;}\n    var userOptions = [];\n    var userData = {};\n    for(var i=0; i<data.length; i++){\n        if(data[i][3] !== \"Admin\"){\n            userOptions.push(data[i][0]);\n            userData[data[i][0]] = data[i][1];\n        }\n    }\n    setUserData(userData);\n    setUserList(userOptions.sort());   \n    setLoading(false); \n}\n\nconst fetchProjectList = async (resetSelectList, domain, setProjectList, setProjectData, displayError, setLoading) => {\n    setLoading(\"Loading Projects...\")\n    var idtype = [\"domaindetails\"];\n    var requestedname = [];\n    requestedname.push(domain);\n    const getDetailsResponse = await getDetails_ICE(idtype, requestedname)\n    if(getDetailsResponse.error){displayError(getDetailsResponse.error);return;}\n    const projectOptions=[];\n    const projectData = {};\n    for (var i = 0; i < getDetailsResponse.projectNames.length; i++) {\n        projectOptions.push(getDetailsResponse.projectNames[i]);\n        projectData[getDetailsResponse.projectNames[i]] = getDetailsResponse.projectIds[i];\n    }    \n    projectOptions.sort();\n    setProjectData(projectData);\n    setProjectList(projectOptions);\n    resetSelectList(\"domainChange\");\n    setLoading(false);\n}\n\nexport default GitConfig;","import React, { Fragment, useState, useEffect } from 'react';\nimport {ScreenOverlay, PopupMsg, ModalContainer, ScrollBar} from '../../global' \nimport {getSAMLConfig, manageSAMLConfig} from '../api';\nimport ValidationExpression from '../../global/components/ValidationExpression';\nimport '../styles/SamlConfig.scss'\n\n\n/*Component SamlConfig\n  use: defines Admin middle Section for Saml Configuration\n  ToDo:\n*/\n\nconst SamlConfig = (props) => {\n\n    const [samlEdit,setSamlEdit] = useState(false)\n    const [loading,setLoading] = useState(false)\n    const [popupState,setPopupState] = useState({show:false,title:\"\",content:\"\"}) \n    const [name,setName] = useState(\"\")\n    const [url,setUrl] = useState(\"\")\n    const [idp,setIdp] = useState(\"\")\n    const [cert,setCert] = useState(\"\")\n    const [certName,setCertName] = useState(\"No file choosen\")\n    const [nameErrBorder,setNameErrBorder] = useState(false)\n    const [urlErrBorder,setUrlErrBorder] = useState(false)\n    const [idpErrBorder,setIdpErrBorder] = useState(false)\n    const [certNameErrBorder,setCertNameErrBorder] = useState(false)\n    const [selBox,setSelBox] = useState([])\n    const [showDeleteModal,setshowDeleteModal] = useState(false)\n\n    useEffect(()=>{\n        setSamlEdit(false);\n        samlReset();\n        // eslint-disable-next-line\n    },[props.resetMiddleScreen[\"samlConfigTab\"],props.MiddleScreen])\n\n    const samlReset = () =>{\n        setName(\"\");\n\t\tsetUrl(\"\");\n\t\tsetIdp(\"\");\n        setCertName(\"No file choosen\");\n        setCert(\"\");\n        setUrlErrBorder(false);\n        setIdpErrBorder(false);\n        setCertNameErrBorder(false);\n        setNameErrBorder(false);\n    }\n\n    const displayError = (error) =>{\n        setLoading(false)\n        setPopupState({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n\n    const samlConfValidate = (action) =>{\n        let flag = true;\n\t\tlet popped = false;\n\t\tsetUrlErrBorder(false);\n        setIdpErrBorder(false);\n        setCertNameErrBorder(false);\n        setNameErrBorder(false);\n\t\tconst regExName = /^[A-Za-z0-9]+([A-Za-z0-9-]*[A-Za-z0-9]+|[A-Za-z0-9]*)$/;\n\t\tconst regExURL = /^http[s]?:\\/\\/[A-Za-z0-9._-].*$/i;\n\t\tif (name === \"\") {\n            setNameErrBorder(true);\n\t\t\tflag = false;\n\t\t} else if (!regExName.test(name) && action === \"create\") {\n            setNameErrBorder(true);\n            setPopupState({show:true,title:\"Error\",content:\"Invalid Server Name provided! Name cannot contain any special characters other than hyphen. Also name cannot start or end with hyphen.\"});\n\t\t\tflag = false;\n\t\t\tpopped = true;\n\t\t}\n\t\tif (url === \"\") {\n            setUrlErrBorder(true);\n\t\t\tflag = false;\n\t\t} else if (regExURL.test(url) === false) {\n\t\t\tsetUrlErrBorder(true);\n            if (!popped) setPopupState({show:true,title:\"Error\",content:\"Invalid URL provided! URL must start with http:// or https://\"})\n\t\t\tflag = false;\n\t\t\tpopped = true;\n\t\t}\n\t\tif (idp === \"\") {\n            setIdpErrBorder(true);\n\t\t\tflag = false;\n\t\t}\n\t\tif (cert === \"\") {\n\t\t\tsetCertNameErrBorder(true);\n\t\t\tflag = false;\n\t\t}\n\t\treturn flag;\n    }\n\n    const closePopup = () =>{\n        setPopupState({show:false,title:\"\",content:\"\"});\n    }\n\n    const samlConfManage = async (action) =>{\n\n\t\tif (!samlConfValidate(action)) return;\n\t\tconst bAction = action.charAt(0).toUpperCase() + action.substr(1);\n\t\tvar confObj = {\n\t\t\tname: name,\n\t\t\turl: url,\n\t\t\tidp: idp,\n\t\t\tcert: cert\n\t\t};\n\t\tconst popupTitle = bAction+\" SAML Configuration\";\n\t\tconst failMsg = \"Failed to \"+action+\" '\"+confObj.name+\"' configuration.\";\n        setLoading(bAction.slice(0,-1)+\"ing configuration...\");\n\t\t//Transaction Activity for Create/ Update/ Delete SAML conf button Action\n\t\t// var labelArr = [];\n\t\t// var infoArr = [];\n\t\t// labelArr.push(txnHistory.codesDict['SamlConfmanage']);\n\t\t// infoArr.push(action);\n\t\t// txnHistory.log($event.type,labelArr,infoArr,$location.$$path);\n\t\tconst data = await manageSAMLConfig(action, confObj);\n        if(data.error){displayError(data.error);return;}\n        setLoading(false);\n        if(data === \"success\") {\n            if (action === \"create\") samlReset();\n            else samlEditClick();\n            setPopupState({show:true,title:popupTitle,content:\"Configuration '\"+confObj.name+\"' \"+action+\"d successfully!\"});\n        } else if(data === \"exists\") {\n            setNameErrBorder(true);\n            setPopupState({show:true,title:popupTitle,content:\"Configuration '\"+confObj.name+\"' already Exists!\"});\n        } else if(data === \"fail\") {\n            if (action === \"create\") samlReset();\n            else samlEditClick();\n            setPopupState({show:true,title:popupTitle,content:failMsg});\n        } else if(/^1[0-2]{4}$/.test(data)) {\n            if (JSON.parse(JSON.stringify(data)[1])) {\n                setPopupState({show:true,title:popupTitle,content: failMsg+\" Invalid Request!\"});\n                return;\n            }\n            let errHints = \"<br/>\";\n            if (JSON.parse(JSON.stringify(data)[2])) setNameErrBorder(true);\n            if (JSON.parse(JSON.stringify(data)[3]))setUrlErrBorder(false);\n            if (JSON.parse(JSON.stringify(data)[3]) === 2) errHints += \"Single Sign-On URL must start with http:// or https://<br/>\";\n            if (JSON.parse(JSON.stringify(data)[4])) setIdpErrBorder(true);\n            if (JSON.parse(JSON.stringify(data)[5])) setCertNameErrBorder(true);\n            if (JSON.parse(JSON.stringify(data)[5]) === 2) errHints += \"File uploaded is not a valid certificate\";\n            setPopupState({show:true,title:popupTitle,content: \"Some values are Invalid!\" + errHints});\n        }\n    }\n\n    const samlEditClick = async () =>{\n\t\tsamlReset();\n        setLoading(\"Fetching details...\");\n        const data = await getSAMLConfig();\n        if(data.error){displayError(data.error);return;}\n        setLoading(false);\n        if(data === \"empty\") {\n            setPopupState({show:true,title:\"Edit Configuration\",content:\"There are no configurations created yet.\"});\n            setSelBox([]);\n        } else {\n            data.sort();\n            var dataOptions = [];\n            for(var i = 0; i < data.length; i++) dataOptions.push(data[i].name);\n            setSelBox(dataOptions);\n        }\n    }\n\n    const samlConfDelete = () =>{\n        setshowDeleteModal(true);\n    }\n\n    const samlGetServerData = async (name) =>{\n\t\tconst failMsg = \"Failed to fetch details for '\"+name+\"' configuration.\";\n        setLoading(\"Fetching details...\");\n        const data = await getSAMLConfig(name)\n        if(data.error){displayError(data.error);return;}\n        setLoading(false);\n        if(data === \"empty\") setPopupState({show:true,title:\"Edit Configuration\",content: failMsg + \"No such configuration exists\"});\n        else {\n            setUrl(data.url);\n            setIdp(data.idp);\n            setCert(data.cert);\n            setCertName(\"No file choosen\");\n        }\n    }\n\n    const updateCert = (targetFile) =>{\n        return new Promise((resolve, reject) => {\n            let reader = new FileReader();\n            reader.onload = () => {\n              resolve(reader.result);\n            };\n            reader.onerror = reject;\n            reader.readAsBinaryString(targetFile);\n        })\n    }\n\n    const certInputClick = async (event) => {\n        // eslint-disable-next-line\n        const target = event && (event.srcElement || event.target) || null;\n        // eslint-disable-next-line\n\t\tconst targetFile = target && target.files[0] || null;\n\t\tif (targetFile === null) return;\n\t\t// var conf = (target.name.includes('ldap'))? $scope.ldapConf:$scope.samlConf;\n        setCertName(targetFile.name);\n        var certData = await updateCert(targetFile) ;\n        setCert(certData);\n    }\n    \n    const closeModal = () =>{\n        setshowDeleteModal(false);\n    }\n\n    const deleteModalButtons = () =>{\n        return(\n            <div>\n                <button id=\"deleteGlobalModalButton\" onClick={()=>{samlConfManage(\"delete\");setshowDeleteModal(false);}} type=\"button\" className=\"btn-default btnGlobalYes btn-right\" >Yes</button>\n\t\t\t\t<button type=\"button\" onClick={()=>{setshowDeleteModal(false);samlReset();}} className=\"btn-default\">No</button>\n            </div>\n        )\n    }\n    \n    const updateSamlServerName = (value) => {\n        value = ValidationExpression(value,\"samlServerName\")\n        setName(value);\n    }\n\n    return (\n        <ScrollBar thumbColor=\"#929397\">\n        <div className=\"saml_container\">\n            {popupState.show?<PopupMsg content={popupState.content} title={popupState.title} submit={closePopup} close={closePopup} submitText={\"Ok\"} />:null}\n            {loading?<ScreenOverlay content={loading}/>:null}\n            \n            <div id=\"page-taskName\"><span>{(samlEdit===false)?\"Create SAML Configuration\":\"Edit SAML Configuration\"}</span></div>\n            \n            <div className=\"adminActionBtn\">\n                {samlEdit===false?\n                    <Fragment>\n                        <button className=\"a__btn pull-right \" onClick={()=>{setSamlEdit(true);samlEditClick();}}  title=\"Edit Configuration\">Edit</button>\n                        <button className=\"a__btn pull-right btn-right-saml\" onClick={()=>{samlConfManage(\"create\")}}  title=\"Create Project\">Create</button>            \n                    </Fragment>\n                :   <Fragment>\n                        <button className=\"a__btn pull-right saml__btn_edit\" onClick={()=>{samlConfManage(\"update\")}} disabled={name===''} title=\"Update Configuration\">Update</button>\n                        <button className=\"a__btn pull-right saml__btn_edit btn-right-saml\" onClick={()=>{samlConfDelete()}} disabled={name===''} title=\"Delete Configuration\">Delete</button>\n                    </Fragment>\n                }\n            </div>\n\n            <div className=\"col-xs-9 form-group__conv-saml adminForm\" >\n                <div className={samlEdit?'userForm-saml adminControl-saml':'adminControl-saml'}><div>\n                    {(samlEdit===false)?\n                    <Fragment>\n                        <span className=\"leftControl-saml\" title=\"Server Name\">Server Name</span>\n                        <input type=\"text\" autoComplete=\"off\" id=\"samlServerName\" name=\"samlServerName\" value={name} onChange={(event)=>{updateSamlServerName(event.target.value)}} maxLength=\"100\" className={nameErrBorder?\"inputErrorBorder middle__input__border-saml form-control-saml form-control-custom-saml validationKeydown preventSpecialChar create\":\" middle__input__border-saml form-control-saml form-control-custom-saml validationKeydown preventSpecialChar create\"} placeholder=\"Server Name\"/>\n                    </Fragment>\n                    :<Fragment>\n                        <span className=\"leftControl-saml\" title=\"Server Name\">Server Name</span>\n                        <select defaultValue={\"\"} onChange = {(event)=>{setName(event.target.value); samlGetServerData(event.target.value);}} className={nameErrBorder?'selectErrorBorder adminSelect-saml form-control-saml':'adminSelect-saml form-control-saml'} id=\"samlServerName\" >\n                            <option value=\"\" disabled >Select Server</option>\n                            {selBox.map((data,index)=>(\n                                <option key={index}  value={data}>{data}</option>\n                            ))}\n                        </select>\n                    </Fragment>\n                }    \n            \t</div></div>\n                <div className='adminControl-saml'><div>\n\t\t\t\t\t<span className=\"leftControl-saml\" title=\"Single Sign-On URL (SAML assertion URL)\">Single Sign-On URL</span>\n\t\t\t\t\t<input type=\"text\" autoComplete=\"off\" id=\"samlAcsUrl\" name=\"samlAcsUrl\" value={url} onChange={(event)=>{setUrl(event.target.value)}} maxLength=\"250\" className={urlErrBorder?\"inputErrorBorder middle__input__border-saml form-control-saml form-control-custom-saml create\":\"middle__input__border-saml form-control-saml form-control-custom-saml create\"} placeholder=\"Single Sign-On URL (SAML assertion URL)\"/>\n\t\t\t\t</div></div>\n\t\t\t\t<div className='adminControl-saml'><div>\n\t\t\t\t\t<span className=\"leftControl-saml\" title=\"Identity Issuer (Can be text or URL)\">Issuer</span>\n\t\t\t\t\t<input type=\"text\" autoComplete=\"off\" id=\"samlIDP\" name=\"samlIDP\" value={idp} onChange={(event)=>{setIdp(event.target.value)}}  maxLength=\"250\" className={idpErrBorder?\"inputErrorBorder middle__input__border-saml form-control-saml form-control-custom-saml create\":\"middle__input__border-saml form-control-saml form-control-custom-saml create\"} placeholder=\"Identity Issuer (Can be text or URL)\" />\n\t\t\t\t</div></div>\n\n                <div className='adminControl-saml'><div>\n\t\t\t\t\t<span className=\"leftControl-saml\" title=\"X.509 certificate issued by provider\">Certificate</span>\n\t\t\t\t\t<label   id=\"samlCert\"  htmlFor=\"certInput\" className={certNameErrBorder?\"inputErrorText saml-cursor\":\"certInput-saml saml-cursor\"}><span className=\"fa fa-upload cert-input-cust\" ></span>{certName}</label>\n\t\t\t\t\t<input type=\"file\" accept=\".cer,.crt,.cert,.pem\" onChange={(event)=>{certInputClick(event)}} autoComplete=\"off\" id=\"certInput\" name=\"samlCert\" className=\"no-disp cert-saml\"/>\n                    {samlEdit?<textarea autoComplete=\"off\" id=\"samlCertValue\" name=\"samlCertValue\" disabled=\"\" readOnly=\"readOnly\" className=\"certTextarea-saml\" value={cert} />:null}\n                </div></div>\n            </div>\n\n            {showDeleteModal?\n                <ModalContainer title=\"Delete Configuration\" footer={deleteModalButtons()} close={closeModal} content=\"Are you sure you want to delete ? Users depending on this configuration will not be able to login.\" />\n            :null} \n        </div>\n    </ScrollBar>\n  );\n}\n\nexport default SamlConfig;","import React, { useState, useEffect } from 'react';\nimport {ScreenOverlay, PopupMsg, ScrollBar} from '../../global' \nimport {getPreferences} from '../api';\nimport '../styles/Preferences.scss'\n\n\n/*Component Preferences\n  use: defines Admin middle Section for Preferences Sections\n  ToDo:\n*/\n\nconst Preferences = (props) => {\n    const [loading,setLoading] = useState(false)\n    const [resultList,setResultList] = useState([])\n    const [popup,setPopup] = useState({show:false})\n    var rows = [\"ALM\",\"Mindmap\",\"Reports\",\"Utility\"];\n\n    useEffect(()=>{\n        setLoading(\"Loading...\");\n        (async()=>{\n            const response = await getPreferences()\n            if(response.error){displayError(response.error);return;}\n            setResultList(response);\n        })()\n        setLoading(false);\n        // eslint-disable-next-line\n    },[props.resetMiddleScreen[\"Preferences\"],props.MiddleScreen])\n\n    const displayError = (error) =>{\n        setLoading(false)\n        setPopup({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n\n    return (\n        <ScrollBar thumbColor=\"#929397\">\n        <div className=\"preferences_container\">\n            {(popup.show)?<PopupMsg submit={()=>setPopup({show:false})} close={()=>setPopup({show:false})} title={popup.title} content={popup.content} submitText={popup.submitText}/>:null}\n            {loading?<ScreenOverlay content={loading}/>:null}\n            <div id=\"page-taskName\"><span>Preferences</span></div>\n            \n            <div className=\"container preferencesTbl\">\n\t\t\t\t<table id=\"preferencesTable\" className=\" customtblWidth table\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr id=\"head\">\n\t\t\t\t\t\t\t<th>Plugins/Modules</th>\n                            {resultList.map((data,index)=>(\n                                <th key={index} value={data.name} >{data.name}</th>\n                            ))}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody id=\"pref\">\n                    <tr>\n                        <td>Admin</td>\n                        <td><input type='checkbox' value='' checked={true} className='module_admin' disabled/></td>\n                        <td><input type='checkbox' value='' className='module_admin' disabled/></td>\n                        <td><input type='checkbox' value='' className='module_admin' disabled/></td>\n                        <td><input type='checkbox' value='' className='module_admin' disabled/></td>\n                    </tr>\n                    <tr id=\"rows\">\n                        <td>ICE</td>\n                        {resultList.map((data,index)=>(\n                            <td key={index}><input disabled key={index} type='checkbox' value='' checked={(['Test Lead', 'Test Engineer'].indexOf(data.name) > -1)? true:false} className='module_admin'/></td>\n                        ))}\n                    </tr>\n                    {rows.map((data,index)=>{\n                        if(data===\"ALM\"){\n                        return(\n                        <tr key={index} >\n                            <td >Integration</td>\n                            {resultList.map((data1,index)=>(\n                                <td key={index}><input disabled key={index} type='checkbox' value='' checked={(data1.plugins[data.toLowerCase()]===true)? true:false} className='module_admin'/></td>\n                            ))}\n                        </tr>\n                        )}else{\n                            return(\n                            <tr key={index} >\n                                <td >{data}</td>\n                                {resultList.map((data1,index)=>(\n                                    <td key={index}><input disabled key={index} type='checkbox' value='' checked={(data1.plugins[data.toLowerCase()]===true)? true:false} className='module_admin'/></td>\n                                ))}\n                            </tr>\n                            )\n                        }\n                    })}\n                    </tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n        </div>\n        </ScrollBar>    \n    );\n}\n\nexport default Preferences;","import React, { useState, useEffect } from 'react';\nimport {ScreenOverlay, PopupMsg, ScrollBar} from '../../global';\nimport { useSelector } from 'react-redux';\nimport {manageSessionData, fetchLockedUsers, unlockUser} from '../api';\nimport '../styles/SessionManagement.scss'\n\n/*Component SessionManagement\n  use: defines Admin middle Section for Session Management\n  ToDo:\n*/\n\nconst SessionManagement = (props) => {\n    const dateFormat = useSelector(state=>state.login.dateformat);\n    const [loading,setLoading] = useState(false)\n    const [popupState,setPopupState] = useState({show:false,title:\"\",content:\"\"})\n    const [sessions,setSessions] = useState([])\n    const [clients,setClients] = useState([])\n    const [showSessions,setShowSessions] = useState(true)\n    const [showClients,setShowClients] = useState(true)\n    const [showLockedUsers,setShowLockedUsers] = useState(true)\n    const [lockedusers,setLockedusers] = useState([]);\n\n    useEffect(()=>{\n        refreshSessMgmt();\n        // eslint-disable-next-line\n    },[props.resetMiddleScreen[\"sessionTab\"],props.MiddleScreen])\n\n    const displayError = (error) =>{\n        setLoading(false)\n        setPopupState({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n\n    const refreshSessMgmt = async () =>{\n        setLoading(\"Retrieving session data...\");\n\t\tconst data = await manageSessionData(\"get\");\n        if(data.error){displayError(data.error);return;}\n        if( data === \"fail\") setPopupState({show:true,title:\"Error\",content:\"Failed to manage session Data.\"});\n        data.sessionData.sort(function(a,b) { return a.username > b.username; });\n        data.clientData.sort(function(a,b) { return a.username > b.username; });\n        setSessions(data.sessionData);\n        setClients(data.clientData);\n        fetchLocked();\n        setLoading(false);\n    }\n\n    const fetchLocked = async () => {\n\t\tconst data = await fetchLockedUsers()\n\t\tif(data.error){displayError(data.error);return;}\n        setLockedusers(data);\n\t}\n\n    const closePopup = () =>{\n        setPopupState({show:false,title:\"\",content:\"\"});\n    }\n\n    const unlock = async (event) =>{\n        var id = parseInt(event.target.dataset.id);\n\t\tvar msg, obj;\n\t\tmsg = \"Unlocking User Account \";\n\t\tobj = lockedusers[id];\n\t\tvar user = obj.username;\n\t\tsetLoading(msg+user+\"...\");\n\t\tconst data = await unlockUser(user);\n\t\tif(data.error){displayError(data.error);return;}\n        setPopupState({show:true,title:\"Session Management\",content:msg+\"successful!\"});\n        let lockedusersData = lockedusers;\n        lockedusersData.splice(id,1);\n        setLockedusers(lockedusersData);\n        setLoading(false);\n    }\n\n    // Session Management: Logoff/Disconnect User\n    const disconnectLogoff = async (event) =>{\n        var action = event.target.innerHTML.trim().toLowerCase();\n\t\tvar id = parseInt(event.target.dataset.id);\n        var msg, rootObj, key, obj;\n        var temp = 0;\n\t\tif (action === \"logout\") {\n\t\t\tmsg = \"Logging out \";\n\t\t\trootObj = sessions;\n\t\t\tobj = rootObj[id];\n            key = obj.id;\n            temp = 1;\n\t\t} else {\n\t\t\tmsg = \"Disconnecting \";\n\t\t\trootObj = clients;\n\t\t\tobj = rootObj[id];\n            key = obj.mode;\n            temp = 2;\n\t\t}\n\t\tvar user = obj.username;\n        setLoading(msg+user+\"...\");\n        const data = await manageSessionData(action,user,key,\"session\");\n        if(data.error){displayError(data.error);return;}\n        if (data === \"fail\") {\n            setPopupState({show:true,title:\"Session Management\",content:msg+\"failed!\"});\n        } else {\n            rootObj.splice(id,1);\n            if(temp === 1) setSessions(rootObj);\n            if(temp === 2) setClients(rootObj);\n        }\n        setLoading(false);\n    }\n    const formatDate = (date) => {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear(),\n            hour = '' + d.getHours(),\n            minute = '' + d.getMinutes();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n        if (hour.length < 2)\n            hour = '0' + hour\n        if (minute.length < 2)\n            minute = '0' + minute \n\n        let map = {\"MM\":month,\"YYYY\": year, \"DD\": day};\n        let def = [day,month,year];\n        let format = dateFormat.split(\"-\");\n        let arr = []\n        let used = {}\n        for (let index in format){\n            if (!(format[index] in map) || format[index] in used){\n                return def.join('-') + \" \" + [hour,minute].join(':');\n            }\n            arr.push(map[format[index]]) \n            used[format[index]] = 1\n        }\n\n        return arr.join('-') + \" \" + [hour,minute].join(':');\n    }\n    \n\n    return (\n        <div className=\"sess-mgmt_container\">\n            {popupState.show?<PopupMsg content={popupState.content} title={popupState.title} submit={closePopup} close={closePopup} submitText={\"Ok\"} />:null}\n            {loading?<ScreenOverlay content={loading}/>:null}\n            \n            <div id=\"page-taskName\"><span>Session Management</span></div>\n            <div className=\"adminActionBtn\">\n                 <button className=\"a__btn pull-right \" onClick={()=>{refreshSessMgmt()}} >Refresh</button>\n            </div> \n            <div className=\"content_wrapper-sess-mgmt\">\n                <ScrollBar thumbColor=\"#929397\">\n                <div className=\"col-xs-9 form-group__conv-Sess-mgmt adminForm\" style={{height:\"88%\"}}>\n                    <div className=\"containerWrap sessionItemWrap\">\n                        <div onClick={()=>{setShowSessions(!showSessions)}} className=\"sessionHeading\" data-toggle=\"collapse\" data-target=\"#activeUsers-x\">\n                            <h4>Active Users</h4>\n                        </div>\n                        {showSessions?\n                        <div id=\"activeUsers\" className=\"wrap-sess-mgmt wrap-sess-mgmt-cust \" >\n                            <ScrollBar scrollId='clientUsers' thumbColor=\"#929397\" >\n                            <table className = \"table table-hover sessionTable\">\n                            <tbody >\n                                <tr>\n                                    <th> Username </th>\n                                    <th> Role </th>\n                                    <th> Logged in </th>\n                                    <th> IP </th>\n                                    <th> </th>\n                                </tr>\n                                {sessions.map((user,index)=>(\n                                    <tr >\n                                        <td> {user.username} </td>\n                                        <td> {user.role} </td>\n                                        <td data-test=\"login_date_time\"> {formatDate(user.loggedin)} </td>\n                                        <td> {user.ip} </td>\n                                        <td><button className=\"btn btn-table-cust\" data-id={index} onClick={(event)=>{disconnectLogoff(event)}}> Logout </button></td>\n                                    </tr> \n                                ))}\n                                </tbody>\n                            </table>\n                            </ScrollBar>\n                        </div>\n                        :null}\n                    </div> \n                    <div className=\"containerWrap sessionItemWrap clientUsers-height\" style={!showSessions?{top:\"110px\"}:{top:\"420px\"}}>\n                        <div onClick={()=>{setShowClients(!showClients)}} className=\"sessionHeading\" >\n                            <h4>ICE Engine Clients</h4>\n                        </div>\n                        {showClients?\n                        <div id=\"clientUsers\" className=\"wrap-sess-mgmt wrap-sess-mgmt-custom \" >\n                            <ScrollBar scrollId='clientUsers' thumbColor=\"#929397\" >\n                            <table className = \"table table-hover sessionTable\">\n                            <tbody>\n                                <tr>\n                                    <th> Username </th>\n                                    <th> Connection Mode </th>\n                                    <th> IP </th>\n                                    <th> </th>\n                                </tr>\n                                {clients.map((user,index)=>(\n                                    <tr>\n                                        <td> {user.username} </td>\n                                        <td> {user.mode} </td>\n                                        <td > {user.ip} </td>\n                                        <td><button className=\"btn btn-table-cust\" data-id={index} onClick={(event)=>{disconnectLogoff(event)}} > Disconnect </button></td>\n                                    </tr> \n                                ))}\n                            </tbody> \n                            </table>\n                            </ScrollBar>\n                        </div>\n                        :null}\n                    </div>\n                    <div className=\"containerWrap sessionItemWrap clientUsers-height\" style={!showSessions?{top:\"110px\"}:{top:\"420px\"}}>\n                        <div onClick={()=>{setShowLockedUsers(!showLockedUsers)}} className=\"sessionHeading\" >\n                            <h4>Locked Users</h4>\n                        </div>\n                        {showLockedUsers?\n                        <div id=\"clientUsers\" className=\"wrap-sess-mgmt wrap-sess-mgmt-custom \" >\n                            <ScrollBar scrollId='clientUsers' thumbColor=\"#929397\" >\n                            <table className = \"table table-hover sessionTable\">\n                            <tbody>\n                                <tr>\n                                    <th> Username </th>\n                                    <th> </th>\n                                </tr>\n                                {lockedusers.map((user,index)=>(\n                                    <tr>\n                                        <td> {user.username} </td>\n                                        <td><button className=\"btn btn-table-cust\" data-id={index} onClick={(event)=>{unlock(event)}} > Unlock </button></td>\n                                    </tr> \n                                ))}\n                            </tbody> \n                            </table>\n                            </ScrollBar>\n                        </div>\n                        :null}\n                    </div>       \n                </div>\n                </ScrollBar>\n            </div>\n        </div>\n  );\n}\n\nexport default SessionManagement;","import React ,  { Fragment} from 'react';\nimport '../styles/AssignOptionBox.scss';\n\n/*Component AssignOptionBox\n  use: renders 2 Assign Box and buttons to move selection from one to other\n  props:rightBox:[],leftBox:[],setRightBox(),setLeftBox(),\n  disable:true/false for move buttons,\n  FilterComp: component to filter leftbox\n*/\n    \nconst AssignOptionBox = ({rightBox,leftBox,setRightBox,setLeftBox,disable,FilterComp}) => {\n    const rightArr = rightBox?rightBox:[]\n    const leftArr = leftBox?leftBox:[]\n    const moveData = (e) => {\n        var action =  e.currentTarget ? e.currentTarget.id : undefined\n        if(!action)return;\n        moveObj(action,rightBox,leftBox,setRightBox,setLeftBox)\n    }\n    return(\n        <Fragment>\n            <div className='assign_opt-container'>\n                <div className='left-box'>\n                    <div className='left-title'>All Projects</div>\n                    <select multiple id='opt-box-left'>\n                        {leftArr.map((prj) => ( \n                            <option key={prj._id} value={prj._id} >{prj.name} </option>\n                        ))}\n                    </select>\n                </div>\n                <div className='middle-box'>\n                    <div>\n                        <button type=\"button\" id=\"rightgo\" disabled={disable} onClick={moveData} title=\"Move to right\"> &gt; </button>\n                        <button type=\"button\" id=\"rightall\" disabled={disable} onClick={moveData} title=\"Move all to right\"> &gt;&gt; </button>\n                        <button type=\"button\" id=\"leftall\" disabled={disable} onClick={moveData} title=\"Move all to left\"> &lt;&lt; </button>\n                        <button type=\"button\" id=\"leftgo\" disabled={disable} onClick={moveData} title=\"Move to left\"> &lt; </button>\n                    </div>\n                </div>\n                <div className='right-box'>\n                    <div>\n                        <span className='right-title'>Assign Projects to Pool</span>\n                        {FilterComp?FilterComp:null}\n                    </div>\n                    <select multiple id='opt-box-right'>\n                        {rightArr.map((e) => ( \n                            <option key={e._id} value={e._id} >{e.name} </option>\n                        ))}\n                    </select>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nconst moveObj = (action,rightBox,leftBox,setRightBox,setLeftBox) => {\n    var lBox, rBox, el;\n    switch(action){\n        case \"rightall\": {\n            setRightBox([...leftBox,...rightBox])\n            setLeftBox([])\n            return;\n        }\n        case \"leftall\": {\n            setLeftBox([...rightBox,...leftBox])\n            setRightBox([])\n            return;\n        }\n        case \"rightgo\": {\n            lBox = [];\n            rBox = [];\n            el = document.getElementById(\"opt-box-left\").options;\n            if(el && el.length>0){\n                Array.from(el).forEach((e)=>{\n                    var obj = {_id:e.value,name:e.innerText}\n                    if(e.selected){\n                        rBox.push(obj)\n                    }else{\n                        lBox.push(obj)\n                    }\n                })\n                setRightBox([...rightBox,...rBox])\n                setLeftBox(lBox)\n            }\n            return;\n        }\n        case \"leftgo\": {\n            lBox = [];\n            rBox = [];\n            el = document.getElementById(\"opt-box-right\").options;\n            if(el && el.length>0){\n                Array.from(el).forEach((e)=>{\n                    var obj = {_id:e.value,name:e.innerText}\n                    if(e.selected){\n                        lBox.push(obj)\n                    }else{\n                        rBox.push(obj)\n                    }\n                })\n                setLeftBox([...leftBox,...lBox])\n                setRightBox(rBox)\n            }\n            return;\n        }\n        default: return;\n    }\n}\n\nexport default AssignOptionBox;","import React, { Fragment, useState, useEffect , useRef } from 'react';\nimport {ModalContainer, ScrollBar} from '../../global' \nimport {FormInpDropDown, FormInput} from '../components/FormComp';\nimport AssignOptionBox from '../components/AssignOptionBox'\nimport {clearQueue,deleteICE_pools,updatePool,getPools} from '../api';\nimport '../styles/EditIcePool.scss';\n\n/*Component EditIcePool\n  use: defines icepool middle Section for edit ice pool from create ice pool section\n*/\nconst EditIcePool = ({projList,displayError,setLoading}) => {\n    const poolName = useRef()\n    const updateBtn = useRef()\n    const deleteBtn = useRef()\n    const clearBtn = useRef()\n    const filterRef = useRef()\n    const [allProj,setAllProj] = useState([])\n    const [assignProj,setAssignProj] = useState([])\n    const [poolList,setPoolList] =  useState([])\n    const [poolDict,setPoolDict] = useState({})\n    const [clearPop,setClearPop] = useState(false)\n    const [deletePop,setDeletePop] = useState(false)\n    const [selectedPool,setSelectedPool] = useState(undefined)\n    const prop = {filterRef,selectedPool,setSelectedPool,poolName,poolDict,projList,setAllProj,assignProj,setAssignProj,setPoolList,setPoolDict,setLoading,displayError}\n    useEffect(()=>{\n        (async()=>{\n            setLoading('Loading ...')\n            await resetData(prop)\n            setLoading(false)\n        })()\n        // eslint-disable-next-line\n    },[projList])\n    //on click of pool dropdown\n    const clickInp = () =>{\n        var arr = [...allProj,...assignProj]\n        arr.sort((a,b) => a.name.localeCompare(b.name));\n        setAllProj(arr)\n        setAssignProj([])\n        setSelectedPool(undefined)\n        poolName.current.disabled = true\n        poolName.current.value = ''\n    }\n    const clickClearQueue = () =>{\n        clearIceQueue({selectedPool,setLoading,displayError})\n    }\n    const clickDeletePool = () =>{\n        if(!selectedPool)return;\n        deleteIcePool(prop)\n    }\n    const clickUpdatePool = () =>{\n        if(!selectedPool)return;\n        if(!poolName.current.value){\n            poolName.current.style.outline = '1px solid red';\n            return;\n        }\n        poolName.current.style.outline=\"\"\n        updateIcePool(prop) \n    }\n    //on selection of pool from dropdown\n    const FilterPool = (e) => {\n        poolName.current.style.outline=\"\"\n        var val = e.currentTarget.value\n        var text = e.currentTarget.innerText\n        poolName.current.disabled = false\n        poolName.current.value = text\n        setSelectedPool({_id:val,name:text})\n        var prjarr = poolDict[val].projectids\n        if( prjarr && prjarr.length>0){\n            var a = []\n            var b = []\n            projList.forEach((e)=>{\n                if(prjarr.indexOf(e._id)!==-1) a.push(e);\n                else b.push(e);\n            })\n            setAllProj(b)\n            setAssignProj(a)\n        }\n    }\n    return(\n        <Fragment>\n            {clearPop?\n                <ModalContainer\n                modalClass = 'modal-sm'\n                title='Clear Queue'\n                close={()=>setClearPop(false)}\n                footer={<Footer clickClearQueue={clickClearQueue} setClearPop={setClearPop}/>}\n                content={<Container selectedPool={selectedPool} />}\n            />:null}\n            {deletePop?\n                <ModalContainer\n                modalClass = 'modal-sm'\n                title='Delete ICE Pool'\n                close={()=>setDeletePop(false)}\n                footer={<DelFooter clickDeletePool={clickDeletePool} setDeletePop={setDeletePop}/>}\n                content={<DelContainer selectedPool={selectedPool} />}\n            />:null}\n            <ScrollBar thumbColor=\"#929397\">\n                <div className=\"edit_ice-pool_container\">\n                    <div id=\"page-taskName\">\n                        <span>Edit ICE Pool</span>\n                    </div>\n                    <div className=\"adminActionBtn\">\n                        <button disabled={!selectedPool?true:false} ref={deleteBtn} className=\"a__btn btn-edit\" onClick={()=>setDeletePop(true)}  title=\"Edit\">Delete</button>\n                        <button disabled={!selectedPool?true:false} ref={updateBtn} className=\"a__btn btn-edit\" onClick={clickUpdatePool}  title=\"Save\">Update</button>\n                        <button ref={clearBtn} className=\"a__btn\" onClick={()=>setClearPop(true)}  title=\"Save\">Clear Queue</button>\n                    </div>\n                    <div className='edit_ice-pool'>\n                        <div className=\"col-xs-9 form-group assignBox-container\">\n                            <AssignOptionBox \n                                FilterComp={<FilterComp clickInp={clickInp} inpRef={filterRef} setFilter={FilterPool} data={poolList}/>} \n                                disable={!selectedPool?true:false} leftBox={allProj} rightBox={assignProj} setLeftBox={setAllProj} setRightBox={setAssignProj}\n                            />\n                        </div>\n                        <FormInput inpRef={poolName} label={'ICE pool'} placeholder={'Enter ICE Pool Name'} validExp={\"poolName\"}/>\n                    </div>\n                </div>\n            </ScrollBar>        \n        </Fragment>\n    )\n}\n\n//choose pool section from assignoptionbox\nconst FilterComp = ({setFilter,data,clickInp,inpRef}) =>{\n    return(\n        <span className='label-select'>\n            <FormInpDropDown clickInp={clickInp} inpRef={inpRef} setFilter={setFilter} data={data}/>\n        </span>\n    )\n}\n\n//popup header and footer components for delete and clear queue warnings\nconst Container = ({selectedPool}) => (\n    <p style={{whiteSpace:'break-spaces'}}>{selectedPool?\n        `Are you sure you want to clear queue of the ICE pool : ${selectedPool.name} ? \\nAll the jobs queued in this pool will be cancelled.`\n        :`Are you sure you want to clear all the queues ? \\nAll the jobs queued in every pool will be cancelled.`\n        }\n    </p>\n)\nconst Footer = ({setClearPop,clickClearQueue}) =>(\n    <div>\n        <button style={{marginRight:'15px'}} onClick={()=>{setClearPop(false);clickClearQueue();}}>Yes</button>\n        <button onClick={()=>setClearPop(false)}>No</button>\n    </div>\n)\nconst DelContainer = ({selectedPool}) => (\n    <p style={{whiteSpace:'break-spaces'}}>\n        {`Are you sure you want to delete ICE Pool : ${selectedPool.name} ? \\nAll the jobs queued on this pool will be canceled.`}\n    </p>\n)\nconst DelFooter = ({setDeletePop,clickDeletePool}) =>{\n    return(\n        <div>\n            <button style={{marginRight:'15px'}} onClick={()=>{setDeletePop(false);clickDeletePool();}}>Yes</button>\n            <button onClick={()=>setDeletePop(false)}>No</button>\n        </div>\n    )\n}\n\nconst updateIcePool = async(prop) =>{\n    prop.setLoading('Saving ICE Pool ...')\n    var pool = prop.poolDict[prop.selectedPool._id]\n    pool.poolname = prop.poolName.current.value\n    pool.projectids=[]\n    pool.ice_added=[]\n    pool.ice_deleted=[]\n    prop.assignProj.forEach(e=>{\n        pool.projectids.push(e._id)\n    })\n    var data = await updatePool(pool)\n    if(data.error){prop.displayError(data.error);return;}\n    var err = await resetData(prop)\n    if(!err)prop.displayError(\"ICE Pool saved successfully.\",\"Success\")\n}\n\nconst deleteIcePool = async(prop) =>{\n    prop.setLoading('Deleting ICE Pool ...')\n    var id = prop.selectedPool._id\n    var data = await deleteICE_pools({'poolid':[id]})\n    if(data.error){prop.displayError(data.error);return;}\n    var err = await resetData(prop)\n    if(!err)prop.displayError(\"ICE Pool deleted successfully.\",\"Success\")\n}\n\nconst clearIceQueue = async({selectedPool,setLoading,displayError}) =>{\n    setLoading('Clearing Queue ...')\n    var poolids = []\n    var type = \"any\";\n    if(selectedPool){\n        poolids.push(selectedPool._id)\n    }else{\n        type = \"all\"\n    }\n    var data = await clearQueue({\"poolids\":poolids,\"type\":type});\n    if(data.error){displayError(data.error);return;}\n    displayError(\"Cleared queue successfully.\",\"Success\")\n}\n\nconst resetData = async({filterRef,setSelectedPool,poolName,projList,setAllProj,setAssignProj,setPoolDict,setProjList,setPoolList,setLoading,displayError,action}) => {\n    var dataPool = {\n        poolid:\"all\",\n        projectids:[]\n    }\n    filterRef.current.value = \"\"\n    poolName.current.disabled = true\n    poolName.current.value = \"\"\n    var data = await getPools(dataPool)\n    if(data.error){\n        if(data.val === 'empty'){\n            displayError(data.error);\n            data = {};\n        }else{\n            displayError(data.error);\n            return true;\n        }\n    }\n    var e = Object.entries(data)\n    e.sort((a,b) => a[1].poolname.localeCompare(b[1].poolname))\n    setPoolDict(data)\n    setPoolList(e)\n    setAllProj(projList)\n    setAssignProj([])\n    setSelectedPool(undefined)\n}\n\n\nexport default EditIcePool","import React, { Fragment, useState, useEffect , useRef } from 'react';\nimport {ScreenOverlay, PopupMsg, ScrollBar} from '../../global' \nimport {FormInput} from '../components/FormComp';\nimport AssignOptionBox from '../components/AssignOptionBox'\nimport {getDetails_ICE,createPool_ICE} from '../api';\nimport EditIcePool from './EditIcePool';\nimport '../styles/CreateIcePool.scss'\n\n\n/*Component CreateIcePool\n  use: defines icepool middle Section for create ice pools\n*/\n\nconst CreateIcePool = (props) => {\n    const poolName = useRef()\n    const [editPool,setEditPool] = useState(false)\n    const [projList,setProjList] = useState([])\n    const [allProj,setAllProj] = useState([])\n    const [assignProj,setAssignProj] = useState([])\n    const [popupState,setPopupState] = useState({show:false,title:\"\",content:\"\"});\n    const [loading,setLoading] = useState(false);\n    const displayError = (error,header) =>{\n        setLoading(false)\n        setPopupState({\n            title:header?header:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n    const ClickCreate = async() => {\n        var val =  poolName.current.value\n        if(!val){\n            poolName.current.style = 'border-color: red!important;'\n            return;\n        }\n        poolName.current.style = \"\"\n        var projList = [];\n        assignProj.forEach((e)=>projList.push(e._id))\n        var dataCreate = {\n\t\t\tpoolname: val,\n\t\t\tprojectids: projList\n        }\n        setLoading('Saving ICE Pool ...')\n        var data = await createPool_ICE(dataCreate)\n        if(data.error){displayError(data.error);return;}\n        await resetData({poolName,setAllProj,setAssignProj,setProjList,setLoading,displayError})\n        displayError(\"ICE Pool created successfully.\",\"success\")\n    }\n    useEffect(()=>{\n        setEditPool(false)\n        resetData({poolName,setAllProj,setAssignProj,setProjList,setLoading,displayError})\n    },[props.resetMiddleScreen])\n    return(\n        <ScrollBar thumbColor=\"#929397\">\n        <div className=\"crt_ice-pool_container\">\n        {popupState.show?<PopupMsg content={popupState.content} title={popupState.title} submit={()=>setPopupState({show:false})} close={()=>setPopupState({show:false})} submitText={\"Ok\"} />:null}\n        {loading?<ScreenOverlay content={loading}/>:null}\n        {editPool?\n            <EditIcePool projList={projList} displayError={displayError} setLoading={setLoading}/>:\n            <Fragment>\n                <div id=\"page-taskName\">\n                    <span>Create ICE Pool</span>\n                </div>\n                <div className=\"adminActionBtn\">\n                    <button className=\" a__btn btn-edit\" onClick={()=>setEditPool(true)}  title=\"Edit\">Edit</button>\n                    <button className=\" a__btn \" onClick={ClickCreate}  title=\"Save\">Create</button>\n                </div>\n                <div className='crt_ice-pool'>\n                    <FormInput inpRef={poolName} label={'ICE pool'} placeholder={'Enter ICE Pool Name'} validExp={\"poolName\"}/>\n                    <div className=\"col-xs-9 form-group assignBox-container\">\n                        <AssignOptionBox leftBox={allProj} rightBox={assignProj} setLeftBox={setAllProj} setRightBox={setAssignProj}/>\n                    </div>\n                </div>\n            </Fragment>\n        }\n        </div>\n        </ScrollBar>\n    )\n}\n\nconst resetData = async({poolName,setAllProj,setAssignProj,setProjList,setLoading,displayError}) => {\n    setLoading('Loading ...')\n    if(poolName.current)poolName.current.value = \"\"\n    var data = await getDetails_ICE([\"all\"],[\"all\"])\n    if(data.error){displayError(data.error);return;}\n    var arr = Object.keys(data).map((id)=>{return data[id]})\n    arr.sort((a,b) => a.name.localeCompare(b.name));\n    setAllProj(arr)\n    setProjList(arr)\n    setAssignProj([])\n    setLoading(false)\n}\n\nexport default CreateIcePool;","import React, { Fragment, useState, useEffect } from 'react';\nimport {ScreenOverlay, PopupMsg, RedirectPage} from '../../global' \nimport {getUserDetails, provisions} from '../api';\nimport ValidationExpression from '../../global/components/ValidationExpression';\nimport ReactTooltip from 'react-tooltip';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/IceProvisionForm.scss'\n\n\n/*Component IceProvisionForm\n  use: \n  ToDo:\n*/\n\nconst IceProvisionForm = (props) => {\n\n    const history = useHistory();\n    const [loading,setLoading] = useState(false)\n    const [popupState,setPopupState] = useState({show:false,title:\"\",content:\"\"}) \n\tconst [firstStop,setFirstStop] = useState(false)\n\tconst [copyToolTip,setCopyToolTip] = useState(\"Click To Copy\")\n\tconst [downloadToolTip,setDownloadToolTip] = useState(\"Download Token\")\n    const [icenameErrBorder,setIcenameErrBorder] = useState(false)\n    const [selAssignUser2ErrBorder,setSelAssignUser2ErrBorder] = useState(false)\n\tconst [users,setUsers] = useState([['Select User',' ','','']])\n\n    useEffect(()=>{\n\t\tsetUsers([['Select User',' ','','']]);\n\t\tprops.setTokeninfoIcename(\"\");\n\t\tprops.setTokeninfoToken(\"\");\n\t\trefreshForm();\n\t\t// eslint-disable-next-line\n    },[props.selectProvisionType])\n\n    useEffect(()=>{\n        if( firstStop === false) setFirstStop(true);\n\t\telse provisionsIce();\n\t\t// eslint-disable-next-line\n    },[props.runProvisionsIce])\n\n    const provisionsIce = async () => {\n        setIcenameErrBorder(false);\n\t\tsetSelAssignUser2ErrBorder(false);\n\t\tconst icetype = props.op;\n\t\tprops.setToken(\"\");\n\t\tif (props.icename === \"\") {\n\t\t\tsetIcenameErrBorder(true);\n\t\t\treturn false;\n\t\t}\n\t\tif (icetype === \"normal\"  && (!props.userid || props.userid.trim() === \"\")) {\n\t\t\tsetSelAssignUser2ErrBorder(true);\n\t\t\treturn false;\n\t\t}\n\n\t\tvar tokeninfo = {\n\t\t\tuserid: props.userid,\n\t\t\ticename: props.icename,\n\t\t\ticetype: icetype,\n\t\t\taction: \"provision\"\n\t\t};\n        setLoading(\"Provisioning Token...\");\n\t\tconst data = await provisions(tokeninfo);\n\t\tif(data.error){displayError(data.error);return;}\n\t\tsetLoading(false);\n\t\tif (data === \"Invalid Session\") return RedirectPage(history);\n\t\telse if (data === 'fail') setPopupState({show:true,title:\"ICE Provision Error\",content:\"ICE Provisioned Failed\"});\n\t\telse if (data==='DuplicateIceName') setPopupState({show:true,title:\"ICE Provision Error\",content:\"ICE Provisioned Failed!!  ICE name or User already exists\"});else {\n\t\t\tprops.setIcename(props.icename);\n\t\t\tprops.setTokeninfoToken(data);\n\t\t\tprops.setToken(data);\n\t\t\tprops.setRefreshIceList(!props.refreshIceList);\n\t\t\tsetPopupState({show:true,title:\"ICE Provision Success\",content:\"Token generated Successfully for ICE '\"+props.icename+\"'!!  Copy or Download the token\"});\n\t\t}\n    }\n\n    const refreshForm = async () =>{\n        setIcenameErrBorder(false);\n        setSelAssignUser2ErrBorder(false);\n\t\tprops.setToken(\"Click on Provision/Reregister to generate token\");\n\t\tprops.setIcename(\"\");\n\t\tprops.setUserid(\" \");\n\t\tif (props.op === \"normal\") {\n\t\t\tconst data = await getUserDetails(\"user\");\n\t\t\tif(data.error){displayError(data.error);return;}\n\t\t\tdata.sort((a,b)=>a[0].localeCompare(b[0]));\n\t\t\tdata.splice(0, 0, ['Select User',' ','','']);\n\t\t\tsetUsers(data.filter((e)=> (e[3] !== \"Admin\")));\n\t\t}\n    }\n\n    const closePopup = () =>{\n        setPopupState({show:false,title:\"\",content:\"\"});\n\t}\n\n\tconst updateIceName = (value) => {\n\t\tvalue = ValidationExpression(value,\"iceName\")\n\t\tprops.setIcename(value);\n\t\tverifyName(value)\n\t}\n\t\n\tconst copyTokenFunc = () =>{\n\t\tconst data = props.tokeninfoToken;\n\t\tif (!data) {\n\t\t\tsetCopyToolTip(\"Nothing to Copy!\");\n\t\t\tsetTimeout(()=>{\n\t\t\t\tsetCopyToolTip(\"Click to Copy\");\n\t\t\t}, 1500);\n\t\t\treturn;\n\t\t}\n\t\tconst x = document.getElementById('iceToken');\n\t\tx.select();\n\t\tdocument.execCommand('copy');\n\t\tsetCopyToolTip(\"Copied!\");\n\t\tsetTimeout(()=>{\n\t\t\tsetCopyToolTip(\"Click to Copy\");\n\t\t}, 1500);\n\t}\n\n\tconst downloadToken = () =>{\n\t\tconst data = props.tokeninfoToken;\n\t\tif (!data) {\n\t\t\tsetDownloadToolTip(\"Nothing to Download!\");\n\t\t\tsetTimeout(()=>{\n\t\t\t\tsetDownloadToolTip(\"Download Token\");\n\t\t\t}, 1500);\n\t\t\treturn;\n\t\t}\n\t\tconst filename = props.icename + \"_icetoken.txt\";\n\t\tvar blob = new Blob([data], { type: 'text/json' });\n\t\tvar e = document.createEvent('MouseEvents');\n\t\tvar a = document.createElement('a');\n\t\ta.download = filename;\n\t\ta.href = window.URL.createObjectURL(blob);\n\t\ta.dataset.downloadurl = ['text/json', a.download, a.href].join(':');\n\t\te.initMouseEvent('click', true, true, window,\n\t\t0, 0, 0, 0, 0, false, false, false, false, 0, null);\n\t\ta.dispatchEvent(e);\n\t\n\t\tsetDownloadToolTip(\"Downloaded!\");\n\t\tsetTimeout(()=>{\n\t\t\tsetDownloadToolTip(\"Download Token\");\n\t\t}, 1500);\n\t}\n\n    const verifyName = (iceName) =>{\n        const name = iceName;\n\t\tconst icelist1 = props.icelist.map(e => e.icename);\n\t\tif (icelist1.indexOf(name) > -1) setIcenameErrBorder(true);\n\t\telse setIcenameErrBorder(false);\n\t}\n\t\n\tconst displayError = (error) =>{\n        setLoading(false)\n        setPopupState({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n\n    return (\n        <Fragment>\n            {popupState.show?<PopupMsg content={popupState.content} title={popupState.title} submit={closePopup} close={closePopup} submitText={\"Ok\"} />:null}\n\t\t\t{loading?<ScreenOverlay content={loading}/>:null}\n\t\t\t\n            <div className=\"col-xs-9\" style={{width: \"83%\"}}>\n\t\t\t\t<div className='adminControl-ip adminControl-ip-cust'><div>\n                <span className=\"leftControl-ip\" title=\"ICE Type\">ICE Type</span>\n\t\t\t\t\t<label className=\"adminFormRadio\">\n\t\t\t\t\t\t<input type=\"radio\" checked={props.op===\"normal\"}  value=\"normal\" name=\"provisionType\" onChange={()=>{props.setOp(\"normal\");props.setSelectProvisionType(!props.selectProvisionType);refreshForm()}} />\n\t\t\t\t\t\t<span>Normal</span>\n\t\t\t\t\t</label>\n\t\t\t\t\t<label className=\"adminFormRadio\">\n\t\t\t\t\t\t<input type=\"radio\" checked={props.op===\"ci-cd\"} value=\"ci-cd\" name=\"provisionType\" onChange={()=>{props.setRefreshIceList(!props.refreshIceList);props.setOp(\"ci-cd\");refreshForm()}} />\n\t\t\t\t\t\t<span>CI/CD</span>\n\t\t\t\t\t</label>\n\t\t\t\t</div></div>\n                <div className='adminControl-ip'><div>\n\t\t\t\t\t<span className=\"leftControl-ip\" title=\"ICE Name\">ICE Name</span>\n\t\t\t\t\t<input type=\"text\" autoComplete=\"off\" id=\"icename\" name=\"icename\" value={props.icename} onChange={(event)=>{updateIceName(event.target.value)}} maxLength=\"100\" className={icenameErrBorder?\"inputErrorBorder border_input-ip form-control-ip form-control-custom-ip\":\"border_input-ip form-control-ip form-control-custom-ip\"} placeholder=\"ICE Name\"/>\n\t\t\t\t</div></div>\n                <div className='userForm adminControl-ip'><div>\n\t\t\t\t\t<span className=\"leftControl-ip\" title=\"User\">User</span>\n                    <select value={props.userid} onChange={(event)=>props.setUserid(event.target.value)} disabled={props.op!=='normal'}  id=\"selAssignUser2\" className={selAssignUser2ErrBorder?'selectErrorBorder adminSelect-ip form-control-ip':'adminSelect-ip form-control-ip'}>\n                        {users.map((entry,index) => (\n                            <option disabled={entry[0]==='Select User'?true:false} key={index} value={entry[1]}>{entry[0]}</option>\n                        ))}\n                    </select>\n                </div></div>\n                <div className='adminControl-ip' id=\"icetokenarea\"><div>\n\t\t\t\t\t<span className=\"leftControl-ip\" title=\"Token\">Token</span>\n\t\t\t\t\t<textarea autoComplete=\"off\" id=\"iceToken\" value={props.token} name=\"iceToken\" readOnly=\"readonly\"></textarea>\n\t\t\t\t\t<label className=\"lable-cust-ip\" >\n\t\t\t\t\t\t<ReactTooltip id=\"copy\" effect=\"solid\" backgroundColor=\"black\" getContent={[() => { return copyToolTip },0]} />\n\t\t\t\t\t\t<ReactTooltip id=\"download\" effect=\"solid\" backgroundColor=\"black\" getContent={[() => { return downloadToolTip },0]} />\n\t\t\t\t\t\t<span className=\"fa fa-files-o action-cust-ip\"  data-for=\"copy\" data-tip={copyToolTip} onClick={()=>{copyTokenFunc()}} /*ng-click=\"copyToken($event)\"*/></span>\n\t\t\t\t\t\t<span className=\"fa fa-download action-cust-ip\" data-for=\"download\" data-tip={downloadToolTip} onClick={()=>{downloadToken()}} /*ng-click=\"downloadToken($event)\"*/ ></span>\n\t\t\t\t\t</label>\n\t\t\t\t</div></div>\n            </div>\n            </Fragment>\n  );\n}\n\nexport default IceProvisionForm;","import React, { Fragment, useState, useEffect } from 'react';\nimport {ScreenOverlay, PopupMsg, ScrollBar} from '../../global' \nimport {fetchICE, provisions, manageSessionData} from '../api';\nimport '../styles/IceProvisionList.scss'\n\n\n/*Component IceProvisionList\n  use: Display ICE Provision Table\n  ToDo:\n*/\n\nconst IceProvisionList = (props) => {\n\n    const [loading,setLoading] = useState(false)\n\tconst [popupState,setPopupState] = useState({show:false,title:\"\",content:\"\"}) \n\tconst [searchTasks,setSearchTasks] = useState(\"\")\n\tconst [icelistModify,setIcelistModify] = useState(props.icelist)\n\tconst [showList,setShowList] = useState(false)\n    \n    useEffect(()=>{\n\t\trefreshIceList();\n\t\t// eslint-disable-next-line\n    },[props.selectProvisionType,props.refreshIceList])\n\n    const refreshIceList = async () => {\n        setLoading(\"Loading...\");\n\t\tsetSearchTasks(\"\");\n\t\tconst data = await fetchICE();\n\t\tif(data.error){displayError(data.error);return;}\n\t\tsetLoading(false);\n\t\tdata.sort((a,b)=>a.icename.localeCompare(b.icename));\n\t\tvar data1 = data.filter(e => e.provisionedto !== \"--Deleted--\");\n\t\tprops.setIcelist(data1);\n\t\tsetIcelistModify(data1);\n\t\tsetShowList(true);\n    }\n\n    const closePopup = () =>{\n        setPopupState({show:false,title:\"\",content:\"\"});\n\t}\n\n\tconst displayError = (error) =>{\n        setLoading(false)\n        setPopupState({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n\t\n\tconst searchIceList = (val) =>{\n\t\tconst items = props.icelist.filter((e)=>e.icename.toUpperCase().indexOf(val.toUpperCase())!==-1)\n        setIcelistModify(items);\n\t}\n\n    const reregister = async (entry,eventName) =>{\n        const provisionDetails = entry\n\t\tconst icename = provisionDetails.icename;\n\t\tconst event=eventName.trim();\n\t\tconst tokeninfo = {\n\t\t\ticename: icename,\n\t\t\tuserid: provisionDetails.provisionedto,\n\t\t\ticetype: provisionDetails.icetype,\n\t\t\taction: \"reregister\"\n\t\t};\n\t\tsetLoading(event+\"ing...\");\n\t\tconst data = await provisions(tokeninfo);\n\t\tif(data.error){displayError(data.error);return;}\n\t\tsetLoading(false);\n\t\tif (data === 'fail') setPopupState({show:true,title:\"ICE Provisions\",content:\"ICE \"+event+\" Failed\"});\n\t\telse {\n\t\t\tconst data1 = await manageSessionData('disconnect', icename, \"?\", \"dereg\");\n\t\t\tif(data1.error){displayError(data1.error);return;}\n\t\t\tprops.setTokeninfoIcename(icename);\n\t\t\tprops.setIcename(icename);\n\t\t\tprops.setTokeninfoToken(data);\n\t\t\tprops.setToken(data);\n\t\t\tprops.setOp(provisionDetails.icetype);\n\t\t\tprops.setUserid(provisionDetails.provisionedto || ' ');\n\t\t\tsetPopupState({show:true,title:\"ICE Provision Success\",content:\"ICE \"+event+\"ed Successfully: '\"+icename+\"'!!  Copy or Download the token\"});\n\t\t\trefreshIceList();\n\t\t}\n    }\n\t\n\tconst deregister = async (entry) =>{\n        const provisionDetails = entry;\n\t\tconst icename = provisionDetails.icename;\n\t\tconst tokeninfo = {\n\t\t\ticename: icename,\n\t\t\tuserid: provisionDetails.provisionedto,\n\t\t\ticetype: provisionDetails.icetype,\n\t\t\taction: \"deregister\"\n\t\t};\n        setLoading(\"Deregistering...\");\n\t\tconst data = await provisions(tokeninfo);\n\t\tif(data.error){displayError(data.error);return;}\n\t\tsetLoading(false);\n\t\tif (data === 'fail') setPopupState({show:true,title:\"ICE Provisions\",content:\"ICE Deregister Failed\"});\n\t\telse {\n\t\t\tconst data1 = await manageSessionData('disconnect', icename, \"?\", \"dereg\");\n\t\t\tif(data1.error){displayError(data1.error);return;}\n\t\t\tsetPopupState({show:true,title:\"ICE Provisions\",content:\"ICE Deregistered Successfully\"});\n\t\t\tprops.setSelectProvisionType(!props.selectProvisionType);\n\t\t}\n    }\n\n    return (\n        <Fragment>\n            {popupState.show?<PopupMsg content={popupState.content} title={popupState.title} submit={closePopup} close={closePopup} submitText={\"Ok\"} />:null}\n\t\t\t{loading?<ScreenOverlay content={loading}/>:null}\n\t\t\t\n            <div className=\"col-xs-9 form-group-ip adminForm-ip\" style={{paddingTop:\"0\",width:\"83%\"}}>\n                <div className=\"containerWrap\">\n                    <div className=\"sessionHeading-ip\" data-toggle=\"collapse\" data-target=\"#activeUsersToken-x\">\n\t\t\t\t\t\t<h4 onClick={()=>{setShowList(!showList);}}>ICE Provisions</h4>\n\t\t\t\t\t\t<div className=\"search-ip\">\n\t\t\t\t\t\t\t<span className=\"searchIcon-provision search-icon-ip\">\n\t\t\t\t\t\t\t\t<img src={\"static/imgs/ic-search-icon.png\"} className=\"search-img-ip\" alt=\"search icon\"/>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<input value={searchTasks} onChange={(event)=>{ setSearchTasks(event.target.value);searchIceList(event.target.value)}} autoComplete=\"off\" type=\"text\" id=\"searchTasks\" className=\"searchInput-list-ip searchInput-cust-ip\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{showList ?\n                    <div id=\"activeUsersToken\" className=\"wrap wrap-cust-ip\">\n\t\t\t\t\t<ScrollBar scrollId='activeUsersToken-ip' thumbColor=\"#929397\" >\n                    \t<table className = \"table table-hover sessionTable\" id=\"tokensDetail\">\n                            <tbody >\n                            <tr>\n\t\t\t\t\t\t\t\t<th> ICE Name </th>\n\t\t\t\t\t\t\t\t<th> ICE Type</th>\n\t\t\t\t\t\t\t\t<th> Status </th>\n\t\t\t\t\t\t\t\t<th> Username </th>\n\t\t\t\t\t\t\t\t<th> Hostname </th>\n\t\t\t\t\t\t\t\t<th>  </th>\n\t\t\t\t\t\t\t\t<th>  </th>\n\t\t\t\t\t\t\t</tr>\n                            {icelistModify.map((entry,index)=>(\n                                <tr key={index} className='provisionTokens'>\n                                    <td> {entry.icename} </td>\n                                    <td> {entry.icetype} </td>\n                                    <td> {entry.status} </td>\n                                    <td> {entry.username} </td>\n                                    <td> {entry.hostname} </td>\n                                    {entry.status === 'provisioned'? <td><button className=\"btn btn-cust-ip\" onClick={()=>{reregister(entry,\"Reprovision\")}} > Reprovision </button></td>\n                                    :null}\n                                    {entry.status === 'registered' || entry.status === 'deregistered'?<td ><button className=\"btn btn-cust-ip\" onClick={()=>{reregister(entry,\"Reregister\")}}> Reregister </button></td>\n                                    :null}\n                                    {entry.status === 'deregistered'?<td></td>:null}\n                                    {entry.status !== 'deregistered'?<td ><button className=\"btn btn-cust-ip\" onClick={()=>{deregister(entry)}}> Deregister </button></td>\n                                    :null}\n                                </tr> \n                            ))}\n                            </tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</ScrollBar>\n\t\t\t\t\t</div>\n\t\t\t\t\t:null}\n                </div>\n\n            </div>\n        </Fragment>\n  );\n}\n\nexport default IceProvisionList;","import React, { useState, useEffect } from 'react';\nimport {ScrollBar} from '../../global' \nimport '../styles/IceProvision.scss'\nimport IceProvisionForm from '../components/IceProvisionForm';\nimport IceProvisionList from '../components/IceProvisionList';\n\n/*Component IceProvision\n  use: defines Admin middle Section for Ice Provision\n  ToDo:\n*/\n\nconst IceProvision = (props) => {\n\n    const [icelist,setIcelist] = useState([])\n    const [selectProvisionType,setSelectProvisionType] = useState(true)\n    const [runProvisionsIce,setRunProvisionsIce] = useState(true)\n    const [refreshIceList,setRefreshIceList] = useState(true)\n    const [op,setOp] = useState('normal')\n    const [token,setToken] = useState(\"Click on Provision/Reregister to generate token\")\n    const [icename,setIcename] = useState(\"\")\n    const [userid,setUserid] = useState(\" \")\n    const [tokeninfoToken,setTokeninfoToken] = useState(\"\")\n    const [tokeninfoIcename,setTokeninfoIcename] = useState(\"\")\n\n    useEffect(()=>{\n      setOp('normal');\n      // eslint-disable-next-line\n    },[props.resetMiddleScreen[\"provisionTa\"],props.MiddleScreen])\n\n    const refreshIceProvision = () =>{\n        setIcelist([]);\n        setSelectProvisionType(!selectProvisionType);\n    }\n\n    return (\n        <div className=\"ip_container\">\n            <div id=\"page-taskName\"><span>ICE Provision</span></div>\n            <div className=\"adminActionBtn\">\n                <button className=\"a__btn pull-right\" onClick={()=>{setRunProvisionsIce(!runProvisionsIce)}}  title=\"Provision\">Provision</button>\n                <button className=\"a__btn pull-right adminBtn-ice-provision \" onClick={()=>{refreshIceProvision()}} title=\"Refresh\">Refresh</button>            \n            </div>\n            <div className=\"ip-content_wrapper\">\n                <ScrollBar thumbColor=\"#929397\">\n                  <IceProvisionForm refreshIceList={refreshIceList} setRefreshIceList={setRefreshIceList} op={op} setOp={setOp} runProvisionsIce={runProvisionsIce} selectProvisionType={selectProvisionType} setSelectProvisionType={setSelectProvisionType} icelist={icelist} setIcelist={setIcelist} token={token} setToken={setToken} icename={icename} setIcename={setIcename} userid={userid} setUserid={setUserid} tokeninfoIcename={tokeninfoIcename} setTokeninfoIcename={setTokeninfoIcename} tokeninfoToken={tokeninfoToken} setTokeninfoToken={setTokeninfoToken} />\n                  <IceProvisionList refreshIceList={refreshIceList} selectProvisionType={selectProvisionType} setOp={setOp} setSelectProvisionType={setSelectProvisionType}  icelist={icelist} setIcelist={setIcelist} token={token} setToken={setToken} icename={icename} setIcename={setIcename} userid={userid} setUserid={setUserid} tokeninfoIcename={tokeninfoIcename} setTokeninfoIcename={setTokeninfoIcename} tokeninfoToken={tokeninfoToken} setTokeninfoToken={setTokeninfoToken}/>\n                </ScrollBar>\n            </div>\n        </div>\n  );\n}\n\nexport default IceProvision;","import React, { Fragment, useState, useEffect } from 'react';\nimport {ScreenOverlay, PopupMsg, CalendarComp } from '../../global' \nimport {getUserDetails, getCIUsersDetails, fetchICE} from '../api';\nimport ValidationExpression from '../../global/components/ValidationExpression';\nimport ReactTooltip from 'react-tooltip';\nimport '../styles/TokenMgmtForm.scss'\nimport TimeComp from '../../global/components/TimeComp';\n\n\n/*Component TokenMgmtForm\n  use: Token Mgmt Form Fields and Generates Token\n  ToDo:\n*/\n\nconst TokenMgmtForm = (props) => {\n\tconst dateVal = props.dateVal;\n    const [loading,setLoading] = useState(false)\n    const [popupState,setPopupState] = useState({show:false,title:\"\",content:\"\"}) \n    const [allUsers,setAllUsers] = useState([['Select User',' ','','']])\n\tconst [firstStop,setFirstStop] = useState(false)\n\tconst [inputProps1Disable,setInputProps1Disable] = useState(true)\n    const [copyToolTip,setCopyToolTip] = useState(\"Click To Copy\")\n\tconst [downloadToolTip,setDownloadToolTip] = useState(\"Download Token\")\n\t\n    let inputProps1 = {\n\t\tplaceholder: \"Select Time\",\n\t\treadOnly:\"readonly\" ,\n\t\tdisabled : inputProps1Disable,\n        className:\"fc-timePicker\"\n\t};\n\n\tconst displayError = (error) =>{\n        setLoading(false)\n        setPopupState({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n\n    useEffect(()=>{\n\t\trepopulateEntries('normal');\n\t\t// eslint-disable-next-line\n    },[props.refresh])\n\n    useEffect(()=>{\n        if(firstStop) setFirstStop(!firstStop);\n\t\telse loadData(props.targetid);\n\t\t// eslint-disable-next-line\n    },[props.runLoadData])\n\n    const repopulateEntries = async (tokenOp) =>{\n\t\tsetInputProps1Disable(true);\n        props.setName(\"\");\n\t\tprops.setToken(\"\");\n        setAllUsers([['Select User',' ','','']]);\n        props.setAllICE( [{'_id':' ', 'icename':'Select ICE', 'icetype':'ci-cd'}]);\n\t\tprops.setAllTokens([]);\n\t\tprops.setShowList(true);\n\t\tprops.setTargetid(\" \"); \n\t\tprops.setdateVal(\"\");\n\t\tprops.setTimeVal(\"\");\n        setLoading(\"Loading...\");\n\t\tif (tokenOp === 'normal') {\n\t\t\tconst data = await getUserDetails(\"user\");\n\t\t\tif(data.error){displayError(data.error);return;}\n\t\t\tsetLoading(false);\n\t\t\tdata.sort((a,b)=>a[0].localeCompare(b[0]));\n\t\t\tdata.splice(0, 0, ['Select User',' ','','']);\n\t\t\tsetAllUsers(data.filter((e)=> (e[3] !== \"Admin\")));\n\t\t} else {\n\t\t\tconst data = await fetchICE();\n\t\t\tif(data.error){displayError(data.error);return;}\n\t\t\tsetLoading(false);\n\t\t\tdata.sort((a,b)=>a.icename.localeCompare(b.icename));\n\t\t\tdata.splice(0, 0, {'_id':' ', 'icename':'Select ICE', 'icetype':'ci-cd'});\n\t\t\tconst data1 = data.filter(e => (e.provisionedto !== \"--Deleted--\" && e.icetype==='ci-cd'));\n\t\t\tprops.setAllICE(data1);\n\t\t}\n    }\n\n    const closePopup = () =>{\n        setPopupState({show:false,title:\"\",content:\"\"});\n    }\n\n    const loadData = async (targetid,clearFields) => {\n        const generatetoken = { 'userId': targetid };\n\t\tif (generatetoken.userId === ' ') return false;\n        setLoading(\"Fetching Token data. Please wait...\")\n\t\tconst data = await getCIUsersDetails(generatetoken);\n\t\tif(data.error){displayError(data.error);return;}\n\t\tsetLoading(false);\n\t\tif (data.length === 0) {\n\t\t\tsetPopupState({show:true,title:\"Token Management\",content:\"No tokens have been issued\"});\n\t\t\tprops.setAllTokens(data);\n\t\t}else {\n\t\t\tdata.sort((a,b)=>a.deactivated.localeCompare(b.deactivated));\n\t\t\tdata.forEach(e=>e.expiry=new Date(e.expiry).toString().slice(0,-22))\n\t\t\tprops.setAllTokens(data);\n\t\t\tif (clearFields) {\n\t\t\t\tprops.setName(\"\");\n\t\t\t\tprops.setToken(\"\");\n\t\t\t\tprops.setdateVal(\"\");\n\t\t\t\tprops.setTimeVal(\"\");\n\t\t\t}\n\t\t}\n\t\tprops.setShowList(true);\n    }\n\n    const verifyName =(name) =>{\n\t\tconst tknlist = props.allTokens.map(e => e.name);\n\t\tif (tknlist.indexOf(name) > -1)props.setNameErrBorder(true);\n\t\telse props.setNameErrBorder(false);\n\t}\n\t\n\tconst updateTokenName = (value) => {\n\t\tvalue = ValidationExpression(value,\"tokenName\")\n\t\tprops.setName(value);\n\t\tverifyName(value)\n\t}\n\n    const copyTokenFunc = () =>{\n\t\tconst data = props.token;\n\t\tif (!data) {\n\t\t\tsetCopyToolTip(\"Nothing to Copy!\");\n\t\t\tsetTimeout(()=>{\n\t\t\t\tsetCopyToolTip(\"Click to Copy\");\n\t\t\t}, 1500);\n\t\t\treturn;\n\t\t}\n\t\tconst x = document.getElementById('ciToken');\n\t\tx.select();\n\t\tdocument.execCommand('copy');\n\t\tsetCopyToolTip(\"Copied!\");\n\t\tsetTimeout(()=>{\n\t\t\tsetCopyToolTip(\"Click to Copy\");\n\t\t}, 1500);\n\t}\n\n\tconst downloadToken = () =>{\n\t\tconst data = props.token;\n\t\tif (!data) {\n\t\t\tsetDownloadToolTip(\"Nothing to Download!\");\n\t\t\tsetTimeout(()=>{\n\t\t\t\tsetDownloadToolTip(\"Download Token\");\n\t\t\t}, 1500);\n\t\t\treturn;\n\t\t}\n\t\tconst filename = \"token.txt\";\n\t\tvar blob = new Blob([data], { type: 'text/json' });\n\t\tvar e = document.createEvent('MouseEvents');\n\t\tvar a = document.createElement('a');\n\t\ta.download = filename;\n\t\ta.href = window.URL.createObjectURL(blob);\n\t\ta.dataset.downloadurl = ['text/json', a.download, a.href].join(':');\n\t\te.initMouseEvent('click', true, true, window,\n\t\t0, 0, 0, 0, 0, false, false, false, false, 0, null);\n\t\ta.dispatchEvent(e);\n\t\n\t\tsetDownloadToolTip(\"Downloaded!\");\n\t\tsetTimeout(()=>{\n\t\t\tsetDownloadToolTip(\"Download Token\");\n\t\t}, 1500);\n\t}\n\n\tconst changeDate = (val) => {\n\t\tprops.setdateVal(val);\n\t\tsetInputProps1Disable(false);\n\t\tvar hr = new Date().getHours();\n\t\tvar min = parseInt(new Date().getMinutes()+5);\n\t\tif( new Date().getHours().toString().length === 1) hr = \"0\"+hr;\n\t\tif(parseInt(new Date().getMinutes()+5).toString().length === 1) min = \"0\"+min;\n\t\tprops.setTimeVal(\"\"+hr+\":\"+min)\n\t}\n\n    return (\n        <Fragment>\n            {popupState.show?<PopupMsg content={popupState.content} title={popupState.title} submit={closePopup} close={closePopup} submitText={\"Ok\"} />:null}\n\t\t\t{loading?<ScreenOverlay content={loading}/>:null}\n\t\t\t\n            <div className=\"col-xs-9\" style={{width:\"83%\"}}>\n                <div className='adminControl-tkn-mgmt ice-type-tkn-mgmt'><div>\n                    <span className=\"leftControl-tkn-mgmt\" title=\"ICE Type\">ICE Type</span>\n\t\t\t\t\t<label className=\"adminFormRadio\">\n\t\t\t\t\t\t<input type=\"radio\" checked={props.op===\"normal\"} value=\"normal\" name=\"provisionType\" onChange={()=>{props.setOp(\"normal\");repopulateEntries('normal')}} />\n\t\t\t\t\t\t<span>Normal</span>\n\t\t\t\t\t</label>\n\t\t\t\t\t<label className=\"adminFormRadio\">\n\t\t\t\t\t\t<input type=\"radio\" checked={props.op===\"ci-cd\"} value=\"ci-cd\" name=\"provisionType\" onChange={()=>{props.setOp(\"ci-cd\");repopulateEntries(\"ci-cd\")}} />\n\t\t\t\t\t\t<span>CI/CD</span>\n\t\t\t\t\t</label>\n\t\t\t\t</div></div>\n                <div className='userForm-tkn-mgmt adminControl-tkn-mgmt'>\n\t\t\t\t\t{props.op===\"normal\"?\n                        <div >\n                            <span className=\"leftControl-tkn-mgmt\" title=\"User\">Username</span>\n                            <select  value={props.targetid} id=\"selAssignUser1\" onChange={(event)=>{loadData(event.target.value,true);props.setTargetid(event.target.value);props.setSelAssignUser2ErrBorder(false)}} className={props.selAssignUser2ErrBorder?'selectErrorBorder adminSelect-tkn-mgmt form-control-tkn-mgmt':'adminSelect-tkn-mgmt form-control-tkn-mgmt'}>\n                                {allUsers.map((entry,index) => (\n\t\t\t\t\t\t\t\t\t<option key={index} value={entry[1]} disabled={entry[0]==='Select User'?true:false}>{entry[0]}</option>\n                                ))}\n                            </select>\n                        </div>\n                    :null}  \n                    {props.op===\"ci-cd\"?  \n                        <div >\n                            <span className=\"leftControl-tkn-mgmt\" title=\"ICE\">ICE Name</span>\n                            <select  value={props.targetid} id=\"selAssignUser1\"  onChange={(event)=>{loadData(event.target.value,true);props.setTargetid(event.target.value);props.setSelAssignUser2ErrBorder(false)}} className={props.selAssignUser2ErrBorder?'selectErrorBorder adminSelect-tkn-mgmt form-control-tkn-mgmt':'adminSelect-tkn-mgmt form-control-tkn-mgmt'}>\n                                {props.allICE.map((entry,index) => (\n                                    <option key={index} value={entry._id}>{entry.icename}</option>\n                                ))}\n                            </select>\n                        </div>\n                    :null}\n\t\t\t\t</div>\n                <div className='adminControl-tkn-mgmt'><div>\n\t\t\t\t\t<span className=\"leftControl-tkn-mgmt\" title=\"Token Name\">Token Name</span>\n\t\t\t\t\t<input type=\"text\" autoComplete=\"off\" id=\"tokenName\" name=\"tokenName\" onChange={(event)=>{updateTokenName(event.target.value)}} value={props.name} maxLength=\"100\" className={props.nameErrBorder?\"inputErrorBorder border_input-tkn-mgmt form-control-tkn-mgmt form-control-custom-tkn-mgmt\":\"border_input-tkn-mgmt form-control-tkn-mgmt form-control-custom-tkn-mgmt\"} placeholder=\"Token Name\"/>\n\t\t\t\t</div></div>\n                <div className='adminControl-tkn-mgmt1'><div>\n\t\t\t\t\t<span className=\"adminControl-tkn-mgmt1__title leftControl-tkn-mgmt\" title=\"Token Expiry\">Token Expiry</span>\n                    <div className=\"tokenSuite\">\n\t\t\t\t\t\t<CalendarComp date={dateVal} setDate={(val)=>{changeDate(val)}} classCalender=\"admin_calender\"/>\n\t\t\t\t\t\t<TimeComp time={props.timeVal} setTime={(val)=>{props.setTimeVal(val)}} inputProps={inputProps1}  classTimer=\"admin_timer\"/>\n\t\t\t\t\t</div>\n                </div></div>\n\n                <div className='adminControl-tkn-mgmt' id=\"tokenarea\"><div>\n\t\t\t\t\t<span className=\" leftControl-tkn-mgmt\" title=\"Generated Token\">Token</span>\n\t\t\t\t\t<textarea type=\"text\" className=\"token-tkn-mgmt token-tkn-mgmt-cust\" autoComplete=\"off\" id=\"ciToken\" name=\"ciToken\" value={props.token} placeholder=\"Click on Generate to generate token\" readOnly=\"readonly\" />\n                    <label  className='tip-tkn-mgmt'>\n\t\t\t\t\t\t<ReactTooltip id=\"copy\" effect=\"solid\" backgroundColor=\"black\" getContent={[() => { return copyToolTip },0]} />\n\t\t\t\t\t\t<ReactTooltip id=\"download\" effect=\"solid\" backgroundColor=\"black\" getContent={[() => { return downloadToolTip },0]} />\n\t\t\t\t\t\t<span className=\"fa fa-files-o action-form-mgmt\" data-for=\"copy\" data-tip={copyToolTip} onClick={()=>{copyTokenFunc()}} ></span>\n\t\t\t\t\t\t<span className=\"fa fa-download action-form-mgmt\" data-for=\"download\" data-tip={downloadToolTip} onClick={()=>{downloadToken()}}></span>\n\t\t\t\t\t</label>\n                </div></div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default TokenMgmtForm;","import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport {ScreenOverlay, PopupMsg, ScrollBar} from '../../global'\nimport { useSelector } from 'react-redux';\nimport {manageCIUsers} from '../api';\nimport '../styles/TokenMgmtList.scss'\n\n\n/*Component TokenMgmtList\n  use: Token Mgmt CI Tokens Table \n  ToDo:\n*/\n\nconst TokenMgmtList = (props) => {\n    const dateFormat = useSelector(state=>state.login.dateformat);\n    const [loading,setLoading] = useState(false)\n\tconst [popupState,setPopupState] = useState({show:false,title:\"\",content:\"\"}) \n\tconst [searchTasks,setSearchTasks] = useState(\"\")\n\tconst [allTokensModify,setAllTokensModify] = useState(props.allTokens)\n    const [firstStop,setFirstStop] = useState(false)\n    const searchRef =  useRef();\n\n    useEffect(()=>{\n        if(firstStop) setFirstStop(!firstStop);\n        else updateTokenList();\n        // eslint-disable-next-line\n    },[props.allTokens])\n\n    const closePopup = () =>{\n        setPopupState({show:false,title:\"\",content:\"\"});\n\t}\n\t\n\tconst updateTokenList = () =>{\n\t\tconst items = props.allTokens.filter((e)=>e.name.toUpperCase().indexOf(searchRef.current.value.toUpperCase())!==-1)\n        setAllTokensModify(items);\n    }\n    \n    const deactivate = async (entry) => {\n        const CIUser = {\n\t\t\t'userId': props.targetid,\n\t\t\t'tokenName': entry.name\n        };\n\t\tconst data = await manageCIUsers(\"deactivate\", CIUser);\n        if(data.error){displayError(data.error);return;}\n        setLoading(false);\n        setPopupState({show:true,title:\"Token Management\",content: \"Token '\"+CIUser.tokenName+\"' has been Deactivated\"});\n        data.sort((a,b)=>a.deactivated.localeCompare(b.deactivated));\n        data.forEach(e=>e.expiry=new Date(e.expiry).toString().slice(0,-22))\n        props.setAllTokens(data);\n    }\n\n    const displayError = (error) =>{\n        setLoading(false)\n        setPopupState({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n    const formatDate = (date) => {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear(),\n            hour = '' + d.getHours(),\n            minute = '' + d.getMinutes();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n        if (hour.length < 2)\n            hour = '0' + hour\n        if (minute.length < 2)\n            minute = '0' + minute \n\n        let map = {\"MM\":month,\"YYYY\": year, \"DD\": day};\n        let def = [day,month,year];\n        let format = dateFormat.split(\"-\");\n        let arr = []\n        let used = {}\n        for (let index in format){\n            if (!(format[index] in map) || format[index] in used){\n                return def.join('-') + \" \" + [hour,minute].join(':');\n            }\n            arr.push(map[format[index]]) \n            used[format[index]] = 1\n        }\n\n        return arr.join('-') + \" \" + [hour,minute].join(':');\n    }\n\n\n    return (\n        <Fragment>\n            {popupState.show?<PopupMsg content={popupState.content} title={popupState.title} submit={closePopup} close={closePopup} submitText={\"Ok\"} />:null}\n            {loading?<ScreenOverlay content={loading}/>:null}\n            \n            <div className=\"col-xs-9 adminForm-tkn-mgmt\" style={{paddingTop:\"0\",width:\"83%\"}}>\n                <div className=\"tkn-mgmt-Wrap\">\n                    <div  className=\"sessionHeading-tkn-mgmt\" data-toggle=\"collapse\" data-target=\"#activeUsersToken-x\">\n\t\t\t\t\t\t<h4 onClick={()=>{props.setShowList(!props.showList);}} >CI Tokens</h4>\n\t\t\t\t\t\t<div  className=\"search-tkn-mgmt search-list-tkn-mgmt\">\n\t\t\t\t\t\t\t<span className=\"searchIcon searchIcon-list\" >\n\t\t\t\t\t\t\t\t<img src={\"static/imgs/ic-search-icon.png\"} className=\"search-img-list\" alt={\"Search Icon\"}/>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<input ref={searchRef} autoComplete=\"off\" onChange={()=>{updateTokenList()}} type=\"text\" id=\"searchTasks\"  className=\"searchInput searchInput-list-tkn-mgmt\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n                    {props.showList ?\n                        <div id=\"activeUsersToken\" className=\"wrap active-users-token\" >\n                            <ScrollBar scrollId='activeUsersToken' thumbColor=\"#929397\" >\n                            <table className = \"table table-hover sessionTable\" id=\"tokensDetail\">\n                                <tbody >\n                                <tr className=\"tkn-table__row\">\n                                    <th className=\"tkn-table__name\"> Token Name </th>\n                                    <th className=\"tkn-table__status\"> Status </th>\n                                    <th className=\"tkn-table__exp\"> Expiry </th>\n                                    <th className=\"tkn-table__action\"> Action </th>\n                                </tr>\n                                {allTokensModify.map((token,index)=>(\n                                    <tr key={index} className='tkn-table__row provisionTokens'>\n                                        <td className=\"tkn-table__name\"> {token.name} </td>\n                                        <td className=\"tkn-table__status\"> {token.deactivated} </td>\n                                        <td data-test=\"token_expiry_date\" className=\"tkn-table__exp\"> {formatDate(token.expireson)} </td>\n                                        {token.deactivated === 'active'? <td className=\"tkn-table__action\"><button className=\"btn btn-list-tkn-mgmt tkn-table__button\" onClick={()=>{deactivate(token)}} > Deactivate </button></td>:null}\n                                        {token.deactivated !== 'active'?<td className=\"tkn-table__action\"></td> :null}\n                                    </tr> \n                                ))}\n                                </tbody>\n                            </table>\n                            </ScrollBar>\n                        </div>\n                    :null}\n                </div>\n            </div>\n        </Fragment>\n  );\n}\n\nexport default TokenMgmtList;","import React, { Fragment, useState, useEffect } from 'react';\nimport {ScreenOverlay, PopupMsg, ScrollBar} from '../../global' \nimport {manageCIUsers} from '../api';\nimport { useSelector } from 'react-redux';\nimport TokenMgmtForm from '../components/TokenMgmtForm';\nimport TokenMgmtList from '../components/TokenMgmtList';\nimport '../styles/TokenManagement.scss'\n\n/*Component TokenManagement\n  use: defines Admin middle Section for Token Management\n  ToDo:\n*/\n\nconst TokenManagement = (props) => {\n\n    const userInfo = useSelector(state=>state.login.userinfo);\n\n    const [loading,setLoading] = useState(false)\n    const [popupState,setPopupState] = useState({show:false,title:\"\",content:\"\"}) \n    const [op,setOp] = useState(\"normal\")\n    const [name,setName] = useState(\"\")\n    const [token,setToken] = useState(\"\")\n    const [targetid,setTargetid] = useState(\" \")\n    const [allTokens,setAllTokens] = useState([])\n    const [allICE,setAllICE] = useState([{'_id':' ', 'icename':'Select ICE', 'icetype':'ci-cd'}])\n    const [dateVal,setdateVal] = useState(\"\")\n    const [timeVal,setTimeVal] = useState(\"\")\n    const [nameErrBorder,setNameErrBorder] = useState(false)\n    const [selAssignUser2ErrBorder,setSelAssignUser2ErrBorder] = useState(false)\n    const [runLoadData,setRunLoadData] = useState(true)\n\tconst [refresh,setRefresh] = useState(false)\n\tconst [showList,setShowList] = useState(false)\n\n    useEffect(()=>{\n\t\tsetOp(\"normal\");\n\t\tsetdateVal(\"\");\n\t\tsetTimeVal(\"\");\n\t\t// eslint-disable-next-line\n    },[props.resetMiddleScreen[\"tokenTab\"],props.MiddleScreen])\n\n\tconst displayError = (error) =>{\n        setLoading(false)\n        setPopupState({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n\n    const generateCIusertokens = async () =>{\n        setNameErrBorder(false);\n\t\tsetSelAssignUser2ErrBorder(false);\n\t\tconst icetype = op;\n\t\tconst userId = targetid.trim();\n\t\tconst tokenname = name.trim();\n\t\tconst activeTokens = allTokens.filter((e)=>e.deactivated === 'active');\n\t\tif (userId === \"\") {\n\t\t\tsetSelAssignUser2ErrBorder(true);\n\t\t\treturn false;\n\t\t}\n\t\tif (tokenname === \"\") {\n\t\t\tsetNameErrBorder(true);\n\t\t\treturn false;\n        }\n        let tokendetails;\n        if (Object.keys(userInfo).length !== 0){\n            tokendetails = userInfo.token;\n        }\n\t\tvar expdate=dateVal;\n\t\tvar exptime=timeVal;\n\t\tvar today = new Date();\n\t\tvar td = new Date();\n\t\tif (expdate === \"\") {\n\t\t\ttd.setHours(today.getHours()+parseInt(tokendetails));\n\t\t\tvar dt = td.getDate();\n\t\t\tvar mon = td.getMonth()+1;\n\t\t\tif(td.getDate().toString().length === 1) dt = \"0\"+dt;\n\t\t\tif((td.getMonth()+1).toString().length === 1) mon = \"0\"+mon;\n\t\t\texpdate = dt+\"-\"+(mon)+\"-\"+td.getFullYear()\n\t\t\tsetdateVal(expdate);\n\t\t}\n\t\tif (exptime === \"\") {\n\t\t\tvar sldate = timeVal;\n\t\t\tvar sldate_2 = sldate.split(\"-\");\n\t\t\tvar hr, min;\n\t\t\tif(parseInt(sldate_2[0])===today.getDate() && (parseInt(sldate_2[1]))===today.getMonth()+1 && parseInt(sldate_2[2])===today.getFullYear()){\n\t\t\t\ttd.setHours(today.getHours()+8);\n\t\t\t\thr = td.getHours();\n                min = td.getMinutes;\n                if( td.getHours().toString().length === 1) hr = \"0\"+hr;\n                if(td.getMinutes.toString().length === 1) min = \"0\"+min;\n\t\t\t\texptime=\"\"+hr+\":\"+min;\n                setTimeVal(exptime);\n\t\t\t}\n\t\t\telse{\n\t\t\t\thr = today.getHours();\n                min = today.getMinutes();\n                if( today.getHours().toString().length === 1) hr = \"0\"+hr;\n                if(today.getMinutes().toString().length === 1) min = \"0\"+min;\n\t\t\t\texptime=\"\"+hr+\":\"+min\n\t\t\t\tsetTimeVal(exptime);\n\t\t\t}\t\n\t\t}\n\t\tsldate_2 = expdate.split(\"-\");\n\t\tvar sltime_2 = exptime.split(\":\");\n\t\tvar now = new Date(sldate_2[2],sldate_2[1]-1,sldate_2[0],sltime_2[0],sltime_2[1]);\n\t\ttd = today;\n\t\ttd.setHours(today.getHours()+8);\n\t\tif (now < today || (now >= today && now < td)) {\n            setPopupState({show:true,title:\"Token Management\",content:\"Expiry time should be 8 hours more than current time\"});\n\t\t\treturn false;\n\t\t} else if(activeTokens.length>=10){\n            setPopupState({show:true,title:\"Token Management\",content:\"User can have max 10 active tokens. Please Deactivate old tokens\"});\n            return false;\n\t\t}\n\t\tconst CIUser = {\n\t\t\t'userId': userId,\n\t\t\t'expiry': now,\n\t\t\t'tokenname': tokenname,\n\t\t\t'icetype': icetype\n\t\t};\n        setLoading('Generating Token. Please Wait...');\n\t\tconst data = await manageCIUsers(\"create\", CIUser);\n\t\tif(data.error){displayError(data.error);return;}\n\t\tsetLoading(false);\n\t\tif (data === 'duplicate') setPopupState({show:true,title:\"Token Management\",content:\"Failed to generate token, Token Name already exists\"});\n\t\telse {\n\t\t\tsetToken(data.token);\n\t\t\tsetRunLoadData(!runLoadData);\n\t\t\tsetPopupState({show:true,title:\"Token Management\",content:\"Token generated successfully\"});\n\t\t}\n    }\n\n    const closePopup = () =>{\n        setPopupState({show:false,title:\"\",content:\"\"});\n    }\n\n    return (\n        <Fragment>\n            {popupState.show?<PopupMsg content={popupState.content} title={popupState.title} submit={closePopup} close={closePopup} submitText={\"Ok\"} />:null}\n\t\t\t{loading?<ScreenOverlay content={loading}/>:null}\n\t\t\t<div className=\"tkn-mgmt_container\">\n\t\t\t\t<div id=\"page-taskName\"><span>Token Management</span></div>\n\t\t\t\t<div className=\"adminActionBtn\">\n\t\t\t\t\t<button className=\"a__btn pull-right\" onClick={()=>{generateCIusertokens();}}  title=\"Generate New Token\">Generate</button>\n\t\t\t\t\t<button className=\"a__btn pull-right btn-right-cust-tkn\" onClick={()=>{setRefresh(!refresh);setOp(\"normal\")}} title=\"Refresh\">Refresh</button>            \n\t\t\t\t</div>\n\t\t\t\t<div className=\"content_wrapper-tkn-mgmt\">\n\t\t\t\t\t<ScrollBar thumbColor=\"#929397\">\n\t\t\t\t\t\t<TokenMgmtForm setShowList={setShowList} showList={showList} runLoadData={runLoadData} op={op} setOp={setOp} dateVal={dateVal} setSelAssignUser2ErrBorder={setSelAssignUser2ErrBorder} setNameErrBorder={setNameErrBorder} nameErrBorder={nameErrBorder} refresh={refresh} selAssignUser2ErrBorder={selAssignUser2ErrBorder} timeVal={timeVal} setTimeVal={setTimeVal} setdateVal={setdateVal} setAllTokens={setAllTokens} setTargetid={setTargetid} targetid={targetid} name={name} allICE={allICE} setAllICE={setAllICE} setName={setName} token={token} allTokens={allTokens} setToken={setToken} />\n\t\t\t\t\t\t<TokenMgmtList showList={showList} setShowList={setShowList} allTokens={allTokens} setAllTokens={setAllTokens} targetid={targetid} />  \n\t\t\t\t\t</ScrollBar>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Fragment>\n  );\n}\n\nexport default TokenManagement;","import React, { Fragment, useState } from 'react';\nimport '../styles/LdapConfigurationForm.scss'\n\n\n/*Component LdapConfigurationForm\n  use: defines Admin middle Section for create/edit Ldap Configuration Form\n  ToDo:\n*/\n\nconst LdapConfigurationForm = (props) => {\n\n    const [certificateUpdate,setCertificateUpdate] = useState(false)\n\n    const switchSecureUrl = (secureOpt) =>{\n        let url1 = props.url.trim();\n\t\tif(secureOpt === \"false\") {\n\t\t\tprops.setCert(\"\");\n\t\t\tprops.setCertName(\"No file choosen\");\n\t\t\tif (url1.toLowerCase().startsWith(\"ldaps://\")) url1 = (\"ldap://\" + url1.slice(8));\n            if (url1.toLowerCase().endsWith(\":636\"))url1 = (url1.slice(0,-3) + \"389\");\n            props.setUrl(url1);\n\t\t} else {\n\t\t\tif (url1.toLowerCase().startsWith(\"ldap://\")) url1 = (\"ldaps://\" + url1.slice(7));\n            if (url1.toLowerCase().endsWith(\":389\")) url1 = (url1.slice(0,-3) + \"636\");\n            props.setUrl(url1);\n\t\t}\n    }\n\n    const switchAuthType = (authLdap) =>{\n        if(authLdap === \"anonymous\") {\n\t\t\tprops.setBinddn(\"\");\n\t\t\tprops.setBindCredentials(\"\");\n\t\t}\n    }\n    \n    const updateCert = (targetFile) =>{\n        return new Promise((resolve, reject) => {\n            let reader = new FileReader();\n            reader.onload = () => {\n              resolve(reader.result);\n            };\n            reader.onerror = reject;\n            reader.readAsBinaryString(targetFile);\n        })\n    }\n\n    const certInputClick = async (event) => {\n        // eslint-disable-next-line\n        const target = event && (event.srcElement || event.target) || null;\n        // eslint-disable-next-line\n\t\tconst targetFile = target && target.files[0] || null;\n\t\tif (targetFile === null) return;\n\t\t// var conf = (target.name.includes('ldap'))? $scope.ldapConf:$scope.samlConf;\n        props.setCertName(targetFile.name);\n        var certData = await updateCert(targetFile) ;\n        props.setCert(certData);\n        setCertificateUpdate(!certificateUpdate);\n    }\n\n    return (\n        <Fragment>\n            <div className='adminControl-ldap'><div>\n                <span className=\"leftControl\" title=\"Directory Provider URL (Eg: ldap://example.com:389)\">Server URL</span>\n                <input type=\"text\" autoComplete=\"off\" id=\"ldapServerURL\" name=\"ldapServerURL\" value={props.url} onChange={(event)=>{props.setUrl(event.target.value)}} className={\"form-control-ldap form-control-custom-ldap input_border-ldap\"+ (props.ldapServerURLErrBor ? \" inputErrorBorder\" : \"\")} placeholder=\"Directory Provider URL (Eg: ldap://example.com:389)\"/>\n            </div></div>\n            <div className='adminControl-ldap'><div>\n                <span className=\"leftControl-ldap\" title=\"Base Domain Name (Eg: DC=EXAMPLE,DC=COM)\">Base Domain Name</span>\n                <input type=\"text\" autoComplete=\"off\" id=\"ldapBaseDN\" name=\"ldapBaseDN\" onChange={(event)=>{props.setBasedn(event.target.value)}} value={props.basedn} className={\"form-control-ldap form-control-custom-ldap input_border-ldap\"+ (props.ldapBaseDNErrBor ? \" inputErrorBorder\" : \"\")} placeholder=\"Base Domain Name (Eg: DC=EXAMPLE,DC=COM)\"/>\n            </div></div>\n            <div className='adminControl-ldap admin-ldap__secure'><div>\n                <span className=\"leftControl-ldap\" title=\"Secure Connection (ldaps protocol)\">Secure Connection</span>\n                <label className=\"adminFormRadio\" title=\"Disable Secure LDAP (No ldaps)\">\n                    <input type=\"radio\" checked={props.secure===\"false\"} value=\"false\" name=\"ldapSecure\" onChange={()=>{props.setSecure(\"false\");switchSecureUrl(\"false\")}}/>\n                    <span>Disable</span>\n                </label>\n                <label className=\"adminFormRadio\" title=\"Enable Secure LDAP (ldaps)\">\n                    <input type=\"radio\" checked={props.secure===\"secure\"} value=\"secure\" name=\"ldapSecure\" onChange={()=>{props.setSecure(\"secure\");switchSecureUrl(\"secure\")}}/>\n                    <span>Enable</span>\n                </label>\n                <label className=\"adminFormRadio\" title=\"Enable Secure LDAP (ldaps) but ignore TLS errors\">\n                    <input type=\"radio\" checked={props.secure===\"insecure\"} value=\"insecure\" name=\"ldapSecure\" onChange={()=>{props.setSecure(\"insecure\");switchSecureUrl(\"insecure\")}}/>\n                    <span>Enable Insecure</span>\n                </label>\n            </div></div>\n            <div className='adminControl-ldap'><div>\n                <span className=\"leftControl-ldap\" title=\"TLS certificate for secure connection\">TLS Certificate</span>\n                {props.secure!==\"false\"?<label id=\"ldapCert\" className=\"ldapCert__lable\" for=\"certInput\"><span className=\"fa fa-upload ldapcert-upload\"></span>{props.certName}</label>:null}\n                {props.secure===\"false\"?<label id=\"ldapCert\" className=\"ldapCert__lable-false\"><span className=\"ldapcert-span\" >Secure Option needs to be enabled</span></label>:null}\n                <input onChange={(event)=>{certInputClick(event)}} type=\"file\" accept=\".cer,.crt,.cert,.pem\" autoComplete=\"off\" id=\"certInput\" name=\"ldapCert\" className={\"no-disp certInput-ldap\"+ (props.ldapCertErrBor ? \" inputErrorBorder\" : \"\")} disabled={props.secure==='false'}/>\n                {props.ldapEdit?<textarea autoComplete=\"off\" id=\"ldapCertValue\" name=\"ldapCertValue\" disabled=\"\" readOnly=\"readOnly\" className=\"certTextarea-ldap certTextarea-edit\" value={props.cert}/>:null}\n\t\t\t</div></div>\n            <div className='adminControl-ldap admin-ldap__secure'><div>\n                <span className=\"leftControl-ldap\" title=\"Secure Connection\">Authentication</span>\n                <label className=\"adminFormRadio\">\n                    <input type=\"radio\" checked={props.auth===\"anonymous\"} value=\"anonymous\" name=\"ldapAuth\" onChange={()=>{props.setAuth(\"anonymous\");switchAuthType(\"anonymous\")}} />\n                    <span>Anonymous</span>\n                </label>\n                <label className=\"adminFormRadio\">\n                    <input type=\"radio\" checked={props.auth===\"simple\"} value=\"simple\" name=\"ldapAuth\" onChange={()=>{props.setAuth(\"simple\")}}/>\n                    <span>Simple</span>\n                </label>\n            </div></div>\n            <div className='adminControl-ldap'><div>\n                <span className=\"leftControl-ldap\" title=\"Bind Principal\">Bind Principal</span>\n                <input type=\"text\" autoComplete=\"off\" name=\"binddn\" id=\"binddn\" disabled={props.auth !== 'simple'} value={props.binddn} onChange={(event)=>{props.setBinddn(event.target.value)}}  className={\"form-control-ldap form-control-custom-ldap input_border-ldap\"+ (props.binddnErrBor ? \" inputErrorBorder\" : \"\")} placeholder=\"Authentication Principal\"/>\n            </div></div>\n            <div className='adminControl-ldap ldap-credentials'><div>\n                <span className=\"leftControl-ldap\" title=\"Bind Credentials\">Bind Credentials</span>\n                <input type=\"password\" autoComplete=\"off\" name=\"bindCredentials\" id=\"bindCredentials\" disabled={props.auth !== 'simple'} value={props.bindCredentials} onChange={(event)=>{props.setBindCredentials(event.target.value)}} className={\"form-control-ldap form-control-custom-ldap input_border-ldap\"+ (props.bindCredentialsErrBor ? \" inputErrorBorder\" : \"\")} placeholder=\"Authentication Credentials\"/>\n            </div></div>\n        </Fragment>\n    );\n}\n\nexport default LdapConfigurationForm;","import React, { Fragment } from 'react';\nimport '../styles/LdapDataMapping.scss'\n\n/*Component LdapDataMapping\n  use: defines Admin middle Section for create Ldap Data Mapping\n  ToDo:\n*/\n\nconst LdapDataMapping = (props) => {\n\n    return (\n        <Fragment>\n            <h4 className='title-ldap'>Data Mapping Settings</h4>\n            <h5 className='title-ldap-dm'>{props.ldapEdit?\"All \":\"\"}Mapping options are populated on click of <i>Test</i> with connection successful.</h5>\n            <div className='adminControl-ldap-dm'><div>\n                <span className=\"leftControl-ldap-dm\">Username</span>\n                <select defaultValue={props.fieldmap.uname} onChange={(event)=>{props.setFieldmap({uname: event.target.value, fname: props.fieldmap.fname, lname: props.fieldmap.lname, email: props.fieldmap.email})}} id=\"ldapFMapUname\" className={'adminSelect-ldap-dm form-control-ldap-dm'+ (props.ldapFMapUnameErrBor ? \" selectErrorBorder\" : \"\")}   >\n                    {props.ldapEdit && props.fieldMapOpts.indexOf(props.fieldmap.uname)===-1 ?<option disabled={props.fieldmap.uname===\"None\"?true:false} value={props.fieldmap.uname} >{props.fieldmap.uname}</option>:null}\n                    {props.fieldMapOpts.map((field,index)=>(\n                        <option disabled={field===\"None\"?true:false} key={index} value={field} >{field}</option>\n                    ))}\n                </select>\n            </div></div>\n            <div className='adminControl-ldap-dm'><div>\n                <span className=\"leftControl-ldap-dm\">Firstname</span>\n                <select defaultValue={props.fieldmap.fname} onChange={(event)=>{props.setFieldmap({uname: props.fieldmap.uname, fname: event.target.value, lname: props.fieldmap.lname, email: props.fieldmap.email})}} id=\"ldapFMapFname\" className={'adminSelect-ldap-dm form-control-ldap-dm'+ (props.ldapFMapFnameErrBor ? \" selectErrorBorder\" : \"\")}   >\n                {props.ldapEdit && props.fieldMapOpts.indexOf(props.fieldmap.fname)===-1 ?<option disabled={props.fieldmap.fname===\"None\"?true:false} value={props.fieldmap.fname} >{props.fieldmap.fname}</option>:null}\n                {props.fieldMapOpts.map((field,index)=>(\n                        <option disabled={field===\"None\"?true:false} key={index} value={field}>{field}</option>\n                    ))}\n                </select>\n            </div></div>\n            <div className='adminControl-ldap-dm'><div>\n                <span className=\"leftControl-ldap-dm\">Lastname</span>\n                <select defaultValue={props.fieldmap.lname} onChange={(event)=>{props.setFieldmap({uname: props.fieldmap.uname, fname: props.fieldmap.fname, lname: event.target.value, email: props.fieldmap.email})}}  id=\"ldapFMapLname\" className={'adminSelect-ldap-dm form-control-ldap-dm'+ (props.ldapFMapLnameErrBor ? \" selectErrorBorder\" : \"\")}    >\n                    {props.ldapEdit && props.fieldMapOpts.indexOf(props.fieldmap.lname)===-1 ?<option disabled={props.fieldmap.lname===\"None\"?true:false} value={props.fieldmap.lname} >{props.fieldmap.lname}</option>:null}\n                    {props.fieldMapOpts.map((field,index)=>(\n                        <option disabled={field===\"None\"?true:false} key={index} value={field} >{field}</option>\n                    ))}\n                </select>\n            </div></div>\n            <div className='adminControl-ldap-dm'><div>\n                <span className=\"leftControl-ldap-dm\">Email</span>\n                <select defaultValue={props.fieldmap.email} onChange={(event)=>{props.setFieldmap({uname: props.fieldmap.uname, fname: props.fieldmap.fname, lname: props.fieldmap.lname, email: event.target.value})}}  id=\"ldapFMapEmail\" className={'adminSelect-ldap-dm form-control-ldap-dm'+ (props.ldapFMapEmailErrBor ? \" selectErrorBorder\" : \"\")}   >\n                    {props.ldapEdit && props.fieldMapOpts.indexOf(props.fieldmap.email)===-1 ?<option disabled={props.fieldmap.email===\"None\"?true:false} value={props.fieldmap.email} >{props.fieldmap.email}</option>:null}\n                    {props.fieldMapOpts.map((field,index)=>(\n                        <option disabled={field===\"None\"?true:false} key={index} value={field} >{field}</option>\n                    ))}\n                </select>\n            </div></div>\n            \n        </Fragment>\n    );\n}\n\nexport default LdapDataMapping;","import React from 'react';\nimport {ScrollBar} from '../../global'\nimport '../styles/LdapConfigCreate.scss'\nimport LdapConfigurationForm from '../components/LdapConfigurationForm';\nimport LdapDataMapping from '../components/LdapDataMapping';\nimport ValidationExpression from '../../global/components/ValidationExpression';\n\n/*Component LdapConfigCreate\n  use: defines Admin middle Section for create Ldap Configuration\n  ToDo:\n*/\n\nconst LdapConfigCreate = (props) => {\n\n    const updateLdapServerName = (value) => {\n        value = ValidationExpression(value,\"ldapServerName\")\n        props.setServerName(value)\n    }\n\n    return (\n        <div className=\"ldap_container-create\">\n            <div id=\"page-taskName\"><span>Create LDAP Configuration</span></div>\n            <div className=\"adminActionBtn\">\n                <button className=\"a__btn btn-margin-ldap\" onClick={()=>{props.ldapTest()}} title=\"Test Configuration\">Test</button> \n                <button className=\"a__btn ldap-disabled-btn btn-margin-ldap\" onClick={()=>{props.ldapManage('create')}} disabled={props.testStatus !== 'success'} title=\"Create Configuration\">Create</button>            \n                <button className=\"a__btn \" onClick={()=>{props.setLdapEdit(true)}}  title=\"Edit Configuration\">Edit</button>\n            </div> \n            <div className=\"ldap-content_wrapper-create\">\n                <ScrollBar thumbColor=\"#929397\">\n                    <div className=\"col-xs-9 form-group-ldap adminForm-ldap\">\n                        <h4 className='title-ldap' >LDAP Server Details</h4>\n                        <div className='adminControl-ldap'><div>\n                            <span className=\"leftControl-ldap\" title=\"Server Name\">Server Name</span>\n                            <input type=\"text\" autoComplete=\"off\" id=\"ldapServerName\" name=\"ldapServerName\" value={props.serverName} onChange={(event)=>{updateLdapServerName(event.target.value)}} maxLength=\"100\" className={\"form-control-ldap form-control-custom-ldap input_border-ldap\"+ (props.ldapServerNameErrBor ? \" inputErrorBorder\" : \"\")}  placeholder=\"Server Name\"/>\n                        </div></div>\n                    \n                        <LdapConfigurationForm {...props}  />\n                        <LdapDataMapping setFieldmap={props.setFieldmap} fieldmap={props.fieldmap} fieldMapOpts={props.fieldMapOpts} ldapFMapEmailErrBor={props.ldapFMapEmailErrBor} ldapFMapLnameErrBor={props.ldapFMapLnameErrBor} ldapFMapFnameErrBor={props.ldapFMapFnameErrBor} ldapFMapUnameErrBor={props.ldapFMapUnameErrBor} />\n                    </div>\n                </ScrollBar>\n            </div>\n        </div>\n    );\n}\n\nexport default LdapConfigCreate;","import React, { useState, useEffect } from 'react';\nimport {ScreenOverlay, PopupMsg, ModalContainer, ScrollBar} from '../../global' \nimport {getLDAPConfig} from '../api';\nimport '../styles/LdapConfigEdit.scss'\nimport LdapConfigurationForm from '../components/LdapConfigurationForm';\nimport LdapDataMapping from '../components/LdapDataMapping';\n\n\n/*Component LdapConfigEdit\n  use: defines Admin middle Section for edit Ldap Configuration\n  ToDo:\n*/\n\nconst LdapConfigEdit = (props) => {\n\n    const [loading,setLoading] = useState(false)\n    const [selBox,setSelBox] = useState([])\n    const [showDeleteModal,setshowDeleteModal] = useState(false)\n    const [emptyPopup,setEmptyPopup] = useState(false)\n\n    useEffect(()=>{\n        LdapEdit();\n        // eslint-disable-next-line\n    },[props.manageEdit])\n    \n    const displayError = (error) =>{\n        setLoading(false)\n        props.setPopupState({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n\n    const LdapEdit = async () => {\n\t\tprops.setServerName(\"\");\n\t\tprops.setUrl(\"\");\n\t\tprops.setBinddn(\"\");\n\t\tprops.setBindCredentials(\"\");\n\t\tprops.setBasedn(\"\");\n\t\tprops.setCert(\"\");\n\t\tprops.setCertName(\"No file choosen\");\n\t\tprops.setSecure(\"false\");\n\t\tprops.setFieldmap({uname: \"None\", fname: \"None\", lname: \"None\", email: \"None\"});\n\t\tprops.setFieldMapOpts([\"None\"]);\n\t\tprops.setAuth(\"\");\n\t\tprops.setTestStatus(\"false\");\n\t\tswitchSecureUrl();\n        props.setLdapServerURLErrBor(false);props.setBinddnErrBor(false); props.setBindCredentialsErrBor(false);props.setLdapBaseDNErrBor(false)\n        props.setLdapFMapUnameErrBor(false);props.setLdapFMapFnameErrBor(false);props.setLdapFMapLnameErrBor(false)\n        props.setLdapFMapEmailErrBor(false);props.setLdapCertErrBor(false)\n\t\tsetLoading(\"Fetching details...\");\n\t\tconst data = await getLDAPConfig(\"server\");\n        if(data.error){displayError(data.error);return;}\n        setLoading(false);\n        if(data === \"empty\") {\n            if(props.popupState.show === true) setEmptyPopup(true);\n            else props.setPopupState({show:true,title:\"Edit Configuration\",content: \"There are no configurations created yet.\"});\n            setSelBox([]);\n        } else {\n            data.sort();\n            const selBoxOptions = [];\n            for(var i = 0; i < data.length; i++){\n                selBoxOptions.push(data[i].name);\n            }\n            setSelBox(selBoxOptions);\n        }\n\t}\n\n    const switchSecureUrl = () => {\n        var url1 = props.url.trim();\n\t\tif(props.secure === \"false\") {\n\t\t\tprops.setCert(\"\");\n\t\t\tprops.setCertName(\"No file choosen\");\n\t\t\tif (url1.toLowerCase().startsWith(\"ldaps://\")) props.setUrl(\"ldap://\" + url1.slice(8));\n\t\t\tif (url1.toLowerCase().endsWith(\":636\")) props.setUrl(url1.slice(0,-3) + \"389\");\n\t\t} else {\n\t\t\tif (url1.toLowerCase().startsWith(\"ldap://\")) props.setUrl(\"ldaps://\" + url1.slice(7));\n\t\t\tif (url1.toLowerCase().endsWith(\":389\")) props.setUrl(url1.slice(0,-3) + \"636\");\n\t\t}\n    }\n\n    const closePopup = () => {\n        props.setPopupState({show:false,title:\"\",content:\"\"});\n        if(emptyPopup){\n\t\t\tprops.setPopupState({show:true,title:\"Edit Configuration\",content: \"There are no configurations created yet.\"});\n\t\t\tsetEmptyPopup(false);\n\t\t}\n    }\n\n    const getServerData = async (name) => {\n        props.setLdapServerURLErrBor(false);props.setBinddnErrBor(false); props.setBindCredentialsErrBor(false);props.setLdapBaseDNErrBor(false)\n        props.setLdapFMapUnameErrBor(false);props.setLdapFMapFnameErrBor(false);props.setLdapFMapLnameErrBor(false)\n        props.setLdapFMapEmailErrBor(false);props.setLdapCertErrBor(false)\n\t\tvar failMsg = \"Failed to fetch details for '\"+name+\"' configuration.\";\n\t\tsetLoading(\"Fetching details...\");\n\t\ttry{\n            const data = await getLDAPConfig(\"config\", name);\n            if(data.error){displayError(data.error);return;}\n\t\t\tsetLoading(false);\n\t\t\tif(data === \"fail\") {\n                // props.setPopupState({show:true,title:\"Edit Configuration\",content: failMsg});\n                // if name required in popup remove fail condition from api \n\t\t\t} else {\n\t\t\t\tprops.setUrl(data.url);\n\t\t\t\tprops.setBasedn(data.basedn);\n\t\t\t\tprops.setSecure(data.secure);\n\t\t\t\tprops.setCert(data.cert);\n\t\t\t\tprops.setCertName(\"No file choosen\");\n\t\t\t\tprops.setAuth(data.auth);\n\t\t\t\tprops.setBinddn(data.binddn);\n\t\t\t\tprops.setBindCredentials(data.bindCredentials);\n                props.setFieldMapOpts([\"None\"]);\n\t\t\t\tfor (let fmo of Object.values(data.fieldmap)) {\n\t\t\t\t\tif (!props.fieldMapOpts.includes(fmo)) props.fieldMapOpts.push(fmo);\n                }\n                props.setFieldMapOpts(props.fieldMapOpts);\n\t\t\t\tprops.setFieldmap(data.fieldmap);\n\t\t\t}\n\t\t}catch(error) {\n\t\t\tsetLoading(false);\n\t\t\tprops.setPopupState({show:true,title:\"Edit Configuration\",content: failMsg});\n\t\t}\n    }\n\n    const closeModal = () => {\n        setshowDeleteModal(false);\n    }\n\n    return (\n        <div className=\"ldap_container-edit\">\n            {props.popupState.show?<PopupMsg content={props.popupState.content} title={props.popupState.title} submit={closePopup} close={closePopup} submitText={\"Ok\"} />:null}\n            {loading?<ScreenOverlay content={loading}/>:null}\n            \n            <div id=\"page-taskName\"><span>Create LDAP Configuration</span></div>\n            <div className=\"adminActionBtn\">\n                <button className=\"a__btn ldap-disabled-btn btn-margin-ldap\" onClick={()=>{props.ldapTest()}} disabled={props.serverName === ''} title=\"Test Configuration\">Test</button> \n                <button className=\"a__btn ldap-disabled-btn btn-margin-ldap\" onClick={()=>{setshowDeleteModal(true)}} disabled={props.serverName === ''} title=\"Delete Configuration\">Delete</button>            \n                <button className=\"a__btn ldap-disabled-btn\" onClick={()=>{props.ldapManage('update')}} disabled={props.serverName === ''} title=\"Update Configuration\">Update</button>\n            </div>\n            <div className=\"ldap-content_wrapper-edit\">\n                <ScrollBar thumbColor=\"#929397\">\n                <div className=\"col-xs-9 form-group-ldap adminForm-ldap\">\n                <h4 className='title-ldap' >LDAP Server Details</h4>\n                    <div  className='userForm-ldap-edit adminControl-ldap'><div>\n                        <span  className=\"leftControl-ldap\" title=\"Server Name\">Server Name</span>\n                        <select defaultValue={\"\"} onChange={(event)=>{props.setServerName(event.target.value);getServerData(event.target.value)}}  className={'adminSelect-ldap-edit form-control-ldap-edit'+ (props.ldapServerNameErrBor ? \" selectErrorBorder\" : \"\")} id=\"ldapServerName\" >\n                            <option value=\"\" disabled>Select Server</option>\n                            {selBox.map((data,index)=>(\n                                <option key={index} value={data}>{data}</option>\n                            ))}\n                        </select>\n                    </div></div>\n                    \n                    <LdapConfigurationForm {...props}  />\n                    <LdapDataMapping setFieldmap={props.setFieldmap} ldapEdit={props.ldapEdit} fieldmap={props.fieldmap} fieldMapOpts={props.fieldMapOpts}  ldapFMapEmailErrBor={props.ldapFMapEmailErrBor} ldapFMapLnameErrBor={props.ldapFMapLnameErrBor} ldapFMapFnameErrBor={props.ldapFMapFnameErrBor} ldapFMapUnameErrBor={props.ldapFMapUnameErrBor} />\n                </div>\n                </ScrollBar>\n            </div>\n            \n\n            {showDeleteModal?\n                <ModalContainer title=\"Delete Configuration\" footer={deleteModalButtons(props.ldapManage, setshowDeleteModal)} close={closeModal} content=\"Are you sure you want to delete ? Users depending on this configuration will not be able to login.\" />\n            :null} \n        </div>\n    );\n}\n\nconst deleteModalButtons = (ldapManage, setshowDeleteModal) => {\n    return(\n        <div>\n            <button id=\"deleteGlobalModalButton-ldap\" onClick={()=>{ldapManage(\"delete\");setshowDeleteModal(false);}} type=\"button\" className=\" btn-margin-ldap\" >Yes</button>\n            <button type=\"button\" onClick={()=>{setshowDeleteModal(false);}} >No</button>\n        </div>\n    )\n}\n\nexport default LdapConfigEdit;","import React, { Fragment, useState, useEffect } from 'react';\nimport {ScreenOverlay, PopupMsg} from '../../global' \nimport {testLDAPConnection, manageLDAPConfig} from '../api';\nimport '../styles/OidcConfig.scss'\nimport LdapConfigCreate from './LdapConfigCreate';\nimport LdapConfigEdit from './LdapConfigEdit';\n\n/*Component LdapConfig\n  use: defines Admin middle Section for Ldap Configuration\n  ToDo:\n*/\n\nconst LdapConfig = (props) => {\n\n    const [ldapEdit,setLdapEdit] = useState(false)\n    const [loading,setLoading] = useState(false)\n    const [popupState,setPopupState] = useState({show:false,title:\"\",content:\"\"}) \n\tconst [serverName,setServerName] = useState(\"\")\n    const [url,setUrl] = useState(\"\")\n    const [auth,setAuth] = useState(\"anonymous\")\n    const [binddn,setBinddn] = useState(\"\")\n    const [bindCredentials,setBindCredentials] = useState(\"\")\n    const [basedn,setBasedn] = useState(\"\")\n    const [cert,setCert] = useState(\"\")\n    const [certName,setCertName] = useState(\"No file choosen\")\n    const [secure,setSecure] = useState(\"false\")\n    const [fieldmap,setFieldmap] = useState({uname: \"None\", fname: \"None\", lname: \"None\", email: \"None\"})\n    const [fieldMapOpts,setFieldMapOpts] = useState([\"None\"])\n    const [testStatus,setTestStatus] = useState(\"false\")\n    const [manageEdit,setManageEdit] = useState(false)\n\tconst [ldapServerURLErrBor,setLdapServerURLErrBor] = useState(false)\n    const [binddnErrBor,setBinddnErrBor] = useState(false)\n    const [bindCredentialsErrBor,setBindCredentialsErrBor] = useState(false)\n    const [ldapBaseDNErrBor,setLdapBaseDNErrBor] = useState(false)\n    const [ldapFMapUnameErrBor,setLdapFMapUnameErrBor] = useState(false)\n    const [ldapFMapFnameErrBor,setLdapFMapFnameErrBor] = useState(false)\n    const [ldapFMapLnameErrBor,setLdapFMapLnameErrBor] = useState(false)\n    const [ldapFMapEmailErrBor,setLdapFMapEmailErrBor] = useState(false)\n    const [ldapCertErrBor,setLdapCertErrBor] = useState(false)\n\tconst [ldapServerNameErrBor,setLdapServerNameErrBor] = useState(false)\n\n    useEffect(()=>{\n        setLdapEdit(false);\n\t\tldapConfReresh();\n        // eslint-disable-next-line\n\t},[props.resetMiddleScreen[\"ldapConfigTab\"],props.MiddleScreen])\n\t\n\tconst displayError = (error) =>{\n        setLoading(false)\n        setPopupState({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n\n    const ldapConfReresh = (action) =>{\n        setServerName(\"\");\n\t\tsetUrl(\"\");\n\t\tsetAuth(\"anonymous\");\n\t\tsetBinddn(\"\");\n\t\tsetBindCredentials(\"\");\n\t\tsetBasedn(\"\");\n\t\tsetCert(\"\");\n\t\tsetCertName(\"No file choosen\");\n\t\tsetSecure(\"false\");\n\t\tsetFieldmap({uname: \"None\", fname: \"None\", lname: \"None\", email: \"None\"});\n\t\tsetFieldMapOpts([\"None\"]);\n\t\tif (action!==undefined && action === \"edit\") setAuth(\"\");\n\t\tsetTestStatus(\"false\");\n\t\tswitchAuthType();\n\t\tswitchSecureUrl();\n        setLdapServerURLErrBor(false);setBinddnErrBor(false); setBindCredentialsErrBor(false);setLdapBaseDNErrBor(false)\n        setLdapFMapUnameErrBor(false);setLdapFMapFnameErrBor(false);setLdapFMapLnameErrBor(false)\n        setLdapFMapEmailErrBor(false);setLdapCertErrBor(false);setLdapServerNameErrBor(false);\n    }\n\n    const switchAuthType = () =>{\n        if(auth === \"anonymous\") {\n\t\t\tsetBinddn(\"\");\n\t\t\tsetBindCredentials(\"\");\n\t\t}\n    }\n\n    const switchSecureUrl = () =>{\n        var url1 = url.trim();\n\t\tif(secure === \"false\") {\n\t\t\tsetCert(\"\");\n\t\t\tsetCertName(\"No file choosen\");\n\t\t\tif (url1.toLowerCase().startsWith(\"ldaps://\")) setUrl(\"ldap://\" + url1.slice(8));\n\t\t\tif (url1.toLowerCase().endsWith(\":636\"))setUrl(url1.slice(0,-3) + \"389\");\n\t\t} else {\n\t\t\tif (url1.toLowerCase().startsWith(\"ldap://\")) setUrl(\"ldaps://\" + url1.slice(7));\n\t\t\tif (url1.toLowerCase().endsWith(\":389\")) setUrl(url1.slice(0,-3) + \"636\");\n\t\t}\n    }\n\n    const ldapTest = async () => {\n        if (!validate(\"test\")) return;\n\t\t//Transaction Activity for LDAP conf Test Button Action\n\t\t// var labelArr = [];\n\t\t// var infoArr = [];\n\t\t// labelArr.push(txnHistory.codesDict['LdapConftest']);\n\t\t// txnHistory.log($event.type,labelArr,infoArr,$location.$$path);\n\t\tsetLoading(\"Testing Connection...\");\n\t\tlet data = await testLDAPConnection(auth, url, basedn, binddn, bindCredentials, secure, cert);\n\t\tif(data.error){displayError(data.error);return;}\n\t\tsetLoading(false);\n\t\tvar fields = (typeof data==\"string\")? [] : (data.fields || []);\n\t\tif (typeof data!==\"string\") data = data.flag;\n\t\tsetTestStatus(data);\n\t\tif(data === \"success\") {\n\t\t\tsetPopupState({show:true,title:\"Test Connection\",content: \"Test Connection Successful!\"});\n\t\t\tfields = fields.concat(\"None\");\n\t\t\tfor (let fmo of fieldMapOpts) {\n\t\t\t\tif (!fields.includes(fmo)) fields.push(fmo);\n\t\t\t}\n\t\t\tsetFieldMapOpts(fields.sort());\n\t\t} else ldapTestMessage(data, setPopupState);\n\t}\n\n    const ldapManage = async (action) =>{\n\t\tif (!validate(action)) return;\n\t\tvar bAction = action.charAt(0).toUpperCase() + action.substr(1);\n\t\tvar confObj = {\n\t\t\tname: serverName,\n\t\t\turl: url,\n\t\t\tbasedn: basedn,\n\t\t\tsecure: secure,\n\t\t\tcert: cert,\n\t\t\tauth: auth,\n\t\t\tbinddn: binddn,\n\t\t\tbindcredentials: bindCredentials,\n\t\t\tfieldmap: fieldmap\n\t\t};\n\t\tsetLoading(bAction.slice(0,-1)+\"ing configuration...\");\n\t\t//Transaction Activity for Create/ Update/ Delete LDAP conf button Action\n\t\t// var labelArr = [];\n\t\t// var infoArr = [];\n\t\t// labelArr.push(txnHistory.codesDict['LdapConfmanage']);\n\t\t// infoArr.push(action);\n\t\t// txnHistory.log($event.type,labelArr,infoArr,$location.$$path);\n\t\ttry{\n\t\t\tconst data = await manageLDAPConfig(action, confObj);\n\t\t\tif(data.error){displayError(data.error);return;}\n\t\t\tsetLoading(false);\n\t\t\tif(data === \"success\") {\n\t\t\t\tsetPopupState({show:true,title:bAction+\" Configuration\",content: \"Configuration '\"+confObj.name+\"' \"+action+\"d Successfully!\"});\n\t\t\t\tif (action === \"create\") ldapConfReresh();\n                else setManageEdit(!manageEdit);\n\t\t\t} else if(data === \"exists\") {\n                setLdapServerNameErrBor(true);\n                setPopupState({show:true,title:bAction+\" Configuration\",content: \"Configuration '\"+confObj.name+\"' already Exists!\"});\n\t\t\t} else if(data === \"fail\") {\n\t\t\t\tif (action === \"create\") ldapConfReresh();\n\t\t\t\telse setManageEdit(!manageEdit);\n                setPopupState({show:true,title:bAction+\" Configuration\",content:\"Failed to \"+action+\" '\"+confObj.name+\"' configuration.\"});\n\t\t\t} else if(/^1[0-7]{8}$/.test(data)) {\n\t\t\t\tif (JSON.parse(JSON.stringify(data)[1])) {\n                    setPopupState({show:true,title:bAction+\" Configuration\",content: \"Failed to \"+action+\" '\"+confObj.name+\"' configuration. Invalid Request!\"});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlet errfields = [];\n\t\t\t\tlet errHints = [];\n\t\t\t\tif (JSON.parse(JSON.stringify(data)[2])) errfields.push(\"Server Name\");\n\t\t\t\tif (JSON.parse(JSON.stringify(data)[3])) errfields.push(\"Server URL\");\n\t\t\t\tif (JSON.parse(JSON.stringify(data)[3]) === 2) errHints.push(\"Secure Connection needs 'ldaps' protocol\");\n\t\t\t\telse if (JSON.parse(JSON.stringify(data)[3]) === 3) errHints.push(\"Secure Connection needs a TLS Certificate\");\n\t\t\t\telse if (JSON.parse(JSON.stringify(data)[3]) === 4) errHints.push(\"'ldaps' protocol needs secure connection enabled\");\n\t\t\t\telse if (JSON.parse(JSON.stringify(data)[3]) === 5) errHints.push(\"'ldap(s)://' is missing from url prefix\");\n\t\t\t\tif (JSON.parse(JSON.stringify(data)[4])) errfields.push(\"Base Domain Name\");\n\t\t\t\tif (JSON.parse(JSON.stringify(data)[5])) errfields.push(\"Authentication Type\");\n\t\t\t\tif (JSON.parse(JSON.stringify(data)[6])) errfields.push(\"Authentication Principal\");\n\t\t\t\tif (JSON.parse(JSON.stringify(data)[7])) errfields.push(\"Authentication Credentials\");\n                if (JSON.parse(JSON.stringify(data)[8])) errfields.push(\"Data Mapping Settings\");\n                setPopupState({show:true,title:bAction+\" Configuration\",content: \"Following values are invalid: \"+errfields.join(\", \")+ ((errHints.length!==0)? (\". Note: \"+errHints):'.')});\n\t\t\t}\n\t\t}catch(error) {\n            setLoading(false);\n            setPopupState({show:true,title:bAction+\" Configuration\",content:\"Failed to \"+action+\" '\"+confObj.name+\"' configuration.\"});\n\t\t}\n    }\n\n    const validate = (action) => {\n        let flag = true;\n\t\tconst secureLdap = secure !== \"false\";\n\t\tsetLdapServerURLErrBor(false);setBinddnErrBor(false); setBindCredentialsErrBor(false);setLdapBaseDNErrBor(false)\n        setLdapFMapUnameErrBor(false);setLdapFMapFnameErrBor(false);setLdapFMapLnameErrBor(false)\n        setLdapFMapEmailErrBor(false);setLdapCertErrBor(false)\n\t\tsetLdapServerNameErrBor(false);\n\t\tconst regExName = /^[A-Za-z0-9]+([A-Za-z0-9-]*[A-Za-z0-9]+|[A-Za-z0-9]*)$/;\n\t\tlet regExURL = /^ldap:\\/\\/[A-Za-z0-9.-]+:\\d+$/;\n\t\tif (secureLdap) regExURL = /^ldaps:\\/\\/[A-Za-z0-9.-]+:\\d+$/;\n\t\tif (serverName === \"\") {\n\t\t\tsetLdapServerNameErrBor(true);\n\t\t\tflag = false;\n\t\t} else if (!regExName.test(serverName) && action === \"create\") {\n            setLdapServerNameErrBor(true);\n            setPopupState({show:true,title:\"Error\",content:  \"Invalid Server Name provided! Name cannot contain any special characters other than hyphen. Also name cannot start or end with hyphen.\"});\n\t\t\tflag = false;\n\t\t}\n\t\tif (url === \"\") {\n\t\t\tsetLdapServerURLErrBor(true);\n\t\t\tflag = false;\n\t\t} else if (!regExURL.test(url)) {\n\t\t\tsetLdapServerURLErrBor(true);\n            setPopupState({show:true,title:\"Error\",content:  \"Invalid URL provided! URL must start with 'ldap\"+((secureLdap)?'s':'')+\"://' followed by either an IP or a well defined domain name followed by a port number.\"});\n            flag = false;\n\t\t}\n\t\tif (basedn === \"\") {\n\t\t\tsetLdapBaseDNErrBor(true);\n\t\t\tflag = false;\n\t\t}\n\t\tif (secureLdap && cert === \"\") {\n\t\t\tsetLdapCertErrBor(true);\n\t\t\tflag = false;\n\t\t}\n\t\tif (binddn === \"\" && auth === \"simple\") {\n\t\t\tsetBinddnErrBor(true);\n\t\t\tflag = false;\n\t\t}\n\t\tif (bindCredentials === \"\" && auth === \"simple\" && action === \"create\") {\n\t\t\tsetBindCredentialsErrBor(true);\n\t\t\tflag = false;\n\t\t}\n\t\tif (action !== \"test\" && action !== \"delete\") {\n\t\t\tif (fieldmap.uname === \"\") {\n\t\t\t\tsetLdapFMapUnameErrBor(true);\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t\tif (fieldmap.fname === \"\") {\n\t\t\t\tsetLdapFMapFnameErrBor(true);\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t\tif (fieldmap.lname === \"\") {\n\t\t\t\tsetLdapFMapLnameErrBor(true);\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t\tif (fieldmap.email === \"\") {\n\t\t\t\tsetLdapFMapEmailErrBor(true);\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t}\n\t\treturn flag;\n    }\n\n    const closePopup = () =>{\n\t\tsetPopupState({show:false,title:\"\",content:\"\"});\n    }\n\n    return (\n        <Fragment>\n            {popupState.show?<PopupMsg content={popupState.content} title={popupState.title} submit={closePopup} close={closePopup} submitText={\"Ok\"} />:null}\n            {loading?<ScreenOverlay content={loading}/>:null}\n\n            {ldapEdit===false?\n                <LdapConfigCreate setPopupState={setPopupState} ldapManage={ldapManage} ldapTest={ldapTest} ldapServerNameErrBor={ldapServerNameErrBor} ldapCertErrBor={ldapCertErrBor} ldapFMapEmailErrBor={ldapFMapEmailErrBor} ldapFMapLnameErrBor={ldapFMapLnameErrBor} ldapFMapFnameErrBor={ldapFMapFnameErrBor} ldapFMapUnameErrBor={ldapFMapUnameErrBor} ldapBaseDNErrBor={ldapBaseDNErrBor} bindCredentialsErrBor={bindCredentialsErrBor} binddnErrBor={binddnErrBor} ldapServerURLErrBor={ldapServerURLErrBor} setFieldmap={setFieldmap} cert={cert} setLdapEdit={setLdapEdit} fieldmap={fieldmap} fieldMapOpts={fieldMapOpts} testStatus={testStatus} setCert={setCert} auth={auth} setAuth={setAuth} binddn={binddn} setBinddn={setBinddn} bindCredentials={bindCredentials} setBindCredentials={setBindCredentials} setCertName={setCertName} certName={certName} serverName={serverName} secure={secure} setSecure={setSecure} setServerName={setServerName} setBasedn={setBasedn} basedn={basedn} url={url} setUrl={setUrl} />\n                :<LdapConfigEdit setPopupState={setPopupState} popupState={popupState} manageEdit={manageEdit} ldapManage={ldapManage} ldapTest={ldapTest} ldapServerNameErrBor={ldapServerNameErrBor} ldapCertErrBor={ldapCertErrBor} ldapFMapEmailErrBor={ldapFMapEmailErrBor} ldapFMapLnameErrBor={ldapFMapLnameErrBor} ldapFMapFnameErrBor={ldapFMapFnameErrBor} ldapFMapUnameErrBor={ldapFMapUnameErrBor} ldapBaseDNErrBor={ldapBaseDNErrBor} bindCredentialsErrBor={bindCredentialsErrBor} binddnErrBor={binddnErrBor} ldapServerURLErrBor={ldapServerURLErrBor} setLdapCertErrBor={setLdapCertErrBor} setLdapFMapEmailErrBor={setLdapFMapEmailErrBor} setLdapFMapLnameErrBor={setLdapFMapLnameErrBor} setLdapFMapFnameErrBor={setLdapFMapFnameErrBor} setLdapBaseDNErrBor={setLdapBaseDNErrBor} setBindCredentialsErrBor={setBindCredentialsErrBor} setLdapFMapUnameErrBor={setLdapFMapUnameErrBor} setBinddnErrBor={setBinddnErrBor} setLdapServerURLErrBor={setLdapServerURLErrBor} setTestStatus={setTestStatus} setFieldMapOpts={setFieldMapOpts} setFieldmap={setFieldmap} setSecure={setSecure} setCert={setCert} setBasedn={setBasedn} setBindCredentials={setBindCredentials} setBinddn={setBinddn} setAuth={setAuth} setUrl={setUrl} cert={cert} ldapEdit={ldapEdit} setLdapEdit={setLdapEdit} fieldmap={fieldmap} fieldMapOpts={fieldMapOpts} testStatus={testStatus} auth={auth} binddn={binddn} bindCredentials={bindCredentials} setCertName={setCertName} certName={certName} serverName={serverName} secure={secure} setServerName={setServerName} basedn={basedn} url={url}/>\n            }\n        </Fragment>\n  );\n}\n\nconst ldapTestMessage = async (data, setPopupState) => {\n\tswitch(data) {\n\t\tcase \"invalid_addr\": setPopupState({show:true,title:\"Test Connection\",content: \"Test Connection Failed! Either host is unavailable or port is incorrect.\"}); break;\n\t\tcase \"mismatch_secure\" :  setPopupState({show:true,title:\"Test Connection\",content: \"Test Connection Failed! Secure connection must be enabled for 'ldaps' protocol.\"}); break;\n\t\tcase \"invalid_cert\" : setPopupState({show:true,title:\"Test Connection\",content:  \"Test Connection Failed! 'ldaps://' protocol require TLS Certificate.\"}); break;\n\t\tcase \"invalid_cacert\" : setPopupState({show:true,title:\"Test Connection\",content: \"Test Connection Failed! TLS Certificate should have full certificate chain including issuer CA certificate.\"}); break;\n\t\tcase \"invalid_cacert_host\": setPopupState({show:true,title:\"Test Connection\",content: \"Test Connection Failed! Hostname/IP provided for connection is not in the TLS Certificate's list.\"});break;\n\t\tcase \"invalid_url\": setPopupState({show:true,title:\"Test Connection\",content: \"Test Connection Failed! Invalid URL. It must start with 'ldap://'\"});break;\n\t\tcase \"invalid_auth\": setPopupState({show:true,title:\"Test Connection\",content: \"Test Connection Success! Anonymous access is not allowed for this server.\"});break;\n\t\tcase \"invalid_credentials\": setPopupState({show:true,title:\"Test Connection\",content: \"Test Connection Failed! Credentials provided for Authentication are invalid.\"});break;\n\t\tcase \"insufficient_access\": setPopupState({show:true,title:\"Test Connection\",content: \"Test Connection Failed! Credentials provided does not have required privileges for setting up LDAP.\"});break;\n\t\tcase \"invalid_basedn\": setPopupState({show:true,title:\"Test Connection\",content: \"Test Connection Failed! Base Domain Name is incorrect.\"});break;\n\t\tcase \"empty\": setPopupState({show:true,title:\"Test Connection\",content: \"Test Connection Successful but LDAP directory is empty!\"});break;\n\t\tcase \"spl_chars\": setPopupState({show:true,title:\"Test Connection\",content: \"Test Connection Failed! Special characters found in LDAP configuration values.\"});break;\n\t\tcase \"fail\": setPopupState({show:true,title:\"Test Connection\",content: \"Test Connection Failed!\"});break;\n\t\tdefault: setPopupState({show:true,title:\"Test Connection\",content: \"Test Connection Failed due to unexpected error!\"});break;\n  \t}\n}\n\nexport default LdapConfig;","import React ,  { Fragment, useRef, useState} from 'react';\nimport { ModalContainer } from '../../global';\nimport {testNotificationChannels} from '../api'\n\n/*Component FormInput\n  use: renders input box and label in a form\n  props: name: label , placeholder : placeholder text , inpref = ref\n*/\n    \nconst EmailTest = ({setEmailTest,confObj}) => {\n    const emailRef =  useRef()\n    return(\n        <ModalContainer \n        modalClass = 'modal-sm modal-mmd'\n        title='Test Email'\n        close={()=>setEmailTest(false)}\n        footer={<Footer confObj={confObj} emailRef={emailRef}/>}\n        content={<Container emailRef={emailRef}/>}\n        />\n    )\n}\n\n//container for select project popup\nconst Container = ({emailRef}) => {\n    return(\n        <div style={{width:'100%',margin:'20px 0px'}}>\n            <label>Recipient Email ID</label>\n            <input ref={emailRef} style={{width:'60%',marginLeft:'24px'}} placeholder=\"Enter Recipient Email ID\"></input>\n        </div>\n    )\n  }\n  \n  //footer for select project popup\n  const Footer = ({emailRef,confObj}) =>{\n      const [errMsg,setErrMsg] = useState('')\n      const submit = async() => {\n            // eslint-disable-next-line\n            const emailRegEx = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            if (emailRef.current.value.length === 0 || !emailRegEx.test(emailRef.current.value)) {\n                setErrMsg(\"Recipient address is invalid!\");\n                emailRef.current.style.outline = 'red';\n                return false;\n            }\n            emailRef.current.style.outline = ''\n            setErrMsg('Sending...')\n            const arg = {channel:confObj.channel, provider:confObj.provider, recipient:emailRef.current.value, conf:confObj}\n            var data = await testNotificationChannels(arg)\n            if(data.error){setErrMsg(data.error);return;}\n            else setErrMsg(data);\n      }\n      return(\n          <Fragment>\n              <div className='mnode__buttons'>\n                  <label className='err-message'>{errMsg}</label>\n                  <button onClick={submit}>TEST</button>\n              </div>\n          </Fragment>\n      )\n  }\n\nexport default EmailTest;","import React, { useState, useEffect , createRef } from 'react';\nimport {ScreenOverlay, PopupMsg, ScrollBar} from '../../global' \nimport {FormInput,FormRadio,FormSelect} from '../components/FormComp'\nimport {getNotificationChannels,manageNotificationChannels} from '../api'\nimport EmailTest from '../components/EmailTest';\nimport '../styles/EmailConfig.scss'\n\n\n/*Component EmailConfig\n  use: defines Email server config middle Section\n*/\n\nconst EmailConfig = ({resetMiddleScreen}) => {\n    const [advanceConf,setAdvanceConf] = useState('block');\n    const [emailTest,setEmailTest] = useState(false);\n    const [popupState,setPopupState] = useState({show:false,title:\"\",content:\"\"});\n    const [loading,setLoading] = useState(false);\n    const [inputRef,setinputRef] =  useState({})\n    const [reload,setReload] = useState(false)\n    const fn = factoryFn(inputRef)\n    const displayError = (error,header) =>{\n        setLoading(false)\n        setPopupState({\n            title:header?header:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n    useEffect(()=>{\n        //on reset dismount component to show loading screen\n        setinputRef({})\n        setReload(true)\n    },[resetMiddleScreen])\n    useEffect(()=>{\n        //on reload mount component back\n        if(reload){\n            const Ref = {\"toggleStatus\":createRef(),\"toggleUppdate\":createRef(),\"toggleTest\":createRef(''),\"servername\": createRef(),\"serverstatus\":createRef(),\"host\":createRef(),\"port\":createRef(),\"authname\":createRef(),\n            \"authpassword\":createRef(),\"sendername\":createRef(),\"senderaddr\":createRef(),\"assureurl\":createRef(),\n            \"conctimeout\":createRef(),\"grettimeout\":createRef(),\"socktimeout\":createRef(),\"maxconnection\":createRef(),\"maxmessages\":createRef(),\n            \"proxyurl\":createRef(),\"proxyuser\":createRef(),\"proxypass\":createRef(),\"selectauth\":createRef(),\"selectprovider\":createRef(),\n            \"secureconnect\":{\"auto\":createRef(),\"enable\":createRef(),\"disable\":createRef()},\n            \"tlcerror\":{\"true\":createRef(),\"false\":createRef()},\"checkproxyurl\":createRef(),\"checkboxpool\":createRef(),\"checkproxycred\":createRef()}\n            setinputRef(Ref)\n            setReload(false)\n        }\n    },[reload])\n    useEffect(()=>{\n        //disable buttons on default screen\n        if(Object.keys(inputRef).length>0){\n            inputRef.toggleUppdate.current.disabled = true\n            inputRef.toggleStatus.current.disabled = true\n            inputRef.toggleTest.current.disabled = true\n            fn.showAll();\n        }\n        // eslint-disable-next-line\n    },[inputRef])\n    const onSelectProvider = () => {\n        selectProvider({inputRef,...fn,displayError,setLoading});\n    }\n    const onClickTest = () => {\n        if (!validate(inputRef,displayError)) return;\n        var val = getConfObj(inputRef)\n        setEmailTest(val)\n    }\n    const onClickToggle = () => {\n        clickToggle(inputRef.servername.current.value,inputRef.toggleStatus.current.innerText,setLoading,displayError,onSelectProvider)   \n    }\n    const onClickUpdate = () => {\n        if (!validate(inputRef,displayError)) return;\n        var val = getConfObj(inputRef)\n        update(val,inputRef.toggleUppdate.current.innerText,setLoading,displayError,onSelectProvider)\n    }\n    if(Object.keys(inputRef).length<1){\n        //keep screen loading till inputRef is set\n        return (\n            <ScreenOverlay content={'Loading...'}/>\n        )\n    }\n    return(\n        <div className=\"conf_email_container\">\n            {popupState.show?<PopupMsg content={popupState.content} title={popupState.title} submit={()=>setPopupState({show:false})} close={()=>setPopupState({show:false})} submitText={\"Ok\"} />:null}\n            {loading?<ScreenOverlay content={loading}/>:null}\n            <div id=\"page-taskName\">\n                <span>Manage Email Server Configuration</span>\n\t\t    </div>\n            <div className=\"adminActionBtn\">\n                <button ref={inputRef[\"toggleStatus\"]} className=\"a__btn btn-edit\" onClick={onClickToggle} title=\"Disable\">Disable</button>\n                <button ref={inputRef[\"toggleUppdate\"]} className=\"a__btn btn-edit\" onClick={onClickUpdate}  title=\"Update\">Create</button>\n                <button ref={inputRef[\"toggleTest\"]} className=\"a__btn \" onClick={onClickTest}  title=\"Test\">Test</button>\n            </div>\n            <div id='conf_email' className='conf_email'>\n            <ScrollBar scrollId='conf_email' trackColor={'transperent'} thumbColor={'grey'}> \n                <FormSelect inpRef={inputRef['selectprovider']} onChangeFn={onSelectProvider} defValue={\"Select Provider\"} label={\"Provider\"} option={['SMTP']}/>\n                <FormInput inpRef={inputRef['servername']} label={'Server Name'} placeholder={'Server Name'} validExp={\"emailServerName\"}/>\n                <div className='col-xs-9 form-group input-label'>\n                    <label>Status</label>\n                    <span ref={inputRef['serverstatus']} style={{marginLeft:'20px'}} className={'left-opt'}>-</span>\n                </div>\n                <FormInput inpRef={inputRef['host']} label={'Host'} placeholder={'Server Host IP/Domain name'}/>\n                <FormInput inpRef={inputRef['port']} label={'Port'} placeholder={'Server Port'}/>\n                <FormSelect inpRef={inputRef['selectauth']} onChangeFn={fn.showAuth} defValue={\"Select Authentication type\"} label={\"Authentication\"} option={['none','basic']}/>\n                <FormInput inpRef={inputRef['authname']} label={'Authentication Username'} placeholder={'Authentication Username'}/>\n                <FormInput inpRef={inputRef['authpassword']} label={'Authentication Password'} placeholder={'Authentication Password'}/>\n                <FormInput inpRef={inputRef['sendername']} label={'Sender Name'} placeholder={'Avo Assure Alerts'}/>\n                <FormInput inpRef={inputRef['senderaddr']} label={'Sender Address'} placeholder={'avoassure-alerts@avoautomation.com'}/>\n                <FormRadio inpRef={inputRef[\"secureconnect\"]} label={'Secure Connection'} option={[\"Auto\",\"Enable\",\"Disable\"]}/>\n                <FormRadio inpRef={inputRef[\"tlcerror\"]} label={'Ignore TLS Errors'} option={[\"Yes\",\"No\"]}/>\n                <FormInput inpRef={inputRef['assureurl']} label={'Avo Assure URL'} placeholder={'Avo Assure Application URL'}/>\n                <div className='col-xs-9 form-group input-label'>\n                    <span onClick={()=>setAdvanceConf(advanceConf==='block'?'none':'block')} className='conf-title'>Advanced Configuration</span>\n                </div>\n                <div style={{display:advanceConf}}>\n                <FormInput inpRef={inputRef['conctimeout']} type={'number'} label={'Connection Timeout'} placeholder={'Connection Timeout (in milliseconds)'}/>\n                <FormInput inpRef={inputRef['grettimeout']} type={'number'} label={'Greeting Timeout'} placeholder={'Greeting Timeout (in milliseconds)'}/>\n                <FormInput inpRef={inputRef['socktimeout']} type={'number'} label={'Socket Timeout'} placeholder={'Socket Timeout (in milliseconds)'}/>\n                <div className='col-xs-9 form-group input-label checkbox-email'>\n                    <span>\n                        <input onChange={fn.showPool} id='checkboxpool' ref={inputRef['checkboxpool']} type='checkbox'></input>\n                        <label htmlFor='checkboxpool'>Use Connection Pool</label>\n                    </span>\n                </div>\n                <FormInput inpRef={inputRef['maxconnection']} type={'number'} label={'Max Connections'} placeholder={'Max Number of Connections Allowed in Pool'}/>\n                <FormInput inpRef={inputRef['maxmessages']} type={'number'} label={'Max Messages'} placeholder={'Max Number of Messages Sent via Pool'}/>\n                <div className='col-xs-9 form-group input-label checkbox-email'>\n                    <span>\n                        <input onChange={fn.showProxUrl} id='checkproxyurl' ref={inputRef['checkproxyurl']} type='checkbox'></input>\n                        <label htmlFor='checkproxyurl'>Use Proxy</label>\n                    </span>\n                </div>\n                <FormInput inpRef={inputRef['proxyurl']} label={'Proxy Server url'} placeholder={'Proxy Server URL (Eg: https://localhost:8080)'}/>\n                <div className='col-xs-9 form-group input-label checkbox-email'>\n                    <span>\n                        <input onChange={fn.showProxCred} id='checkproxycred' ref={inputRef['checkproxycred']} type='checkbox'></input>\n                        <label htmlFor='checkproxycred'>Proxy Requires Credentials</label>\n                    </span>\n                </div>\n                <FormInput inpRef={inputRef['proxyuser']} label={'Proxy User'} placeholder={'Username For Proxy Server'}/>\n                <FormInput inpRef={inputRef['proxypass']} label={'Proxy Password'} placeholder={'Password For Proxy Server'}/>\n                </div>\n            </ScrollBar>\n            </div>\n            {emailTest?<EmailTest setEmailTest={setEmailTest} confObj={emailTest}/>:null}\n        </div>\n    )\n}\n\nconst update = async(conf,action,setLoading,displayError,onSelectProvider) =>{\n    var emsg = \"Failed to \"+action+\" '\"+conf.name+\"' Configuration.\";\n    setLoading(action.slice(0,-1) + \"ing Configuration...\")\n    var data = await manageNotificationChannels({'action':action.toLowerCase(), conf})\n    if(data.error){displayError(data.error,action+\" Configuration\");return;}\n    else if (data === \"exists\") {\n        displayError(action+\" Configuration\", \"'\"+conf.name+\"' configuration already exists\");\n        return;\n    }\n    else if (data === \"success\") {\n        displayError(\"'\"+conf.name+\"' Configuration \"+action+\"d!\",action+\" Configuration\");\n        onSelectProvider()\n        return;\n    } else if(/^1[0-4]{12}$/.test(data)) {\n        if (+data[1]) {\n            displayError(action+\" Configuration\", emsg+\" Invalid Request!\");\n            return;\n       }\n        const errfields = [];\n        if (+data[2]) errfields.push(\"Server Name\");\n        if (+data[3]) errfields.push(\"Channel\");\n        if (+data[4]) errfields.push(\"Provider\");\n        if (+data[5]) errfields.push(\"Server Host\");\n        if (+data[6]) errfields.push(\"Server Port\");\n        if (+data[7]) errfields.push(\"Sender Email\");\n        if (+data[8]) errfields.push(\"Secure Connection\");\n        if (+data[9]) errfields.push(\"Authentication\");\n        if (+data[10]) errfields.push(\"Avo Assure Application URL\");\n        if (+data[11]) errfields.push(\"Proxy URL\");\n        if (+data[12] === 1) errfields.push(\"Proxy Username\");\n        else if (+data[12] === 2) errfields.push(\"Proxy Password\");\n        else if (+data[12] === 3) errfields.push(\"Proxy Credentials\");\n        displayError(emsg+\" Following values are invalid: \"+errfields.join(\", \"),action+\" Configuration\");\n    } else{\n        displayError(\"Failed to \"+ action +\" configuration\",action+\" Configuration\");\n    }\n}\n\nconst clickToggle = async(servername,action,setLoading,displayError,onSelectProvider) =>{\n    const emsg = \"Failed to \"+action+\" '\"+servername+\"' Configuration.\";\n    var conf = {\n        channel: 'email',\n        provider: 'smtp',\n        name: servername\n    }\n    setLoading(action.slice(0,-1) + \"ing Configuration...\")\n    var data = await manageNotificationChannels({action : action.toLowerCase(), conf})\n    if(data.error){displayError(data.error,action+\" Configuration\");return;}\n    if (data === \"success\") {\n        displayError(\"'\"+conf.name+\"' Configuration \"+action+\"d!\",action+\" Configuration\");\n        onSelectProvider()\n        return;\n    } else if(/^1[0-4]{9}$/.test(data)) {\n        if (parseInt(data[1])) {\n            displayError(emsg+\" Invalid Request!\",action+\" Configuration\");\n            return;\n        }\n        const errfields = [];\n        if (parseInt(data[2])) errfields.push(\"Server Name\");\n        if (parseInt(data[3])) errfields.push(\"Channel\");\n        displayError(emsg+\" Following values are invalid: \"+errfields.join(\", \"),action+\" Configuration\");\n    } else{\n        displayError(\"Failed to \"+ action +\" configuration\",action+\" Configuration\");\n    }\n}\n\nconst selectProvider = async({inputRef,showPool,showAuth,showAll,showProxCred,showProxUrl,displayError,setLoading}) =>{\n    var arg = {\"action\":\"provider\",\"channel\":\"email\",\"args\":\"smtp\"}\n    try{\n        setLoading('Loading ...');\n        var data = await getNotificationChannels(arg);\n        if(data.error){displayError(data.error);return;}\n        if(data === 'empty'){\n            inputRef.toggleUppdate.current.disabled=false;\n            setLoading(false);\n            return;\n        }\n        inputRef.toggleUppdate.current.innerText = 'Update'\n        inputRef.servername.current.value = data.name\n        if(data.name)inputRef.servername.current.readOnly = true\n        inputRef.host.current.value = data.host\n        inputRef.port.current.value = data.port\n        inputRef.serverstatus.current.innerText = data.active?'Active':'InActive'\n        inputRef.serverstatus.current.style.color = data.active?'green':'red'\n        inputRef.toggleStatus.current.innerText = data.active?\"Disable\":\"Enable\"\n        inputRef.secureconnect[data.tls.security].current.checked= true \n        inputRef.tlcerror[data.tls.insecure.toString()].current.checked = true\n        const authType = (data.auth && data.auth.type) || data.auth;\n        if (authType === \"basic\"){\n            inputRef.selectauth.current.value = data.auth.type;\n            inputRef.authname.current.value = data.auth.username\n            inputRef.authpassword.current.value = data.auth.password\n        }\n        else {\n            inputRef.selectauth.current.value = 'none';\n            showAuth()\n        }\n        inputRef.sendername.current.value = data.sender.name\n        inputRef.senderaddr.current.value = data.sender.email\n        inputRef.assureurl.current.value = data.appurl\n    \n        if (!data.timeouts) data.timeouts = {};\n        inputRef.grettimeout.current.value = data.timeouts.greeting\n        inputRef.socktimeout.current.value = data.timeouts.socket\n        inputRef.conctimeout.current.value = data.timeouts.connection\n    \n        if (!data.pool) data.pool = {};\n        inputRef.checkboxpool.current.checked = data.pool.enable || false;\n        inputRef.maxconnection.current.value = data.pool.maxconnections || \"\";\n        inputRef.maxmessages.current.value = data.pool.maxmessages || \"\";\n        showPool();\n    \n        if (!data.proxy) data.proxy = {};\n        inputRef.checkproxyurl.current.value = data.proxy.enable || false;\n        inputRef.proxyurl.current.value = data.proxy.url || \"\";\n        showProxUrl();\n    \n        inputRef.checkproxycred.current.value = data.proxy.auth || false;\n        inputRef.proxyuser.current.value = data.proxy.user || \"\";\n        inputRef.proxypass.current.value = data.proxy.pass || \"\";\n        showProxCred();\n        inputRef.toggleUppdate.current.disabled = false\n        inputRef.toggleStatus.current.disabled = false\n        inputRef.toggleTest.current.disabled = false\n        setLoading(false);\n    }catch(err){\n        console.error(err)\n        displayError('Fail to fetch configured details for selected provider.')\n    }\n}\n\nconst factoryFn = (inputRef) =>{\n    const showAuth = () => {\n        inputRef.authname.current.disabled = (inputRef.selectauth.current.value === 'none' || inputRef.selectauth.current.value === \"def-opt\")\n        inputRef.authpassword.current.disabled = (inputRef.selectauth.current.value === 'none' || inputRef.selectauth.current.value === \"def-opt\")\n    }\n    const showProxCred = () =>{\n        inputRef.proxyuser.current.disabled = !inputRef.checkproxycred.current.checked\n        inputRef.proxypass.current.disabled = !inputRef.checkproxycred.current.checked\n    }\n    const showProxUrl = () =>{\n        if(!inputRef.checkproxyurl.current.checked){\n            inputRef.checkproxycred.current.disabled = true\n            inputRef.proxyuser.current.disabled = true\n            inputRef.proxypass.current.disabled = true\n\n        }else{\n            inputRef.checkproxycred.current.disabled = false\n            showProxCred()\n        }\n        inputRef.proxyurl.current.disabled = !inputRef.checkproxyurl.current.checked\n    }\n    const showPool = () =>{\n        inputRef.maxconnection.current.disabled =!inputRef.checkboxpool.current.checked \n        inputRef.maxmessages.current.disabled = !inputRef.checkboxpool.current.checked \n    }\n    const showAll = () => {\n        showAuth();\n        showPool();\n        showProxUrl();\n        showProxCred();\n    }\n    return {showPool,showAuth,showProxCred,showProxUrl,showAll}\n}\n\nconst getConfObj = (inputRef) => {\n    return {\n        channel: 'email',\n        provider: 'smtp',\n        name: inputRef.servername.current.value,\n        host: inputRef.host.current.value,\n        port: inputRef.port.current.value,\n        auth: {\n            type:inputRef.selectauth.current.value,\n            username:inputRef.authname.current.value,\n            password:inputRef.authpassword.current.value\n        },\n        sender: {\n            name:inputRef.sendername.current.value,\n            email:inputRef.senderaddr.current.value\n        },\n        appurl: inputRef.assureurl.current.value,\n        pool: {\n            enable: inputRef.checkboxpool.current.checked,\n            maxconnections: inputRef.maxconnection.current.value,\n            maxmessages: inputRef.maxmessages.current.value\n        },\n        proxy: {\n            enable: inputRef.checkproxyurl.current.checked,\n            url: inputRef.proxyurl.current.value,\n            auth: inputRef.checkproxycred.current.checked,\n            user: inputRef.proxyuser.current.value,\n            pass: inputRef.proxypass.current.value\n        },\n        timeouts: {\n            greeting: inputRef.grettimeout.current.value,\n            socket: inputRef.socktimeout.current.value,\n            connection: inputRef.conctimeout.current.value\n        },\n        enabletls: (()=>{\n            var key;\n            Object.keys(inputRef.secureconnect).some(e=>{\n                if(inputRef.secureconnect[e].current.checked)key = e\n                return inputRef.secureconnect[e].current.checked\n            })\n            return key\n        })(),\n        insecuretls: (()=>{\n            var key;\n            Object.keys(inputRef.tlcerror).some(e=>{\n                if(inputRef.tlcerror[e].current.checked)key = e\n                return inputRef.tlcerror[e].current.checked\n            })\n            return key\n        })(),\n    };\n};\n\nconst validate = (inputRef,displayError)=> {\n    var flag = true;\n    var popped = false;\n    const errBorder = '1px solid red';\n    const regExName = /^[A-Za-z0-9]+([A-Za-z0-9-]*[A-Za-z0-9]+|[A-Za-z0-9]*)$/;\n    const regExURL = /^http[s]?:\\/\\/[A-Za-z0-9._-].*$/i;\n    // eslint-disable-next-line\n    const emailRegEx = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    \n    var arr = ['selectprovider','selectauth','host','servername','port','sendername','senderaddr','assureurl']\n    if(inputRef.checkproxyurl.current.value === 'true')arr.push('proxyurl')\n    if(inputRef.checkproxycred.current.value === 'true')arr.push('proxyuser','proxypass')\n    arr.forEach((e)=>{\n        inputRef[e].current.style.outline = ''\n        if(inputRef[e].current.value === \"\"){\n            inputRef[e].current.style.outline = errBorder\n            flag = false;\n        }else if(e === 'servername' && !regExName.test(inputRef[e].current.value)){\n            inputRef[e].current.style.outline = errBorder\n            if (!popped) displayError(\"Invalid Server Name provided! Name cannot contain any special characters other than hyphen. Also name cannot start or end with hyphen.\");\n            flag = false;\n            popped = true;\n        }else if(e === 'port' && !((+inputRef[e].current.value  >= 0) && (+inputRef[e].current.value  < 65536))){\n            inputRef[e].current.style.outline = errBorder\n            if (!popped) displayError(\"Invalid Server Port provided! Value has to be a number between 0 and 65535.\");\n            flag = false;\n            popped = true;\n        }else if(e === 'senderaddr' && !emailRegEx.test(inputRef[e].current.value)){\n            inputRef[e].current.style.outline = errBorder\n            if (!popped) displayError(\"Invalid sender Email Address!\");\n            flag = false;\n            popped = true;\n        }else if((e === 'assureurl'||e === 'proxyurl') && !regExURL.test(inputRef[e].current.value)){\n            inputRef[e].current.style.outline = errBorder\n            if (!popped) displayError(\"Invalid \"+(e === 'assureurl'?\"Avo Assure Application\":\"Proxy Server\")+\" URL provided!\");\n            flag = false;\n            popped = true;\n        }\n    })\n    if (!flag && !popped) displayError(\"Form contains errors!\");\n    return flag;\n};\n\nexport default EmailConfig;","import React, { useState, useEffect , useRef } from 'react';\nimport {FormInpDropDown} from './FormComp';\nimport {getAvailable_ICE,getPools,updatePool} from '../api';\n\n/*Component AllocateByQuantity\n  use: render ICE allocation by Quantity section\n*/\n\nconst AllocateByQuantity = ({resetMiddleScreen,selectedPool,setSelectedPool,displayError,setLoading,saveAction,setSaveAction}) => {\n    const iceNum = useRef()\n    const inpRef = useRef()\n    const [iceCount,setIceCount] = useState({total:'-',available:'-'});\n    const [poolList,setPoolList] =  useState([])\n    const [poolDict,setPoolDict] = useState({})\n    const [iceData,setIceData] = useState({})\n    //on selection of option in formInpDropdown\n    const FilterPool = (e) => {\n        var val = e.currentTarget.value\n        iceNum.current.disabled = false\n        setSelectedPool(val)\n        setLoading('Loading ICE ...')\n        var icepool = poolDict[val].ice_list\n        iceNum.current.max = iceCount.available+Object.keys(icepool).length\n        iceNum.current.min = 0;\n        iceNum.current.value = Object.keys(icepool).length\n        setLoading(false)\n    }\n    //on click of option in formInpDropdown\n    const clickInp = () =>{\n        iceNum.current.style.outline=''\n        setSelectedPool(undefined)\n        iceNum.current.disabled = true\n        iceNum.current.value = ''\n    }\n    useEffect(()=>{\n        //on click of save\n        if(saveAction && selectedPool){\n            (async()=>{\n                if(!iceNum.current.value){iceNum.current.style.outline='1px solid red';return;}\n                iceNum.current.style.outline=''\n                var pool = poolDict[selectedPool]\n                var val = iceNum.current.value - Object.keys(pool.ice_list).length\n                pool.ice_deleted = []\n                pool.ice_added = []\n                var availableIce = iceCount.available\n                if(val > availableIce){displayError(\"Number of ICE assigned exceeds available ICE\");return;}\n                if(val<0){\n                    pool.ice_deleted = Object.keys(pool.ice_list).slice(0,Math.abs(val))\n                }else{\n                    pool.ice_added = Object.keys(iceData.available_ice).slice(0,val)\n                }\n                setLoading('Saving ICE Pool ...')\n                var data = await updatePool(pool)\n                if(data.error){displayError(data.error);return;}\n                await reset()\n                displayError(\"ICE Pool updated successfully.\",\"Success\")\n            })()\n        }\n        setSaveAction(false)\n        // eslint-disable-next-line\n    },[saveAction])\n\n    //on reload and load\n    useEffect(()=>{\n        reset()\n        // eslint-disable-next-line\n    },[resetMiddleScreen])\n    \n    const reset = async() => {\n        setLoading('...Loading')\n        setSelectedPool(undefined)\n        inpRef.current.value ='';\n        iceNum.current.value ='';\n        var data = await getAvailable_ICE()\n        if(data.error){displayError(data.error);return;}\n        if(!data.available_ice && !data.unavailable_ice){displayError(data.error);return;}\n        var available = Object.keys(data.available_ice).length\n        var total = available + Object.keys(data.unavailable_ice).length\n        setIceCount({total:total,available:available})\n        setIceData(data)\n        var arg = {\n            poolid:\"all\",\n            projectids:[]\n        }\n        var dataPools = await getPools(arg)\n        if(dataPools.error){displayError(dataPools.error);return;}\n        var e = Object.entries(dataPools)\n        e.sort((a,b) => a[1].poolname.localeCompare(b[1].poolname))\n        setPoolDict(dataPools)\n        setPoolList(e)\n        setLoading(false)\n    }\n    return(\n        <div className='allocate-quant-container'>\n            <div className='col-xs-9 form-group input-label'>\n                <label>Available ICE</label>\n                <span>{`${iceCount.available} / ${iceCount.total}`}</span>\n            </div>\n            <div style={{zIndex:1}} className='col-xs-9 form-group input-label'>\n                <label>Pool Name</label>\n                <span className='filter-pool'>\n                    <FormInpDropDown clickInp={clickInp} inpRef={inpRef} data={poolList} setFilter={FilterPool}/>\n                </span>\n            </div>\n            <div className='col-xs-9 form-group input-label'>\n                <label>Enter number of ICE to assign</label>\n                <input className='ice-count' ref={iceNum} disabled={selectedPool?false:true} type='number'></input>\n            </div>\n        </div>\n    )\n}\n\nexport default AllocateByQuantity;","import React, { useState, useEffect , useRef } from 'react';\nimport {FormInpDropDown} from '../components/FormComp';\nimport AssignOptionBox from '../components/AssignOptionBox'\nimport {getAvailable_ICE,getPools,updatePool} from '../api';\n\n/*Component AllocateByIce\n  use: render ICE allocation by choose ICE section\n*/\n\nconst  AllocateByIce = ({displayError,setLoading,selectedPool,setSelectedPool,saveAction,setSaveAction}) => {\n    const inpRef = useRef()\n    const [poolIceData,setPoolIceData] = useState([])\n    const [iceData,setIceData] = useState([])\n    const [initAssign,setInitAssign] = useState([])\n    const [poolList,setPoolList] =  useState([])\n    const [poolDict,setPoolDict] = useState({})\n    //on selection of option in formInpDropdown\n    const FilterPool = (e) => {\n        var val = e.currentTarget.value\n        setSelectedPool(val)\n        var icepool = poolDict[val].ice_list\n        var arr = []\n        Object.keys(icepool).forEach(e => {\n            icepool[e].name = icepool[e].icename\n            arr.push(icepool[e])\n        });\n        setPoolIceData(arr)\n    }\n    //on click of option in formInpDropdown\n    const clickInp = () =>{\n        setPoolIceData([])\n        setIceData(initAssign)\n        setSelectedPool(undefined)\n    }\n    useEffect(()=>{\n        //on click of save\n        if(saveAction && selectedPool){\n            (async()=>{\n                setLoading('Saving in Progress. Please Wait...');\n                var pool = poolDict[selectedPool]\n                var ice_List = []\n                pool.ice_added = []\n                pool.ice_deleted = []\n                poolIceData.forEach((e)=>{\n                    ice_List.push(e._id)\n                    if(!(e._id in poolDict[selectedPool].ice_list)){\n                        pool.ice_added.push(e._id)\n                    }\n                })\n                Object.keys(poolDict[selectedPool].ice_list).forEach((e)=>{\n                    if(ice_List.indexOf(e)===-1){\n                        pool.ice_deleted.push(e)\n                    }\n                })\n                var data = await updatePool(pool)\n                if(data.error){displayError(data.error);return;}\n                await reset()\n                displayError(\"ICE Pool updated successfully.\",\"Success\")\n            })()\n        }\n        setSaveAction(false)\n        // eslint-disable-next-line\n    },[saveAction])\n    //when component mounts\n    useEffect(()=>{\n        reset()\n        // eslint-disable-next-line\n    },[])\n    const reset = async() => {\n        setLoading('...Loading')\n        setPoolIceData([])\n        setSelectedPool(undefined)\n        inpRef.current.value = \"\"\n        var data = await getAvailable_ICE()\n        if(data.error){displayError(data.error);return;}\n        if(!data.available_ice && !data.unavailable_ice){displayError(data.error);return;}\n        var arr = []\n        Object.keys(data.available_ice).forEach(e => {\n            data.available_ice[e].name = data.available_ice[e].icename\n            arr.push(data.available_ice[e])\n        });\n        var arg = {\n            poolid:\"all\",\n            projectids:[]\n        }\n        var dataPools = await getPools(arg)\n        if(dataPools.error){displayError(dataPools.error);return;}\n        var e = Object.entries(dataPools)\n        e.sort((a,b) => a[1].poolname.localeCompare(b[1].poolname))\n        setIceData(arr)\n        setInitAssign(arr)\n        setPoolDict(dataPools)\n        setPoolList(e)\n        setLoading(false)\n    }\n    return(\n        <div className='edit_ice-pool'>\n            <div className=\"col-xs-9 form-group assignBox-container allocate_by_ice-container\">\n                <AssignOptionBox \n                    FilterComp={<FilterComp clickInp={clickInp} inpRef={inpRef} setFilter={FilterPool} data={poolList}/>}\n                    disable={selectedPool?false:true} leftBox={iceData} rightBox={poolIceData} setLeftBox={setIceData} setRightBox={setPoolIceData}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst FilterComp = ({setFilter,data,clickInp,inpRef}) =>{\n    return(\n        <span className='label-select'>\n            <FormInpDropDown clickInp={clickInp} inpRef={inpRef} setFilter={setFilter} data={data}/>\n        </span>\n    )\n}\n\nexport default AllocateByIce;","import React, { useState, useEffect } from 'react';\nimport {ScreenOverlay, PopupMsg, ScrollBar} from '../../global' \nimport AllocateByQuantity from '../components/AllocateByQuantity';\nimport AllocateByIce from '../components/AllocateByIce';\nimport '../styles/AllocateIcePool.scss'\n\n/*Component AllocateIcePool\n  use: render ICE allocation screen on select from leftbar icon imports quantity and choose ice from component\n*/\nconst AllocateIcePool = ({resetMiddleScreen}) => {\n    const [quant,setQuant] = useState(true)\n    const [popupState,setPopupState] = useState({show:false,title:\"\",content:\"\"});\n    const [loading,setLoading] = useState(false);\n    const [selectedPool,setSelectedPool] = useState({})\n    const [saveAction,setSaveAction] = useState(false)\n    useEffect(()=>{\n        setQuant(true)\n    },[resetMiddleScreen])\n    const displayError = (error,header) =>{\n        setLoading(false)\n        setPopupState({\n            title:header?header:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n    return(\n        <ScrollBar thumbColor=\"#929397\" hideXbar={true}>\n            <div className=\"crt_ice-pool_container\">\n            {popupState.show?<PopupMsg content={popupState.content} title={popupState.title} submit={()=>setPopupState({show:false})} close={()=>setPopupState({show:false})} submitText={\"Ok\"} />:null}\n            {loading?<ScreenOverlay content={loading}/>:null}\n            <div id=\"page-taskName\">\n                <span>Allocate ICE Pool</span>\n            </div>\n            <div className=\"adminActionBtn\">\n                <button disabled={selectedPool?false:true} className=\" a__btn \" onClick={()=>setSaveAction(true)}  title=\"Save\">Save</button>\n            </div>\n            <div className='col-xs-9 form-group allocate-opt'>\n                <div className={!quant?\"unactive-opt\":\"\"} onClick={()=>setQuant(true)}>Quantity</div>\n                <div className={quant?\"unactive-opt\":\"\"} onClick={()=>setQuant(false)}>Choose ICE</div>\n            </div>\n            {quant?\n            <AllocateByQuantity resetMiddleScreen={resetMiddleScreen} saveAction={saveAction} selectedPool={selectedPool} setSelectedPool={setSelectedPool} setSaveAction={setSaveAction} displayError={displayError} setLoading={setLoading} setPopupState={setPopupState}/>:\n            <AllocateByIce  saveAction={saveAction} selectedPool={selectedPool} setSelectedPool={setSelectedPool} setSaveAction={setSaveAction} displayError={displayError} setLoading={setLoading} setPopupState={setPopupState}/>}\n            </div>\n        </ScrollBar>    \n    )\n}\n\n\nexport default AllocateIcePool","import React ,  { useState } from 'react';\nimport LeftPanel from './LeftPanel';\nimport CreateUser from './CreateUser';\nimport Project from './Project';\nimport ProjectAssign from './ProjectAssign';\nimport OidcConfig from './OidcConfig'\nimport GitConfig from './GitConfig'\nimport SamlConfig from './SamlConfig';\nimport Preferences from './Preferences';\nimport SessionManagement from './SessionManagement';\nimport CreateIcePool from './CreateIcePool';\nimport IceProvision from './IceProvision';\nimport TokenManagement from './TokenMangement';\nimport LdapConfig from './LdapConfig';\nimport EmailConfig from './EmailConfig';\nimport AllocateIcePool from './AllocateIcePool';\nimport {Header,FooterTwo,ReferenceBar} from '../../global';\nimport '../styles/AdminHome.scss';\n\n/*Component AdminHome\n  use: renders Admin landing page (footer,header,sidebars,middle saection)\n  todo: \n*/\n\nconst AdminHome = () => {\n  const [middleScreen,setMiddleScreen] = useState(\"createUser\")\n  const [showEditUser,setShowEditUser] = useState(false)\n  const [resetMiddleScreen,setResetMiddleScreen] =useState({tokenTab:true,provisionTa:true,Preferences:true,sessionTab:true,gitConfigure:true,ldapConfigTab:true,createUser:true,projectTab:true,assignProjectTab:true,samlConfigTab:true,oidcConfigTab:true})\n  return (\n    <div className='admin-container'>\n        <Header />\n        <div className=\"admin__mid_section\">\n            <LeftPanel resetMiddleScreen={resetMiddleScreen} setResetMiddleScreen={setResetMiddleScreen} middleScreen={middleScreen} setMiddleScreen={setMiddleScreen} setShowEditUser={setShowEditUser}/>\n            <div id=\"middle-content-section\">\n                <div className=\"abs-div\">\n                    <div className=\"min-h\">\n                        <div className='admin-container-wrap'>\n                            <div className=\"containerWrap admin-containerWrap-pad \">\n                                {(middleScreen===\"createUser\")?<CreateUser resetMiddleScreen={resetMiddleScreen} showEditUser={showEditUser} setShowEditUser={setShowEditUser} setMiddleScreen={setMiddleScreen} middleScreen={middleScreen}/>:null}\n                                {(middleScreen===\"tokenTab\")?<TokenManagement resetMiddleScreen={resetMiddleScreen} setMiddleScreen={setMiddleScreen}/> :null}\n                                {(middleScreen===\"provisionTa\")?<IceProvision resetMiddleScreen={resetMiddleScreen} setMiddleScreen={setMiddleScreen} />:null}\n                                {(middleScreen===\"projectTab\")?<Project resetMiddleScreen={resetMiddleScreen} setMiddleScreen={setMiddleScreen}/>:null}\n                                {(middleScreen===\"assignProjectTab\")?<ProjectAssign resetMiddleScreen={resetMiddleScreen} setMiddleScreen={setMiddleScreen}/>:null}\n                                {(middleScreen===\"CreateIcePool\")?<CreateIcePool resetMiddleScreen={resetMiddleScreen}/>:null}\n                                {(middleScreen===\"AllocateIcePool\")?<AllocateIcePool resetMiddleScreen={resetMiddleScreen}/>:null}\n                                {(middleScreen===\"gitConfigure\")?<GitConfig resetMiddleScreen={resetMiddleScreen} setMiddleScreen={setMiddleScreen}/>:null}\n                                {(middleScreen===\"ldapConfigTab\")?<LdapConfig resetMiddleScreen={resetMiddleScreen} setMiddleScreen={setMiddleScreen}/>:null}\n                                {(middleScreen===\"samlConfigTab\")?<SamlConfig resetMiddleScreen={resetMiddleScreen} middleScreen={middleScreen} />:null}\n                                {(middleScreen===\"oidcConfigTab\")?<OidcConfig resetMiddleScreen={resetMiddleScreen} middleScreen={middleScreen} />:null}\n                                {(middleScreen===\"emailConfigTab\")?<EmailConfig resetMiddleScreen={resetMiddleScreen}/>:null}\n                                {(middleScreen===\"sessionTab\")?<SessionManagement resetMiddleScreen={resetMiddleScreen} middleScreen={middleScreen}  />:null}\n                                {(middleScreen===\"Preferences\")?<Preferences resetMiddleScreen={resetMiddleScreen} middleScreen={middleScreen} />:null}\n                            </div>\n                        </div>\n                    </div>    \n                </div>\n            </div>  \n            <ReferenceBar taskTop={false} hideInfo={true} hideTask={true}/>\n        </div>\n        <div className='admin-footer'><FooterTwo /></div>\n    </div>\n  );\n}\n\nexport default AdminHome;","import React, { useState} from 'react';\nimport { Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\nconst PluginBox = ({pluginName, pluginTitle}) => {\n\n\tconst [redirectTo, setRedirectTo] = useState(\"\");\n\n\tconst pluginRedirect = () => {\n\t\tpluginName = pluginName.toLowerCase();\n\t\twindow.localStorage['navigateScreen'] = pluginName;\n\t\tif(pluginName==='dashboard'){\n\t\t\twindow.localStorage['Reduxbackup'] = window.localStorage['persist:login']\n\t\t\twindow.location.href = \"/\"+ pluginName;\n\t\t}\n\t\telse if (['report', 'performancetesting'].indexOf(pluginName) > -1) window.location.href = \"/\"+ pluginName;\n\t\telse {\n\t\t\tif (pluginName === \"integration\") window.localStorage['integrationScreenType'] = null\n\t\t\tsetRedirectTo(`/${pluginName}`)\n\t\t}\n\t}\n\n    return (\n\t\t<>\n\t\t\t{ redirectTo && <Redirect data-test=\"redirectTo\" to={redirectTo} />}\n            <div data-test=\"plugin-blocks\" className=\"plugin-block\" onClick={pluginRedirect}>\n                <img data-test=\"plugin-image\" className=\"plugin-ic\" alt=\"plugin-ic\" src={`static/imgs/${pluginName}.svg`} />\n                <span data-test=\"plugin-name\" className=\"plugin-text\">{pluginTitle}</span>\n        \t</div>\n\t\t</>\n    );\n}\nPluginBox.propTypes={\n    plugin:PropTypes.object\n}\nexport default PluginBox;","import React, { useEffect, useState, Fragment } from 'react';\nimport PluginBox from './PluginBox';\nimport \"../styles/PluginSection.scss\"\nimport PropTypes from 'prop-types';\n\nconst PluginSection = ({userInfo}) => {\n\n    const [pluginList, setPluginList] = useState({\n        \"Integration\": { title: \"Integrations\", show: false },\n        \"Mindmap\": { title: \"Mindmaps\", show: false },\n        \"Reports\": { title: \"Reports\", show: false},\n        \"Utility\" : { title: \"Utilities\", show: false},\n        \"Dashboard\": {title:\"Dashboard\", show: false},\n        \"showList\" : false,\n    });\n\n    useEffect(()=>{\n        if (Object.keys(userInfo).length!==0){\n            let tempList = { ...pluginList };\n            let availablePlugins = userInfo.pluginsInfo;\n            let pluginsLength = availablePlugins.length;\n    \n            for(let i=0 ; i < pluginsLength ; i++){\n                if(availablePlugins[i].pluginValue !== false){\n                    let pluginName = availablePlugins[i].pluginName;\n                    \n                    if (tempList[pluginName]) tempList[pluginName].show = true;\n                    else tempList[pluginName] = { title: pluginName, show: true};\n                }\n            }\n\n            tempList.showList = true;\n            setPluginList(tempList);\n        }\n    }, [userInfo]);\n\n    return(\n        <div data-test=\"plugins-section\" className=\"plugin-section\">\n            <div data-test=\"available-plugins-title\" className=\"avail-plugin-title\">Available Plugins</div>\n            <div data-test=\"plugins-blocks\" className=\"plugin-blocks\">\n                {\n                    pluginList.showList && Object.keys(pluginList).map(pluginName =>\n                        <Fragment key={pluginName} >\n                        {\n                            pluginList[pluginName].show && \n                            <PluginBox \n                                pluginName={pluginName} \n                                pluginTitle={pluginList[pluginName].title}\n                            />\n                        }\n                        </Fragment>\n                    )\n                }\n            </div>\n        </div>\n    );\n}\nPluginSection.propTypes={\n    plugin:PropTypes.object\n}\nexport default PluginSection;","import React, { useState, useEffect } from 'react';\nimport { ModalContainer, ScrollBar } from '../../global'\nimport \"../styles/FilterDialog.scss\";\nimport PropTypes from 'prop-types';\n\nconst FilterDialog = ({setShow, dataDict, filterData, filterTasks}) => {\n\n    const [proj, setProj] = useState(\"Select Project\");\n    const [rel, setRel] = useState(\"Select Release\");\n    const [cyc, setCyc] = useState(\"Select Cycle\");\n    const [task, setTask] = useState({});\n    const [app, setApp] = useState({});\n\n    useEffect(()=>{\n        setProj(filterData['prjval']);\n        setRel(filterData['relval']);\n        setCyc(filterData['cycval']);\n        \n        if (filterData['tasktype']){\n            let types = {}\n            Object.keys(filterData.tasktype).forEach(item=>{\n                types[item] = filterData.tasktype[item]\n            })\n            setTask(types);\n        }\n        if (filterData['apptype']){\n            let types = {}\n            Object.keys(filterData.apptype).forEach(item=>(\n                types[item] = filterData.apptype[item]\n            ))\n            setApp(types);\n        }\n        //eslint-disable-next-line\n    }, []);\n\n    const onProjSel = event => {\n        let prj = event.target.value;\n        let rl = \"Select Release\";\n        let cy = \"Select Cycle\";\n\n        if (Object.keys(dataDict.project[prj].release).length === 1) {\n            rl = Object.keys(dataDict.project[prj].release)[0];\n            \n            if (dataDict.project[prj].release[rl].length === 1) \n                cy = dataDict.project[prj].release[rl][0];\n        }\n\n        setProj(prj)\n        setRel(rl);\n        setCyc(cy);\n    };\n\n\n    const onRelSel = event => {\n        let rl = event.target.value;\n        let cy = \"Select Cycle\";\n\n        if (dataDict.project[proj].release[rl].length === 1)\n            cy = dataDict.project[proj].release[rl][0];\n\n        setRel(rl)\n        setCyc(cy);\n    };\n\n    const onCycSel = event => setCyc(event.target.value);\n\n    const onTaskSel = event => {\n        if (event.target.checked) setTask({...task, [event.target.value]: true})   \n        else setTask({...task, [event.target.value]: false})   \n    }\n\n    const onAppSel = event => {\n        if (event.target.checked) setApp({...app, [event.target.value]: true})\n        else setApp({...app, [event.target.value]: false})\n    }\n\n    const Content = () => (\n        <div className=\"filter_body\">\n            <ScrollBar thumbColor=\"#311d4e\" trackColor=\"#fff\" hideXbar={true}>\n            <div data-test=\"filterContent\" className=\"filter_content\">\n                \n                { /* Project Selection */ }\n                <div data-test=\"selectProjectLabel\" className=\"selection-lbl\">\n                    <span>Select Project</span>\n                </div>\n                \n                <select data-test=\"selectProjectDrop\" className=\"selection-select\" onChange={onProjSel} value={proj}>\n                    <option className=\"select__menu\" disabled value=\"Select Project\">Select Project</option>\n                    {Object.keys(dataDict.project).map((id, i)=>(\n                        <option key={i} className=\"select__menu\" value={id}>\n                            {dataDict.projectDict[id]}\n                        </option>   \n                    ))}\n                </select>\n            \n                { /* Release Selection */ }\n                <div data-test=\"selectReleaseLabel\" className=\"selection-lbl\">\n                    <span>Select Release</span>\n                </div>\n                \n                <select  data-test=\"selectReleaseDrop\" className=\"selection-select\" onChange={onRelSel} disabled={proj===\"Select Project\"} value={rel}>\n                    <option className=\"select__menu\" disabled value=\"Select Release\">Select Release</option>\n                    { dataDict.project[proj] && Object.keys(dataDict.project[proj].release).map((rel, i)=>(\n                        <option key={i} className=\"select__menu\" value={rel}>\n                            {rel}\n                        </option>\n                    ))}\n                </select>\n            \n                { /* Cycle Selection */ }\n                <div  data-test=\"selectCycleLabel\" className=\"selection-lbl\">\n                    <span>Select Cycle</span>\n                </div>\n                <select data-test=\"selectCycleDrop\" className=\"selection-select\" onChange={onCycSel} disabled={rel===\"Select Release\"} value={cyc}>\n                    <option className=\"select__menu\" disabled value=\"Select Cycle\">Select Cycle</option>\n                    { dataDict.project[proj] && dataDict.project[proj].release[rel] && dataDict.project[proj].release[rel].map((cycID, i)=>(\n                        <option key={i} className=\"select__menu\" value={cycID}>\n                            {dataDict.cycleDict[cycID]}\n                        </option>\n                    ))}\n                </select>\n\n                {/*  Task Types */}\n                <div data-test=\"taskTypeLabel\" className=\"selection-lbl\">\n                    <span>Task Type:</span>\n                </div>\n                <span data-test=\"taskTypeCheckBox\" className=\"chkbx_div\">{dataDict.tasktypes.map((item, i)=>(\n                    <label key={i} className=\"filter_checkbox\"><input className=\"chkbx\" type=\"checkbox\" checked={task[item] || false} onChange={onTaskSel} value={item}/>{item}</label>\n                ))}</span>\n\n                {/*  App Types */}\n                <div  data-test=\"appTypeLabel\" className=\"selection-lbl\">\n                    <span>AppTypes:</span>\n                </div>\n                <span data-test=\"appTypeCheckBox\" className=\"chkbx_div\">{dataDict.apptypes.map((item, i)=>(\n                    <label key={i} className=\"filter_checkbox\"><input className=\"chkbx\" type=\"checkbox\" checked={app[item] || false} onChange={onAppSel} value={item}/>{item}</label>\n                ))}</span>\n            </div>\n            </ScrollBar>\n        </div>\n    )\n\n    const onResetFields = event => {\n        setProj(\"Select Project\");\n        setRel(\"Select Release\");\n        setCyc(\"Select Cycle\");\n        setTask({});\n        setApp({});\n    }\n\n    const filter = () =>{\n        let p = proj;\n        let r = rel;\n        let c = cyc;\n        let filterData = {'prjval': p,'relval': r,'cycval':c,'apptype':app,'tasktype':task};\n        filterTasks(filterData);\n    }\n\n    const Footer = () => (\n        <>\n            <button data-test=\"reset\" onClick={onResetFields}>Reset Fields</button>\n            <button data-test=\"filter\" onClick={filter}>Filter</button>\n        </>\n    )\n\n    return (\n        <div data-test=\"filterModalPop\" className=\"filter__pop\">\n        <ModalContainer \n            title=\"Filter Tasks\"\n            content={Content()}\n            close={()=>setShow(false)}\n            footer={Footer()}\n        />\n        </div>\n    );\n}\nFilterDialog.propTypes={\n    setShow:PropTypes.func,\n    dataDict:PropTypes.object, \n    filterData:PropTypes.object, \n    filterTasks:PropTypes.func\n}\nexport default FilterDialog;","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport {v4 as uuid} from 'uuid';\nimport { RedirectPage, ScrollBar, ScreenOverlay, TaskContents, PopupMsg, GenerateTaskList } from '../../global';\nimport FilterDialog from \"./FilterDialog\";\nimport * as actionTypes from '../state/action';\nimport * as pluginApi from \"../api\";\nimport \"../styles/TaskSection.scss\";\nimport PropTypes from 'prop-types';\n\n\nconst TaskSection = ({userInfo, userRole, dispatch}) =>{\n\n    const history = useHistory();\n\n    const taskJson = useSelector(state=>state.plugin.tasksJson);\n    const [showSearch, setShowSearch] = useState(false);\n    const [activeTab, setActiveTab] = useState(\"todo\");\n    const [reviewItems, setReviewItems] = useState([]);\n    const [todoItems, setTodoItems] = useState([]);\n    const [searchItems, setSearchItems] = useState([]);\n    const [dataObj, setDataObj] = useState([]);\n    const [dataDictState, setDataDictState] = useState({ 'project' : {}, 'apptypes' : [], 'tasktypes' : [], 'projectDict': {}, 'cycleDict': {}});\n    const [searchValue, setSearchValue] = useState(\"\");\n    const [overlay, setOverlay] = useState(\"\");\n    const [showFltrDlg, setShowFltrDlg] = useState(false);\n    const [filterData, setFilterData] = useState({'prjval':'Select Project','relval':'Select Release','cycval':'Select Cycle','apptype':{},'tasktype':{}});\n    const [filtered, setFiltered] = useState(false);\n    const [showPopup, setShowPopup] = useState(false);\n    let dataDict;\n    \n    useEffect(()=>{\n        if(Object.keys(userInfo).length!==0 && userRole!==\"Admin\") {\n            resetStates();\n            \n            setOverlay(\"Loading Tasks..Please wait...\");\n            pluginApi.getProjectIDs()\n            .then(data => {\n                if(data === \"Fail\" || data === \"Invalid Session\") return RedirectPage(history);\n                else {\n                    pluginApi.getTaskJson_mindmaps(data)\n                    .then(tasksJson => {\n                        //eslint-disable-next-line\n                        dataDict = dataDictState;\n\n                        if(tasksJson === \"Fail\" || tasksJson === \"Invalid Session\") return RedirectPage(history);\n                        else {                            \n                            for (let i=0 ; i < tasksJson.length ; i++){\n                                tasksJson[i].uid = uuid();\n                                fillFilterValues(tasksJson[i],0);\n                            }\n\n                            let { dataObjList, reviewList, todoList } = GenerateTaskList(tasksJson, \"pluginList\");\n\n                            // setTaskJson(tasksJson);\n                            dispatch({type: actionTypes.SET_TASKSJSON, payload: tasksJson});\n                            setReviewItems(reviewList);\n                            setTodoItems(todoList);\n                            setDataObj(dataObjList);\n                            setOverlay(\"\");\n                        }\n\n                        for (const projectID in dataDict.project){\n                          let dataIdx = data.projectId.indexOf(projectID);\n                          \n                          dataDict.project[projectID].domain = data.domains[dataIdx];\n                          dataDict.project[projectID].appType = { [data.appTypeName[dataIdx]]: data.appType[dataIdx] }\n                          dataDict.projectDict[projectID] = data.projectName[dataIdx];\n                          \n                          //eslint-disable-next-line\n                          for (const releaseID in dataDict.project[projectID].release){\n                            //eslint-disable-next-line\n                            dataDict.project[projectID].release[releaseID].forEach(cycleID=> {\n                                //eslint-disable-next-line\n                                dataDict.cycleDict[cycleID] = data.cycles[cycleID][2];\n                            })\n                          }\n                        } \n\n                        setDataDictState(dataDict);\n                        dispatch({type: actionTypes.SET_FD, payload: dataDict})\n                        \n                    })\n                    .catch(error => {\n                        setOverlay(\"\");\n                        setShowPopup({'title': 'Tasks', 'content': \"Fail to load tasks!\"});\n                        console.error(\"Error::::\", error);\n                    });\n                }\n            })\n            .catch(error => {\n                setOverlay(\"\");\n                setShowPopup({'title': 'Tasks', 'content': \"Fail to load tasks!\"});\n                console.error(\"Error::::\", error);\n            });\n        }\n    }, [userInfo, userRole]);\n\n    const resetStates = () => {\n        setShowSearch(false);\n        setActiveTab(\"todo\");\n        setReviewItems([]);\n        setTodoItems([]);\n        setSearchItems([]);\n        setDataDictState({ 'project' : {}, 'apptypes' : [], 'tasktypes' : [], 'projectDict': {}, 'cycleDict': {} });\n        // setTaskJson(null);\n        setSearchValue(\"\");\n        setOverlay(\"\");\n        setDataObj(null);\n        setFiltered(false);\n    }\n\n    const filterTasks = (filterData) => {\n\t\n        setShowFltrDlg(false);\n\n        let review_items = [];\n        let todo_items = [];\n        let length_tasksJson = taskJson.length;\n        for(let i=0; i < length_tasksJson; i++){\n            let taskname = taskJson[i].taskDetails[0].taskName;\n            let tasktype = taskJson[i].taskDetails[0].taskType;\n            let status = taskJson[i].taskDetails[0].status;\n            \n            let dataobj = dataObj[i];\n            if(passFilterTest(taskJson[i],0, filterData)){\n                if (status === 'underReview') review_items.push({'panel_idx': i, 'testSuiteDetails': taskJson[i].testSuiteDetails, 'dataobj': dataobj, 'taskname': taskname, 'tasktype': tasktype})\n                else todo_items.push({'panel_idx': i, 'testSuiteDetails': taskJson[i].testSuiteDetails, 'dataobj': dataobj, 'taskname': taskname, 'tasktype': tasktype})\n            }\t\t\t\t\n        }\n        \n        setReviewItems(review_items);\n        setTodoItems(todo_items);\n\n        if(filterData['prjval']==='Select Project' && filterData['relval']==='Select Release' && filterData['cycval']==='Select Cycle' && !(Object.values(filterData['tasktype']).includes(true) || Object.values(filterData['apptype']).includes(true))) \n            setFiltered(false);\n\t\t    else setFiltered(true);\n\n        let items = activeTab === \"todo\" ? todo_items : review_items;\n        let filteredItem = [];\n        filteredItem = items.filter(item=>item.taskname.toLowerCase().indexOf(searchValue.toLowerCase()) > -1);\n\n        setSearchItems(filteredItem);\n        setFilterData(filterData);\n\t};\n\n\n    const onSearchHandler = event => {\n        searchTask(activeTab, event.target.value)\n        setSearchValue(event.target.value);\n    };\n\n    const searchTask = (activeTab, value) => {\n        let items = activeTab === \"todo\" ? todoItems : reviewItems;\n        let filteredItem = [];\n\n        filteredItem = items.filter(item=>item.taskname.toLowerCase().indexOf(value.toLowerCase()) > -1);\n\n        setSearchItems(filteredItem);\n    }\n\n\n    const fillFilterValues = (obj, tidx) => {\n        if (!dataDict.project[obj.projectId]) dataDict.project[obj.projectId] = {'release': {}}\n        \n        if (!dataDict.project[obj.projectId].release[obj.taskDetails[tidx].releaseid])\n            dataDict['project'][obj.projectId].release[obj.taskDetails[tidx].releaseid] = [];\n        \n        if (!dataDict.project[obj.projectId].release[obj.taskDetails[tidx].releaseid].includes(obj.taskDetails[tidx].cycleid))\n            dataDict.project[obj.projectId].release[obj.taskDetails[tidx].releaseid].push(obj.taskDetails[tidx].cycleid)\n\n        if(!dataDict.apptypes.includes(obj.appType)) dataDict.apptypes.push(obj.appType);\n        if(!dataDict.tasktypes.includes(obj.taskDetails[0].taskType)) dataDict.tasktypes.push(obj.taskDetails[0].taskType);\n    }\n\n    const passFilterTest = (node, tidx, filterData) => {\n      var pflag = false, rflag = false, cflag = false, aflag = false, tflag = false;\n      if(filterData['prjval']==='Select Project' || filterData['prjval']===node.testSuiteDetails[tidx].projectidts) pflag = true;\n      if(filterData['relval']==='Select Release' || filterData['relval']===node.taskDetails[tidx].releaseid) rflag = true;\n      if(filterData['cycval']==='Select Cycle' || filterData['cycval']===node.taskDetails[tidx].cycleid) cflag = true;\n      if(Object.keys(filterData['tasktype']).map(function(itm) { return filterData['tasktype'][itm]; }).indexOf(true) === -1 || filterData.tasktype[node.taskDetails[tidx].taskType]) tflag = true;\n      if(Object.keys(filterData['apptype']).map(function(itm) { return filterData['apptype'][itm]; }).indexOf(true) === -1 || filterData.apptype[node.appType]) aflag = true;\t\t\n      \n      if(pflag && rflag && cflag && aflag && tflag) return true;\n      else return false;\n\t}\n    \n    const onSelectTodo = event =>{\n        setActiveTab(\"todo\");\n        if (showSearch) searchTask(\"todo\", searchValue);\n    }\n\n    const onSelectReview = event => {\n        setActiveTab(\"review\");\n        if (showSearch) searchTask(\"review\", searchValue);\n    }\n\n    const hideSearchBar = event => {\n        setSearchValue(\"\");\n        setShowSearch(!showSearch)\n    }\n    \n    const Popup = () => (\n        <PopupMsg \n            title={showPopup.title}\n            content={showPopup.content}\n            submitText=\"Close\"\n            close={()=>setShowPopup(false)}\n            submit={()=>setShowPopup(false)}\n        />\n    )\n\n    return (\n        <>\n        { showPopup && <Popup data-test=\"popup\" />}\n        {overlay && <ScreenOverlay data-test=\"screenoverlay-component\" content={overlay}/>}\n        { showFltrDlg && <FilterDialog data-test=\"filterdialog-component\" setShow={setShowFltrDlg} dataDict={dataDictState} filterData={filterData} filterTasks={filterTasks} /> }\n        <div  data-test=\"task-section\" className=\"task-section\">\n            <div data-test=\"task-header\" className=\"task-header\">\n                <span data-test=\"my-task\" className=\"my-task\">My Task(s)</span>\n                { showSearch && <input data-test=\"search-input\" className=\"task-search-bar \" autoFocus onChange={onSearchHandler} value={searchValue} />}\n                <span data-test=\"search-icon\" className={\"task-ic-container\"+(showSearch?\" plugin__showSearch\":\"\")} onClick={hideSearchBar}><img className=\"search-ic\" alt=\"search-ic\" src=\"static/imgs/ic-search-icon.png\"/></span>\n                <span data-test=\"filter-icon\" className={\"task-ic-container \" + (filtered && \"filter-on\") } onClick={()=>setShowFltrDlg(true)}><img className=\"filter-ic\" alt=\"filter-ic\" src=\"static/imgs/ic-filter-task.png\"/></span>\n            </div>\n            <div className=\"task-nav-bar\">\n                <span data-test=\"task-toDo\" className={\"task-nav-item \" + (activeTab===\"todo\" && \"active-tab\")} onClick={onSelectTodo}>To Do</span>\n                <span  data-test=\"task-toReview\" className={\"task-nav-item \" + (activeTab===\"review\" && \"active-tab\")} onClick={onSelectReview}>To Review</span>\n            </div>\n            {userRole !== \"Test Manager\" && <div className=\"task-overflow\" id=\"plugin__taskScroll\">\n                <ScrollBar data-test=\"scrollbar-component\" scrollId=\"plugin__taskScroll\" thumbColor= \"#321e4f\" trackColor= \"rgb(211, 211, 211)\" verticalbarWidth='8px'>\n                    <div data-test=\"task-content\" className=\"task-content\" id=\"plugin_page__list\">\n                        <TaskContents data-test=\"taskcontent-component\" items={searchValue ? searchItems : activeTab === \"todo\" ? todoItems : reviewItems} cycleDict={dataDictState.cycleDict} taskJson={taskJson} />\n                    </div>\n                 </ScrollBar>\n            </div>}\n        </div>\n        </>\n    );\n}\nTaskSection.propTypes={\n    userInfo : PropTypes.object,\n    userRole : PropTypes.string,\n    dispatch : PropTypes.func\n}\nexport default TaskSection;","import axios from 'axios';\nimport {url} from '../../App';\n\n/*Component TaskSection\n  api returns {\"appType\":[\"\"],\"appTypeName\":[\"\"],\"cycles\":{\"\":[\"\"]},\"domains\":[],\"projectId\":[],\"projectName\":[],\"projecttypes\":{},\"releases\":[[{\"cycles\":[{\"_id\":\"\",\"name\":\"\"}],\"name\":\"\"}]]}\n*/\nexport const getProjectIDs = () => {\n    return new Promise((resolve, reject)=> {\n        axios(url+\"/getProjectIDs\", {\n            method: 'POST',\n            headers : {\n                'Content-type' : 'application/json'\n            },\n            data : {'action': 'getProjectIDs', 'allflag': true},\n            credentials : 'include',\n        })\n        .then(res=>{\n            if (res.status === 200){\n                resolve(res.data);\n            }\n            else{\n                reject(res.status)\n            }\n        })\n        .catch(err => {\n            reject(err);\n        })\n    })\n}\n\n\n/*Component TaskSection\n  api returns {\"appType\":\"\",\"projectId\":\"\",\"screenId\":\"\",\"screenName\":\"\",\"testCaseId\":\"\",\"versionnumber\":int,\"testCaseName\":\"\",\"scenarioId\":\"\",\"scenarioName\":\"\",\"assignedTestScenarioIds\":[],\"taskDetails\":[{\"taskName\":\"\",\"taskDescription\":\"\",\"taskType\":\"\",\"subTaskType\":\"\",\"subTaskId\":\"\",\"assignedTo\":\"\",\"reviewer\":\"\",\"startDate\":\"\",\"expectedEndDate\":\"\",\"batchTaskIDs\":[\"\"],\"status\":\"\",\"reuse\":\"\",\"releaseid\":\"\",\"cycleid\":\"\"}],\"testSuiteDetails\":[{\"assignedTime\":\"\",\"releaseid\":\"\",\"cycleid\":\"\",\"testsuiteid\":\"\",\"testsuitename\":\"\",\"projectidts\":\"\",\"assignedTestScenarioIds\":\"\",\"subTaskId\":\"\"}],\"scenarioFlag\":\"\",\"releaseid\":\"\",\"cycleid\":\"\"}\n*/\nexport const getTaskJson_mindmaps = obj => {\n    return new Promise((resolve, reject) => {\n        axios(url+\"/getTaskJson_mindmaps\", {\n            method: 'POST',\n            headers : {\n                'Content-type' : 'application/json'\n            },\n            data : {'action': 'getTaskJson_mindmaps', 'obj': obj},\n            credentials : 'include',\n        })\n        .then(res=>{\n            if (res.status === 200){\n                resolve(res.data);\n            }\n            else{\n                reject(res.status)\n            }\n        })\n        .catch(err => {\n            reject(err);\n        })\n    });\n}","import React, { useEffect, useState } from 'react';\nimport { Header, FooterOne, ScrollBar } from '../../global'\nimport PluginSection from '../components/PluginSection';\nimport TaskSection from '../components/TaskSection';\nimport { useSelector, useDispatch } from 'react-redux';\nimport \"../styles/PluginHome.scss\"\n\nconst PluginHome = () => {\n\n    const dispatch = useDispatch();\n    \n    const userInfo = useSelector(state=>state.login.userinfo);\n    const userRole = useSelector(state=>state.login.SR);\n    // localStorage.setItem(\"navigateEnable\", true);\n\n    const [name, setName] = useState(\"Demo User\");\n\n    useEffect(()=>{\n        if (Object.keys(userInfo).length!==0){\n            setName(userInfo.firstname + ' ' + userInfo.lastname);\n        }\n    }, [userInfo, userRole]);\n\n    return(\n        <div className=\"plugin-bg-container\">\n            <img className=\"plugin-bg-img\" alt=\"bg-img\" src=\"static/imgs/light-bg.png\"/>\n            <Header />\n            <div className=\"plugin-elements\" id=\"plugin__mainScreen\">\n                <ScrollBar scrollId=\"plugin__mainScreen\" thumbColor= \"#321e4f\" trackColor= \"rgb(211, 211, 211)\" verticalbarWidth='8px'>\n                <div className=\"greeting-text\">\n                    Welcome {name}!\n                </div>\n                <div className=\"page-contents\">\n                    <PluginSection userInfo={userInfo}/>\n                    <div className='min_gap'>\n                    <div className=\"section-divider\" />\n                    </div>\n                    <TaskSection userInfo={userInfo} userRole={userRole} dispatch={dispatch}/>\n                </div>\n                </ScrollBar>\n            </div>\n            <FooterOne/>\n        </div>\n    );\n}\n\nexport default PluginHome;","import React, { useEffect } from 'react';\nimport PluginHome from './containers/PluginHome';\nimport { useDispatch } from 'react-redux';\nimport {useHistory} from 'react-router-dom';\nimport * as actions from './state/action';\nimport { SetProgressBar, RedirectPage } from '../global';\n\nconst Plugin = () => {\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    \n    useEffect(()=>{\n        if(window.localStorage['navigateScreen'] !== \"plugin\"){\n            RedirectPage(history);\n        }\n        dispatch({type: actions.SET_CT, payload: {}});\n        SetProgressBar(\"stop\", dispatch);\n        //eslint-disable-next-line\n    }, []);\n\n    \n\n    return (\n        <>  \n            \n            <PluginHome />\n        </>\n    );\n}\n\nexport default Plugin;","import React from 'react';\nimport \"../styles/ThumbnailSchedule.scss\";\n\nconst ThumbnailSchedule = (props) => {\n\n    return (\n        <div className=\"sch__thumbnail\" onClick={()=>{props.UpdateBrowserTypeExe(props.id)}}>\n            <img className={\"sch__thumbnail__img \" + (props.svg ? \"svg_ic\" : \"\" ) + (props.browserTypeExe!==undefined && props.browserTypeExe.includes(props.id) ? \" sch__selectedBrowser\" : \"\" )} src={props.img || props.svg} alt={props.title}/>\n            <span className=\"sch__thumbnail__title\">{props.title}</span>\n        </div>\n    );\n}\n\nexport default ThumbnailSchedule;","import React, { Fragment, useState } from 'react';\nimport ThumbnailSchedule from './ThumbnailSchedule';\nimport {PopupMsg, ModalContainer} from '../../global';\nimport \"../styles/ActionBarItems.scss\"\n\n// todo: after pull add bottomcontent two icons smart scheduling \n\nconst UpperContent = ({appType, isMac, UpdateBrowserTypeExe, browserTypeExe}) => {\n    let renderComp = [ <div key={1} className='s__debugOn'>Schedule On</div> ];\n\n    if (appType === \"Web\") {renderComp.splice(1, 0, <Fragment key={2}>\n                                {WebList.map((icon, i) => <ThumbnailSchedule key={i} title={icon.title} img={icon.img} svg={icon.svg} id={icon.id} UpdateBrowserTypeExe={UpdateBrowserTypeExe} browserTypeExe={browserTypeExe} />)}\n                                { isMac && <ThumbnailSchedule title=\"Safari\" img=\"static/imgs/ic-safari.png\" id=\"6\" UpdateBrowserTypeExe={UpdateBrowserTypeExe} browserTypeExe={browserTypeExe} />}</Fragment>)}\n    else if (appType === \"OEBS\") renderComp.splice(1, 0, <Fragment key={2}>{oebsList.map((icon, i) => <ThumbnailSchedule key={i} title={icon.title} img={icon.img} id={icon.id} UpdateBrowserTypeExe={UpdateBrowserTypeExe} browserTypeExe={browserTypeExe} />)}</Fragment>)\n    else if (appType === \"Desktop\") renderComp.splice(1, 0, <Fragment key={2}>{desktopList.map((icon, i) => <ThumbnailSchedule key={i} title={icon.title} img={icon.img} id={icon.id} UpdateBrowserTypeExe={UpdateBrowserTypeExe} browserTypeExe={browserTypeExe} />)}</Fragment>)\n    else if (appType === \"System\") renderComp.splice(1, 0, <Fragment key={2}>{systemList.map((icon, i) => <ThumbnailSchedule key={i} title={icon.title} img={icon.img} id={icon.id} UpdateBrowserTypeExe={UpdateBrowserTypeExe} browserTypeExe={browserTypeExe}/>)}</Fragment>)\n    else if (appType === \"SAP\") renderComp.splice(1, 0, <Fragment key={2}>{sapList.map((icon, i) => <ThumbnailSchedule key={i} title={icon.title} img={icon.img} id={icon.id} UpdateBrowserTypeExe={UpdateBrowserTypeExe} browserTypeExe={browserTypeExe}/>)}</Fragment>)\n    else if (appType === \"Webservice\") renderComp.splice(1, 0, <Fragment key={2}>{webserviceList.map((icon, i) => <ThumbnailSchedule key={i} title={icon.title} img={icon.img} id={icon.id} UpdateBrowserTypeExe={UpdateBrowserTypeExe} browserTypeExe={browserTypeExe}/>)}</Fragment>)\n    else if (appType === \"MobileApp\") renderComp.splice(1, 0, <Fragment key={2}>{mobileAppList.map((icon, i) => <ThumbnailSchedule key={i} title={icon.title} img={icon.img} id={icon.id}  UpdateBrowserTypeExe={UpdateBrowserTypeExe} browserTypeExe={browserTypeExe}/>)}</Fragment>)\n    else if (appType === \"MobileWeb\") renderComp.splice(1, 0, <Fragment key={2}>{mobileWebList.map((icon, i) => <ThumbnailSchedule key={i} title={icon.title} img={icon.img} id={icon.id}  UpdateBrowserTypeExe={UpdateBrowserTypeExe} browserTypeExe={browserTypeExe}/>)}</Fragment>)\n    else if (appType === \"Mainframe\") renderComp.splice(1, 0, <Fragment key={2}>{mainframeList.map((icon, i) => <ThumbnailSchedule key={i} title={icon.title} img={icon.img} id={icon.id}  UpdateBrowserTypeExe={UpdateBrowserTypeExe} browserTypeExe={browserTypeExe}/>)}</Fragment>)\n    \n    return renderComp;\n};\n\nconst BottomContent = ({appType, updateExecAction, execAction, updateExecEnv, execEnv,smartMode,setSmartMode}) => {\n  \n    const [popupState,setPopupState] = useState({show:false,title:\"\",content:\"\"});\n    const [smartScenario,setSmartScenario] = useState(false);\n\n    const updateSmartMode = (mode) => {\n        if(mode===\"smartModule\"){\n            if(smartMode===\"smartModule\") setSmartMode(\"normal\");\n            else {\n                setPopupState({\n                    title:'Smart SchedulingR',\n                    content:\"All the modules will be executed as batch.\\nAll available ICE should be in similar configurations for optimal results.\",\n                    show:true\n                })\n            }\n        } else if(mode===\"smartScenario\"){\n            if(smartMode===\"smartScenario\") setSmartMode(\"normal\");\n            else {\n                setSmartMode(\"normal\");\n                setSmartScenario(true);\n            }\n        }\n    }\n    \n    return (\n        <>\n            {popupState.show?\n                <PopupMsg \n                    content={popupState.content} \n                    title={popupState.title} \n                    submit={()=>{setPopupState({show:false}); setSmartMode(\"smartModule\");}} \n                    close={()=>setPopupState({show:false})} \n                    submitText={\"Ok\"} \n                />\n            :null}\n            {smartScenario?\n                <div className=\"smartScenario-popup\" >\n                    <ModalContainer\n                        title=\"Smart Scheduling\"\n                        content={\"Smart scheduling requires independent scenarios. Are you sure you want to enable smart scheduling the task ?\\n All available ICE should be in similar configurations for optimal results.\"}\n                        close={()=>setSmartScenario(false)}\n                        footer={\n                            <>\n                                <button onClick={()=>{setSmartScenario(false); setSmartMode(\"smartScenario\");}}>Yes</button>\n                                <button onClick={()=>{setSmartScenario(false);}}>No</button>\n                            </>\n                        }\n                    />\n                </div>\n            :null}\n            {appType === \"Web\"?\n                <>\n                    <div className=\"s__parallel_icon\" onClick={()=>{updateExecAction()}}>\n                        <img className={\"s__parallel_icon__img\"+ (execAction===\"parallel\" ? \" s__selectedBrowser\" : \"\" )}   src='static/imgs/ic-parallel.png' alt=\"Parallel Execution\"/>\n                        <span className=\"s__thumbnail__title\">Parallel Execution</span>\n                    </div>\n                    <div className=\"s__parallel_icon\" onClick={()=>{updateExecEnv()}}>\n                        <img className={\"s__parallel_icon__img\"+ (execEnv!==\"default\" ? \" s__selectedBrowser\" : \"\" )}   src='static/imgs/saucelabs.png' alt=\"SauceLabs Execution\"/>\n                        <span className=\"s__thumbnail__title\">SauceLabs Execution</span>\n                    </div>\n                    <div className=\"s__parallel_icon\" onClick={()=>{updateSmartMode(\"smartModule\")}}>\n                        <img className={\"s__parallel_icon__img\"+ (smartMode===\"smartModule\" ? \" s__selectedBrowser\" : \"\" )}   src='static/imgs/ic-module-smart.png' alt=\"Module Smart Scheduling\"/>\n                        <span className=\"s__thumbnail__title\">Module Smart Scheduling</span>\n                    </div>\n                    <div className=\"s__parallel_icon\" onClick={()=>{updateSmartMode(\"smartScenario\")}}>\n                        <img className={\"s__parallel_icon__img\"+ (smartMode===\"smartScenario\" ? \" s__selectedBrowser\" : \"\" )}   src='static/imgs/ic-scenario-smart.png' alt=\"Scenario Smart Scheduling\"/>\n                        <span className=\"s__thumbnail__title\">Scenario Smart Scheduling</span>\n                    </div>\n                </>\n            :null}\n        </>\n    );\n};\n\nconst WebList = [\n    {'title': \"Internet Explorer\", 'img': \"static/imgs/ic-ie.png\",'id':\"3\"}, \n    {'title': \"Google Chrome\", 'img': \"static/imgs/ic-chrome.png\",'id':\"1\"},\n    {'title': \"Mozilla Firefox\", 'img': \"static/imgs/ic-mozilla.png\",'id':\"2\"},\n    {'title': \"Microsoft Edge\", 'svg': \"static/imgs/ic-edge.svg\",'id':\"7\"},\n    {'title': \"Edge Chromium\", 'svg': \"static/imgs/ic-edge-chromium.svg\",'id':\"8\"}\n    ]\n\nconst oebsList = [{'title': \"OEBS Apps\" , 'img': 'static/imgs/ic-desktop.png','id':\"1\"}]\n\nconst desktopList = [{'title': \"Desktop Apps\" , 'img': 'static/imgs/ic-desktop.png','id':\"1\"}]\n\nconst systemList = [{'title': \"System Apps\" , 'img': 'static/imgs/ic-desktop.png','id':\"1\"}]\n\nconst sapList = [{'title': \"SAP Apps\" , 'img': 'static/imgs/ic-desktop.png','id':\"1\"}]\n\nconst webserviceList = [{'title': \"Web Services\" , 'img': 'static/imgs/ic-webservice.png','id':\"1\"}]\n\nconst mobileAppList = [{'title': \"Mobile Apps\" , 'img': 'static/imgs/ic-mobility.png','id':\"1\"},\n                        {'title': \"\" , 'img': 'static/imgs/aws.png','id':\"2\"}]\n\nconst mobileWebList = [{'title': \"Mobile Web\" , 'img': 'static/imgs/ic-mobility.png','id':\"1\"}]\n\nconst mainframeList = [{'title': \"Mainframe\", 'img': \"static/imgs/ic-mainframe-o.png\",'id':\"1\"}]\n\n\nexport { UpperContent, BottomContent };","import axios from 'axios';\nimport {RedirectPage} from '../global'\nimport {history} from './index'\nimport {url} from '../../App';\n\n/*Component  \n  api returns \n*/\n\nexport const readTestSuite_ICE = async(readTestSuite) => { \n    try{\n        const res = await axios(url+'/readTestSuite_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {param : 'getScheduledDetails_ICE',\n            readTestSuite : readTestSuite,\n            fromFlag: \"scheduling\"},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to fetch Testsuite.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to fetch Testsuite.\"}\n    }\n}\n\n/*Component  \n  api returns \n*/\n\nexport const getScheduledDetails_ICE = async() => { \n    try{\n        const res = await axios(url+'/getScheduledDetails_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {param : 'getScheduledDetails_ICE'},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to fetch schedule Testsuite.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to fetch  schedule Testsuite.\"}\n    }\n}\n\n/*Component  \n  api returns \n*/\n\nexport const testSuitesScheduler_ICE = async(executionData) => { \n    try{\n        const res = await axios(url+'/testSuitesScheduler_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {param : 'testSuitesScheduler_ICE',\n            executionData: executionData},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to schedule Testsuite.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to schedule Testsuite.\"}\n    }\n}\n\n\n/*Component  \n  api returns \n*/\n\nexport const cancelScheduledJob_ICE = async(schDetails, host, schedUserid) => { \n    try{\n        const res = await axios(url+'/cancelScheduledJob_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {param: 'cancelScheduledJob_ICE',\n            schDetails: schDetails,\n            host: host,\n            schedUserid: schedUserid},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to cancel scheduled job.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to cancel scheduled job.\"}\n    }\n}","import React, { useEffect, useState } from 'react';\nimport { ScrollBar, CalendarComp, TimeComp} from '../../global'\nimport {readTestSuite_ICE} from '../api';\nimport \"../styles/ScheduleSuitesTopSection.scss\";\n\nconst ScheduleSuitesTopSection = ({setModuleScheduledate, moduleScheduledate, current_task, displayError, setLoading, scheduleTableData, setScheduleTableData}) => {\n\n    const [closeCal, setCloseCal] = useState(false);\n    \n    useEffect(()=>{\n        if (Object.keys(current_task).length!==0){\n        let readTestSuite = current_task.testSuiteDetails;\n            if(typeof readTestSuite === \"string\") readTestSuite = JSON.parse(current_task.testSuiteDetails);\n            for (var rti = 0; rti < readTestSuite.length; rti++) {\n                readTestSuite[rti].versionnumber = parseFloat(current_task.versionnumber);\n            }\n            readTestSuiteFunct(readTestSuite);\n        }\n        // eslint-disable-next-line\n    }, [current_task]);\n\n    const readTestSuiteFunct = async (readTestSuite) => {\n        setLoading(\"Loading in Progress. Please Wait\");\n        const result = await readTestSuite_ICE(readTestSuite, \"schedule\")\n        if(result.error){displayError(result.error);return;}\n        else if (result.testSuiteDetails) {\n            var data = result.testSuiteDetails;\n            var keys = Object.keys(data);\n            var tableData = [];\n            keys.map(itm => tableData.push({...data[itm]}));\n\n            //setting module date and time props\n            let moduleScheduledateTime = {};\n            // eslint-disable-next-line\n            tableData.map((rowData)=>{\n                if(moduleScheduledateTime[rowData.testsuiteid] === undefined) {\n                    moduleScheduledateTime[rowData.testsuiteid] = {\n                        date:\"\",time:\"\",\n                        inputPropstime: {readOnly:\"readonly\" ,\n                            disabled : true,\n                            className:\"fc-timePicker\",\n                            placeholder: \"Select Time\"\n                        },\n                        inputPropsdate : {\n                            placeholder: \"Select Date\",\n                            readOnly:\"readonly\" ,\n                            className:\"fc-datePicker\"\n                        }\n                    };\n                }\n            })\n\n            //CR 2287 - If a scenario is opened and then navigated to it's scheduling then by default that particular scenario must be selected and rest of the scenarios from the module must be unselected.\n            if (current_task.scenarioFlag === 'True') {\n                for (var m = 0; m < keys.length; m++) {\n                    for (var k = 0; k < tableData[m].scenarioids.length; k++) {\n                        if (tableData[m].scenarioids[k] === current_task.assignedTestScenarioIds || tableData[m].scenarioids[k] === current_task.assignedTestScenarioIds[0]) {\n                            tableData[m].executestatus[k] = 1;\n                        } else tableData[m].executestatus[k] = 0;\n                    }\n                }\n            }\n            setModuleScheduledate(moduleScheduledateTime);\n            setScheduleTableData(tableData);\n            updateScenarioStatus(tableData);\n        }\n        setLoading(false);\n    }\n    \n    const changeSelectALL = (m,id) => {\n        let data = [...scheduleTableData];\n        var checkBox = document.getElementById(id);\n        let temp = 1; if(checkBox.checked!==true) temp = 0;\n        let newExecutestatus = [];\n        for(var i =0;i<data[m].scenarioids.length;i++) newExecutestatus.push(temp);\n        data[m].executestatus=newExecutestatus;\n        setScheduleTableData(data);\n        document.getElementById(id).indeterminate = false;\n    }\n    \n    const updateScenarioStatus = (eachData1) => {\n        // eslint-disable-next-line\n        eachData1.map((rowData,m)=>{\n            // eslint-disable-next-line\n            rowData.scenarioids.map((sid,count)=>{\n                changeExecutestatusInitial(eachData1,m);\n            })\n        })\n    }\n\n    const changeExecutestatusInitial = (eachData1,m) => {\n        let zeroExist = eachData1[m].executestatus.includes(0);\n        let oneExist = eachData1[m].executestatus.includes(1);\n        if(!document.getElementById('selectScheduleSuite_' + m)) return;\n        if(zeroExist ===true && oneExist === true) document.getElementById('selectScheduleSuite_' + m).indeterminate = true;\n        else if (zeroExist ===false && oneExist === true) {\n            document.getElementById('selectScheduleSuite_' + m).indeterminate = false;\n            document.getElementById('selectScheduleSuite_' + m).checked = true;\n        }\n        else if (zeroExist ===true && oneExist === false) {\n            document.getElementById('selectScheduleSuite_' + m).indeterminate = false;\n            document.getElementById('selectScheduleSuite_' + m).checked = false;\n        }\n    }\n\n    const changeExecutestatus = (m,count) => {\n        let data = [...scheduleTableData];\n        var temp = 0;\n        if(scheduleTableData[m].executestatus[count] === 0) temp = 1;\n        data[m].executestatus[count]=temp;\n\n        let zeroExist = data[m].executestatus.includes(0);\n        let oneExist = data[m].executestatus.includes(1);\n\n        if(zeroExist ===true && oneExist === true) document.getElementById('selectScheduleSuite_' + m).indeterminate = true;\n        else if (zeroExist ===false && oneExist === true) {\n            document.getElementById('selectScheduleSuite_' + m).indeterminate = false;\n            document.getElementById('selectScheduleSuite_' + m).checked = true;\n        }\n        else if (zeroExist ===true && oneExist === false) {\n            document.getElementById('selectScheduleSuite_' + m).indeterminate = false;\n            document.getElementById('selectScheduleSuite_' + m).checked = false;\n        }\n        setScheduleTableData(data);\n    }\n\n    const updateDateTime = (date_time, value , testsuiteid) => {\n        let moduleScheduledateTime = {...moduleScheduledate}\n        if(moduleScheduledateTime[testsuiteid] === undefined) {\n            moduleScheduledateTime[testsuiteid] = {date:\"\",time:\"\"};\n        }\n        if(date_time===\"date\"){\n            moduleScheduledateTime[testsuiteid][\"date\"] = value;\n            if(moduleScheduledateTime[testsuiteid][\"time\"] === \"\") {\n                var hr = new Date().getHours();\n                var min = parseInt(new Date().getMinutes());\n                if(new Date().getHours().toString().length === 1) hr = \"0\"+hr;\n                if(parseInt(new Date().getMinutes()).toString().length === 1) min = \"0\"+min;\n                moduleScheduledateTime[testsuiteid][\"time\"] = hr  + ':' + min;\n            }\n            moduleScheduledateTime[testsuiteid][\"inputPropstime\"][\"disabled\"]=false;\n        }\n        else if(date_time===\"time\"){\n            moduleScheduledateTime[testsuiteid][\"time\"] = value;\n        }\n        setModuleScheduledate(moduleScheduledateTime);\n    }\n\n    return (\n        <>\n        <div className=\"scheduleSuiteTable\">\n            <div className=\"s__ab\">\n                <div className=\"s__min\">\n                    <div className=\"s__con\" id=\"schSuiteTable\">\n                        <ScrollBar scrollId=\"schSuiteTable\" thumbColor=\"#321e4f\" trackColor=\"rgb(211, 211, 211)\" onScrollY={()=>setCloseCal(true)}>\n                        {scheduleTableData.map((rowData,i)=>(\n                            <div key={i} className=\"batchSuite\">\n                                <div className=\"scheduleSuite\" id={`ss-id${i}`} >\n                                    <input type=\"checkbox\" onChange={(event)=>{changeSelectALL(i,\"selectScheduleSuite_\"+i)}} id={\"selectScheduleSuite_\"+i} className=\"selectScheduleSuite\" />\n                                    <span className=\"scheduleSuiteName\" data-testsuiteid= {rowData.testsuiteid}>{rowData.testsuitename}</span>\n                                    <TimeComp idx={i} closeCal={closeCal} setCloseCal={setCloseCal} screen=\"scheduleSuiteTop\" time={moduleScheduledate[rowData.testsuiteid][\"time\"]} setTime={(val)=>{updateDateTime(\"time\",val,rowData.testsuiteid)}} inputProps={moduleScheduledate[rowData.testsuiteid][\"inputPropstime\"]} classTimer=\"schedule_timer\"/>\n                                    <CalendarComp idx={i} closeCal={closeCal} setCloseCal={setCloseCal} screen=\"scheduleSuiteTop\" inputProps={moduleScheduledate[rowData.testsuiteid][\"inputPropsdate\"]}  date={moduleScheduledate[rowData.testsuiteid][\"date\"]} setDate={(val)=>{updateDateTime(\"date\",val,rowData.testsuiteid)}} classCalender=\"schedule_calender\"/>\n                                </div>\n                                <table className=\"scenarioSchdCon scenarioSch_' + i + '\">\n                                    <thead className=\"scenarioHeaders\">\n                                        <tr><td>Sl No.</td><td>Scenario Name</td><td>Data Parameterization</td><td>Condition Check</td><td>Project Name</td><td>App type</td></tr>\n                                    </thead>\n                                    <tbody className=\"scenarioBody scenarioTbCon_' + i + '\">\n                                    {rowData.scenarioids.map((sid,j)=>(\n                                        <tr key={j}>\n                                            <td><span>{j+1}</span><input type=\"checkbox\" checked={rowData.executestatus[j]?true:false}  onChange={()=>{changeExecutestatus(i,j)}} id={\"executestatus_\"+i+\"_\"+j} className=\"selectToSched\"/></td>\n                                            <td data-scenarioid={sid}>{rowData.scenarionames[j]}</td>\n                                            <td style={{padding: \"2px 0 2px 0\"}}><input type=\"text\" value={(rowData.dataparam[j]).trim()} disabled/></td>\n                                            <td><select disabled defaultValue={(rowData.condition[j] === 0) ? \"0\" : \"1\"} ><option value=\"1\" >True</option><option value=\"0\" >False</option></select></td>\n                                            <td>{rowData.projectnames[j]}</td> \n                                            <td title={details[rowData.apptypes[j].toLowerCase()]['data']}>\n                                                <img src={\"static/imgs/\"+details[rowData.apptypes[j].toLowerCase()]['img']+\".png\"} alt=\"apptype\"/>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                    </tbody>\n                                </table>\n                            </div>\n                        ))}\n                        </ScrollBar>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </>\n    );\n}\n\nvar details = {\n    web:{\"data\":\"Web\",\"title\":\"Web\",\"img\":\"web\"},\n    \"webservice\":{\"data\":\"Webservice\",\"title\":\"Web Service\",\"img\":\"webservice\"},\n    \"desktop\":{\"data\":\"Desktop\",\"title\":\"Desktop Apps\",\"img\":\"desktop\"},\n    \"oebs\":{\"data\":\"OEBS\",\"title\":\"Oracle Apps\",\"img\":\"oracleApps\"},\n    \"mobileapp\":{\"data\":\"MobileApp\",\"title\":\"Mobile Apps\",\"img\":\"mobileApps\"},\n    \"mobileweb\":{\"data\":\"MobileWeb\",\"title\":\"Mobile Web\",\"img\":\"mobileWeb\"},\n    \"sap\":{\"data\":\"SAP\",\"title\":\"SAP Apps\",\"img\":\"sapApps\"},\n    \"system\":{\"data\":\"System\",\"title\":\"System Apps\",\"img\":\"desktop\"},\n    \"mainframe\":{\"data\":\"Mainframe\",\"title\":\"Mainframe\",\"img\":\"mainframe\"}\n};\n\nexport default ScheduleSuitesTopSection;","/* Pagination Component \n-------------------------------------------------*/\nimport React  from 'react';\nimport \"../styles/Pagination.scss\";\n\n// const propTypes = {\n//     items: React.PropTypes.array.isRequired,\n//     onChangePage: React.PropTypes.func.isRequired,\n//     initialPage: React.PropTypes.number    \n// }\n\n// const defaultProps = {\n//     initialPage: 1\n// }\n\nclass Pagination extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { pager: {}, initialPage: 1 };\n    }\n\n    componentWillMount() {\n        // set page if items array isn't empty\n        if (JSON.stringify(this.props.items) && JSON.stringify(this.props.items.length)) {\n            this.setPage(this.state.initialPage);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // reset page if items array has changed\n        if (JSON.stringify(this.props.items) !== JSON.stringify(prevProps.items)) {\n            this.setPage(this.state.initialPage);\n        }\n    }\n\n    setPage(page) {\n        var items = this.props.items;\n        var pager = this.state.pager;\n\n        if ((page < 1 || page > pager.totalPages)&& this.props.items.length === 0) {\n            return;\n        }\n\n        // get new pager object for specified page\n        pager = this.getPager(items.length, page);\n\n        // get new page of items from items array\n        var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n\n        // update state\n        this.setState({ pager: pager });\n\n        // call change page function in parent component\n        this.props.onChangePage(pageOfItems);\n    }\n\n    getPager(totalItems, currentPage, pageSize) {\n        // default to first page\n        currentPage = currentPage || 1;\n\n        // default page size is 20\n        pageSize = pageSize || 20;\n\n        // calculate total pages\n        var totalPages = Math.ceil(totalItems / pageSize);\n\n        var startPage, endPage;\n        if (totalPages <= 5) {\n            // less than 10 total pages so show all\n            startPage = 1;\n            endPage = totalPages;\n        } else {\n            // more than 10 total pages so calculate start and end pages\n            if (currentPage <= 6) {\n                startPage = 1;\n                endPage = 10;\n            } else if (currentPage + 4 >= totalPages) {\n                startPage = totalPages - 9;\n                endPage = totalPages;\n            } else {\n                startPage = currentPage - 5;\n                endPage = currentPage + 4;\n            }\n        }\n\n        // calculate start and end item indexes\n        var startIndex = (currentPage - 1) * pageSize;\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n        // create an array of pages to repeat in the pager control\n        var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\n\n        // return object with all pager properties required by the view\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n    }\n\n    render() {\n        var pager = this.state.pager;\n\n        if (!pager.pages || pager.pages.length <= 1) {\n            // don't display pager if there is only 1 page\n            return null;\n        }\n\n        return (\n            <ul className=\"pagination\">\n                <li className={pager.currentPage === 1 ? 'disabled pagination-disabled' : ''}>\n                    <p onClick={() => this.setPage(1)}>First</p>\n                </li>\n                <li className={pager.currentPage === 1 ? 'disabled pagination-disabled' : ''}>\n                    <p onClick={() => this.setPage(pager.currentPage - 1)}>Previous</p>\n                </li>\n                {pager.pages.map((page, index) =>\n                    <li key={index} className={pager.currentPage === page ? 'active' : ''}>\n                        <p onClick={() => this.setPage(page)}>{page}</p>\n                    </li>\n                )}\n                <li className={pager.currentPage === pager.totalPages ? 'disabled pagination-disabled' : ''}>\n                    <p onClick={() => this.setPage(pager.currentPage + 1)}>Next</p>\n                </li>\n                <li className={pager.currentPage === pager.totalPages ? 'disabled pagination-disabled' : ''}>\n                    <p onClick={() => this.setPage(pager.totalPages)}>Last</p>\n                </li>\n            </ul>\n        );\n    }\n}\n\n// Pagination.propTypes = propTypes;\n// Pagination.defaultProps = defaultProps;\n\n\nexport default Pagination;","import React, {useState, useEffect } from 'react';\nimport {ScreenOverlay, PopupMsg, ScrollBar, IntegrationDropDown} from '../../global' \nimport { useSelector } from 'react-redux';\nimport {getScheduledDetails_ICE, testSuitesScheduler_ICE, cancelScheduledJob_ICE} from '../api';\nimport \"../styles/ScheduleContent.scss\";\nimport ScheduleSuitesTopSection from '../components/ScheduleSuitesTopSection';\nimport AllocateICEPopup from '../../global/components/AllocateICEPopup'\nimport Pagination from '../components/Pagination';\n\nconst ScheduleContent = ({smartMode, execEnv, syncScenario, setBrowserTypeExe,setExecAction,appType,browserTypeExe,execAction}) => {\n\n    const nulluser = \"5fc137cc72142998e29b5e63\";\n    const filter_data = useSelector(state=>state.plugin.FD)\n    const dateFormat = useSelector(state=>state.login.dateformat);\n    const [loading,setLoading] = useState(false)\n    const [pageOfItems,setPageOfItems] = useState([])\n    const [scheduledData,setScheduledData] = useState([])\n    const [scheduledDataOriginal,setScheduledDataOriginal] = useState([])\n    const [allocateICE,setAllocateICE] = useState(false)\n    const [popupState,setPopupState] = useState({show:false,title:\"\",content:\"\"})\n    const current_task = useSelector(state=>state.plugin.CT)\n    const [scheduleTableData,setScheduleTableData] = useState([])\n    const [integration,setIntegration] = useState({alm: {url:\"\",username:\"\",password:\"\"}, \n                                                    qtest: {url:\"\",username:\"\",password:\"\",qteststeps:\"\"}, \n                                                    zephyr: {url:\"\",username:\"\",password:\"\"}});\n    const [showIntegrationModal,setShowIntegrationModal] = useState(false)\n    const [moduleScheduledate,setModuleScheduledate] = useState({})\n    const [sort,setSort] = useState(true)\n    const [scheDetails,setScheDetails] = useState(true)\n\n    useEffect(()=>{\n        getScheduledDetails()\n    }, []);\n\n    useEffect(()=>{\n        setTimeout(() => {\n            getScheduledDetails();\n            setScheDetails(!scheDetails)\n            var schFilterData = document.getElementById(\"scheduledSuitesFilterData\");\n            if(schFilterData !== null && schFilterData!==undefined)\n                schFilterData.selectedIndex = \"0\"; \n        }, 60000);\n    }, [scheDetails]);\n\n    const getScheduledDetails = async () => {\n        try{\n            const result = await getScheduledDetails_ICE();\n            if (result && result.length > 0 && result !== \"fail\") {\n                for (var k = 0; k < result.length; k++) {\n                    if (result[k].scenariodetails[0].scenarioids !== undefined) result[k].scenariodetails = [result[k].scenariodetails];\n                    result[k].browserlist = result[k].executeon;\n                    const dt = new Date(result[k].scheduledon);\n                    result[k].scheduledatetime = dt.getFullYear() + \"-\" + (\"0\" + (dt.getMonth() + 1)).slice(-2) + \"-\"\n                        + (\"0\" + dt.getDate()).slice(-2) + \" \" + (\"0\" + dt.getHours()).slice(-2) + \":\" + (\"0\" + dt.getMinutes()).slice(-2);\n                }\n                var scheduledDataParsed = [];\n                for(var i =result.length-1 ; i>=0  ; i-- ) {\n                    const eachScenarioDetails = result[i].scenariodetails[0];\n                    for(var j =eachScenarioDetails.length-1 ; j>=0  ; j-- ) {\n                        let newScheduledScenario = {};\n                        newScheduledScenario[\"target\"] = result[i].target;\n                        newScheduledScenario[\"cycleid\"] = eachScenarioDetails[j].cycleid;\n                        newScheduledScenario[\"scheduledby\"] = result[i].scheduledby;\n                        newScheduledScenario[\"scheduledatetime\"] = result[i].scheduledatetime;\n                        newScheduledScenario[\"testsuitenames\"] = result[i].testsuitenames;\n                        newScheduledScenario[\"browserlist\"] = result[i].browserlist;\n                        newScheduledScenario[\"_id\"] = result[i]._id;\n                        newScheduledScenario[\"status\"] = result[i].status;\n                        newScheduledScenario[\"scenarioname\"] = eachScenarioDetails[j][\"scenarioname\"];\n                        newScheduledScenario[\"appType\"] = eachScenarioDetails[j][\"appType\"];\n                        newScheduledScenario[\"poolname\"] =  eachScenarioDetails[j][\"poolname\"];\n                        scheduledDataParsed.push(newScheduledScenario);\n                    }\n                } \n                setScheduledData(scheduledDataParsed);\n                setScheduledDataOriginal(scheduledDataParsed);\n            }\n            document.getElementById(\"scheduledSuitesFilterData\").selectedIndex = \"0\"; \n        }catch (error) {\n            setPopupState({show:true,title:\"Error\",content:\"Failed to fetch Scheduled Data.\"});\n            console.log(error)\n        }\n    }\n\n    \n    const displayError = (error) =>{\n        setLoading(false)\n        setPopupState({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n\n    const closePopup = () => {\n        setPopupState({show:false,title:\"\",content:\"\"});\n    }\n\n    const onChangePage = (newPageOfItems) => {\n        // update state with new page of items\n        if(JSON.stringify(pageOfItems) !== JSON.stringify(newPageOfItems))\n            setPageOfItems(newPageOfItems);\n    }\n    \n    const selectStatus = (value) => {\n        if( value === \"Show All\") {\n            setScheduledData(scheduledDataOriginal);\n            return\n        }\n        var scheduledDataParsed = [];\n        for(var j =0 ; j < scheduledDataOriginal.length ; j++ ) {\n            if((scheduledDataOriginal[j][\"status\"]).toLowerCase() === (value).toLowerCase()) {\n                scheduledDataParsed.push(scheduledDataOriginal[j]);\n            }\n        }\n        setScheduledData(scheduledDataParsed);\n    }\n\n    const ScheduleTestSuitePopup = () => {\n        if(document.getElementsByClassName('rdtOpen').length>0)return;\n        const check = SelectBrowserCheck(appType,browserTypeExe,setPopupState,execAction);\n        const valid = checkSelectedModules(scheduleTableData, setPopupState);\n        const checkDateTime = checkDateTimeValues(scheduleTableData, moduleScheduledate, setModuleScheduledate, setPopupState);\n        if(check && valid && checkDateTime) setAllocateICE(true);\n    } \n\n    const ScheduleTestSuite = async (schedulePoolDetails) => {\n        setAllocateICE(false);\n        const modul_Info = parseLogicExecute(schedulePoolDetails, moduleScheduledate, scheduleTableData, current_task, appType, filter_data);\n        if(!modul_Info){\n            return\n        }\n        var executionData = {}\n        executionData[\"source\"]=\"schedule\";\n        executionData[\"exectionMode\"]=execAction;\n        executionData[\"executionEnv\"]=execEnv;\n        executionData[\"browserType\"]=browserTypeExe;\n        executionData[\"integration\"]=integration;\n        executionData[\"batchInfo\"]=modul_Info;\n        \n        setLoading(\"Scheduling...\");\n        const data = await testSuitesScheduler_ICE(executionData);\n        if(data.error){displayError(data.error);return;}\n        setLoading(false);\n        if (data === \"NotApproved\") setPopupState({show:true,title:\"Schedule Test Suite\",content: \"All the dependent tasks (design, scrape) needs to be approved before execution\"});\n        else if (data === \"NoTask\") setPopupState({show:true,title:\"Schedule Test Suite\",content: \"Task does not exist for child node\"});\n        else if (data === \"Modified\") setPopupState({show:true,title:\"Schedule Test Suite\",content: \"Task has been modified, Please approve the task\"});\n        else if (data.status === \"booked\") setPopupState({show:true,title:\"Schedule Test Suite\",content: \"Schedule time is matching for testsuites scheduled for \" + data.user});\n        else if (data === \"success\" || data.includes(\"success\")) {\n            if (data.includes(\"Set\"))  setPopupState({show:true,title:\"Schedule Test Suite\",content: data.replace('success', '')}); \n            else setPopupState({show:true,title:\"Schedule Test Suite\",content:\"Successfully scheduled.\"});\n            updateDateTimeValues(scheduleTableData, setModuleScheduledate);\n            getScheduledDetails();\n        } else if (data === \"few\") {\n            setPopupState({show:true,title:\"Schedule Test Suite\",content:\"Failed to schedule few testsuites\"});\n            updateDateTimeValues(scheduleTableData, setModuleScheduledate);\n        } else if (data === \"fail\") {\n            setPopupState({show:true,title:\"Schedule Test Suite\",content:\"Failed to schedule few testsuites\"});\n        } else {\n            setPopupState({show:true,title:\"Schedule Test Suite\",content:\"Error in scheduling Testsuite. Scheduling failed\"});\n        }\n        setExecAction(\"serial\");\n        setBrowserTypeExe([]);\n    }\n\n    const syncScenarioChange = (value) => {\n        setIntegration({alm: {url:\"\",username:\"\",password:\"\"}, \n        qtest: {url:\"\",username:\"\",password:\"\",qteststeps:\"\"}, \n        zephyr: {url:\"\",username:\"\",password:\"\"}})\n        if (value === \"1\") {\n            setShowIntegrationModal(\"ALM\")\n\t\t}\n\t\telse if (value === \"0\") {\n            setShowIntegrationModal(\"qTest\")\n\t\t}\n        else if (value === \"2\") {\n            setShowIntegrationModal(\"Zephyr\")\n\t\t}\n    }\n\n    const sortDateTime = () => {\n        function compareOpp( a, b ) {\n            if ( a.scheduledatetime < b.scheduledatetime ){\n              return -1;\n            }\n            if ( a.scheduledatetime > b.scheduledatetime ){\n              return 1;\n            }\n            return 0;\n        }\n        function compare( a, b ) {\n            if ( a.scheduledatetime > b.scheduledatetime ){\n              return -1;\n            }\n            if ( a.scheduledatetime < b.scheduledatetime ){\n              return 1;\n            }\n            return 0;\n        }\n        \n        var data = [...scheduledData];\n        if( sort === true) {data.sort( compare );setSort(false);}\n        else {data.sort( compareOpp );setSort(true);}\n        setScheduledData(data);\n    }\n\n    const formatDate = (date) => {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear(),\n            hour = '' + d.getHours(),\n            minute = '' + d.getMinutes();\n            \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n        if (hour.length < 2)\n            hour = '0' + hour\n        if (minute.length < 2)\n            minute = '0' + minute \n\n        let map = {\"MM\":month,\"YYYY\": year, \"DD\": day};\n        let def = [day,month,year];\n        let format = dateFormat.split(\"-\");\n        let arr = []\n        let used = {}\n        for (let index in format){\n            if (!(format[index] in map) || format[index] in used){\n                return def.join('-') + \" \" + [hour,minute].join(':');\n            }\n            arr.push(map[format[index]]) \n            used[format[index]] = 1\n        }\n\n        return arr.join('-') + \" \" + [hour,minute].join(':');\n    }\n\n    return (\n        <>\n            {loading?<ScreenOverlay content={loading}/>:null}\n            {allocateICE?\n                <AllocateICEPopup \n                    SubmitButton={ScheduleTestSuite} \n                    setAllocateICE={setAllocateICE} \n                    allocateICE={allocateICE} \n                    modalTitle={\"Allocate ICE to Schedule\"} \n                    modalButton={\"Schedule\"}\n                    icePlaceholder={'Search ICE to allocate'}\n                    exeTypeLabel={\"Select Schedule type\"}\n                    exeIceLabel={\"Allocate ICE\"}\n                    scheSmartMode={smartMode}\n                />\n            :null}\n            { showIntegrationModal ? \n                <IntegrationDropDown\n                    setshowModal={setShowIntegrationModal} \n                    type={showIntegrationModal} \n                    showIntegrationModal={showIntegrationModal} \n                    appType={appType} \n                    setPopupState={setPopupState} \n                    setCredentialsExecution={setIntegration}\n                    displayError={displayError}\n                    browserTypeExe={browserTypeExe}\n                />\n            :null} \n            {popupState.show?<PopupMsg content={popupState.content} title={popupState.title} submit={closePopup} close={closePopup} submitText={\"Ok\"} />:null}\n            \n            <div className=\"s__task_container\">\n                <div className=\"s__task_title\"> <div className=\"s__task_name\">Schedule</div></div>\n                    \n                </div>\n                <div id=\"pageContent\">\n                    <div id=\"scheduleSuitesTopSection\">\n                        <select defaultValue={\"\"} id='syncScenario-schedule' onChange={(event)=>{syncScenarioChange(event.target.value)}} disabled={!syncScenario?true:false} className=\" e__btn\">\n                            <option value=\"\" className=\"s__disableOption\" disabled>Select Integration</option>\n                            <option value=\"1\">ALM</option>\n                            <option value=\"0\">qTest</option>\n                            <option value=\"2\">Zephyr</option>\n                        </select>\n                        <div id=\"s__btns\">\n                            <button className=\"s__btn-md btnAddToSchedule\" onClick={()=>{ScheduleTestSuitePopup()}} title=\"Add\">Schedule</button>\n                        </div>\n                        <ScheduleSuitesTopSection setLoading={setLoading} displayError={displayError} moduleScheduledate={moduleScheduledate} setModuleScheduledate={setModuleScheduledate} current_task={current_task} filter_data={filter_data} scheduleTableData={scheduleTableData}  setScheduleTableData={setScheduleTableData} />\n                    </div>\n\n                {/* //lower scheduled table Section */}\n                <div id=\"scheduleSuitesBottomSection\">\n                    <div id=\"page-taskName\">\n\t\t\t\t\t\t<span>Scheduled</span>\n                        <select defaultValue={\"Select Status\"} onChange={(event)=>{selectStatus(event.target.value)}} id=\"scheduledSuitesFilterData\" className=\"form-control-schedule\">\n                            <option disabled={true}>Select Status</option>\n                            <option>Completed</option>\n                            <option>In Progress</option>\n                            <option>Scheduled</option>\n                            <option value={\"Terminate\"}>Terminated</option>\n                            <option>Cancelled</option>\n                            <option>Missed</option>\n                            <option>Failed</option>\n                            <option>Skipped</option>\n                            <option>Show All</option>\n                        </select>\n                    </div>\n\n                    <div className=\"scheduleDataTable\">\n\t\t\t\t\t\t<div className=\"scheduleDataHeader\">\n\t\t\t\t\t\t\t<span className=\"s__Table_date s__table_Textoverflow s__cursor s__Table_border\" onClick={()=>{sortDateTime()}} title=\"Click to sort\" ng-click=\"reverse=!reverse;predicate='scheduledatetime'\">Date & Time</span>\n\t\t\t\t\t\t\t<span className=\"s__Table_host s__table_Textoverflow s__Table_border\" >Host</span>\n\t\t\t\t\t\t\t<span className=\"s__Table_scenario s__table_Textoverflow s__Table_border\" >Scenario Name</span>\n\t\t\t\t\t\t\t<span className=\"s__Table_suite s__table_Textoverflow s__Table_border\" >Test Suite</span>\n\t\t\t\t\t\t\t<span className=\"s__Table_appType s__table_Textoverflow s__Table_border\" >App Type</span>\n\t\t\t\t\t\t\t<span className=\"s__Table_status s__table_Textoverflow s__Table_border\" >Status</span>\n\t\t\t\t\t\t</div>\n                        <div className=\"s__table_container\" >\n                            <div className=\"s__table_contents\" >\n                                <div className=\"s__ab\">\n                                    <div className=\"s__min\">\n                                        <div className=\"s__con\">\n                                            <div id=\"scheduledDataBody\" className=\"scheduledDataBody\">\n                                                <ScrollBar scrollId=\"scheduledDataBody\" thumbColor=\"#321e4f\" trackColor=\"rgb(211, 211, 211)\" >\n                                                    <div className='scheduleDataBodyRow'>\n                                                        {pageOfItems.map((data,index)=>(\n                                                            <div key={index} className=\"scheduleDataBodyRowChild\">\n                                                                <div data-test = \"schedule_data_date\" className=\"s__Table_date s__Table_date-time \">{formatDate(data.scheduledatetime)}</div>\n                                                                <div data-test = \"schedule_data_target_user\" className=\"s__Table_host\" >{data.target === nulluser?'Pool: '+ (data.poolname?data.poolname:'Unallocated ICE'):data.target}</div>\n                                                                <div data-test = \"schedule_data_scenario_name\" className=\"s__Table_scenario\" title={data.scenarioname}>{data.scenarioname}</div>\n                                                                <div data-test = \"schedule_data_date_suite_name\" className=\"s__Table_suite\" title={data.testsuitenames[0]} >{data.testsuitenames[0]}</div>\n                                                                <div data-test = \"schedule_data_browser_type\" className=\"s__Table_appType\">\n                                                                    {data.browserlist.map((brow,index)=>(\n                                                                        <img key={index} src={\"static/\"+browImg(brow,data.appType)} alt=\"apptype\" className=\"s__Table_apptypy_img \"/>\n                                                                    ))}\n                                                                </div>\n                                                                <div data-test = \"schedule_data_status\" className=\"s__Table_status\"  data-scheduledatetime={data.scheduledatetime.valueOf().toString()}>\n                                                                    {data.status}\n                                                                    {(data.status === 'scheduled')?\n                                                                        <span className=\"fa fa-close s__cancel\" onClick={()=>{cancelThisJob(data.cycleid,data.scheduledatetime,data._id,data.target,data.scheduledby,\"cancelled\",getScheduledDetails,setPopupState)}} ng-click='cancelThisJob($event,\"cancelled\")' title='Cancel Job'/>\n                                                                    :null}\n                                                                </div> \n                                                            </div>\n                                                        ))}\n                                                    </div>\n                                                </ScrollBar>\n                                            </div>\n                                        </div>\n                                        <Pagination items={scheduledData} onChangePage={onChangePage} />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\t\t\t\t\t</div>\n                </div>\n            </div>\n        </>\n    );\n}\nconst updateDateTimeValues = (scheduleTableData, setModuleScheduledate) => {\n    //setting module date and time props\n    let moduleScheduledateTime = {};\n    // eslint-disable-next-line\n    scheduleTableData.map((rowData)=>{\n        if(moduleScheduledateTime[rowData.testsuiteid] === undefined) {\n            moduleScheduledateTime[rowData.testsuiteid] = {\n                date:\"\",\n                time:\"\",\n                inputPropstime: {readOnly:\"readonly\" ,\n                    disabled : true,\n                    className:\"fc-timePicker\",\n                    placeholder: \"Select Time\"\n                },\n                inputPropsdate : {\n                    placeholder: \"Select Date\",\n                    readOnly:\"readonly\" ,\n                    className:\"fc-datePicker\"\n                }\n            };\n        }\n    })\n    setModuleScheduledate(moduleScheduledateTime);\n}\n\nconst cancelThisJob = async (cycleid,scheduledatetime,_id,target,scheduledby,status,getScheduledDetails,setPopupState) => {\n    if(cycleid===undefined) cycleid=\"\"\n    const schDetails = {\n        cycleid:cycleid,\n        scheduledatetime:scheduledatetime,\n        scheduleid:_id \n    };\n    const host = target;\n    const schedUserid = scheduledby;\n    const data = await cancelScheduledJob_ICE(schDetails, host, JSON.stringify(schedUserid));\n    if (data === \"success\") {\n        setPopupState({show:true,title:\"Scheduled Test Suite\",content:\"Job is \" + status + \".\"});\n        // target.innerText = status;\n        getScheduledDetails();\n    } else if (data === \"inprogress\") setPopupState({show:true,title:\"Scheduled Test Suite\",content:\"Job is in progress.. cannot be cancelled.\"});\n    else if (data === \"not authorised\") setPopupState({show:true,title:\"Scheduled Test Suite\",content:\"You are not authorized to cancel this job.\"});\n    else setPopupState({show:true,title:\"Scheduled Test Suite\",content:\"Failed to cancel Job\"});\n}\n\nconst SelectBrowserCheck = (appType,browserTypeExe,setPopupState,execAction)=>{\n    if ((appType === \"Web\") && browserTypeExe.length === 0) setPopupState({show:true,title:\"Schedule Test Suite\",content:\"Please select a browser\"});\n    else if (appType === \"Webservice\" && browserTypeExe.length === 0) setPopupState({show:true,title:\"Schedule Test Suite\",content:\"Please select Web Services option\"});\n    else if (appType === \"MobileApp\" && browserTypeExe.length === 0) setPopupState({show:true,title:\"Schedule Test Suite\",content:\"Please select Mobile Apps option\"});\n    else if (appType === \"Desktop\" && browserTypeExe.length === 0) setPopupState({show:true,title:\"Schedule Test Suite\",content:\"Please select Desktop Apps option\"});\n    else if (appType === \"Mainframe\" && browserTypeExe.length === 0) setPopupState({show:true,title:\"Schedule Test Suite\",content:\"Please select Mainframe option\"});\n    else if (appType === \"OEBS\" && browserTypeExe.length === 0) setPopupState({show:true,title:\"Schedule Test Suite\",content:\"Please select OEBS Apps option\"});\n    else if (appType === \"SAP\" && browserTypeExe.length === 0) setPopupState({show:true,title:\"Schedule Test Suite\",content:\"Please select SAP Apps option\"});\n    else if (appType === \"MobileWeb\" && browserTypeExe.length === 0) setPopupState({show:true,title:\"Schedule Test Suite\",content: \"Please select Mobile Web option\"});\n    else if (browserTypeExe.length === 0) setPopupState({show:true,title:\"Schedule Test Suite\",content:\"Please select \" + appType + \" option\"});\n    else if ((appType === \"Web\") && browserTypeExe.length === 1 && execAction === \"parallel\") setPopupState({show:true,title:\"Schedule Test Suite\",content:\"Please select multiple browsers\"});\n    else return true;\n    return false;\n}\n\nconst browImg = (brow, appType) => {\n    if (appType === \"Web\") {\n        if (parseInt(brow) === 1) return '/imgs/ic-ch-schedule.png';\n        else if (parseInt(brow) === 2) return '/imgs/ic-ff-schedule.png';\n        else if (parseInt(brow) === 3) return '/imgs/ic-ie-schedule.png';\n        else if (parseInt(brow) === 7) return '/imgs/ic-legacy-schedule.png';\n        else if (parseInt(brow) === 8) return '/imgs/ic-chromium-schedule.png';\n    }\n    else if (appType === \"Webservice\") return '/imgs/webservice.png';\n    else if (appType === \"MobileApp\") return '/imgs/mobileApps.png';\n    else if (appType === \"System\") return '/imgs/desktop.png';\n    else if (appType === \"Desktop\") return '/imgs/desktop.png';\n    else if (appType === \"SAP\") return '/imgs/sapApps.png';\n    else if (appType === \"Mainframe\") return '/imgs/mainframe.png';\n    else if (appType === \"OEBS\") return '/imgs/oracleApps.png';\n    else if (appType === \"MobileWeb\") return '/imgs/MobileWeb.png';\n}\n\nconst checkSelectedModules = (scheduleTableData, setPopupState) => {\n    let pass = false;\n    // eslint-disable-next-line\n    scheduleTableData.map((rowData,m)=>{\n        const indeterminate = document.getElementById('selectScheduleSuite_' + m).indeterminate;\n        const checked = document.getElementById('selectScheduleSuite_' + m).checked;\n        if(indeterminate || checked){\n            pass = true;\n            return null\n        } else {}\n    })\n    if (pass===false) setPopupState({show:true,title:\"Schedule Test Suite\",content:\"Please select atleast one scenario(s) to execute\"});\n    return pass\n} \n\nconst checkDateTimeValues = (eachData, moduleScheduledate, setModuleScheduledate, setPopupState) => {\n    for(var i =0 ;i<eachData.length;i++){\n        for(var j =0 ; j<eachData[i].executestatus.length; j++){\n            if(eachData[i].executestatus[j]===1){\n                let doNotSchedule = false\n                let moduleScheduledateTime = {...moduleScheduledate};\n                moduleScheduledateTime[eachData[i].testsuiteid][\"inputPropsdate\"][\"className\"]=\"fc-timePicker\";\n                moduleScheduledateTime[eachData[i].testsuiteid][\"inputPropstime\"][\"className\"]=\"fc-timePicker\";\n\n                var dateValue = moduleScheduledate[eachData[i].testsuiteid][\"date\"];\n                var timeValue = moduleScheduledate[eachData[i].testsuiteid][\"time\"];\n                if (dateValue === \"\") {  // Check if schedule date is not empty\n                    moduleScheduledateTime[eachData[i].testsuiteid][\"inputPropsdate\"][\"className\"]=\"fc-datePicker s__err-Border\";\n                    doNotSchedule = true;\n                }\n                else if (timeValue === \"\") {  // Check if schedule time is not empty\n                    moduleScheduledateTime[eachData[i].testsuiteid][\"inputPropstime\"][\"className\"]=\"fc-timePicker s__err-Border\";\n                    doNotSchedule = true;\n                }\n                setModuleScheduledate(moduleScheduledateTime);\n                if(doNotSchedule) return false\n\n                const sldate_2 = dateValue.split(\"-\");\n                const sltime_2 = timeValue.split(\":\");\n                const timestamp = new Date(sldate_2[2], (sldate_2[1] - 1), sldate_2[0], sltime_2[0], sltime_2[1]);\n                const diff = (timestamp - new Date()) / 60000;\n                if (diff < 5) {  // Check if schedule time is not ahead of 5 minutes from current time\n                    if (diff < 0) moduleScheduledateTime[eachData[i].testsuiteid][\"inputPropsdate\"][\"className\"]=\"fc-datePicker s__err-Border\";\n                    moduleScheduledateTime[eachData[i].testsuiteid][\"inputPropstime\"][\"className\"]=\"fc-timePicker s__err-Border\";\n                    setPopupState({show:true,title:\"Schedule Test Suite\",content:\"Schedule time must be 5 mins more than current time.\"});\n                    setModuleScheduledate(moduleScheduledateTime);\n                    return false\n                }\n            } \n        }\n    }  \n    return true  \n} \n\nconst parseLogicExecute = (schedulePoolDetails, moduleScheduledate, eachData, current_task, appType, projectdata ) => {\n    let moduleInfo = [];\n    var j;\n    for(var i =0 ;i<eachData.length;i++){\n        var testsuiteDetails = current_task.testSuiteDetails[i];\n        var suiteInfo = {};\n        var selectedRowData = [];\n        var relid = testsuiteDetails.releaseid;\n        var cycid = testsuiteDetails.cycleid;\n        var projectid = testsuiteDetails.projectidts;\n        \n        for(j =0 ; j<eachData[i].executestatus.length; j++){\n            if(eachData[i].executestatus[j]===1){\n                selectedRowData.push({\n                    condition: eachData[i].condition[j],\n                    dataparam: [eachData[i].dataparam[j].trim()],\n                    scenarioname: eachData[i].scenarionames[j],\n                    scenarioId: eachData[i].scenarioids[j],\n                    scenariodescription: undefined\n                });\n            }\n        }\n        suiteInfo.testsuiteName = eachData[i].testsuitename;\n        suiteInfo.testsuiteId = eachData[i].testsuiteid;\n        suiteInfo.versionNumber = testsuiteDetails.versionnumber;\n        suiteInfo.appType = appType;\n        suiteInfo.domainName = projectdata.project[projectid].domain;\n        suiteInfo.projectName = projectdata.projectDict[projectid];\n        suiteInfo.projectId = projectid;\n        suiteInfo.releaseId = relid;\n        suiteInfo.cycleName = projectdata.cycleDict[cycid];\n        suiteInfo.cycleId = cycid;\n        suiteInfo.suiteDetails = selectedRowData;\n        suiteInfo.poolid = schedulePoolDetails.poolid;\n        suiteInfo.type = schedulePoolDetails.type;\n\n        if(schedulePoolDetails.type === \"smartModule\") suiteInfo.targetUser = \"Module Smart Execution\";\n        else if(schedulePoolDetails.type === \"smartScenario\") suiteInfo.targetUser = \"Scenario Smart Execution\";\n        else if(schedulePoolDetails.type === \"normal\") suiteInfo.targetUser = schedulePoolDetails.targetUser;\n        \n        var iceList = [];\n        if(schedulePoolDetails.type !== \"normal\") iceList = schedulePoolDetails.targetUser;\n        suiteInfo.iceList = iceList;\n        for(j =0 ; j<eachData[i].executestatus.length; j++){\n            if(eachData[i].executestatus[j]===1){\n                suiteInfo.date = moduleScheduledate[eachData[i].testsuiteid][\"date\"];\n                suiteInfo.time = moduleScheduledate[eachData[i].testsuiteid][\"time\"];\n                const sldate_2 = suiteInfo.date.split(\"-\");\n                const sltime_2 = suiteInfo.time.split(\":\");\n                const timestamp = new Date(sldate_2[2], (sldate_2[1] - 1), sldate_2[0], sltime_2[0], sltime_2[1]);\n                suiteInfo.timestamp = timestamp.valueOf().toString();\n            } \n        }\n        if(selectedRowData.length !== 0) moduleInfo.push(suiteInfo);\n    }\n    return moduleInfo;\n}\n\nexport default ScheduleContent;","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { UpperContent, BottomContent } from \"../components/ActionBarItems\";\nimport { Header, FooterTwo as Footer, ActionBar, ReferenceBar } from '../../global';\nimport \"../styles/ScheduleHome.scss\";\nimport ScheduleContent from './ScheduleContent';\n\nconst ScheduleHome = () => {\n    \n    const current_task = useSelector(state=>state.plugin.CT)\n    const filter_data = useSelector(state=>state.plugin.FD)\n\tconst [browserTypeExe,setBrowserTypeExe] = useState([]);\n\tconst [execAction,setExecAction] = useState(\"serial\");\n    const [appType, setAppType] = useState(null);\n    const [syncScenario, setSyncScenario] = useState(false);\n    const [execEnv,setExecEnv] = useState(\"default\");\n    const [smartMode,setSmartMode] = useState('normal')\n    const isMac = navigator.appVersion.indexOf(\"Mac\") !== -1;\n\t\n    \n    useEffect(()=>{\n        if (Object.keys(current_task).length!==0 && Object.keys(filter_data).length!==0){\n            setAppType(current_task.appType);\n        }\n    }, [current_task, filter_data]);\n\n    const UpdateBrowserTypeExe = (browserId) => {\n        let browserTypeExecute = [...browserTypeExe];\n\t\tif (browserId!==undefined && browserTypeExecute.includes(browserId)) {\n\t\t\tvar getSpliceIndex = browserTypeExecute.indexOf(browserId);\n\t\t\tbrowserTypeExecute.splice(getSpliceIndex, 1);\n\t\t} else browserTypeExecute.push(browserId); \n        setBrowserTypeExe(browserTypeExecute);\n\t\tif (browserTypeExecute.length > 0) setSyncScenario(true);\n\t\telse setSyncScenario(false);\n    }\n\n    const updateExecAction = () => {\n        if (execAction ===\"serial\") setExecAction(\"parallel\");\n\t\telse setExecAction(\"serial\");\n    }\n\n    const updateExecEnv = () => {\n        if (execEnv ===\"default\") setExecEnv(\"Saucelabs\");\n\t\telse setExecEnv(\"default\");\n    }\n\n    return ( \n        <div className=\"s__body\">\n            <Header />\n                <div className=\"s__mid_section\">\n                    <ActionBar  \n                    upperContent={<UpperContent key={666} appType={appType} isMac={isMac} browserTypeExe={browserTypeExe} UpdateBrowserTypeExe={UpdateBrowserTypeExe} />} \n                    bottomContent={<BottomContent smartMode={smartMode} setSmartMode={setSmartMode} execEnv={execEnv} updateExecEnv={updateExecEnv} appType={appType} execAction={execAction} browserTypeExe={browserTypeExe} UpdateBrowserTypeExe={UpdateBrowserTypeExe} updateExecAction={updateExecAction}/>}/> \n                    <div className=\"s__content\">\n                        <ScheduleContent smartMode={smartMode} syncScenario={syncScenario} setSyncScenario={setSyncScenario} execEnv={execEnv} setBrowserTypeExe={setBrowserTypeExe} setExecAction={setExecAction} appType={appType} browserTypeExe={browserTypeExe} execAction={execAction} />\n                    </div>\n                    <ReferenceBar /> \n                </div>\n            <div className='s__footer'><Footer/></div>\n        </div>\n    );\n}\n\nexport default ScheduleHome;","import axios from 'axios';\nimport {RedirectPage} from '../global'\nimport {history} from './index'\nimport {url} from '../../App';\n\n/*Component getProjectList\n  use: \n  api returns { appType : [],appTypeName:[],cycles:{},domains:[],projectId:[],projectName:[],projecttypes:{},releases:[]}\n*/\n\nexport const getProjectList = async() => {\n    try{\n        const res = await axios(url+'/populateProjects', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {\"action\":\"populateProjects\"},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Failed to fetch project list'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to fetch project list'}\n    }\n}\n\n/*Component getModules\n  api returns [{name: \"\", type: \"\", id: \"\"},{name: \"\", type: \"\", id: \"\"}]\n*/\n\nexport const getModules = async(props) => {\n    try{\n        const res = await axios(url+'/getModules', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: props,\n            credentials: 'include'\n        });\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }else if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        console.error(res.data)\n        return {error:'Failed to fetch Module list'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to fetch Modules'}\n    }\n}\n\n/*Component getScreens\n  api returns {screenList: [{name:\"\",parent:[],_id:\"\"}], testCaseList: [{name:\"\",parent:[],_id:\"\",screenid:''}]}\n*/\n\nexport const getScreens = async(projectId) => {\n    try{\n        const res = await axios(url+'/getScreens', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: {projectId:projectId},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Failed to fetch screens'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to fetch screens'}\n    }\n}\n\n/*Component saveMindmap\n  api returns moduleID if saved\n*/\n\nexport const saveMindmap = async(props) => {\n    var data = {\n        action:props.action?props.action:\"/saveData\",\n        write: props.write,\n        map: props.map,\n        deletednode: props.deletednode,\n        unassignTask: props.unassignTask,\n        prjId: props.prjId,\n        createdthrough: props.createdthrough,\n        cycId: props.cycId,\n        relId: props.relId?props.relId:null\n    }\n    try{\n        const res = await axios(url+data.action, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: data,\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Failed to save mindmap'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to save mindmap'}\n    }\n}\n\n/*Component exportToExcel\n  api returns excel data\n*/\n\nexport const exportToExcel = async(props) => {\n    try{\n        const res = await axios(url+'/exportToExcel', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: props,\n            credentials: 'include',\n            responseType:'arraybuffer'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Failed to export excel'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to export excel'}\n    }\n}\n\n/*Component exportMindmap\n  api returns Json data\n*/\n\nexport const exportMindmap = async(moduleId) => {\n    try{\n        const res = await axios(url+'/exportMindmap', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: {\n                mindmapId:moduleId\n            },\n            credentials: 'include',\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Failed to export mindmap'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to export mindmap'}\n    }\n}\n\n/*Component populateScenarios\n  api returns [{\"_id\":\"5f2598face7ab3cefb3e5962\",\"name\":\"Scenario_1\"}]\n*/\n\nexport const populateScenarios = async(moduleID) => {\n    try{\n        const res = await axios(url+'/populateScenarios', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: {\"action\":\"populateScenarios\",\"moduleId\":moduleID},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Failed to fetch scenarios'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to fetch scenarios'}\n    }\n}\n\n/*Component readTestSuite_ICE\n  api returns {\"5f6d956afc748e91d0f8b74e\":{\"executestatus\":[1],\"condition\":[0],\"dataparam\":[\"\"],\"scenarioids\":[\"\"],\"scenarionames\":[\"\"],\"projectnames\":[\"\"],\"testsuitename\":\"\",\"moduleid\":\"\",\"testsuiteid\":\"\"}}\n*/\n\nexport const readTestSuite_ICE = async(data) => {\n    try{\n        const res = await axios(url+'/readTestSuite_ICE', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: {\n\t\t\t\tparam: 'readTestSuite_ICE',\n\t\t\t\treadTestSuite: data,\n\t\t\t\tfromFlag: \"mindmaps\"\n\t\t\t},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Failed to fetch testsuites details'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to fetch testsuites details'}\n    }\n}\n\n/*Component populateUsers\n  api returns {\"rows\":[{\"_id\":\"5e26c3958bedab828b8a2943\",\"addroles\":[],\"defaultrole\":\"5db0022cf87fdec084ae49aa\",\"name\":\"test.b\"}]}\n*/\n\nexport const populateUsers = async(projectId) => {\n    try{\n        const res = await axios(url+'/populateUsers', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: {\"projectId\":projectId},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\" && res.data.rows.length >0){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Failed to fetch Users'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to fetch Users'}\n    }\n}\n\n\n/*Component excelToMindmap\n    api return [{\"id\":\"f2e7651d-521d-43cc-9346-4d823785b238\",\"name\":\"Module_1\",\"type\":0},{\"id\":\"39b97aa7-9fac-42d9-b167-9c1cb0464390\",\"name\":\"Scenario_3\",\"type\":1},{\"id\":\"06ef3e21-5b24-44ef-ba70-847a887fe2e2\",\"name\":\"Screen_1\",\"type\":2,\"uidx\":1},{\"id\":\"450b0b9e-0763-4e7e-8cd4-e1ae75121ec1\",\"name\":\"Testcase_2\",\"type\":3,\"uidx\":1},{\"id\":\"c120e074-3905-4e1b-ae85-9fca209626c5\",\"name\":\"Screen_2fsdf\",\"type\":2,\"uidx\":3},{\"id\":\"4f360398-25c4-429a-9689-700801506be0\",\"name\":\"Testcase_1\",\"type\":3,\"uidx\":3},{\"id\":\"056ab9b2-0334-431e-bc49-3883dfe7bdf6\",\"name\":\"Screen_3\",\"type\":2,\"uidx\":5},{\"id\":\"132b00f1-ded9-45d2-b793-abbca6500ca4\",\"name\":\"Testcase_3\",\"type\":3,\"uidx\":5}]\n    with flag = \"sheetname\"  returns list of sheet name\n*/\n\nexport const excelToMindmap = async(data) => {\n    try{\n        const res = await axios(url+'/excelToMindmap', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: {'data':data},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        else if (res.data == 'valueError') {\n            return {error : 'Empty column values in the sheet'}\n        } \n        else if (res.data == \"emptySheet\" || res.data == 'fail') {\n            return {error : 'Excel sheet is either empty or invalid'}\n        }\n        else if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Invalid data in excel, please check!'}\n    }catch(err){\n        console.error(err)\n        return {error:'Invalid data in excel, please check!'}\n    }\n}\n\n/*Component importMindmap\n  api return {\"_id\":\"5f6d956afc748e91d0f8b74e\"} on success\n*/\n\nexport const importMindmap = async(data) => {\n    try{\n        const res = await axios(url+'/importMindmap', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: data,\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        return {error:'Error fetching data from file'}\n    }catch(err){\n        console.error(err)\n        return {error:'Error fetching data from file'}\n    }\n}\n\n/*Component pdProcess\n  api returns {\"success\":true,\"data\":[[{\"label\":\"Login_c4a74fede3fe4e5eabb70b01f7b72e12\",\"type\":\"task\"},{\"label\":\"Order_c4a74fede3fe4e5eabb70b01f7b72e12\",\"type\":\"task\"},{\"label\":\"Logout_c4a74fede3fe4e5eabb70b01f7b72e12\",\"type\":\"task\"}]],\"history\":\"W3siYWN0aW9uIjoiQ3JlYXRlZCIsInJldmlld2VyIjoiSm9obiBTbWl0aCIsImFzc2lnbmVlIjoiQW5keSBSb2dlciIsInRpbWUiOiJNb24gTWFyIDAyIDIwMjAgMTk6MjI6MDUgR01UIn0seyJhY3Rpb24iOiJQZW5kaW5nIEFwcHJvdmFsIiwiYXNzaWduZWUiOiJBbmR5IFJvZ2VyIiwicmV2aWV3ZXIiOiJKb2huIFNtaXRoIiwidGltZSI6Ik1vbiBNYXIgMDIgMjAyMCAxOTo0NzowMyBHTVQifSx7ImFjdGlvbiI6IkFwcHJvdmVkIiwiYXNzaWduZWUiOiJBbmR5IFJvZ2VyIiwicmV2aWV3ZXIiOiJKb2huIFNtaXRoIiwidGltZSI6Ik1vbiBNYXIgMDIgMjAyMCAxOTo0ODowMyBHTVQifSx7ImFjdGlvbiI6ImV4cG9ydCIsImFzc2lnbmVlIjoiVmlrcmFtIFByYWJodSIsInJldmlld2VyIjoiIiwidGltZSI6IjIwMjAtMDMtMzFUMTI6NDE6MTguMjA2WiJ9XQ==\"}\n*/\n\nexport const pdProcess = async(data) => {\n    try{\n        const res = await axios(url+'/pdProcess', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: {'data':data},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        return {error:'Error fetching data from file'}\n    }catch(err){\n        console.error(err)\n        return {error:'Error fetching data from file'}\n    }\n}\n\n/*Component importGitMindmap\n  api returns {\"success\":true,\"data\":[[{\"label\":\"Login_c4a74fede3fe4e5eabb70b01f7b72e12\",\"type\":\"task\"},{\"label\":\"Order_c4a74fede3fe4e5eabb70b01f7b72e12\",\"type\":\"task\"},{\"label\":\"Logout_c4a74fede3fe4e5eabb70b01f7b72e12\",\"type\":\"task\"}]],\"history\":\"W3siYWN0aW9uIjoiQ3JlYXRlZCIsInJldmlld2VyIjoiSm9obiBTbWl0aCIsImFzc2lnbmVlIjoiQW5keSBSb2dlciIsInRpbWUiOiJNb24gTWFyIDAyIDIwMjAgMTk6MjI6MDUgR01UIn0seyJhY3Rpb24iOiJQZW5kaW5nIEFwcHJvdmFsIiwiYXNzaWduZWUiOiJBbmR5IFJvZ2VyIiwicmV2aWV3ZXIiOiJKb2huIFNtaXRoIiwidGltZSI6Ik1vbiBNYXIgMDIgMjAyMCAxOTo0NzowMyBHTVQifSx7ImFjdGlvbiI6IkFwcHJvdmVkIiwiYXNzaWduZWUiOiJBbmR5IFJvZ2VyIiwicmV2aWV3ZXIiOiJKb2huIFNtaXRoIiwidGltZSI6Ik1vbiBNYXIgMDIgMjAyMCAxOTo0ODowMyBHTVQifSx7ImFjdGlvbiI6ImV4cG9ydCIsImFzc2lnbmVlIjoiVmlrcmFtIFByYWJodSIsInJldmlld2VyIjoiIiwidGltZSI6IjIwMjAtMDMtMzFUMTI6NDE6MTguMjA2WiJ9XQ==\"}\n*/\n\nexport const importGitMindmap = async(data) => {\n    try{\n        const res = await axios(url+'/importGitMindmap', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: data,\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.data === \"empty\"){\n            console.error(res.data)\n            return {error:'Project is not Git configured!'}\n        }\n        if(res.data === \"Invalid inputs\"){\n            console.error(res.data)\n            return {error:'Module does not exists in Git repo. Please verify your inputs!'}\n        }\n        if (!('testscenarios' in res.data)){\n            console.error(res.data)\n            return {error:\"Incorrect JSON imported. Please check the contents!!\"}\n        }else if(res.data.testscenarios.length === 0){\n            console.error(res.data)\n            return {error:\"The file has no node structure to import, please check!!\"}\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Error in importing module from Git'}\n    }catch(err){\n        console.error(err)\n        return {error:'Error in importing module from Git'}\n    }\n}\n\n/*Component exportToGit\n  api returns {\"success\":true,\"data\":[[{\"label\":\"Login_c4a74fede3fe4e5eabb70b01f7b72e12\",\"type\":\"task\"},{\"label\":\"Order_c4a74fede3fe4e5eabb70b01f7b72e12\",\"type\":\"task\"},{\"label\":\"Logout_c4a74fede3fe4e5eabb70b01f7b72e12\",\"type\":\"task\"}]],\"history\":\"W3siYWN0aW9uIjoiQ3JlYXRlZCIsInJldmlld2VyIjoiSm9obiBTbWl0aCIsImFzc2lnbmVlIjoiQW5keSBSb2dlciIsInRpbWUiOiJNb24gTWFyIDAyIDIwMjAgMTk6MjI6MDUgR01UIn0seyJhY3Rpb24iOiJQZW5kaW5nIEFwcHJvdmFsIiwiYXNzaWduZWUiOiJBbmR5IFJvZ2VyIiwicmV2aWV3ZXIiOiJKb2huIFNtaXRoIiwidGltZSI6Ik1vbiBNYXIgMDIgMjAyMCAxOTo0NzowMyBHTVQifSx7ImFjdGlvbiI6IkFwcHJvdmVkIiwiYXNzaWduZWUiOiJBbmR5IFJvZ2VyIiwicmV2aWV3ZXIiOiJKb2huIFNtaXRoIiwidGltZSI6Ik1vbiBNYXIgMDIgMjAyMCAxOTo0ODowMyBHTVQifSx7ImFjdGlvbiI6ImV4cG9ydCIsImFzc2lnbmVlIjoiVmlrcmFtIFByYWJodSIsInJldmlld2VyIjoiIiwidGltZSI6IjIwMjAtMDMtMzFUMTI6NDE6MTguMjA2WiJ9XQ==\"}\n*/\n\nexport const exportToGit = async(data) => {\n    try{\n        const res = await axios(url+'/exportToGit', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: data,\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.data==='empty'){\n            console.error(res.data)\n            return {error:'Project is not Git configured.'}\n        }\n        if(res.data==='commit exists'){\n            console.error(res.data)\n            return {error:'Git commit version already exists.'}\n        }\n        if(res.data==='Invalid gitbranch'){\n            console.error(res.data)\n            return {error:\"Input branch doesn't exist in Git. Please verify!\"}\n        }\n        if(res.status===200 && res.data !== \"fail\"){          \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Error while exporting to Git'}\n    }catch(err){\n        console.error(err)\n        return {error:'Error while exporting to Git'}\n    }\n}","/*eslint eqeqeq: \"off\"*/\nimport * as d3 from 'd3';\nimport {v4 as uuid} from 'uuid'\n\nfunction unfoldtree(d){\n    // d3.select('#node_' + d.id).classed('no-disp', !1).select('.ct-cRight').classed('ct-nodeBubble', !0); \n    if (d.parent && (d.parent.revertChild || d.parent.revertChild1)) d.revertChild1 = true;\n    if (d._children) {\n        d.children = d._children;\n        d._children = null;\n        d.revertChild = true;\n    }\n    if (d.children) d.children.forEach(unfoldtree);\n}\n\nfunction foldtree(d){   \n    if (d.children) d.children.forEach(foldtree);\n    if (d.revertChild1) delete d.revertChild1;\n    if (d.revertChild) {\n        d._children = d.children;\n        d.children = null;\n        delete d.revertChild;\n    }\n}\n\nconst recurseTogChild = (nodeDisplay, linkDisplay, d, v, dLinks) => {\n    if (d.children) d.children.forEach(function(e) {\n        recurseTogChild(nodeDisplay, linkDisplay, e, v, dLinks);\n        nodeDisplay[e.id].hidden = v;\n        for (var j = dLinks.length - 1; j >= 0; j--) {\n            var lid = 'link-' + dLinks[j].source.id + '-' + dLinks[j].target.id\n            if (linkDisplay[lid] && dLinks[j].source.id === d.id) {\n                linkDisplay[lid].hidden = v\n            } \n        }\n    });\n    else if (d._children) d._children.forEach(function(e) {\n        recurseTogChild(nodeDisplay, linkDisplay, e, !0, dLinks);\n        nodeDisplay[e.id].hidden = !0;\n        for (var j = dLinks.length - 1; j >= 0; j--) {\n            var lid = 'link-' + dLinks[j].source.id + '-' + dLinks[j].target.id\n            if (linkDisplay[lid] && dLinks[j].source.id === d.id) {\n                linkDisplay[lid].hidden = !0\n            }\n        }\n    });\n};\n\nconst getNewPosition = (dNodes,node, pi, arr_co ,layout_vertical,sections) => {\n    //dNodes[pi].children are arranged in increasing\n    // order of x/y disance depending on layout\n    var index;\n    var new_one;\n    if (dNodes[pi].children.length > 0) { // new node has siblings\n        index = dNodes[pi].children.length - 1;\n        if (layout_vertical){\n            new_one = {\n                x: parseInt(dNodes[pi].children[index].x) + 100,\n                y: sections[node.type]\n            }; // Go beside last sibling node\n        }\n        else{\n            new_one = {\n                x: sections[node.type],\n                y: parseInt(dNodes[pi].children[index].y + 80)\n            };\n        }\n        node = getNonOverlappingPosition(node, arr_co, new_one,layout_vertical);\n    } else { //first kid of any node\n        if (dNodes[pi].parent != null) { //if kid of scenario/testcase/screen\n            // var arr = dNodes[pi].parent.children;\n            index = dNodes[pi].parent.children.length - 1; //number of parents siblings - 1\n            //new_one={x:parseInt(arr[index].x),y:parseInt(arr[index].y)+125};\n            if (layout_vertical) {\n                new_one = {\n                    x: parseInt(dNodes[pi].x),\n                    y: parseInt(sections[node.type])\n                }; // go directly below parent\n            } else {\n                new_one = {\n                    x: parseInt(sections[node.type]),\n                    y: parseInt(dNodes[pi].y)\n                }; // go directly below parent\n            }\n            node = getNonOverlappingPosition(node, arr_co, new_one,layout_vertical);\n        } else {\n            //Module's kid\n            //layout_change\n            if (layout_vertical) {\n                node.x = parseInt(dNodes[pi].x);\n                node.y = parseInt(sections[node.type]);\n            } else {\n                node.y = parseInt(dNodes[pi].y);\n                node.x = parseInt(sections[node.type]);\n            }\n        }\n\n    }\n    return node;\n}\n\nconst getNonOverlappingPosition = (node, arr_co, new_one,verticalLayout) => {\n    var dist = 0;\n    dist = closestCord(arr_co, new_one);\n    while (dist < 60) {\n        if (verticalLayout) {\n            new_one.x = new_one.x + 80;\n        } else {\n            new_one.y = new_one.y + 80;\n        }\n        dist = closestCord(arr_co, new_one);\n    }\n    node.x = new_one.x;\n    node.y = new_one.y;\n    return node;\n}\n\nfunction closestCord(arr_co, new_one) {\n    var dmin = 1000;\n    for (var i = 0; i < arr_co.length; i++) {\n        var a = new_one.x - arr_co[i].x;\n        var b = new_one.y - arr_co[i].y;\n        var c = Math.sqrt(a * a + b * b);\n        if (c < dmin)\n                dmin = c;\n    }\n    return dmin;\n}\n\nconst checkparenttask = (parentNode,parent_flag)=>{\n    if (parent_flag) return parent_flag;\n    if(parentNode!=null){\n        if (parentNode.taskexists!=null) {\n            parent_flag=true;\n        }\n        parentNode=parentNode.parent || null;\n        parent_flag=checkparenttask(parentNode,parent_flag);\n    }\n    return parent_flag;\n}\n\nconst checkchildrentask = (childNode,children_flag)=>{\n    if(children_flag) return children_flag;\n    if (childNode.taskexists != null) {\n        children_flag=true;\n        return children_flag;\n    }\n    if (childNode.children) {\n        childNode.children.forEach((e)=>{children_flag=checkchildrentask(e, children_flag)})\n    }\n    return children_flag;\n}\n\nconst recurseDelChild = (d, linkDisplay, nodeDisplay, dNodes, dLinks, tab , deletedNodes) =>{\n    if (d.children) d.children.forEach((e)=>{recurseDelChild(e, linkDisplay, nodeDisplay, dNodes, dLinks, tab, deletedNodes)});\n    if(d.state === \"deleted\")return;\n    if(d._id){  \n        var parentid=dNodes[d.parent.id]._id;\n        deletedNodes.push([d._id,d.type,parentid]);\n    }\n    d.parent = null;\n    d.children = null;\n    d.task = null;\n    delete nodeDisplay[d.id];\n    // deletednode_info.push(d);\n    dNodes[d.id].state = 'deleted';\n    var temp = dLinks;\n    for (var j = temp.length - 1; j >= 0; j--) {\n        if (temp[j].source.id === d.id) {\n            delete linkDisplay['link-' + temp[j].source.id + '-' + temp[j].target.id];\n            temp[j].deleted = !0;\n        }\n    }\n};\n\nexport const generateTree = (tree,sections,count,verticalLayout,isAssign,cycleID) =>{\n    unfoldtree(tree)\n    var translate;\n    var nodeDisplay = {}\n    var linkDisplay = {}\n    var s = d3.select('.mp__canvas_svg');\n    let  cSize= [parseFloat(s.style(\"width\")), parseFloat(s.style(\"height\"))];\n    var typeNum = {\n        'modules': 0,\n        'endtoend': 0,\n        'scenarios': 1,\n        'screens': 2,\n        'testcases': 3\n    };\n    var levelCount = [1]\n    function childCounter(l, s) {\n        if (levelCount.length <= l) levelCount.push(0);\n        if (s.children) {   \n            levelCount[l] += s.children.length;\n            s.children.forEach(function(d) {\n                childCounter(l + 1, d);\n            });\n        }\n    };\n    childCounter(1, tree);\n    var newHeight = d3.max(levelCount) * 90;\n    var d3Tree = d3.layout.tree().size([newHeight * 2, cSize[0]]);\n    var dNodes = d3Tree.nodes(tree);\n    var dLinks=d3Tree.links(dNodes);\n    dNodes.sort(function(a, b) {\n        return a.childIndex - b.childIndex;\n    });  \n    dNodes.forEach((d,ind)=>{\n        if (verticalLayout) {\n                d.y = cSize[0] * 0.1 * (0.9 + typeNum[d.type]);\n                sections[d.type] = d.y;\n        } else {\n                d.y = d.x;\n                d.x = cSize[0] * 0.1 * (0.9 + typeNum[d.type]);\n                sections[d.type] = d.x;\n        }\n        d.id = ind\n        count[d.type] += 1; \n        var node = addNode(d);\n        nodeDisplay[d.id] = node\n        nodeDisplay[d.id].task = false;\n        nodeDisplay[d.id].hidden = ((d.parent)? (d.parent.revertChild || d.parent.revertChild1):false) || false;\n        if(isAssign){\n            if (d.task != null) {\n                if (d.task.cycleid == cycleID) {\n                    nodeDisplay[d.id].task = true;\n                    nodeDisplay[d.id].taskOpacity = 1;\n                }//do not fade for module????????\n                if(d.type==\"screens\" || d.type==\"testcases\"){\n                    if (d.task.cycleid !=cycleID) {\n                        nodeDisplay[d.id].task = true;\n                        nodeDisplay[d.id].taskOpacity = 0.5;\n                    }\n                }\n                if(d.parent && d.parent.type == 'endtoend'){\n                    nodeDisplay[d.id].task = true;\n                    nodeDisplay[d.id].taskOpacity = 1;\n                }\n            }//showing the task assigned icon little transperent to indicate that task originally do not belongs to this release and cycle but task exists in some other release and cycle\n            else if (d.taskexists && d.type !=\"modules\" && d.type !=\"scenarios\") {\n                nodeDisplay[d.id].task = true;\n                nodeDisplay[d.id].taskOpacity = 0.5;\n                }\n            }\n        })\n    dLinks.forEach(function(d) {\n        d.id = uuid();\n        var lid = 'link-' + d.source.id + '-' + d.target.id\n        var link = addLink(d.source, d.target,verticalLayout);\n        linkDisplay[lid] = link\n        linkDisplay[lid].hidden = (d.source.revertChild || d.source.revertChild1) || false;\n    });\n    if (verticalLayout){\n        translate = [(cSize[0] / 2) - dNodes[0].x, (cSize[1] / 5) - dNodes[0].y]\n    } else{\n        translate = [(cSize[0] / 3) - dNodes[0].x, (cSize[1] / 2) - dNodes[0].y]\n    }\n    foldtree(tree)\n    return {nodes:nodeDisplay,links:linkDisplay,translate:translate,dNodes,dLinks,sections,count}\n}\n\nexport const createNewMap = (verticalLayout,types,name) => {\n    var nodeDisplay = {}\n    var dNodes = []\n    var translate\n    var s = d3.select('.mp__canvas_svg');\n    var  cSize= [parseFloat(s.style(\"width\")), parseFloat(s.style(\"height\"))];\n    var node = {\n        id: 0,\n        childIndex: 0,\n        name: name?name:'Module_0',\n        type: types?types:'modules',\n        y: cSize[1] * 0.4,\n        x: cSize[0] * 0.1 * 0.9,\n        children: [],\n        parent: null,\n        state: 'created',\n        _id: null\n    };\n    if (verticalLayout) {\n        node.y = cSize[1] * 0.1 * (0.9);\n        node.x = cSize[0] * 0.4;\n    };\n    dNodes.push(node);\n    nodeDisplay[0] = addNode(dNodes[0]);\n    nodeDisplay[0].task = false;\n    if (verticalLayout){\n        translate = [(cSize[0] / 2) - dNodes[0].x, (cSize[1] / 5) - dNodes[0].y]\n    }\n    else{\n        translate = [(cSize[0] / 3) - dNodes[0].x, (cSize[1] / 2) - dNodes[0].y]\n    }\n    return{nodes:nodeDisplay,dNodes,translate}\n}\n\nexport const addNode = (n) =>{\n    n.display_name = n.name;\n    var ch = 15;\n    if (n.display_name.length > 15) {\n        n.display_name = n.display_name.slice(0, ch) + '...';\n    }\n    var img_src = 'static/imgs/node-' + n.type + '.png';\n    if (n.reuse && (n.type === 'testcases' || n.type === 'screens')) img_src = 'static/imgs/' + n.type + '-reuse.png';\n    var accessibility = 'Disable'\n    if(n.task && n.task.tasktype == 'Execute Scenario Accessibility Only') accessibility = 'Exclusive'\n    else if(n.task && n.task.tasktype == 'Execute Scenario with Accessibility') accessibility = 'Enable'\n    var nodeDisplay= {\n        'type': n.type,\n        'transform': \"translate(\" + (n.x).toString() + \",\" + (n.y).toString() + \")\",\n        'opacity': !( n._id === null || n._id === undefined) ? 1 : 0.5,\n        'title': n.name,\n        'ac': accessibility,\n        'hidden': false,\n        'name': n.display_name,\n        'img_src': img_src,\n        '_id': n._id || null,\n        'state':n.state || \"created\",\n        'reuse':n.reuse || false\n    };\n    return nodeDisplay;\n}\n\nexport const addLink = (p, c,verticalLayout) => {\n        var s;\n        var t;\n        function genPathData(s, t, vl) {\n                const pth = (vl)? (s[0] + ',' + (s[1] + t[1]) / 2 + ' ' + t[0] + ',' + (s[1] + t[1]) / 2):((s[0] + t[0]) / 2 + ',' + s[1] + ' ' + (s[0] + t[0]) / 2 + ',' + t[1]);\n                return ('M' + s[0] + ',' + s[1] + 'C' + pth + ' ' + t[0] + ',' + t[1]);\n        };\n        if (verticalLayout) {\n                s = [p.x + 20, p.y + 55];\n                t = [c.x + 20, c.y - 3];\n        } else {\n                s = [p.x + 43, p.y + 20];\n                t = [c.x - 3, c.y + 20];\n        }\n        var d = genPathData(s, t, verticalLayout);\n        return { 'd': d }\n}\n\nexport const moveNodeBegin = (idx,linkDisplay,dLinks,temp,pos,verticalLayout) => {\n        dLinks.forEach(function(d, i) {\n                if (d.source.id === parseInt(idx)) {      \n                        if(!linkDisplay['link-' + d.source.id + '-' + d.target.id]){\n                                temp.deleted.push(i)\n                        }\n                        else if(linkDisplay['link-' + d.source.id + '-' + d.target.id].hidden === true){\n                                temp.hidden.push(i)\n                                temp.s.push(i);\n                                delete linkDisplay['link-' + d.source.id + '-' + d.target.id];\n                        }else{\n                                temp.s.push(i);\n                                delete linkDisplay['link-' + d.source.id + '-' + d.target.id];\n                        }\n                } else if (d.target.id === parseInt(idx)) {\n                        temp.t = i;\n                        delete linkDisplay['link-' + d.source.id + '-' + d.target.id];\n                }\n        });\n        const svg = d3.select(`.mp__canvas_svg`);\n        d3.select('#node_' + idx).classed('ct-movable', !0);\n        svg.on('mousemove.nodemove', ()=>{\n                d3.event.stopImmediatePropagation();\n                var t = {} ;\n                const cSpan = [pos.x, pos.y];\n                const cScale = pos.k;\n                const svgOff = document.getElementById('mp__canvas_svg').getBoundingClientRect();\n                if(verticalLayout){\n                        t.x = parseFloat((d3.event.x - svgOff.left - cSpan[0]) / cScale - 20)\n                        t.y = parseFloat((d3.event.y - svgOff.top - cSpan[1]) / cScale + 2)\n                }else{\n                        t.x = parseFloat((d3.event.x - svgOff.left - cSpan[0]) / cScale + 2)\n                        t.y = parseFloat((d3.event.y - svgOff.top - cSpan[1]) / cScale - 20)\n                }\n                d3.select('.ct-movable').attr('transform', \"translate(\" + t.x + \",\" + t.y + \")\");\n        })\n        return {linkDisplay,temp}\n}\n\nexport const moveNodeEnd = (pi,dNodes,dLinks,linkDisplay,temp,verticalLayout) => {\n        const svg = d3.select(`.mp__canvas_svg`);\n        svg.on('mousemove.nodemove', null);\n        // svg.on('zoom', null);\n        var p = d3.select(\"#node_\" + pi);\n        var l = p.attr('transform').slice(10, -1).split(',');\n        dNodes[pi].x = parseFloat(l[0]);\n        dNodes[pi].y = parseFloat(l[1]);\n        var link = addLink(dLinks[temp.t].source, dLinks[temp.t].target,verticalLayout);\n        var lid = 'link-' + dLinks[temp.t].source.id + '-' + dLinks[temp.t].target.id\n        linkDisplay[lid] = link\n        temp.s.forEach(function(d) {\n                // if (deletednode_info.indexOf(dLinks[d].target) == -1) {\n                        var link = addLink(dLinks[d].source, dLinks[d].target,verticalLayout);\n                        var lid = 'link-' + dLinks[d].source.id + '-' + dLinks[d].target.id\n                        linkDisplay[lid] = link\n                        if(temp.hidden.indexOf(d) !== -1){\n                                linkDisplay[lid].hidden =  true\n                        }\n                //}\n        });\n        p.classed('ct-movable', !1);\n        return {linkDisplay}\n};\n\nexport const toggleNode = (nid, nodeDisplay, linkDisplay, dNodes, dLinks) => {\n        var id = nid.split(\"node_\")[1]\n        if (dNodes[id]._children && dNodes[id]._children.length > 0) {\n                // p.select('.ct-cRight').classed('ct-nodeBubble', !0);\n                dNodes[id].children = dNodes[id]._children;\n                dNodes[id]._children = null;\n                recurseTogChild(nodeDisplay, linkDisplay, dNodes[id], !1, dLinks);\n        }  else  if (dNodes[id].children && dNodes[id].children.length > 0) {\n                // p.select('.ct-cRight').classed('ct-nodeBubble', !1);  //d._childern \n                dNodes[id]._children = dNodes[id].children;\n                dNodes[id].children = null;\n                recurseTogChild(nodeDisplay, linkDisplay, dNodes[id], !0, dLinks);\n        } \n        return {dLinks,dNodes,nodeDisplay,linkDisplay}\n}\n\nexport const createNode = (activeNode,nodeDisplay,linkDisplay,dNodes,dLinks,sections,count,obj,verticalLayout,nodeID) => {\n        //if nodeID ene then\n        var uNix = dNodes.length\n        var pi = activeNode;\n        var pt = nodeDisplay[pi].type;\n        if (pt === 'testcases') return;\n        if (false && nodeDisplay[pi]._children != null)\n                return ;// openDialogMindmap('Error', 'Expand the node');\n        if (dNodes[pi].children === undefined) dNodes[pi]['children'] = [];\n        var nNext = {\n                'endtoend': ['Scenario', 1],\n                'modules': ['Scenario', 1],\n                'scenarios': ['Screen', 2],\n                'screens': ['Testcase', 4]\n        };\n        var mapSvg = d3.select('.mp__canvas_svg');\n        var w = parseFloat(mapSvg.style('width'));\n        var h = parseFloat(mapSvg.style('height'));\n        var arr_co = [];\n        dNodes.forEach(function(d) {\n                if(d.state !== 'deleted'){\n                        var objj = {\n                                x: parseInt(d.x),\n                                y: parseInt(d.y)\n                        };\n                        arr_co.push(objj);\n                }\n        });\n        count[(nNext[pt][0]).toLowerCase() + 's'] += 1\n        var tempName;\n        if (obj) {\n                tempName = obj;\n        } else {\n                tempName = nNext[pt][0]+'_'+count[(nNext[pt][0]).toLowerCase() + 's'];\n        }\n        var node = {\n                id: uNix,\n                children: [],\n                y: h * (0.15 * (1.34 + nNext[pt][1]) + Math.random() * 0.1),\n                x: 90 + 30 * Math.floor(Math.random() * (Math.floor((w - 150) / 80))),\n                parent: dNodes[pi],\n                state: 'created',\n                path: '',\n                name: tempName,\n                childIndex: '',\n                type: (nNext[pt][0]).toLowerCase() + 's'\n        }; \n        getNewPosition(dNodes,node, pi, arr_co,verticalLayout,sections);\n        if(nodeID){\n                node._id=nodeID\n        }\n        dNodes.push(node);\n        dNodes[pi].children.push(dNodes[uNix]);\n        dNodes[uNix].childIndex = dNodes[pi].children.length;\n        dNodes[uNix].cidxch = 'true'; // child index updated\n        var currentNode = addNode(dNodes[uNix]);\n        var link = {\n                id: uuid(),\n                source: dNodes[pi],\n                target: dNodes[uNix]\n        };\n        var lid = 'link-' + link.source.id + '-' + link.target.id\n        dLinks.push(link);\n        var currentLink = addLink(dNodes[pi], dNodes[uNix],verticalLayout);\n        nodeDisplay[uNix] = currentNode;\n        linkDisplay[lid] = currentLink;\n        return {nodeDisplay,linkDisplay,dNodes,dLinks,count}\n}\n\nexport const deleteNode = (activeNode,dNodes,dLinks,linkDisplay,nodeDisplay,setPopup) =>{\n    var deletedNodes = []\n    var sid = parseFloat(activeNode.split('node_')[1])\n    var s = d3.select('#'+activeNode);\n    // SaveCreateED('#ct-createAction', 1, 0);\n    var t = s.attr('data-nodetype');\n    if (t === 'modules' || t === 'endtoend') return;\n    var p = dNodes[sid].parent;\n    if(dNodes[sid]['taskexists']!=null){\n        setPopup({show:true,title:'Error',content:'Cannot delete node if task is assigned. Please unassign task first.',submitText:'Ok'})\n        return; \n    }\n    var taskCheck=checkparenttask(dNodes[sid],false);\n    if(taskCheck){\n        setPopup({show:true,title:'Error',content:'Cannot delete node if parent task is assigned. Please unassign task first.',submitText:'Ok'})\n        return;\n    }\n    taskCheck=checkchildrentask(dNodes[sid],false);\n    if(taskCheck){\n        setPopup({show:true,title:'Error',content:'Cannot delete node if children task is assigned. Please unassign task first.',submitText:'Ok'})\n        return;\n    }\n    recurseDelChild(dNodes[sid],linkDisplay, nodeDisplay,dNodes,dLinks,undefined,deletedNodes);\n    for (var j = dLinks.length - 1; j >= 0; j--) {\n        if (dLinks[j].target.id === sid){\n            dLinks[j].deleted = !0;\n            delete linkDisplay['link-' + dLinks[j].source.id + '-' + dLinks[j].target.id];\n            break;\n        }\n    }\n    p.children.some((d, i)=>{\n        if (d.id === sid) {\n            p.children.splice(i, 1);\n            return !0;\n        }\n        return !1;\n    });\n    return {dNodes,dLinks,linkDisplay,nodeDisplay,deletedNodes}\n}\n\nexport const ClickSwitchLayout = (verticalLayout,setVerticalLayout,moduleSelect,setPopup,setBlockui,dispatch) =>{\n    if(verticalLayout){\n      setBlockui({show:true,content:'Switching Layout...'})\n      // dispatch({type:actionTypes.SELECT_MODULE,payload:{switchlayout:true}})\n      setVerticalLayout(false)\n      return;\n    }\n    if(Object.keys(moduleSelect).length<1){\n      setPopup({\n        title:'Warning',\n        content:'Please select a module first',\n        submitText:'Ok',\n        show:true\n      })\n      return;\n    }\n    setBlockui({show:true,content:'Switching Layout...'})\n    // dispatch({type:actionTypes.SELECT_MODULE,payload:{switchlayout:true}})\n    setVerticalLayout(true)\n  }\n\n//pd Utils\nconst xml2json = (xml, tab) => {\n    var X = {\n        toObj: function (xml) {\n            var o = {};\n            if (xml.nodeType == 1) {   // element node ..\n                if (xml.attributes.length)   // element with attributes  ..\n                    for (var i = 0; i < xml.attributes.length; i++)\n                        o[\"@\" + xml.attributes[i].nodeName] = (xml.attributes[i].nodeValue || \"\").toString();\n                if (xml.firstChild) { // element has child nodes ..\n                    var textChild = 0, cdataChild = 0, hasElementChild = false;\n                    for (var n = xml.firstChild; n; n = n.nextSibling) {\n                        if (n.nodeType == 1) hasElementChild = true;\n                        else if (n.nodeType == 3 && n.nodeValue.match(/[^ \\f\\n\\r\\t\\v]/)) textChild++; // non-whitespace text\n                        else if (n.nodeType == 4) cdataChild++; // cdata section node\n                    }\n                    if (hasElementChild) {\n                        if (textChild < 2 && cdataChild < 2) { // structured element with evtl. a single text or/and cdata node ..\n                            X.removeWhite(xml);\n                            for (n = xml.firstChild; n; n = n.nextSibling) {\n                                if (n.nodeType == 3)  // text node\n                                    o[\"#text\"] = X.escape(n.nodeValue);\n                                else if (n.nodeType == 4)  // cdata node\n                                    o[\"#cdata\"] = X.escape(n.nodeValue);\n                                else if (o[n.nodeName]) {  // multiple occurence of element ..\n                                    if (o[n.nodeName] instanceof Array)\n                                        o[n.nodeName][o[n.nodeName].length] = X.toObj(n);\n                                    else\n                                        o[n.nodeName] = [o[n.nodeName], X.toObj(n)];\n                                }\n                                else  // first occurence of element..\n                                    o[n.nodeName] = X.toObj(n);\n                            }\n                        }\n                        else { // mixed content\n                            if (!xml.attributes.length)\n                                o = X.escape(X.innerXml(xml));\n                            else\n                                o[\"#text\"] = X.escape(X.innerXml(xml));\n                        }\n                    }\n                    else if (textChild) { // pure text\n                        if (!xml.attributes.length)\n                            o = X.escape(X.innerXml(xml));\n                        else\n                            o[\"#text\"] = X.escape(X.innerXml(xml));\n                    }\n                    else if (cdataChild) { // cdata\n                        if (cdataChild > 1)\n                            o = X.escape(X.innerXml(xml));\n                        else\n                            for (n = xml.firstChild; n; n = n.nextSibling)\n                                o[\"#cdata\"] = X.escape(n.nodeValue);\n                    }\n                }\n                if (!xml.attributes.length && !xml.firstChild) o = null;\n            }\n            else if (xml.nodeType == 9) { // document.node\n                o = X.toObj(xml.documentElement);\n            }\n            else\n                alert(\"unhandled node type: \" + xml.nodeType);\n            return o;\n        },\n        toJson: function (o, name, ind) {\n            var json = name ? (\"\\\"\" + name + \"\\\"\") : \"\";\n            if (o instanceof Array) {\n                for (var i = 0, n = o.length; i < n; i++)\n                    o[i] = X.toJson(o[i], \"\", ind + \"\\t\");\n                json += (name ? \":[\" : \"[\") + (o.length > 1 ? (\"\\n\" + ind + \"\\t\" + o.join(\",\\n\" + ind + \"\\t\") + \"\\n\" + ind) : o.join(\"\")) + \"]\";\n            }\n            else if (o == null)\n                json += (name && \":\") + \"null\";\n            else if (typeof (o) == \"object\") {\n                var arr = [];\n                for (var m in o)\n                    arr[arr.length] = X.toJson(o[m], m, ind + \"\\t\");\n                json += (name ? \":{\" : \"{\") + (arr.length > 1 ? (\"\\n\" + ind + \"\\t\" + arr.join(\",\\n\" + ind + \"\\t\") + \"\\n\" + ind) : arr.join(\"\")) + \"}\";\n            }\n            else if (typeof (o) == \"string\")\n                json += (name && \":\") + \"\\\"\" + o.toString() + \"\\\"\";\n            else\n                json += (name && \":\") + o.toString();\n            return json;\n        },\n        innerXml: function (node) {\n            var s = \"\"\n            if (\"innerHTML\" in node)\n                s = node.innerHTML;\n            else {\n                var asXml = function (n) {\n                    var s = \"\";\n                    if (n.nodeType == 1) {\n                        s += \"<\" + n.nodeName;\n                        for (var i = 0; i < n.attributes.length; i++)\n                            s += \" \" + n.attributes[i].nodeName + \"=\\\"\" + (n.attributes[i].nodeValue || \"\").toString() + \"\\\"\";\n                        if (n.firstChild) {\n                            s += \">\";\n                            for (var c = n.firstChild; c; c = c.nextSibling)\n                                s += asXml(c);\n                            s += \"</\" + n.nodeName + \">\";\n                        }\n                        else\n                            s += \"/>\";\n                    }\n                    else if (n.nodeType == 3)\n                        s += n.nodeValue;\n                    else if (n.nodeType == 4)\n                        s += \"<![CDATA[\" + n.nodeValue + \"]]>\";\n                    return s;\n                };\n                for (var c = node.firstChild; c; c = c.nextSibling)\n                    s += asXml(c);\n            }\n            return s;\n        },\n        escape: function (txt) {\n            return txt.replace(/[\\\\]/g, \"\\\\\\\\\")\n                .replace(/[\\\"]/g, '\\\\\"')\n                .replace(/[\\n]/g, '\\\\n')\n                .replace(/[\\r]/g, '\\\\r');\n        },\n        removeWhite: function (e) {\n            e.normalize();\n            for (var n = e.firstChild; n;) {\n                if (n.nodeType == 3) {  // text node\n                    if (!n.nodeValue.match(/[^ \\f\\n\\r\\t\\v]/)) { // pure whitespace text node\n                        var nxt = n.nextSibling;\n                        e.removeChild(n);\n                        n = nxt;\n                    }\n                    else\n                        n = n.nextSibling;\n                }\n                else if (n.nodeType == 1) {  // element node\n                    X.removeWhite(n);\n                    n = n.nextSibling;\n                }\n                else                      // any other node\n                    n = n.nextSibling;\n            }\n            return e;\n        }\n    };\n    if (xml.nodeType == 9) // document node\n        xml = xml.documentElement;\n    var json = X.toJson(X.toObj(X.removeWhite(xml)), xml.nodeName, \"\\t\");\n    return \"{\\n\" + tab + (tab ? json.replace(/\\t/g, tab) : json.replace(/\\t|\\n/g, \"\")) + \"\\n}\";\n} \n\nexport const getApptypePD = (data) =>{\n    var cdata;\n    var file = JSON.parse(data);\n    var doc = new DOMParser().parseFromString(file.data,'text/xml');\n    var activityJSON = JSON.parse(xml2json(doc).replace(\"\\nundefined\",\"\"));\n    if(activityJSON[\"mxGraphModel\"][\"root\"][\"Task\"].length>1){\n        cdata = JSON.parse(activityJSON[\"mxGraphModel\"][\"root\"][\"Task\"][0][\"#cdata\"]);  \n    }else{\n        cdata = JSON.parse(activityJSON[\"mxGraphModel\"][\"root\"][\"Task\"][\"#cdata\"]);\n    }\n    return cdata[0]['apptype'].toLowerCase()\n}\n\nexport const getJsonPd = (orderMatrix) =>{\n        var dataJSON = [{\n            name:'Module_'+uuid(),\n            type:1\n        }];\n        orderMatrix.forEach((orderList)=>{\n            dataJSON.push({\n                    name:'Scenario_'+uuid(),\n                    type:2\n            });\n            orderList.forEach((data)=>{\n                    dataJSON.push({\n                            name:\"Screen_\"+data.label,\n                            type:3\n                    });     \n                    dataJSON.push({\n                            name:\"Testcase_\"+data.label,\n                            type:4\n                    });                                                             \n            });    \n        });\n        return dataJSON\n}\n\n//reference bar items\nexport const ClickFullScreen = (setFullScreen,setPopup) => {\n    var elt = document.querySelector(\"html\");\n    if ((window.fullScreen) || (window.innerWidth == window.screen.width && (window.screen.height - window.innerHeight) <= 1)) {\n        if (document.cancelFullScreen) {\n            document.cancelFullScreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.webkitCancelFullScreen) {\n            document.webkitCancelFullScreen();\n        }\n        setFullScreen(false)\n    } else {\n        if (elt.requestFullscreen) {\n            elt.requestFullscreen();\n        } else if (elt.msRequestFullscreen) {\n            elt.msRequestFullscreen();\n        } else if (elt.mozRequestFullScreen) {\n            elt.mozRequestFullScreen();\n        } else if (elt.webkitRequestFullscreen) {\n            elt.webkitRequestFullscreen();\n        } else {\n            setPopup({\n                title:'ERROR',\n                content:'\"Fullscreen not available\"',\n                submitText:'Ok',\n                show:true\n            })\n            return;\n        }\n        setFullScreen(true)\n    }\n} \n\n/*function parseProjList\n    use:  parses input value to list of project props\n*/\n\nexport const parseProjList = (res) =>{\n    var proj = {};\n    res.projectId.forEach((e,i) => {\n        proj[res.projectId[i]]= {\n            'apptype': res.appType[i],\n            'name': res.projectName[i],\n            'apptypeName':res.appTypeName[i],\n            'id': res.projectId[i],\n            'releases':res.releases[i],\n            'domains':res.domains[i]\n        };\n    });\n    return proj\n}","import React, { useRef, Fragment, useState, useEffect } from 'react';\nimport {excelToMindmap, getProjectList, getModules, getScreens, importMindmap , pdProcess, importGitMindmap} from '../api';\nimport {ModalContainer } from '../../global'\nimport { parseProjList, getApptypePD, getJsonPd} from '../containers/MindmapUtils';\nimport { useDispatch } from 'react-redux';\nimport * as actionTypes from '../state/action';\nimport PropTypes from 'prop-types';\nimport '../styles/ImportMindmap.scss'\n\n\n\nconst ImportMindmap = ({setImportPop,setBlockui,displayError,setOptions}) => {\n    const [projList,setProjList] = useState({})\n    const [error,setError] = useState('')\n    const [submit,setSubmit] = useState(false)\n    useEffect(()=>{\n        (async()=>{\n            setBlockui({show:true,content:'Loading ...'})\n            var res = await getProjectList()\n            if(res.error){displayError(res.error);return;}\n            var data = parseProjList(res)\n            setProjList(data)\n            setBlockui({show:false})\n        })()\n    },[]) \n    if(!Object.keys(projList).length >0) return null\n    return(\n        <ModalContainer \n        modalClass = 'modal-md'\n        title='Import Mindmap'\n        close={()=>setImportPop(false)}\n        footer={<Footer error={error} setSubmit={setSubmit}/>}\n        content={<Container submit={submit} setSubmit={setSubmit} displayError={displayError} setOptions={setOptions} projList={projList} setImportPop={setImportPop} setError={setError} setBlockui={setBlockui} displayError={displayError}/>} \n      />\n    )\n}\n\nconst Container = ({projList,setBlockui,displayError,setError,setSubmit,submit,setOptions,setImportPop}) => {\n    const dispatch = useDispatch()\n    const ftypeRef = useRef()\n    const uploadFileRef = useRef()\n    const projRef = useRef()\n    const gitBranchRef = useRef()\n    const gitVerRef = useRef()\n    const gitPathRef = useRef()\n    const sheetRef = useRef()\n    const [importType,setImportType] = useState(undefined)\n    const [fileUpload,setFiledUpload] = useState(undefined)\n    const [sheetList,setSheetList] = useState([])\n    const upload = () => {\n        setError('')\n        setFiledUpload(undefined)\n        uploadFile({setBlockui,projList,uploadFileRef,setSheetList,setError,setFiledUpload})\n    }\n    const changeImportType = (e) => {\n        setSheetList([])\n        setFiledUpload(undefined)\n        setImportType(e.target.value)\n        setError('')\n        if(uploadFileRef.current)uploadFileRef.current.value = ''\n    }\n    const acceptType = {\n        pd:\".pd\",\n        excel:\".xls,.xlsx\",\n        git:\".mm\",\n        json:\".mm\"\n    }\n    useEffect(()=>{\n        if(submit){\n            setSubmit(false)\n            setError('')\n            var err = validate({importType,ftypeRef,uploadFileRef,projRef,gitBranchRef,gitVerRef,gitPathRef,sheetRef})\n            if(err){\n                return;\n            }\n            var importData = fileUpload;\n            (async()=>{\n                if(importType === 'git'){\n                    var data = await importGitMindmap ({\n                        projectid : projRef.current.value,\n                        gitbranch : gitBranchRef.current.value,\n                        gitversion : gitVerRef.current.value,\n                        gitfolderpath : gitPathRef.current.value\n                    })\n                    if(data.error){setImportPop(false);displayError(data.error);return;}\n                    var importProj = data.projectid\n                    if(!importProj || !projList[importProj]){\n                        displayError('This project is not assigned to user')\n                        return;\n                    }\n                    var res = await importMindmap(data)\n                    if(res.error){setError(res.error);setBlockui({show:false});return;}\n                    var req={\n                        tab:\"tabCreate\",\n                        projectid:data.projectid,\n                        version:0,\n                        cycId: null,\n                        moduleid:res._id\n                    }\n                    var res = await getModules(req)\n                    if(res.error){displayError(res.error);return;}\n                    importData = res\n                }\n                loadImportData({\n                    importType,\n                    importData, \n                    importProj:projRef.current ? projRef.current.value: undefined,\n                    sheet:sheetRef.current? sheetRef.current.value: undefined,\n                    dispatch:dispatch,\n                    displayError:displayError,\n                    setBlockui:setBlockui,\n                    setOptions:setOptions,\n                    setImportPop:setImportPop\n                })\n            })()\n        }\n    },[submit])\n    return(\n        <div data-test='mp__import-popup' className = 'mp__import-popup'>\n            <div>\n                <label>Import As: </label>\n                <select className='imp-inp' defaultValue={'def-val'} onChange={changeImportType} ref={ftypeRef}>\n                    <option value={'def-val'} disabled>Select Export Format</option>\n                    <option value={'pd'}>AvoDisovery (.pd)</option>\n                    <option value={'excel'}>Excel Workbook (.xls,.xlsx)</option>\n                    <option value={'git'}>Git (.mm)</option>\n                    <option value={'json'}>MindMap (.mm)</option>\n                </select>\n            </div>\n            {importType &&\n                <Fragment>\n                    {(importType==='git')?\n                        <Fragment>\n                            <div>\n                                <label>Project: </label>\n                                <select className='imp-inp' defaultValue={'def-val'} ref={projRef}>\n                                    <option value={'def-val'} disabled>Select Project</option>\n                                    {Object.entries(projList).map((e,i)=>\n                                    <option value={e[1].id} key={i}>{e[1].name}</option>\n                                )}\n                                </select>\n                            </div>\n                            <div>\n                                <label>Git Branch: </label>\n                                <input onChange={(e)=>e.target.value=e.target.value.replaceAll(\" \",\"\")} placeholder={'Branch name'} ref={gitBranchRef}/>\n                            </div>\n                            <div>\n                                <label>Version: </label>\n                                <input onChange={(e)=>e.target.value=e.target.value.replaceAll(\" \",\"\")} placeholder={'Version name'} ref={gitVerRef}/>\n                            </div>\n                            <div>\n                                <label>Folder Path: </label>\n                                <input placeholder={'Ex: Projectname/Modulename'} ref={gitPathRef}/>\n                            </div>\n                        </Fragment>:\n                        <div>\n                            <label>Upload File: </label>\n                            <input accept={acceptType[importType]} type='file' onChange={upload} ref={uploadFileRef}/>\n                        </div>\n                    }\n                </Fragment>\n            }\n            {fileUpload &&\n                <Fragment>\n                    {(importType==='json')?\n                    <div>\n                        <label>Project: </label>\n                        <select className='imp-inp' disabled={true} defaultValue={fileUpload.projectID} ref={projRef}>\n                            <option value={fileUpload.projectID} disabled>{projList[fileUpload.projectID].name}</option>\n                        </select>\n                    </div>\n                    :null}\n                    {(importType==='pd')?\n                    <div>\n                        <label>Project: </label>\n                        <select className='imp-inp' defaultValue={'def-val'} ref={projRef}>\n                            <option value={'def-val'} disabled>Select Project</option>\n                            {(()=>{\n                                var appType = getApptypePD(fileUpload)\n                                return Object.entries(projList).map((e)=>{\n                                    if(appType === e[1].apptypeName.toLowerCase()){\n                                        return <option value={e[1].id} key={e[0]}>{e[1].name}</option>\n                                    }\n                                })\n                            })()       \n                            }\n                        </select>\n                    </div>:null\n                    }\n                    {(importType==='excel')?\n                    <Fragment>\n                    <div>\n                        <label>Project: </label>\n                        <select className='imp-inp' defaultValue={'def-val'} ref={projRef}>\n                            <option value={'def-val'} disabled>Select Project</option>\n                            {Object.entries(projList).map((e,i)=>\n                            <option value={e[1].id} key={i}>{e[1].name}</option>\n                        )}\n                        </select>\n                    </div>\n                    <div>\n                        <label>Select Sheet: </label>\n                        <select defaultValue={\"def-val\"} ref={sheetRef}>\n                            <option value=\"def-val\" disabled>Please Select Sheet</option>\n                            {sheetList.map((e,i)=><option value={e} key={i}>{e}</option>)}\n                        </select>\n                    </div>\n                    </Fragment>\n                    :null}\n                </Fragment>\n            }\n        </div>\n    )\n}\n// Footer for sheet choose popup\nconst Footer = ({error,setSubmit}) =>{\n    return(\n      <Fragment>\n            <div className='mnode__buttons'>\n                <label className='err-message'>{error}</label>\n                <button onClick={()=>setSubmit(true)}>Import</button>\n            </div>\n      </Fragment>\n    )\n}\n\nconst validate = ({ftypeRef,uploadFileRef,projRef,gitBranchRef,gitVerRef,gitPathRef,sheetRef}) =>{\n    var err = false;\n    [ftypeRef,uploadFileRef,projRef,gitBranchRef,gitVerRef,gitPathRef,sheetRef].forEach((e)=>{\n        if(e.current){\n            e.current.style.border = '1px solid black';\n            if(e.current.value === 'def-val'){\n                e.current.style.border = '1px solid red';\n                err = true\n            }\n            if(e.current.type === 'file' && !uploadFileRef.current.files[0]){\n                e.current.style.border = '1px solid red';\n                err = true\n            }\n        }\n    })\n    return err\n}\n\n// loadImportData :\n// imports all the data to mindmapCanvas by setting moduleData based on type\n// createnew should be true for all import except mm because nodes will be not created it will be revoked from saved data\n\nconst loadImportData = async({importData,sheet,importType,importProj,dispatch,displayError,setBlockui,setImportPop,setOptions}) =>{\n    var mindmapData = importData\n    setBlockui({content:'Importing ...',show:true})\n    if(importType === 'excel'){\n        var res = await excelToMindmap({'content':importData,'flag':'data',sheetname: sheet})\n        if(res.error){displayError(res.error);return;}\n        res.forEach((e, i) =>{\n            if (!validNodeDetails(e.name)) validate = false;\n        });\n        if(!validate){\n            displayError('Some node names are invalid!');return;\n        }\n        mindmapData = {createnew:true,importData:{createdby:'excel',data:res}} \n    }\n    if(importType === 'pd'){\n        var res =  await pdProcess({'projectid':importProj,'file':importData})\n        if(res.error){displayError(res.error);return;}\n        var data = getJsonPd(res.data)\n        mindmapData = {createnew:true,importData:{createdby:'pd',data:data}}\n    }\n    var moduledata = await getModules({\"tab\":\"tabCreate\",\"projectid\":importProj,\"moduleid\":null})\n    if(moduledata.error){displayError(moduledata.error);return;}\n    var screendata = await getScreens(importProj)\n    if(screendata.error){displayError(screendata.error);return;}\n    dispatch({type:actionTypes.IMPORT_MINDMAP,payload:{\n            selectProj : importProj,\n            selectModule : mindmapData,\n            screenData : screendata,\n            moduleList : moduledata,\n        }\n    })\n    setImportPop(false)\n    setOptions('importmindmap')\n}\n\nconst uploadFile = async({uploadFileRef,setSheetList,setError,setFiledUpload,projList,setData,fileImport,setBlockui}) =>{\n    var file = uploadFileRef.current.files[0]\n    if(!file)return;\n    var extension = file.name.substr(file.name.lastIndexOf('.')+1)\n    setBlockui({content:'Uploading ...',show:true})\n    try{\n        const result =  await read(file)\n        if(extension === 'pd'){\n            var appType = getApptypePD(result)\n            var projFlag = false\n            Object.keys(projList).map((e)=>{\n                if(appType === projList[e].apptypeName.toLowerCase()){\n                    projFlag = true ;\n                }\n            })\n            if(projFlag){\n                setFiledUpload(result)\n            }else{\n                setError(\"no project of same apptype is assigned to the user\")\n            }\n        }else if(extension === 'xls' || extension === 'xlsx'){\n            var res = await excelToMindmap({'content':result,'flag':\"sheetname\"})\n            setBlockui({show:false})\n            if(res.error){setError(res.error);return;}\n            if(res.length>0){\n                setFiledUpload(result)\n                setSheetList(res)\n            }else{\n                setError(\"File is empty\")\n            }\n        }else if(extension === 'json' || extension === 'mm'){\n            var data = JSON.parse(result);\n            if (!('testscenarios' in data)){\n                setError(\"Incorrect JSON imported. Please check the contents!!\");\n            }else if(data.testscenarios.length === 0){\n                setError(\"The file has no node structure to import, please check!!\");\n            }else{\n                var importProj = data.projectid\n                if(!importProj || !projList[importProj]){\n                    setError('This project is not assigned to user')\n                    setBlockui({show:false})\n                    return;\n                }\n                var res = await importMindmap(data)\n                if(res.error){setError(res.error);setBlockui({show:false});return;}\n                var req={\n                    tab:\"tabCreate\",\n                    projectid:data.projectid,\n                    version:0,\n                    cycId: null,\n                    moduleid:res._id\n                }\n                res = await getModules(req)\n                if(res.error){setError(res.error);setBlockui({show:false});return;}\n                setFiledUpload(res)\n            }\n        }else{\n            setError(\"File is not supported\")\n        }    \n        setBlockui({show:false})\n    }catch(err){\n        setBlockui({show:false})\n        setError(\"invalid File!\")\n        console.error(err)\n    }\n}\n\n// read promise that resolves on successful input file read\nfunction read(file) {\n    return new Promise ((res,rej)=>{\n        var reader = new FileReader();\n        reader.onload = function() {\n        res(reader.result);\n        }\n        reader.onerror = () => {\n        rej(\"fail\")\n        }\n        reader.onabort = () =>{\n        rej(\"fail\")\n        }\n        reader.readAsBinaryString(file);\n    })\n}\n\nconst validNodeDetails = (value) =>{\n    var nName, flag = !0;\n    nName = value;\n    var regex = /^[a-zA-Z0-9_]*$/;;\n    if (nName.length == 0 || nName.length > 255 || nName.indexOf('_') < 0 || !(regex.test(nName)) || nName== 'Screen_0' || nName == 'Scenario_0' || nName == 'Testcase_0') {\n        flag = !1;\n    }\n    return flag;\n};\n\n\nImportMindmap.propTypes={\n    setImportPop : PropTypes.func.isRequired,\n    setBlockui :  PropTypes.func.isRequired,\n    displayError : PropTypes.func.isRequired,\n    setOptions :   PropTypes.func.isRequired\n}\n\nexport default ImportMindmap;","import React, { useState} from 'react';\nimport { Rnd } from \"react-rnd\";\nimport '../styles/SearchBox.scss'\nimport * as d3 from 'd3';\n\nvar idxSearch = 0\nvar nodeID ;\nvar drag;\n\n/*Component SearchBox\n  use: returns floating search box\n  props: setCtScale,zoom\n*/\nconst SearchBox = (props) => {\n    const [inp,setInp] = useState (false)\n    const [err,setErr] = useState(false)\n    var filter = []\n    const onSearch = (e) =>{\n        if(nodeID)d3.select('#'+nodeID).classed('searched-node',false)\n        var val = e.target.value\n        const reg = /[^a-zA-Z0-9_]+/;\n        if(val === '')return;\n        if(reg.test(val)){\n            setErr(true)\n            return;\n        }\n        setErr(false)\n        var elem = document.getElementsByClassName('ct-node-title');\n        filter = [...elem].filter((e)=>e.innerHTML.toUpperCase().indexOf(val.toUpperCase())!==-1)\n        if (filter.length === 0) {\n            if (val !== '')\n                setErr(true)\n            return;\n        }\n        if (e.key === \"Enter\") {\n            idxSearch = (idxSearch + 1) % filter.length;\n        } else {\n            idxSearch = 0;\n        }\n        nodeID = filter[idxSearch].parentElement.id\n        var nodetf = filter[idxSearch].parentElement.attributes.transform.value\n        var mptf =  d3.select('.ct-container').attr('transform')\n        var s = d3.select('.mp__canvas_svg');\n        var center = [parseFloat(s.style(\"width\"))/2, parseFloat(s.style(\"height\"))/2];\n        var x_mptf = parseInt(mptf.split(/[()]/)[1].split(',')[0]);\n        var y_mptf = parseInt(mptf.split(/[()]/)[1].split(',')[1]);\n        var scale_mptf = 1; \n        var x_nodetf = parseInt(nodetf.split(/[()]/)[1].split(',')[0]);\n        var y_nodetf = parseInt(nodetf.split(/[()]/)[1].split(',')[1]);\n        //Approx cordinates of node: mindmap translate + nodetf/mpscale\n        var ccord = [x_mptf + (x_nodetf / scale_mptf), y_mptf + (y_nodetf / scale_mptf)];\n        var x = x_mptf - ccord[0] + center[0] - 40\n        var y = y_mptf - ccord[1] + center[1] - 20\n        props.zoom.scale(scale_mptf).translate([x,y])\n        // props.zoom.event(d3.select('#ct-mindMap'));\n        d3.select('.ct-container').attr(\"transform\", \"translate(\" +x+','+y+ \")scale(\" + 1 + \")\");\n        d3.select('#'+nodeID).classed('searched-node',!0)\n        props.setCtScale({x:x,y:y,k:1})\n    }\n    return(\n        <Rnd enableResizing={false} default={{x:10,y:10}} bounds=\"parent\">\n            <div id=\"search-canvas-icon\" data-test='SearchCanvas'>\n                <img data-test=\"searchIcon\" alt=\"Search Icon\" onClick={(e)=>{\n                    if(drag){drag=false; return;}\n                    setInp(!inp)}\n                    } \n                className=\"searchimg-canvas\" src=\"static/imgs/ic-search-icon.png\"/>\n                <input data-test=\"searchBox\" type=\"text\" onKeyPress={(e)=>{if(e.key==='Enter')onSearch(e)}} onChange={(e)=>onSearch(e)} className={\"search-canvas\"+(inp?\" search-visible\":\"\")+(err?\" inputErrorBorderFull\":\"\")} placeholder=\"Search Node..\"/>\n            </div>\n        </Rnd>\n\n    )\n}\n\nexport default SearchBox;","import React, { useEffect , useState} from 'react';\nimport { Rnd } from \"react-rnd\";\nimport d3 from \"d3\"\nimport '../styles/NavButton.scss'\n\n/*Component NavButton\n  use: returns floating NavButton with 4 directional movement and zoom +/-\n*/\n\nvar interval;\nconst NavButton = (props) => {\n    const [move,setMove] = useState(false)\n    useEffect(()=>{\n        if(move === false){\n            if(interval)clearInterval(interval);\n            return;\n        }else{\n        interval = setInterval(()=>{\n            var offset = -20\n            var factor = 0.2\n            var extent = [0.1, 3]\n            var s = d3.select('.mp__canvas_svg');\n            var center = [parseFloat(s.style(\"width\"))/2, parseFloat(s.style(\"height\"))/2];\n            var mptf =  d3.select('.ct-container').attr('transform')\n            var x = parseInt(mptf.split(/[()]/)[1].split(',')[0]) \n            var y = parseInt(mptf.split(/[()]/)[1].split(',')[1]);\n            var k = mptf.split(/[()]/)[3]\n            var t = [(center[0] - x) / k, (center[1] - y) / k];\n            switch (move) {\n                case \"left\":\n                    x -= offset;\n                    break;\n                case \"up\":\n                    y -= offset;\n                    break;\n                case \"right\":\n                    x += offset;\n                    break;\n                case \"down\":\n                    y += offset;\n                    break;\n                case \"zoom-up\":\n                    k =  k * (1 + factor);\n                    x += center[0] - (t[0] * k + x);\n                    y += center[1] - (t[1] * k + y);\n                    break;\n                case \"zoom-down\":\n                    k =  k * (1 - factor);\n                    x += center[0] - (t[0] * k + x);\n                    y += center[1] - (t[1] * k + y);\n                    break;\n                default:\n                    return;\n            }\n            if (k < extent[0] || k > extent[1]){\n                setMove(false)\n            }else{\n                interpolateZoom([x, y], k,props.zoom);\n            }\n        },40)}\n   },[move,props.zoom])\n\n    return(                                                                     \n        <Rnd enableResizing={false} default={{x:100,y:90}} bounds=\"parent\">\n            <div id=\"navigate-widget\">\n                <div className=\"arrow-box\">\n                    <p>\n                        <i data-test=\"upArrow\" className=\"arrow-box-ic up\" onMouseUp={()=>{setMove(false)}} onMouseDown={()=>setMove('up')}></i>\n                    </p>\n                    <p>\n                        <i data-test=\"leftArrow\" className=\"arrow-box-ic left\" onMouseUp={()=>{setMove(false)}} onMouseDown={()=>setMove('left')}></i>\n                        <i data-test=\"rightArrow\" className=\"arrow-box-ic right\" onMouseUp={()=>{setMove(false)}} onMouseDown={()=>{setMove('right')}}></i>\n                    </p>\n                    <p>\n                        <i data-test=\"downArrow\" className=\"arrow-box-ic down\" onMouseUp={()=>{setMove(false)}} onMouseDown={()=>setMove('down')}></i>\n                    </p>\n                </div>\n                <div className=\"zoom-box\">\n                    <div><button data-test=\"zoomInBtn\" className=\"zoom-btn\" id=\"zoom_in\" onMouseUp={()=>{setMove(false)}} onMouseDown={()=>setMove('zoom-up')}><span>+</span></button></div>\n                    <div><button data-test=\"zoomOutBtn\"className=\"zoom-btn\" id=\"zoom_out\" onMouseUp={()=>{setMove(false)}} onMouseDown={()=>setMove('zoom-down')}><span>-</span></button></div>\n                </div>      \n            </div>\n        </Rnd>\n    )\n}\n\nfunction interpolateZoom(translate, scale, zoom) {\n    return d3.transition().duration(350).tween(\"zoom\", function() {\n        var iTranslate = d3.interpolate(zoom.translate(), translate),\n            iScale = d3.interpolate(zoom.scale(), scale);\n        return function(t) {\n            zoom\n                .scale(iScale(t))\n                .translate(iTranslate(t));\n                d3.select('.ct-container').attr(\"transform\", \"translate(\" +translate[0]+','+translate[1]+ \")scale(\" + scale + \")\");\n        };\n    });\n}\n\nexport default NavButton;","import React, { Fragment, useState } from 'react';\nimport {PopupMsg, ScreenOverlay} from '../../global'\nimport ImportMindmap from './ImportMindmap';\nimport '../styles/CreateOptions.scss'\n\n/*Component CreateOptions\n  use: renders 3 options to create mindmap in the center of screen\n  props: \n    setoptions from mindmapHome.js \n*/\n\nconst CreateOptions = (props) => {\n  const [importPop,setImportPop] = useState(false)\n  const [popup,setPopup] = useState({show:false})\n  const [blockui,setBlockui] = useState({show:false})\n  const options = [\n    {ico : \"ic-create-newMindmap.png\",label:'Create New',comp:'newmindmap'},\n    {ico : \"ic-endtoendFlow.png\",label:'End to End Flow',comp:'enemindmap'},\n    {ico :\"ic-importfromexcel-mindmap.png\",label:'Import Mindmap',comp:'importmindmap'}\n  ]\n  const displayError = (error) =>{\n    setBlockui({show:false})\n    setPopup({\n      title:'ERROR',\n      content:error,\n      submitText:'Ok',\n      show:true\n    })\n  }\n  return (\n    <Fragment>\n      {(blockui.show)?<ScreenOverlay content={blockui.content}/>:null}\n      {(popup.show)?<PopupMsg submit={()=>setPopup({show:false})} close={()=>setPopup({show:false})} title={popup.title} content={popup.content} submitText={popup.submitText}/>:null}\n      {importPop?<ImportMindmap setBlockui={setBlockui} setOptions={props.setOptions} displayError={displayError} setImportPop={setImportPop}/>:null}\n      <div className='mindmap__option-container'>\n        <div>\n          {options.map((e,i)=>(\n            <div className='mindmap__option-box' onClick={()=>{(e.comp === 'importmindmap')?setImportPop(true):props.setOptions(e.comp)}} key={i} data-test=\"OptionBox\">\n              <div>\n                <img src={\"static/imgs/\"+e.ico} alt={e.label}/>\n                <div>{e.label}</div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default CreateOptions;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {saveMindmap,getModules,getScreens} from '../api';\nimport * as d3 from 'd3';\nimport * as actionTypes from '../state/action';\nimport '../styles/SaveMapButton.scss'\n\n/*Component SaveMapButton\n  use: renders save button below canvas on click trigers save node\n  for assingn send isAssign={true}\n  for end send isEnE={true}\n  props.createnew is to auto save imported mindmap\n*/\n\nconst SaveMapButton = (props) => {\n    const dispatch = useDispatch()\n    const deletedNodes = useSelector(state=>state.mindmap.deletedNodes)\n    const unassignTask = useSelector(state=>state.mindmap.unassignTask)\n    const projId = useSelector(state=>state.mindmap.selectedProj)\n    const initEnEProj = useSelector(state=>state.mindmap.initEnEProj)\n    const projectList = useSelector(state=>state.mindmap.projectList)\n    useEffect(()=>{\n        if(props.createnew==='save')clickSave()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[props.createnew])\n    const clickSave = ()=>{\n        saveNode(props.setBlockui,props.dNodes,projId,props.cycId,props.setPopup,deletedNodes,unassignTask,dispatch,props.isEnE,props.isAssign,projectList,initEnEProj)\n    }\n    return(\n        <svg data-test=\"saveSVG\" className={\"ct-actionBox\"+(props.disabled?\" disableButton\":\"\")} id=\"ct-save\" onClick={clickSave}>\n            <g id=\"ct-saveAction\" className=\"ct-actionButton\">\n                <rect x=\"0\" y=\"0\" rx=\"12\" ry=\"12\" width=\"80px\" height=\"25px\"></rect>\n                <text x=\"23\" y=\"18\">Save</text>\n            </g>\n        </svg>\n    )\n}\n\n//mindmap save funtion\nconst saveNode = async(setBlockui,dNodes,projId,cycId,setPopup,deletedNodes,unassignTask,dispatch,isEnE,isAssign,projectList,initEnEProj)=>{\n    var tab = \"tabCreate\"\n    var layout_vertical = false;\n    var selectedProject;\n    var error = !1\n    var mapData = []\n    var flag = 10 \n    var temp_data = [];\n    var counter = {};\n    var displayError = (error) => {\n        setBlockui({show:false});\n        setPopup({show:true,title:'Error',content:((error)?error:'Error while Saving'),submitText:'Ok'})\n        return;\n    }\n    d3.select('#pasteImg').classed('active-map',false)\n    d3.select('#copyImg').classed('active-map',false)\n    d3.selectAll('.ct-node').classed('node-selected',false)   \n    if (d3.select('#ct-save').classed('disableButton')) return;\n    var namelist = dNodes.map((e)=>{\n        if(e._id && e.type === 'screens' && e.state !== \"deleted\")return e.name;\n        return undefined;\n    })\n    var duplicateNode = dNodes.every((e,i)=>{\n        if(e._id && e.type === 'screens' && e.state!== \"deleted\"){\n            return namelist.indexOf(e.name) === i || dNodes[namelist.indexOf(e.name)]._id === e._id\n        } return true;\n    })\n    if(!duplicateNode){\n        setPopup({show:true,title:'Error',content:'Duplicate screen name found.Create new screen to reuse',submitText:'Ok'})\n        return;\n    }\n    setBlockui({show:true,content:'Saving flow! Please wait...'})\n    dNodes.forEach((e, i)=>{\n        if (i === 0) return;\n        temp_data[i] = {\n            idx: i,\n            x: e.x,\n            y: e.y,\n            type: e.type\n        };\n    });\n    if (layout_vertical) {\n        temp_data.sort((a, b)=>a.x - b.x);\n    } else {\n        temp_data.sort((a, b)=>a.y - b.y);\n    }\n    temp_data.forEach((e)=>{\n        // var key_1=undefined;\n        if(dNodes[e.idx].parent === null) return;\n        var key_1= dNodes[e.idx].parent.id;\n        var key=e.type+'_'+key_1;\n        if(counter[key] === undefined)  counter[key]=1;\n        if (dNodes[e.idx].childIndex !== counter[key]) {\n            dNodes[e.idx].childIndex = counter[key];\n            dNodes[e.idx].cidxch = 'true'; // child index updated\n        }\n        counter[key] = counter[key] + 1;\n    })\n    treeIterator(mapData, dNodes[0], error);\n    var data = {\n        write: flag,\n        map: mapData,\n        deletednode: deletedNodes,\n        unassignTask: [],\n        prjId: projId,\n        cycId:cycId,\n        createdthrough: \"Web\"\n    }\n    if(isEnE){\n        tab = \"endToend\"\n        data.action = '/saveEndtoEndData'\n        mapData.some((d)=>{\n            if (d.type === 'endtoend') {\n                selectedProject = d.projectID;\n                return true;\n            }\n            return false;\n        });\n        if (selectedProject && selectedProject !== projId) {\n            displayError(\"Module belongs to project: \" +projectList[selectedProject].name+\". Please go back to the same project and Save\");\n            return;\n        }\n        if(!selectedProject && initEnEProj !== projId){\n            displayError(\"Module belongs to project: \" +projectList[initEnEProj].name+\". Please go back to the same project and Save\");\n            return;\n        }\n    }\n    if(isAssign){\n        tab = \"tabAssign\"\n        // if (dNodes[0].type == 'endtoend') {\n        //     cur_module = 'end_to_end';\n        //     error = false;\n        // } else {\n        //     //Part of Issue 1685\n        //     cur_module = \"tabAssign\"\n        // }\n        data = {\n            ...data,\n            tab : \"tabAssign\",\n            cycId:cycId,\n            write : 30,\n            unassignTask:unassignTask,\n            sendNotify: {} //{Execute Batch: \"priyanka.r\", Execute Scenario: \"priyanka.r\"}\n        }\n    }\n    var modId = await saveMindmap(data)\n    if(modId.error){displayError(modId.error);return}\n    var moduledata = await getModules({modName:null,cycId:cycId?cycId:null,\"tab\":tab,\"projectid\":projId,\"moduleid\":null})\n    if(moduledata.error){displayError(moduledata.error);return}\n    var moduleselected = await getModules({modName:null,cycId:cycId?cycId:null,\"tab\":tab,\"projectid\":projId,\"moduleid\":modId})\n    if(moduleselected.error){displayError(moduleselected.error);return}\n    var screendata = await getScreens(projId)\n    if(screendata.error){displayError(screendata.error);return}\n    dispatch({type:actionTypes.SAVE_MINDMAP,payload:{screendata,moduledata,moduleselected}})\n    dispatch({type:actionTypes.SELECT_MODULE,payload:moduleselected})\n    setBlockui({show:false});\n    setPopup({show:true,title:'Success',content:isAssign?'Tasks saved successfully':'Data saved successfully',submitText:'Ok'})\n    return;\n}\n\nconst treeIterator = (c, d, e) =>{\n    if (c !== undefined) {\n        const obj = {\n            projectID: d.projectID,\n            id: d.id,\n            childIndex: d.childIndex,\n            _id: (d._id) ? d._id : null,\n            oid: (d.oid) ? d.oid : null,\n            name: d.name,\n            type: d.type,\n            pid: (d.parent) ? d.parent.id : null,\n            pid_c: (d.parent) ? d.parent.id_c : null,\n            task: (d.task) ? d.task : null,\n            renamed: (d.rnm) ? d.rnm : !1,\n            orig_name: (d.original_name) ? d.original_name : null,\n            taskexists: (d.taskexists) ? d.taskexists : null,\n            state: (d.state) ? d.state : \"created\",\n            cidxch: (d.cidxch) ? d.cidxch : null // childindex changed\n        };\n        if (d.type === 'testcases') obj.screenname = d.parent.name; // **Impact check**\n        c.push(obj);\n    }\n    if (d.children && d.children.length > 0) d.children.forEach(function(t) {\n        e = treeIterator(c, t, e);\n    });\n    else if (d._children && d._children.length > 0) d._children.forEach(function(t) {\n        e = treeIterator(c, t, e);\n    });\n    else if (d.type !== 'testcases') return !0;\n    return e;\n};\n\nexport default SaveMapButton","import React, { useState, useRef, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {getModules,getScreens} from '../api';\nimport '../styles/ToolbarMenu.scss';\nimport * as d3 from 'd3';\nimport * as actionTypes from '../state/action';\nimport PropTypes from 'prop-types'\n\n\n/*Component ToolbarMenu\n  use: renders tool bar menus of create new page\n*/\n\nconst Toolbarmenu = ({setPopup,setBlockui,displayError}) => {\n    const dispatch = useDispatch()\n    const SearchInp = useRef()\n    const selectBox = useSelector(state=>state.mindmap.selectBoxState)\n    const selectNodes = useSelector(state=>state.mindmap.selectNodes)\n    const copyNodes = useSelector(state=>state.mindmap.copyNodes)\n    const prjList = useSelector(state=>state.mindmap.projectList)\n    const initProj = useSelector(state=>state.mindmap.selectedProj)\n    const moduleList = useSelector(state=>state.mindmap.moduleList)\n    const [modlist,setModList] = useState(moduleList)\n    const selectProj = async(proj) => {\n        setBlockui({show:true,content:'Loading Modules ...'})\n        dispatch({type:actionTypes.SELECT_PROJECT,payload:proj})\n        var moduledata = await getModules({\"tab\":\"tabCreate\",\"projectid\":proj,\"moduleid\":null})\n        if(moduledata.error){displayError(moduledata.error);return;}\n        var screendata = await getScreens(proj)\n        if(screendata.error){displayError(screendata.error);return;}\n        setModList(moduledata)\n        dispatch({type:actionTypes.UPDATE_MODULELIST,payload:moduledata})\n        dispatch({type:actionTypes.SELECT_MODULE,payload:{}})\n        if(screendata)dispatch({type:actionTypes.UPDATE_SCREENDATA,payload:screendata})\n        SearchInp.current.value = \"\"\n        setBlockui({show:false})\n    }\n    const searchModule = (val) =>{\n        var filter = modlist.filter((e)=>e.name.toUpperCase().indexOf(val.toUpperCase())!==-1)\n        dispatch({type:actionTypes.UPDATE_MODULELIST,payload:filter})\n    }\n    const CreateNew = () =>{\n        dispatch({type:actionTypes.SELECT_MODULE,payload:{createnew:true}})\n    }\n    const clickSelectBox = () =>{\n        d3.select('#pasteImg').classed('active-map',false)\n        d3.select('#copyImg').classed('active-map',false)\n        d3.selectAll('.ct-node').classed('node-selected',false)\n        dispatch({type:actionTypes.UPDATE_COPYNODES,payload:{nodes:[],links:[]}})\n        dispatch({type:actionTypes.UPDATE_SELECTNODES,payload:{nodes:[],links:[]}})\n        dispatch({type:actionTypes.SELECT_SELECTBOX,payload:!selectBox})\n    }\n    const clickCopyNodes = () =>{\n        if (d3.select('#pasteImg').classed('active-map')) {\n            setPopup({\n                title:'Error',\n                content: 'Cannot copy when the Paste-map icon is active!',\n                submitText:'Ok',\n                show:true\n            })\n            return;\n        }\n        var val = copy({...selectNodes},setPopup,copyNodes)\n        if(val){\n            d3.select('#copyImg').classed('active-map',true)\n            dispatch({type:actionTypes.UPDATE_COPYNODES,payload:selectNodes})\n            dispatch({type:actionTypes.SELECT_SELECTBOX,payload:false})\n            dispatch({type:actionTypes.UPDATE_SELECTNODES,payload:{nodes:[],links:[]}})\n        }\n    }\n    const clickPasteNodes = () =>{\n        if(d3.select('#pasteImg').classed('active-map')){\n            //close paste\n            dispatch({type:actionTypes.UPDATE_COPYNODES,payload:{nodes:[],links:[]}})\n            d3.select('#pasteImg').classed('active-map',false)\n            d3.selectAll('.ct-node').classed('node-selected',false)\n            return;\n        }\n        if (!d3.select('#copyImg').classed('active-map')){\n            setPopup({\n                title:'Error',\n                content: 'Please complete copy step first',\n                submitText:'Ok',\n                show:true\n            })\n            return;\n        }\n        d3.select('#copyImg').classed('active-map',false)\n        paste({...copyNodes},setPopup)\n    }\n    var projectList = Object.entries(prjList)\n    return(\n        <Fragment>\n        <div className='toolbar__header'>\n            <label data-test=\"projectLabel\">Project:</label>\n            <select data-test=\"projectSelect\" value={initProj} onChange={(e)=>{selectProj(e.target.value)}}>\n                {projectList.map((e,i)=><option value={e[1].id} key={i}>{e[1].name}</option>)}\n            </select>\n            <span data-test=\"headerMenu\" className='toolbar__header-menus'>\n                <i className={\"fa fa-crop fa-lg\"+(selectBox?' active-map':'')} title=\"add a rectangle\" onClick={clickSelectBox}></i>\n                <i className=\"fa fa-files-o fa-lg\" title=\"copy selected map\" id='copyImg' onClick={clickCopyNodes}></i>\n                <i className=\"fa fa-clipboard fa-lg\" title=\"Paste map\" id=\"pasteImg\" onClick={clickPasteNodes}></i>\n            </span>\n            <span data-test=\"searchBox\" className='toolbar__header-searchbox'>\n                <input placeholder=\"Search Modules\" ref={SearchInp} onChange={(e)=>searchModule(e.target.value)}></input>\n                <img src={\"static/imgs/ic-search-icon.png\"} alt={'search'}/>\n            </span>\n            <button data-test=\"createNew\" className='btn' title=\"Create New Mindmap\" onClick={()=>CreateNew()}>Create New</button>\n        </div>\n        </Fragment>\n    )\n}\n\n//check for paste errors and paste action\nconst paste = (copyNodes,setPopup) =>{\n    var dNodes_c = copyNodes.nodes\n    var module_check_flag = false\n    if(dNodes_c.length === 0){\n        setPopup({\n            title:'Error',\n            content:'Nothing to paste',\n            submitText:'Ok',\n            show:true\n        })\n        return false;\n    }\n    d3.select('#pasteImg').classed('active-map',true)\n    d3.selectAll('.ct-node').classed('node-selected',false)\n    module_check_flag = dNodes_c.some(e => e.type === 'scenarios'); // then check for dangling screen\n    if (module_check_flag) {\n        //highlight module\n        d3.selectAll('[data-nodetype=modules]').classed('node-selected',true);\n    } else {\n        //highlight scenarios\n        d3.selectAll('[data-nodetype=scenarios]').classed('node-selected',true);\n    }\n}\n\n//check for dangling errors and and copy action\nconst copy = (selectNodes,setPopup,copyNodes) =>{\n    var dNodes_c = selectNodes.nodes\n    var dLinks_c = selectNodes.links\n    var dangling_screen_check_flag = false\n    var dangling_screen ;\n    var dangling_screen_flag = false\n    var ds_list = [];\n    if(dNodes_c.length === 0){\n        if(copyNodes.nodes.length>0){\n            setPopup({\n                title:'Warning',\n                content:'Click on paste-map icon to paste copied nodes',\n                submitText:'Ok',\n                show:true\n            })\n            return false\n        }\n        setPopup({\n            title:'Warning',\n            content:'Nothing is copied',\n            submitText:'Ok',\n            show:true\n        })\n        return false;\n    }\n    dangling_screen_check_flag = dNodes_c.some(e => e.type === 'scenarios'); // then check for dangling screen\n    if (dangling_screen_check_flag) {\n        dNodes_c.forEach((e)=>{\n            if (e.type === 'screens') {\n                dangling_screen = true;\n                dLinks_c.forEach((f)=>{\n                    if (parseFloat(e.id) === parseFloat(f.target.id))\n                        dangling_screen = false;\n                })\n                if (dangling_screen) {\n                    dangling_screen_flag = true;\n                    ds_list.push(e);\n                }\n            }\n        })\n    }\n    if (dangling_screen_flag) {\n        setPopup({\n            title:'Error',\n            content: 'dangling screen!!! validation failed!',\n            submitText:'Ok',\n            show:true\n        })\n        ds_list.forEach((e) =>{\n            d3.select('#node_' + e.id).classed('node-error',true);\n        });\n        return false;\n    }\n    setPopup({\n        title:'Success',\n        content: 'Data Copied successfully',\n        submitText:'Ok',\n        show:true\n    })\n    return true;\n}\nToolbarmenu.propTypes={\n    setPopup:PropTypes.func,\n    setBlockui:PropTypes.func,\n    displayError:PropTypes.func\n}\nexport default Toolbarmenu;","import React, { useState, Fragment} from 'react';\nimport { useSelector, useDispatch} from 'react-redux';\nimport {getModules}  from '../api'\nimport {ScrollBar,ModalContainer} from '../../global';\nimport {ScreenOverlay} from '../../global'\nimport * as actionTypes from '../state/action';\nimport '../styles/ModuleListDrop.scss'\n\n/*Component ModuleListDrop\n  use: renders \n  props: \n    setoptions from mindmapHome.js \n*/\n\nconst ModuleListDrop = (props) =>{\n    const dispatch = useDispatch()\n    const moduleList = useSelector(state=>state.mindmap.moduleList)\n    const proj = useSelector(state=>state.mindmap.selectedProj)\n    const moduleSelect = useSelector(state=>state.mindmap.selectedModule)\n    const [moddrop,setModdrop]=useState(false)\n    const [warning,setWarning]=useState(false)\n    const [loading,setLoading] = useState(false)\n    const isAssign = props.isAssign\n    const selectModule = (e) => {\n        var modID = e.target.getAttribute(\"value\")\n        if(Object.keys(moduleSelect).length===0){\n            loadModule(modID)\n            return;\n        }else{\n            setWarning(modID)\n        }\n    }\n    const loadModule = async(modID) =>{\n        dispatch({type:actionTypes.SELECT_MODULE,payload:{}})\n        setModdrop(false)\n        setWarning(false)\n        setLoading(true)\n        var req={\n            tab:\"tabCreate\",\n            projectid:proj,\n            version:0,\n            cycId: null,\n            // modName:\"\",\n            moduleid:modID\n        }\n        if(isAssign){\n            req.tab = \"tabAssign\"\n            req.cycId = props.cycleRef.current?props.cycleRef.current.value: \"\"\n        }\n        var res = await getModules(req)\n        if(res.error){displayError(res.error);return}\n        if(isAssign && res.completeFlow === false){\n            displayError(\"Please select a complete flow to assign tasks.\")\n            return;\n        }\n        dispatch({type:actionTypes.SELECT_MODULE,payload:res})\n        setLoading(false)\n    }\n    const displayError = (err) =>{\n        setLoading(false)\n        props.setPopup({\n          title:'ERROR',\n          content:err,\n          submitText:'Ok',\n          show:true\n        })\n    }\n    return(\n        <Fragment>\n            {loading?<ScreenOverlay content={'Loading Mindmap ...'}/>:null}\n            {warning?<ModalContainer \n                title='Confirmation'\n                close={()=>setWarning(false)}\n                footer={<Footer modID={warning} loadModule={loadModule} setWarning={setWarning} />}\n                content={<Content/>} \n                modalClass='modal-sm'\n            />:null}\n            {(moddrop)?\n                <div data-test=\"moduleList\" id='toolbar_module-list' className='toolbar__module-container'>\n                    <ScrollBar scrollId='toolbar_module-list' trackColor={'transperent'} thumbColor={'grey'}> \n                        {moduleList.map((e,i)=>{\n                            return(\n                                <div data-test=\"modules\" onClick={(e)=>selectModule(e)} value={e._id} key={i} className={'toolbar__module-box'+((moduleSelect._id===e._id)?\" selected\":\"\")}>\n                                    <img value={e._id}  src={'static/imgs/'+(e.type===\"endtoend\"?\"node-endtoend.png\":\"node-modules.png\")} alt='module'></img>\n                                    <span value={e._id} >{e.name}</span>\n                                </div>\n                            )\n                        })}\n                    </ScrollBar>\n                </div>\n                :null\n            }\n            <div data-test=\"dropDown\" className={'toolbar__module-footer'+ (moddrop?' z-up':'')} onClick={()=>setModdrop(!moddrop)}>\n                <div><i className={(!moddrop)?\"fa fa-caret-down\":\"fa fa-caret-up\"} title=\"Drop down button\"></i></div>\n            </div>\n        </Fragment>\n    )\n}\n\n//content for moduleclick warning popup\nconst Content = () => (\n    <p>Unsaved work will be lost if you continue. Do you want to continue?</p>\n)\n\n//footer for moduleclick warning popup\nconst Footer = (props) => (\n    <div className='toolbar__module-warning-footer'>\n        <button className='btn-yes' onClick={()=>props.loadModule(props.modID)}>Yes</button>\n        <button onClick={()=>{props.setWarning(false)}}>No</button>\n    </div>\n)\n\nexport default ModuleListDrop;","import React, { Fragment } from 'react';\nimport '../styles/Legends.scss'\n\n/*Component Legends\n  use: returns static legends at the bottom of the screen\n  for ene send isEnE={true}\n*/\n\nconst Legends = ({isEnE}) => {\n    return(\n        <svg className=\"ct-legendBox\">\n            <g  transform=\"translate(10,10)\">\n                <g data-test=\"modules\">\n                    <circle className=\"ct-modules\" cx=\"0\" cy=\"0\" r=\"10\"></circle>\n                    <text className=\"ct-nodeLabel\" x=\"15\" y=\"3\">Modules</text>\n                </g>\n                <g data-test=\"scenarios\">\n                    <circle className=\"ct-scenarios\" cx=\"90\" cy=\"0\" r=\"10\"></circle>\n                    <text className=\"ct-nodeLabel\" x=\"105\" y=\"3\">Scenarios</text>\n                </g>\n                {!isEnE?\n                <Fragment>\n                    <g data-test=\"screens\">\n                        <circle className=\"ct-screens\" cx=\"180\" cy=\"0\" r=\"10\"></circle>\n                        <text className=\"ct-nodeLabel\" x=\"195\" y=\"3\">Screens</text>\n                    </g>\n                    <g data-test=\"testcases\">\n                        <circle className=\"ct-testcases\" cx=\"270\" cy=\"0\" r=\"10\"></circle>\n                        <text className=\"ct-nodeLabel\" x=\"285\" y=\"3\">Test Cases</text>\n                    </g>\n                </Fragment>\n                :null}\n            </g>\n        </svg>\n    )\n}\n\nexport default Legends;","import React, { useEffect } from 'react';\nimport ClickAwayListener from 'react-click-away-listener';\nimport '../styles/ControlBox.scss'\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types'\n\n/*Component ControlBox\n  use: returns node control options \n  props={nid:'nodeid',clickAdd:function to add node,ctScale:{x:1,y:1,k:1}\n*/\n\nconst ControlBox = (props) => {\n    var faRef = {\n        \"plus\": \"fa-plus\",\n        \"plus1\": \"fa-hand-peace-o\",\n        \"edit\": \"fa-pencil-square-o\",\n        \"delete\": \"fa-trash-o\"\n    };\n    var ctScale = props.ctScale;\n    var isEnE = props.isEnE;\n    var p = d3.select('#'+props.nid);\n    p.classed('node-highlight',!0)\n    var t = p.attr('data-nodetype');\n    useEffect(()=>{\n        var split_char = ',';\n        var l = p.attr('transform').slice(10, -1).split(split_char);\n        l = [(parseFloat(l[0]) + 40) * ctScale.k + ctScale.x, (parseFloat(l[1]) + 40) * ctScale.k + ctScale.y];\n        var c = d3.select('#ct-ctrlBox').style('top', l[1] + 'px').style('left', l[0] + 'px')\n        if(isEnE){\n            if(t==='endtoend'){\n                c.select('p.' + faRef.plus).classed('ct-ctrl-hide', !0);\n                c.select('p.' + faRef.plus1).classed('ct-ctrl-hide', !0);\n                c.select('p.' + faRef.edit).classed('ct-ctrl-inactive', !1);\n                c.select('p.' + faRef.edit + ' .ct-tooltiptext').html('Edit End to End Module');\n                c.select('p.' + faRef.delete).classed('ct-ctrl-inactive', !0);\n            }else{\n                c.select('p.' + faRef.plus).classed('ct-ctrl-hide', !0);\n                c.select('p.' + faRef.plus1).classed('ct-ctrl-hide', !0);\n                c.select('p.' + faRef.edit).classed('ct-ctrl-inactive', !0);\n                c.select('p.' + faRef.delete).classed('ct-ctrl-inactive', !1);\n                c.select('p.' + faRef.delete + ' .ct-tooltiptext').html('Delete Scenario');\n            }\n        }else if (t === 'modules') {\n            c.select('p.' + faRef.plus).classed('ct-ctrl-inactive', !1);\n            c.select('p.' + faRef.plus + ' .ct-tooltiptext').html('Create Scenarios');\n            c.select('p.' + faRef.plus1).classed('ct-ctrl-inactive', !1);\n            c.select('p.' + faRef.plus1 + ' .ct-tooltiptext').html('Create Multiple Scenarios');\n            c.select('p.' + faRef.edit + ' .ct-tooltiptext').html('Edit Module');\n            c.select('p.' + faRef.delete).classed('ct-ctrl-inactive', !0);\n        } else if (t === 'scenarios') {\n            c.select('p.' + faRef.plus).classed('ct-ctrl-inactive', !1);\n            c.select('p.' + faRef.plus + ' .ct-tooltiptext').html('Create Screens');\n            c.select('p.' + faRef.plus1).classed('ct-ctrl-inactive', !1);\n            c.select('p.' + faRef.plus1 + ' .ct-tooltiptext').html('Create Multiple Screens');\n            c.select('p.' + faRef.edit + ' .ct-tooltiptext').html('Edit Scenario');\n            c.select('p.' + faRef.delete).classed('ct-ctrl-inactive', !1);\n            c.select('p.' + faRef.delete + ' .ct-tooltiptext').html('Delete Scenario');\n        } else if (t === 'screens') {\n            c.select('p.' + faRef.plus).classed('ct-ctrl-inactive', !1);\n            c.select('p.' + faRef.plus + ' .ct-tooltiptext').html('Create Testcases');\n            c.select('p.' + faRef.plus1).classed('ct-ctrl-inactive', !1);\n            c.select('p.' + faRef.plus1 + ' .ct-tooltiptext').html('Create Multiple Testcases');\n            c.select('p.' + faRef.edit + ' .ct-tooltiptext').html('Edit Screen');\n            c.select('p.' + faRef.delete).classed('ct-ctrl-inactive', !1);\n            c.select('p.' + faRef.delete + ' .ct-tooltiptext').html('Delete Screen');\n        } else if (t === 'testcases') {\n            c.select('p.' + faRef.plus).classed('ct-ctrl-inactive', !0);\n            c.select('p.' + faRef.plus1).classed('ct-ctrl-inactive', !0);\n            c.select('p.' + faRef.edit).classed('ct-ctrl-inactive', !1);\n            c.select('p.' + faRef.edit + ' .ct-tooltiptext').html('Edit Testcase');\n            c.select('p.' + faRef.delete).classed('ct-ctrl-inactive', !1);\n            c.select('p.' + faRef.delete + ' .ct-tooltiptext').html('Delete Testcase');\n        }\n        d3.select('#ct-ctrlBox').classed('show-box', !0);\n        p.classed('node-highlight',!0)\n        return ()=>{\n            p.classed('node-highlight',false)\n        }\n    })\n    const editNode = (e) => {\n        if(e.target.classList.contains('ct-ctrl-inactive'))return;\n        props.setInpBox(p)\n    }\n    const addNode = (e) => {\n        if(e.target.classList.contains('ct-ctrl-inactive'))return;\n        props.clickAddNode(e.target.attributes.value.value.split(\"node_\")[1])\n    }\n    const addMultipleNode = (e) => {\n        if(e.target.classList.contains('ct-ctrl-inactive'))return;\n        props.setMultipleNode(e.target.attributes.value.value.split(\"node_\")[1])\n    }\n    const deleteNode = (e) =>{\n        if(e.target.classList.contains('ct-ctrl-inactive'))return;\n        props.clickDeleteNode(props.nid)\n        props.setCtrlBox(false)\n    }\n    return(\n        <ClickAwayListener onClickAway={(e)=>{if(e.target.className.baseVal !== \"ct-nodeIcon\")props.setCtrlBox(false)}}>\n            <div id=\"ct-ctrlBox\" className={(isEnE?'end-to-end':'')}>\n                <p data-test=\"add\" className=\"ct-ctrl fa fa-plus\" value={props.nid} onClick={addNode}><span className=\"ct-tooltiptext\">Create Scenarios</span></p>\n                <p data-test=\"addMultiple\" className=\"ct-ctrl fa fa-hand-peace-o\" value={props.nid} onClick={addMultipleNode}><span className=\"ct-tooltiptext\">Create Multiple Scenarios</span></p>\n                <p data-test=\"edit\" className=\"ct-ctrl fa fa-pencil-square-o\"onClick={editNode} ><span className=\"ct-tooltiptext\">Edit Module</span></p>\n                <p data-test=\"delete\"  className=\"ct-ctrl fa fa-trash-o ct-ctrl-inactive\" onClick={deleteNode} ><span className=\"ct-tooltiptext\"></span></p>\n            </div>\n        </ClickAwayListener>\n    )\n}\n\nControlBox.propTypes={\n    nid: PropTypes.string.isRequired,\n    setMultipleNode: PropTypes.func.isRequired,\n    clickAddNode: PropTypes.func.isRequired,\n    clickDeleteNode: PropTypes.func.isRequired,\n    setCtrlBox: PropTypes.func.isRequired,\n    setInpBox:PropTypes.func.isRequired,\n    ctScale: PropTypes.object.isRequired\n}\nexport default ControlBox;","import React, { useEffect, useRef, useState, Fragment } from 'react';\nimport ClickAwayListener from 'react-click-away-listener';\nimport {ScrollBar} from '../../global';\nimport { useSelector} from 'react-redux';\nimport * as d3 from 'd3';\nimport '../styles/InputBox.scss'\nvar initdata = []\n\n/*Component InputBox\n  use: returns a texbox component on a selected node \n*/\nconst InputBox = (props) => {\n    const screenData = useSelector(state=>state.mindmap.screenData)\n    const InpBox = useRef()\n    const [suggestList,setSuggestList] = useState([])\n    const [focus,SetFocus] = useState(true)\n    var p = props.node\n    var pi = p.attr('id').split('node_')[1];\n    var pt = p.select('.ct-nodeLabel');\n    var t = p.attr('data-nodetype');\n    var dNodes = props.dNodes\n\n    useEffect(()=>{\n        document.addEventListener(\"keydown\", (e)=>{if(e.keyCode === 27)props.setInpBox(false)}, false);\n        if (dNodes[pi].taskexists) {\n            var msg = 'Unassign the task to rename';\n            if (t === 'screens') {\n                msg = 'Unassign the task And the corresponding testcases tasks to rename';\n            }\n            props.setPopup({show:true,title:'Rename Error',content:msg,submitText:'Ok'})\n            props.setInpBox(false)\n        }\n        return () => {\n            document.removeEventListener(\"keydown\", (e)=>{if(e.keyCode === 27)props.setInpBox(false)} , false);\n          };\n        //eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n\n    useEffect(()=>{\n        var nodetype = props.node.attr('data-nodetype');\n        if(nodetype === \"modules\" || nodetype === \"scenarios\"){\n            setSuggestList([]);\n            initdata=[]\n            filterSuggest()\n            return;\n        }\n        if(nodetype === \"testcases\"){\n            setSuggestList(screenData.testCaseList);\n            initdata = screenData.testCaseList.filter((e)=>e.screenid===dNodes[pi].parent._id);\n            filterSuggest()\n            return;\n        }\n        if(nodetype === \"screens\"){\n            setSuggestList(screenData.screenList)\n            initdata = screenData.screenList;\n            filterSuggest()\n            return;\n        }\n        //eslint-disable-next-line react-hooks/exhaustive-deps\n    },[screenData])\n\n    useEffect(()=>{\n        props.setCtrlBox(false)\n        var ctScale = props.ctScale\n        var l = p.attr('transform').slice(10, -1).split(',');\n        l = [(parseFloat(l[0]) - 20) * ctScale.k + ctScale.x, (parseFloat(l[1]) + 42) * ctScale.k + ctScale.y];\n        d3.select('#ct-inpBox').style('top', l[1] + 'px').style('left', l[0] + 'px').classed('no-disp', !1)\n        if(focus)focuson(l)\n        InpBox.current.focus()\n        //eslint-disable-next-line react-hooks/exhaustive-deps\n    },[props.ctScale])\n\n    const focuson = (l) => {\n        var ctScale = props.ctScale\n        var mptf =  d3.select('.ct-container').attr('transform')\n        var s = d3.select('.mp__canvas_svg');\n        var x_mptf = parseInt(mptf.split(/[()]/)[1].split(',')[0]);\n        var y_mptf = parseInt(mptf.split(/[()]/)[1].split(',')[1]);\n        var scale_mptf = ctScale.k; \n        var Svgwidth = l[0]  > parseFloat(s.style(\"width\"))-80 ?  parseFloat(s.style(\"width\"))-80: false \n        var Svgheight = l[1] > parseFloat(s.style(\"height\"))-40 ? parseFloat(s.style(\"height\"))-40 : false\n        if(!Svgheight&&!Svgwidth){\n            return;\n        }\n        var ccord = [x_mptf + (l[0] / scale_mptf), y_mptf + (l[1] / scale_mptf)];\n        var x = ctScale.x\n        var y = ctScale.y\n        if(Svgheight){\n            y = (y_mptf *2) - ccord[1] + Svgheight\n        }\n        if(Svgwidth){\n            x = (x_mptf*2) - ccord[0] + Svgwidth - 80\n        }\n        props.zoom.scale(ctScale.k).translate([x,y])\n        d3.select('.ct-container').attr(\"transform\", \"translate(\" +x+','+y+ \")scale(\" + ctScale.k + \")\");\n        props.setCtScale({x:x,y:y,k:ctScale.k})\n        SetFocus(false)\n    }\n\n    const onEnter = (val) =>{\n        var reuseDict = getReuseDetails(dNodes);\n        if (val === 'Screen_0' || val === 'Scenario_0' || val === 'Testcase_0') {\n            d3.select('#ct-inpAct').classed('errorClass',!0);\n            return;\n        }\n        if (!validNodeDetails(val)) return; \n        if (dNodes[pi]._id) {\n            dNodes[pi].original_name = pt.attr('title');\n            dNodes[pi].rnm = !0;\n        }\n        dNodes[pi].name = val;\n        if (dNodes[pi].original_name !== val) {\n            d3.select('.node_' + pi + '>image').attr('style', 'opacity:0.6')\n        }\n        var tmp = dNodes[pi].name;\n        if (tmp.length > 15) tmp = tmp.slice(0, 15) + \"...\";\n        p.select('.ct-node-title').text(val)\n        pt.text(tmp);\n        function replicateName(pi) {\n            //replicate task to reused node\n            if (reuseDict[pi].length > 0) {\n                reuseDict[pi].forEach(function(e, i) {\n                    dNodes[e].name = dNodes[pi].name;\n                    dNodes[e].original_name = dNodes[pi].original_name;\n                    dNodes[e].rnm = dNodes[pi].rnm;\n                    d3.select('#node_' + e + ' > text').text(tmp);\n                    d3.select('#node_' + e + ' > title').text(tmp);\n\n                });\n            }\n        }\n        replicateName(pi);\n        props.setInpBox(false)\n    }\n\n    const filterSuggest = () =>{\n        validNodeDetails(InpBox.current.value)\n        var filter = initdata.filter((e)=>e.name.startsWith(InpBox.current.value))\n        setSuggestList(filter)\n        if(filter.length>0)InpBox.current.defaultvalue = filter[0].name;\n    }\n    return(\n        <ClickAwayListener onClickAway={(e)=>{\n            onEnter(document.getElementById(\"ct-inpAct\").value)\n            if(e.target.className.baseVal !== \"ct-nodeIcon\")props.setInpBox(false);\n            }}>\n            <div id=\"ct-inpBox\" className='no-disp'>\n                <input  autoComplete=\"off\" autoFocus={true} ref={InpBox} defaultValue={p.select('.ct-node-title').text()} id=\"ct-inpAct\" maxLength=\"255\" className=\"ct-inp\" onChange={(e)=>{filterSuggest(e.target.value)}} onKeyPress={(e)=>{if(e.key==='Enter')onEnter(e.target.value)}}/>\n                {(suggestList.length>0)?\n                <ul id='ct-inpSugg'>\n                    <ScrollBar trackColor={'white'} thumbColor={'grey'} hideXbar={true} verticalbarWidth='3px'>\n                        {suggestList.map((e,i)=>{\n                            return(\n                                <Fragment key={i}>\n                                    <li key={i+'_name'} onClick={()=>InpBox.current.value=e.name} ><i>{e.name}</i></li>\n                                    <li key={i+'_divider'} className='divider'></li>\n                                </Fragment>\n                            )\n                        })}\n                        \n                    </ScrollBar>\n                </ul>:null}\n            </div>\n        </ClickAwayListener>\n    )\n}\n\nfunction validNodeDetails(value) {\n    d3.select('#ct-inpAct').classed('errorClass',!1);\n    var nName, flag = !0;\n    nName = value;\n    var regex = /^[a-zA-Z0-9_]*$/;;\n    if (nName.length === 0 || nName.length > 255 || nName.indexOf('_') < 0 || !(regex.test(nName)) || nName === 'Screen_0' || nName === 'Scenario_0' || nName === 'Testcase_0') {\n        d3.select('#ct-inpAct').classed('errorClass',!0);\n        flag = !1;\n    }\n    return flag;\n};\n\nfunction getReuseDetails(dNodes) {\n    // reuse details within the same module\n    var dictTmp = {};\n    dNodes.forEach(function(e, i) {\n        dictTmp[i] = [];\n        if (e.reuse) {\n            dNodes.forEach(function(f, j) {\n                if (e.type === f.type && e.type === 'screens' && e.name === f.name && i !== j && f.reuse)\n                    dictTmp[i].push(j);\n                else if (e.type === f.type && e.type === 'testcases' && e.name === f.name && i !== j && e.parent && f.parent && e.parent.name === f.parent.name && f.reuse)\n                    dictTmp[i].push(j);\n                else if (e.type === f.type && e.type === 'scenarios' && e.name ===f.name && i !== j && f.reuse)\n                    dictTmp[i].push(j);\n            })\n        }\n    })\n    return dictTmp;\n}\n\nexport default InputBox;","import React, { Fragment, useState, useEffect, useMemo } from 'react';\nimport { ModalContainer, ScrollBar, PopupMsg } from '../../global'\nimport '../styles/MultiNodeBox.scss'\nimport PropTypes from 'prop-types';\n\n/*Component MultiNodeBox\n  use: return MultiNodeBox popup to add nodes\n*/\nconst MultiNodeBox = (props) =>{\n    const [reset,setReset] = useState(false)\n    const [submit,setSubmit] = useState(false)\n    const [errMsg,setErrMsg] = useState('')\n    const [popup,setPopup] = useState(false)\n    return(\n        <Fragment>\n            {popup?<PopupMsg submit={()=>setPopup(false)} close={()=>setPopup(false)} title='Error' content='At a time only 10 nodes can be added' submitText='Ok'/>:null}\n            <ModalContainer \n                title='Add Node'\n                close={()=>props.setMultipleNode(false)}\n                footer={<Footer errMsg={errMsg} setReset={setReset} setSubmit={setSubmit} {...props}/>}\n                content={<AddnodeContainer setPopup={setPopup} setErrMsg={setErrMsg} submit={submit} setSubmit={setSubmit} setReset={setReset} reset={reset} {...props}/>} \n            />\n        </Fragment>\n    )\n}\n\n/*Component Footer\n  use: return Footer for MultiNodeBox\n*/\n\nconst Footer = (props) =>{\n    return(\n        <Fragment>\n            <label data-test=\"errorMessageLabel\" className='err-message'>{props.errMsg}</label>\n            <div className='mnode__buttons'>\n                <button data-test=\"reset\" onClick={()=>{props.setReset(true)}}>Reset</button>\n                <button data-test=\"submit\" onClick={()=>{props.setSubmit(true)}}>Create</button>\n            </div>\n        </Fragment>\n    )\n}\n\n/*Component AddnodeContainer\n  use: return content part for MultiNodeBox\n*/\n\nconst AddnodeContainer = (props) =>{\n    const [mnode,setMnode] =  useState([])\n    const [errList,setErrList] = useState([])\n    const [count,setCount] = useState(1)\n    const type = useMemo(()=>{\n        var ntype;\n        var nd = document.getElementById('node_'+props.node)\n        var type =  nd.dataset.nodetype\n        var i = 0;\n        switch(type){\n            case 'endtoend':\n                i = props.count['scenarios']+1\n                setMnode(['Scenario_'+i,'Scenario_'+(i+1)]);\n                ntype = 'Scenario_';\n                break;\n            case 'modules':\n                i = props.count['scenarios']+1\n                setMnode(['Scenario_'+i,'Scenario_'+(i+1)]);\n                ntype = 'Scenario_';\n                break;\n            case 'scenarios':\n                i = props.count['screens']+1\n                setMnode(['Screen_'+i,'Screen_'+(i+1)]);\n                ntype = 'Screen_';\n                break;\n            case 'screens':\n                i = props.count['testcases']+1\n                setMnode(['Testcase_'+i,'Testcase_'+(i+1)]);\n                ntype = 'Testcase_';\n                break;\n            default:\n                break;\n        }\n        setCount(i+2)\n        return ntype;\n    },[props.node,props.count])\n    useEffect(()=>{\n        if(props.reset===true){\n            reset()\n            props.setReset(false)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[props.reset])\n    useEffect(()=>{\n        if(props.submit===true){\n            props.setSubmit(false)\n            submit()\n        }\n        // eslint-disable-next-line \n    },[props.submit])\n    useEffect(()=>{\n        if(errList.length===0){\n            props.setErrMsg(\"\")\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[errList])\n    const reset = () =>{\n        var arr = Array(mnode.length).fill(\"\")\n        setMnode(arr)\n    }\n    const submit = () =>{\n        var err = []\n        if(mnode.length > 10){\n            props.setPopup(true)\n            return;\n        }\n        mnode.forEach((e,i)=>{\n            if(!ValidateNode(e)){\n                err.push(i)\n            }\n        })\n        if(err.length === 0){\n            props.createMultipleNode(props.node,mnode);\n        }else{\n            setErrList(err)\n            props.setErrMsg('Please provide a valid name!')\n        }\n    }\n    return(\n        <Fragment>\n            <div data-test=\"addButtonDiv\"onClick={()=>{\n                var arr = [...mnode]\n                arr.push(type+count)\n                setCount(count+1)\n                setMnode(arr)\n                }} className='mnode__addbutton'> \n                <img src={\"static/imgs/ic-add.png\"} alt='module'/>\n                <label>Add</label>\n            </div>\n            <div className='mnode__list'>\n            <ScrollBar trackColor={'rgb(211, 211, 211)'} hideXbar={true} thumbColor={'#321e4f'}>\n            {mnode.map((e,i)=>{\n                return(\n                    <div className='row mnode__row' key={i}>\n                        <div data-test=\"index\" className='col-sm-3'>{i+1}</div>\n                        <div data-test=\"scenarioName\" className='col-sm-6 mnode__input'>\n                            <input className={(errList.includes(i))?'err-border':''} id={'mnode_'+i} value={e} maxLength={255} placeholder={'Enter node name'} onChange={(e)=>{\n                                var arr = [...mnode]\n                                arr[e.target.id.split('mnode_')[1]] = e.target.value\n                                setMnode(arr)\n                            }}></input>\n                        </div>\n                        <div data-test=\"deleteButton\" className='col-sm-3'>\n                            <img onClick={(e)=>{\n                                var arr=[...mnode]\n                                var errArr=[...errList]\n                                errArr.splice(mnode.indexOf(e.target.attributes.value.value),1)\n                                arr.splice(e.target.attributes.value.value,1)\n                                setErrList(errArr)\n                                setMnode(arr)}} value={i} className='mnode__delete' src={\"static/imgs/ic-delete.png\"} alt='module'/>\n                        </div>\n                    </div>\n                )})}\n            </ScrollBar>\n            </div>\n        </Fragment>\n    )\n}\n\n/*function ValidateNode\n  use: validate node name and return boolean\n  props : node name\n*/\n\nconst ValidateNode = (nName) => {\n    var regex = /^[a-zA-Z0-9_]*$/;;\n    if (nName.length === 0 || nName.length > 255 || nName.indexOf('_') < 0 || !(regex.test(nName)) || nName === 'Screen_0' || nName === 'Scenario_0' || nName === 'Testcase_0') {\n        return false\n    }\n    return true\n}\nMultiNodeBox.propTypes={\n    count:PropTypes.object.isRequired,\n    setMultipleNode:PropTypes.func.isRequired,\n    createMultipleNode:PropTypes.func.isRequired\n}\nexport default MultiNodeBox;","import React, { useEffect } from 'react';\nimport { Rnd } from \"react-rnd\";\nimport * as d3 from 'd3';\nimport { useDispatch} from 'react-redux';\nimport * as actionTypes from '../state/action';\nimport '../styles/RectangleBox.scss'\n\nconst RectangleBox = (props) =>{\n  const dispatch = useDispatch()\n  const style = {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      border: \"solid 1px blue\",\n      background: \"rgba(200, 200, 200, 0.3)\",\n      borderRadius:'5px'\n  };\n  useEffect(()=>{\n    if(d3.select(\".ct-container\") && d3.select(\".ct-container\").attr(\"transform\")){\n      resize()\n    }\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  },[props.ctScale])\n  const resize = () =>{\n    var dNodes = props.dNodes\n    var dLinks = props.dLinks\n    var dNodes_c = [];\n    var dLinks_c = [];\n    d3.selectAll('.ct-node').classed('node-error',false);\n    var xvp = d3.select(\".ct-container\").attr(\"transform\").split(/[()]/)[1].split(',')[0];\n    var yvp = d3.select(\".ct-container\").attr(\"transform\").split(/[()]/)[1].split(',')[1];\n    var scale = (d3.select(\".ct-container\").attr(\"transform\").split(/[()]/)[3]);\n    dNodes.forEach((e,i)=>{\n      if (e.type !== 'modules') {\n        var lt = [parseFloat(xvp) + parseFloat(e.x) * parseFloat(scale), parseFloat(yvp) + parseFloat(e.y) * parseFloat(scale)];\n        var rctl = parseFloat(d3.select(\"#rect-copy\").node().style.transform.split(/[()]/)[1].split(',')[0].replace(\"px\",\"\"))\n        var rctr = rctl + parseFloat(d3.select(\"#rect-copy\").node().style.width.replace('px',''))\n        var rctt = parseFloat(d3.select(\"#rect-copy\").node().style.transform.split(/[()]/)[1].split(',')[1].replace(\"px\",\"\"))\n        var rctb = rctt + parseFloat(d3.select(\"#rect-copy\").node().style.height.replace('px',''))\n        if (((lt[0] > rctl && lt[0] < rctr) || (lt[0]+40* parseFloat(scale) > rctl && lt[0]+40* parseFloat(scale) < rctr)) && \n            ((lt[1] > rctt && lt[1] < rctb) || (lt[1]+40* parseFloat(scale)> rctt && lt[1]+40* parseFloat(scale) < rctb))){\n          d3.select('#node_'+i).classed('node-selected',true)\n            if (e.type === 'testcases' && (dNodes_c.indexOf(dNodes[e.parent.id]) === -1)) {\n              d3.select('#node_'+e.parent.id).classed('node-selected',true)\n              dNodes_c.push(dNodes[e.parent.id]);\n            }\n            if (dNodes_c.indexOf(dNodes[e.id]) === -1) {\n              dNodes_c.push(e);\n            }\n        }else if(dNodes_c.indexOf(dNodes[i]) === -1){\n          d3.select('#node_'+i).classed('node-selected',false)\n        }\n      }\n    })\n    dLinks.forEach(function(e, i) {\n      if (d3.select('#node_' + e.source.id).classed('node-selected') && d3.select('#node_' + e.target.id).classed('node-selected')) {\n        var lid = 'link-' + e.source.id + '-' + e.target.id  \n        d3.select('#'+lid).classed('link-selected',true);\n        dLinks_c.push(e);\n      }\n    })\n    var payload = {nodes:dNodes_c,links:dLinks_c}\n    dispatch({type:actionTypes.UPDATE_SELECTNODES,payload})\n  }\n  return(\n    <Rnd id='rect-copy' style={style}\n    onDrag={(e)=>{\n      resize(e);\n    }}\n    onResize={()=>resize()}\n    default={{\n      x: 150,\n      y: 150,\n      width: 150,\n      height: 150\n    }}>\n    {/* <div id='rect-copy'></div> */}\n  </Rnd>\n  )\n}\n\nexport default RectangleBox;","import React, { Fragment, useRef, useState } from 'react';\nimport {ModalContainer} from '../../global';\nimport {useSelector} from 'react-redux'\nimport {readTestSuite_ICE,exportMindmap,exportToExcel,exportToGit} from '../api';\nimport '../styles/ExportMapButton.scss'\nimport PropTypes from 'prop-types'\n\n/*Component ExportMapButton\n  use: renders ExportMapButton and popups for selection on click \n*/\n\nconst ExportMapButton = ({setPopup,setBlockui,displayError,isAssign,releaseRef,cycleRef}) => {\n    const fnameRef = useRef()\n    const ftypeRef = useRef()\n    const gitBranchRef =  useRef()\n    const gitVerRef =  useRef()\n    const gitPathRef =  useRef()\n    const [exportBox,setExportBox] = useState(false)\n    const selectedModule = useSelector(state=>state.mindmap.selectedModule)\n    const selectedProj = useSelector(state=>state.mindmap.selectedProj)\n    const projectList = useSelector(state=>state.mindmap.projectList)\n    const openExport = ()=>{\n        if(!selectedProj || !selectedModule || !selectedModule._id){\n            return;\n        }\n        setExportBox(true)\n    }\n    const clickExport = () => {\n        if(!selectedModule._id)return;\n        var err = validate([fnameRef,ftypeRef,gitBranchRef,gitVerRef])\n        if(err)return\n        setExportBox(false)\n        setBlockui({show:true,content:'Exporting Mindmap ...'})\n        var ftype = ftypeRef.current.value\n        if(ftype === 'json') toJSON(selectedModule,fnameRef.current.value,displayError,setPopup,setBlockui);\n        if(ftype === 'excel') toExcel(selectedProj,selectedModule,fnameRef.current.value,displayError,setPopup,setBlockui);\n        if(ftype === 'custom') toCustom(selectedProj,selectedModule,projectList,releaseRef,cycleRef,fnameRef.current.value,displayError,setPopup,setBlockui);\n        if(ftype === 'git') toGit({selectedProj,projectList,displayError,setBlockui,gitVerRef,gitPathRef,gitBranchRef,selectedModule,setPopup});\n    }\n    return(\n        <Fragment>\n            {exportBox?<ModalContainer\n            title='Export MindMap'\n            close={()=>setExportBox(false)}\n            footer={<Footer clickExport={clickExport}/>}\n            content={<Container gitBranchRef={gitBranchRef} gitVerRef={gitVerRef} gitPathRef={gitPathRef} fnameRef={fnameRef} ftypeRef={ftypeRef} modName={selectedModule.name} isAssign={isAssign}/>} \n            />:null}\n            <svg data-test=\"exportButton\" className={\"ct-exportBtn\"+(selectedModule._id?\"\":\" disableButton\")} id=\"ct-save\" onClick={openExport}>\n                <g id=\"ct-exportAction\" className=\"ct-actionButton\">\n                    <rect x=\"0\" y=\"0\" rx=\"12\" ry=\"12\" width=\"80px\" height=\"25px\"></rect>\n                    <text x=\"16\" y=\"18\">Export</text>\n                </g>\n            </svg>\n        </Fragment>\n    )\n}\n\nconst validate = (arr) =>{\n    var err = false;\n    arr.forEach((e)=>{\n        if(e.current){\n            e.current.style.borderColor = 'black'\n            if(!e.current.value || e.current.value ==='def-option'){\n                e.current.style.borderColor = 'red'\n                err = true\n            }\n        }\n    })\n    return err\n}\n\nconst Container = ({fnameRef,ftypeRef,modName,isAssign,gitBranchRef,gitVerRef,gitPathRef}) =>{\n    const [expType,setExpType] = useState(undefined)\n    const changeExport = (e) => {\n        setExpType(e.target.value)\n    }\n    return(\n        <div>\n            <div className='export-row'>\n                <label>Export As: </label>\n                <select defaultValue={'def-option'} ref={ftypeRef} onChange={changeExport}>\n                    <option value={'def-option'} disabled>Select Export Format</option>\n                    {isAssign && <option value={'custom'}>Custom (.json)</option>}\n                    <option value={'excel'}>Excel Workbook (.xlx,.xlsx)</option>\n                    <option value={'git'}>Git (.mm)</option>\n                    <option value={'json'}>MindMap (.mm)</option>\n                </select>\n            </div>\n            {(expType === 'git')?\n                <Fragment>\n                    <div className='export-row'>\n                        <label>Git Branch: </label>\n                        <input onChange={(e)=>e.target.value=e.target.value.replaceAll(\" \",\"\")} placeholder={'Branch name'} ref={gitBranchRef}/>\n                    </div>\n                    <div className='export-row'>\n                        <label>Version: </label>\n                        <input onChange={(e)=>e.target.value=e.target.value.replaceAll(\" \",\"\")} placeholder={'Version name'} ref={gitVerRef}/>\n                    </div>\n                    <div className='export-row'>\n                        <label>Folder Path: </label>\n                        <input placeholder={'Ex: Projectname/Modulename(optional)'} ref={gitPathRef}/>\n                    </div>\n                </Fragment>:null\n            }\n            {(expType && expType !== 'git')?\n                <div className='export-row'>\n                    <label>File Name: </label>\n                    <input ref={fnameRef} defaultValue={modName} placeholder={'Enter file name'}></input>\n                </div>:null\n            }\n        </div>\n    )\n}\nconst Footer = ({clickExport}) => <div><button onClick={clickExport}>Export</button></div>\n\n/*\n    function : toExcel()\n    Purpose : Exporting Module in json file\n    param :\n*/\nconst toExcel = async(projId,modId,fname,displayError,setPopup,setBlockui) => {\n    try{\n        var data = {\n            \"projectid\":projId,\n            \"moduleid\":modId._id\n        }\n        var result = await exportToExcel(data)\n        if(result.error){displayError(result.error);return;}\n        var file = new Blob([result], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n        var fileURL = URL.createObjectURL(file);\n        var a = document.createElement('a');\n        a.href = fileURL;\n        a.download = fname+'.xlsx';\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        URL.revokeObjectURL(fileURL);\n        setBlockui({show:false,content:''})\n        setPopup({\n            title:'Mindmap',\n            content:'Data Exported Successfully.',\n            submitText:'Ok',\n            show:true\n        })\n    }catch(err){\n        console.error(err)\n        displayError('Failed to Export Mindmap')\n    }\n}\n\n/*\n    function : toJSON()\n    Purpose : Exporting Module in json file\n    param :\n*/\nconst toJSON = async(modId,fname,displayError,setPopup,setBlockui) => {\n    try{\n        var result =  await exportMindmap(modId._id)\n        if(result.error){displayError(result.error);return;}\n        jsonDownload(fname+'.mm', JSON.stringify(result));\n        setBlockui({show:false,content:''})\n        setPopup({\n            title:'Mindmap',\n            content:'Data Exported Successfully.',\n            submitText:'Ok',\n            show:true\n        })\n    }catch(err){\n        console.error(err)\n        displayError('Failed to Export Mindmap')\n    }\n}\n\n/*\n    function : toGit()\n    Purpose : Exporting testsuite and executiondata in json file\n    param :\n*/\n\nconst toGit = async ({projectList,displayError,setBlockui,setPopup,gitVerRef,gitPathRef,gitBranchRef,selectedModule,selectedProj}) => {\n    var gitpath=gitPathRef.current.value;\n\tif(!gitpath){\n        gitpath = 'avoassuretest_artifacts/'+projectList[selectedProj].name+'/'+selectedModule.name;\n    }\n    var res = await exportToGit({\n        gitVersion: gitVerRef.current.value,\n\t\tgitFolderPath:gitpath,\n\t\tgitBranch: gitBranchRef.current.value,\n\t\tmindmapId: selectedModule._id\n    })\n    if(res.error){displayError(res.error);return;}\n    setBlockui({show:false})\n    setPopup({\n        title:'Mindmap',\n        content:'Data Exported Successfully.',\n        submitText:'Ok',\n        show:true\n    })\n}\n\n/*\n    function : toCustom()\n    Purpose : Exporting testsuite and executiondata in json file\n    param :\n*/\nconst toCustom = async (selectedProj,selectedModule,projectList,releaseRef,cycleRef,fname,displayError,setPopup,setBlockui) =>{\n    try{\n        var suiteDetailsTemplate = { \"condition\": 0, \"dataparam\": [\" \"], \"scenarioId\": \"\", \"scenarioName\": \"\" };\n        var moduleData = { \"testsuiteName\": \"\", \"testsuiteId\": \"\", \"versionNumber\": \"\", \"appType\": \"\", \"domainName\": \"\", \"projectName\": \"\", \"projectId\": \"\", \"releaseId\": \"\", \"cycleName\": \"\", \"cycleId\": \"\", \"suiteDetails\": [suiteDetailsTemplate] };\n        var executionData = { \"executionData\": { \"source\": \"api\", \"exectionMode\": \"serial\", \"executionEnv\": \"default\", \"browserType\": [\"1\"], \"integration\":{\"alm\": {\"url\":\"\",\"username\":\"\",\"password\":\"\"}, \"qtest\": {\"url\":\"\",\"username\":\"\",\"password\":\"\",\"qteststeps\":\"\"}, \"zephyr\": {\"url\":\"\",\"username\":\"\",\"password\":\"\"}}, \"batchInfo\": [JSON.parse(JSON.stringify(moduleData))] } };\n        var moduleInfo = { \"batchInfo\": [] };\n        moduleData.appType = projectList[selectedProj].apptypeName;\n        moduleData.domainName = projectList[selectedProj].domains;\n        moduleData.projectName = projectList[selectedProj].name;\n        moduleData.projectId = projectList[selectedProj].id;\n        moduleData.releaseId = releaseRef.current.selectedOptions[0].innerText;\n        moduleData.cycleName = cycleRef.current.selectedOptions[0].innerText;\n        moduleData.cycleId = cycleRef.current.value;\n        const reqObject = [{\n            \"releaseid\": moduleData.releaseId,\n            \"cycleid\": moduleData.cycleId,\n            \"testsuiteid\": selectedModule._id,\n            \"testsuitename\": selectedModule.name,\n            \"projectidts\": moduleData.projectId\n            // \"versionnumber\": parseFloat(version_num)\n        }];\n        var moduleObj = await readTestSuite_ICE(reqObject)\n        if(moduleObj.error){displayError(moduleObj.error);return;}\n        moduleObj = moduleObj[selectedModule._id];\n        if(moduleObj && moduleObj.testsuiteid != null) {\n            moduleData.testsuiteId = moduleObj.testsuiteid;\n            moduleData.testsuiteName = moduleObj.testsuitename;\n            moduleData.versionNumber = moduleObj.versionnumber;\n            moduleData.suiteDetails = [];\n            for (var j = 0; j < moduleObj.scenarioids.length; j++) {\n                var s_data = JSON.parse(JSON.stringify(suiteDetailsTemplate));\n                s_data.condition = moduleObj.condition[j];\n                s_data.dataparam = [moduleObj.dataparam[j]];\n                s_data.scenarioName = moduleObj.scenarionames[j];\n                s_data.scenarioId = moduleObj.scenarioids[j];\n                moduleData.suiteDetails.push(s_data);\n            }\n            moduleInfo.batchInfo.push(moduleData);\n            jsonDownload(fname+'_moduleinfo.json', JSON.stringify(moduleInfo));\n            jsonDownload(fname+'_executiondata.json', JSON.stringify(executionData));\n            setBlockui({show:false,content:''})\n            setPopup({\n                title:'Mindmap',\n                content:'Data Exported Successfully.',\n                submitText:'Ok',\n                show:true\n            })\n        } else {\n            displayError(\"Failed to export data\");\n        }\n    }catch(err){\n        displayError(\"Failed to export data\");\n        console.error(err);\n    } \n}\n\n/*\nfunction : jsonDownload()\nPurpose : download json file\n*/\n\nfunction jsonDownload(filename, responseData) {\n    var blob = new Blob([responseData], { type: 'text/json' });\n    var e = document.createEvent('MouseEvents');\n    var a = document.createElement('a');\n    a.download = filename;\n    a.href = window.URL.createObjectURL(blob);\n    a.dataset.downloadurl = ['text/json', a.download, a.href].join(':');\n    e.initMouseEvent('click', true, true, window,\n        0, 0, 0, 0, 0, false, false, false, false, 0, null);\n    a.dispatchEvent(e);\n}\nExportMapButton.propTypes={\n    isAssign:PropTypes.bool,\n    setBlockui:PropTypes.func,\n    setPopup:PropTypes.func,\n    displayError:PropTypes.func,\n    releaseRef:PropTypes.object,\n    cycleRef:PropTypes.object\n}\n\nexport default ExportMapButton;","import React, { useRef, useEffect, useState, Fragment } from 'react';\nimport * as d3 from 'd3';\nimport SearchBox from '../components/SearchBox'\nimport NavButton from '../components/NavButton'\nimport Legends from '../components/Legends'\nimport ControlBox from '../components/Controlbox'\nimport InputBox from '../components/InputBox' \nimport MultiNodeBox from '../components/MultiNodeBox'\nimport RectangleBox from '../components/RectangleBox'\nimport SaveMapButton from '../components/SaveMapButton'\nimport ExportMapButton from '../components/ExportMapButton'\nimport { useDispatch, useSelector} from 'react-redux';\nimport {generateTree,toggleNode,moveNodeBegin,moveNodeEnd,createNode,deleteNode,createNewMap} from './MindmapUtils'\nimport * as actionTypes from '../state/action';\nimport '../styles/MindmapCanvas.scss';\n\n/*Component Canvas\n  use: return mindmap on a canvas\n*/\nvar zoom //global var to store zoom\nconst types = {\n    'modules': 112,\n    'scenarios': 237,\n    'screens': 362,\n    'testcases': 487\n};\nvar count;\nvar temp = {\n    s: [],\n    hidden:[],\n    deleted:[],\n    t: \"\"\n};\nvar nodeMoving = false;\n\nconst CanvasNew = (props) => {\n    const dispatch = useDispatch()\n    const copyNodes = useSelector(state=>state.mindmap.copyNodes)\n    const selectBox = useSelector(state=>state.mindmap.selectBoxState)\n    const deletedNodes = useSelector(state=>state.mindmap.deletedNodes)\n    const [sections,setSection] =  useState({})\n    const [ctrlBox,setCtrlBox] = useState(false);\n    const [inpBox,setInpBox] = useState(false);\n    const [multipleNode,setMultipleNode] = useState(false)\n    const [ctScale,setCtScale] = useState({})\n    const [links,setLinks] = useState({})\n    const [nodes,setNodes] = useState({})\n    const [dNodes,setdNodes] = useState([])\n    const [dLinks,setdLinks] = useState([])\n    const [createnew,setCreateNew] = useState(false)\n    const [verticalLayout,setVerticalLayout] = useState(false)\n    const setPopup=props.setPopup\n    const setBlockui=props.setBlockui\n    const displayError = props.displayError\n    const CanvasRef = useRef();\n    useEffect(()=>{\n        //useEffect to clear redux data selected module on unmount\n        return ()=>{\n            dispatch({type:actionTypes.SELECT_MODULE,payload:{}})\n        }\n    },[dispatch])\n    useEffect(() => {\n        var tree;\n        count = {\n            'modules': 0,\n            'scenarios': 0,\n            'screens': 0,\n            'testcases': 0\n        }\n        if (props.module.createnew && verticalLayout===props.verticalLayout) {\n            if(props.module.importData){\n                var typeo;\n                var typen;\n                var activeNode=0;\n                //setBlockui({show:true,content:'Creating Nodes...'})\n                props.module.importData.data.forEach((e,i)=>{\n                    if (i === 0) {\n                        tree = createNewMap(props.verticalLayout,undefined,e.name)\n                        tree.links = {}\n                        tree.dLinks = []\n                        tree.sections = types\n                        count['modules'] = 1\n                        typeo = 1;\n                    }else {\n                        typen = e.type;\n                        if (typen > typeo) {\n                            activeNode = tree.dNodes.length - 1;\n                        } else if (typen < typeo) {\n                            var lvl = typeo - typen;\n                            if (lvl === 1) {\n                                activeNode = tree.dNodes[tree.dNodes.length - 1].parent.parent.id;\n                            }\n                            if (lvl === 2) {\n                                activeNode = tree.dNodes[tree.dNodes.length - 1].parent.parent.parent.id;\n                            }\n                        }\n                        var res = createNode(activeNode,{...tree.nodes},{...tree.links},[...tree.dNodes],[...tree.dLinks],{...tree.sections},{...count},e.name,verticalLayout)\n                        tree.links = res.linkDisplay\n                        tree.dLinks = res.dLinks\n                        tree.nodes = res.nodeDisplay\n                        tree.dNodes = res.dNodes\n                        count= {...count,...res.count}\n                        typeo = typen;\n                    }\n                })\n                if(props.module.importData.createdby==='pd')setCreateNew('save')\n            }else{\n                //create new mindmap\n                tree = createNewMap(props.verticalLayout)\n                tree.sections = types\n                tree.links = {}\n                tree.dLinks = []\n                if(zoom){\n                    zoom.scale(1).translate([0,0]).event(d3.select(`.mp__canvas_svg`))\n                    zoom.on(\"zoom\",null)\n                }\n                count['modules'] = 1\n                setCreateNew(0)\n            }\n        } else {\n            // To load an existing module. Tree has to be loaded. Possible places, module box / switch layout.\n            tree = props.module\n            if(verticalLayout !== props.verticalLayout && dNodes.length > 0){\n                tree = dNodes[0]\n            }\n            //load mindmap from data\n            tree = generateTree(tree,types,{...count},props.verticalLayout)\n            count= {...count,...tree.count}\n        }\n        d3.select('.ct-container').attr(\"transform\", \"translate(\" + tree.translate[0]+','+tree.translate[1] + \")scale(\" + 1 + \")\");\n        zoom = bindZoomListner(setCtScale,tree.translate,ctScale)\n        setLinks(tree.links)\n        setdLinks(tree.dLinks)\n        setNodes(tree.nodes)\n        setdNodes(tree.dNodes)\n        setCtScale({x:tree.translate[0],y:tree.translate[1],k:1})\n        setSection(tree.sections)\n        setVerticalLayout(props.verticalLayout);\n        setBlockui({show:false})\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.module,props.reload,props.verticalLayout]);\n    useEffect(()=>{\n        if(createnew === 'save'){\n            setCreateNew(false)\n        }\n        else if(createnew !== false){\n            var p = d3.select('#node_'+createnew);\n            setCreateNew(false)\n            setInpBox(p)\n        }\n       // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[createnew])\n    const nodeClick=(e)=>{\n        e.stopPropagation()\n        if(d3.select('#pasteImg').classed('active-map')){\n            var res = pasteNode(e.target.parentElement.id,{...copyNodes},{...nodes},{...links},[...dNodes],[...dLinks],{...sections},{...count},setPopup,verticalLayout)\n            if(res){\n                setNodes(res.cnodes)\n                setLinks(res.clinks)\n                setdLinks(res.cdLinks)\n                setdNodes(res.cdNodes)\n                count = res.count\n            }\n        }else{\n            setInpBox(false)\n            setCtrlBox(e.target.parentElement.id)\n        }\n    }\n    const createMultipleNode = (e,mnode)=>{\n        setMultipleNode(false)\n        if (mnode.length === 0){\n            setPopup({show:true,title:'Failure',content:'No nodes to create',submitText:'Ok'})\n            return;\n        }\n        setBlockui({show:true,content:'Creating Nodes...'})\n        var cnodes = {...nodes}\n        var clinks = {...links}\n        var cdNodes = [...dNodes]\n        var cdLinks = [...dLinks]\n        var csections = {...sections}\n        mnode.forEach((name)=>{\n            var res = createNode(e,cnodes,clinks,cdNodes,cdLinks,csections,{...count},name,verticalLayout)\n            cnodes = res.nodeDisplay\n            clinks = res.linkDisplay\n            cdNodes = res.dNodes\n            cdLinks = res.dLinks\n            count= {...count,...res.count}\n        })\n        setNodes(cnodes)\n        setLinks(clinks)\n        setdLinks(cdLinks)\n        setdNodes(cdNodes)\n        setBlockui({show:false})\n        setPopup({show:true,title:'Success',content:'Nodes created successfully!',submitText:'Ok'})\n    }\n    const clickAddNode=(e)=>{\n        var res = createNode(e,{...nodes},{...links},[...dNodes],[...dLinks],{...sections},{...count},undefined,verticalLayout)\n        setCreateNew(res.dNodes.length-1)\n        setNodes(res.nodeDisplay)\n        setLinks(res.linkDisplay)\n        setdLinks(res.dLinks)\n        setdNodes(res.dNodes)\n        count= {...count,...res.count}\n    }\n    const clickDeleteNode=(id)=>{\n        var res = deleteNode(id,[...dNodes],[...dLinks],{...links},{...nodes},setPopup)\n        if(res){\n            dispatch({type:actionTypes.UPDATE_DELETENODES,payload:[...deletedNodes,...res.deletedNodes]})\n            setNodes(res.nodeDisplay)\n            setLinks(res.linkDisplay)\n            setdLinks(res.dLinks)\n            setdNodes(res.dNodes)\n        }\n    }\n    const clickCollpase=(e)=>{\n        var id = e.target.parentElement.id;\n        var res = toggleNode(id,{...nodes},{...links},[...dNodes],[...dLinks])\n        setNodes(res.nodeDisplay)\n        setLinks(res.linkDisplay)\n        setdLinks(res.dLinks)\n        setdNodes(res.dNodes)\n    }\n    const moveNode=(e,type)=>{\n        var res;\n        var id = e.target.parentElement.id.split('node_')[1];\n        if(type==='KeyUp'){\n            res = moveNodeEnd(id,[...dNodes],[...dLinks],{...links},{...temp},verticalLayout)\n            setLinks(res.linkDisplay)\n            nodeMoving = false\n            temp = {\n                s: [],\n                hidden:[],\n                deleted:[],\n                t: \"\"\n            };\n        }\n        else{\n            nodeMoving = true\n            res = moveNodeBegin(id,{...links},[...dLinks],{...temp},{...ctScale},verticalLayout)\n            setLinks(res.linkDisplay)\n            temp={...temp,...res.temp}\n        }\n    }\n    return (\n        <Fragment>\n            {(selectBox)?<RectangleBox ctScale={ctScale} dNodes={[...dNodes]} dLinks={[...dLinks]}/>:null}\n            {(ctrlBox !== false)?<ControlBox nid={ctrlBox} setMultipleNode={setMultipleNode} clickAddNode={clickAddNode} clickDeleteNode={clickDeleteNode} setCtrlBox={setCtrlBox} setInpBox={setInpBox} ctScale={ctScale}/>:null}\n            {(inpBox !== false)?<InputBox setCtScale={setCtScale} zoom={zoom} setPopup={setPopup} node={inpBox} dNodes={[...dNodes]} setInpBox={setInpBox} setCtrlBox={setCtrlBox} ctScale={ctScale} />:null}\n            {(multipleNode !== false)?<MultiNodeBox count={count} node={multipleNode} setMultipleNode={setMultipleNode} createMultipleNode={createMultipleNode}/>:null}\n            <SearchBox setCtScale={setCtScale} zoom={zoom}/>\n            <NavButton setCtScale={setCtScale} zoom={zoom}/>\n            <Legends/>\n            <SaveMapButton createnew={createnew} dNodes={[...dNodes]} setPopup={setPopup} setBlockui={setBlockui}/>\n            <ExportMapButton setBlockui={setBlockui} setPopup={setPopup} displayError={displayError}/>\n            <svg id=\"mp__canvas_svg\" className='mp__canvas_svg' ref={CanvasRef}>\n                <g className='ct-container'>\n                {Object.entries(links).map((link)=>{\n                return(<path id={link[0]} key={link[0]+'_link'} className={\"ct-link\"+(link[1].hidden?\" no-disp\":\"\")} d={link[1].d}></path>)\n                })}\n                {Object.entries(nodes).map((node)=>\n                    <g id={'node_'+node[0]} key={node[0]} className={\"ct-node\"+(node[1].hidden?\" no-disp\":\"\")} data-nodetype={node[1].type} transform={node[1].transform}>\n                        <image  onClick={(e)=>nodeClick(e)} style={{height:'40px',width:'40px',opacity:(node[1].state===\"created\")?0.5:1}} className=\"ct-nodeIcon\" xlinkHref={node[1].img_src}></image>\n                        <text className=\"ct-nodeLabel\" textAnchor=\"middle\" x=\"20\" title={node[1].title} y=\"50\">{node[1].name}</text>\n                        <title val={node[0]} className=\"ct-node-title\">{node[1].title}</title>\n                        {(node[1].type!=='testcases')?\n                        <circle onClick={(e)=>clickCollpase(e)} className={\"ct-\"+node[1].type+\" ct-cRight\"+(!dNodes[node[0]]._children?\" ct-nodeBubble\":\"\")} cx={verticalLayout ? 20 : 44} cy={verticalLayout ? 55 : 20} r=\"4\"></circle>\n                        :null}\n                        {(node[1].type!=='modules')?\n                        <circle \n                        onMouseUp={(e)=>moveNode(e,'KeyUp')}\n                        onMouseDown={(e)=>moveNode(e,'KeyDown')}\n                        cx={verticalLayout ? 20 : -3} cy={verticalLayout ? -4 : 20}\n                        className={\"ct-\"+node[1].type+\" ct-nodeBubble\"} r=\"4\"></circle>\n                        :null}\n                    </g>)}\n                </g>\n            </svg>\n        </Fragment>\n    );\n}\n\nconst pasteNode = (activeNode,copyNodes,cnodes,clinks,cdNodes,cdLinks,csections,count,setPopup,verticalLayout) => {\n    var dNodes_c = copyNodes.nodes\n    var dLinks_c = copyNodes.links\n    var nodetype =  d3.select('.node-selected').attr('data-nodetype');\n    if (d3.select('#'+activeNode).attr('data-nodetype') === nodetype) {\n        if (nodetype === 'scenarios') {\n            activeNode = activeNode.split(\"node_\")[1]\n            //paste to scenarios\n            dNodes_c.forEach((e) =>{\n                if (e.type === 'screens') {\n                    var res = createNode(activeNode,cnodes,clinks,cdNodes,cdLinks,csections,count,e.name,verticalLayout)\n                    if(res){                    cnodes = res.nodeDisplay\n                        clinks = res.linkDisplay\n                        cdNodes = res.dNodes\n                        cdLinks = res.dLinks\n                        count= {...count,...res.count}\n                    }\n                    activeNode = cdNodes.length-1\n                    dLinks_c.forEach((f)=>{\n                        if (f.source.id === e.id) {\n                            var res = createNode(activeNode,cnodes,clinks,cdNodes,cdLinks,csections,count,f.target.name,verticalLayout)\n                            if(res){\n                                cnodes = res.nodeDisplay\n                                clinks = res.linkDisplay\n                                cdNodes = res.dNodes\n                                cdLinks = res.dLinks\n                                count= {...count,...res.count}\n                            }\n                        }\n                    })\n                }\n            });\n        }else if(nodetype === 'modules'){\n            var activenode_scr;\n            //paste to module\n            //call $scope.createNode for each node\n            dNodes_c.forEach((e)=> {\n                if (e.type === 'scenarios') {\n                    activeNode = 0;\n                    var res = createNode(activeNode,cnodes,clinks,cdNodes,cdLinks,csections,count,e.name,verticalLayout)\n                    cnodes = res.nodeDisplay\n                    clinks = res.linkDisplay\n                    cdNodes = res.dNodes\n                    cdLinks = res.dLinks\n                    count= {...count,...res.count}\n                    activeNode = cdNodes.length-1;\n                    activenode_scr = activeNode;\n                    dLinks_c.forEach((f) =>{\n                        if (f.source.id === e.id && f.target.type === 'screens') {\n                            activeNode = activenode_scr;\n                            var res = createNode(activeNode,cnodes,clinks,cdNodes,cdLinks,csections,count,f.target.name,verticalLayout)\n                            cnodes = res.nodeDisplay\n                            clinks = res.linkDisplay\n                            cdNodes = res.dNodes\n                            cdLinks = res.dLinks\n                            count= {...count,...res.count}\n                            activeNode = cdNodes.length-1;\n                            dLinks_c.forEach(function(g, k) {\n                                if (g.source.id === f.target.id && g.source.type === 'screens') {\n                                    var res = createNode(activeNode,cnodes,clinks,cdNodes,cdLinks,csections,count,g.target.name,verticalLayout)\n                                    cnodes = res.nodeDisplay\n                                    clinks = res.linkDisplay\n                                    cdNodes = res.dNodes\n                                    cdLinks = res.dLinks\n                                    count= {...count,...res.count}\n                                }\n                            });\n                        }\n                    })\n                }\n\n            });\n        }\n    }\n    else if (d3.select('.node-selected').attr('data-nodetype') === 'scenarios') {\n        setPopup({\n            title:'Error',\n            content: 'Please select a Scenario to paste to..',\n            submitText:'Ok',\n            show:true\n        })\n        return false\n    } else if(d3.select('.node-selected').attr('data-nodetype') === 'modules') {\n        setPopup({\n            title:'Error',\n            content: 'Please select a Module to paste to..',\n            submitText:'Ok',\n            show:true\n        })\n        return false\n    }\n    return {cnodes,clinks,cdNodes,cdLinks,csections,count};\n}\n\nconst bindZoomListner = (setCtScale,translate) => {\n    //need global move\n    const svg = d3.select(`.mp__canvas_svg`);\n    const g = d3.select(`.ct-container`);\n    const zoom  = d3.behavior.zoom()\n        .scaleExtent([0.1, 3])\n        .on('zoom', () => {\n            if(!nodeMoving) {\n                g.attr('transform', `translate(${d3.event.translate}) scale(${d3.event.scale})`);\n                var cScale = d3.event.translate;\n                setCtScale({x:cScale[0],y:cScale[1],k:d3.event.scale})\n            } else {\n                const x = g.attr(\"transform\").split(/[()]/)[1].split(',')[0];\n                const y = g.attr(\"transform\").split(/[()]/)[1].split(',')[1];\n                const scale = g.attr(\"transform\").split(/[()]/)[3];\n                // const pos = g.attr(\"transform\");\n                zoom.scale(scale).translate([x,y]);\n            }\n        })\n    if(translate) zoom.scale(1).translate([translate[0],translate[1]])\n    svg.call(zoom)\n    return zoom\n}\n\nexport default CanvasNew;","import React, { useRef, useEffect, useState, Fragment } from 'react';\nimport * as d3 from 'd3';\nimport SearchBox from '../components/SearchBox'\nimport NavButton from '../components/NavButton'\nimport Legends from '../components/Legends'\nimport ControlBox from '../components/Controlbox'\nimport InputBox from '../components/InputBox' \nimport SaveMapButton from '../components/SaveMapButton'\nimport { useDispatch, useSelector} from 'react-redux';\nimport {generateTree,toggleNode,moveNodeEnd,moveNodeBegin,createNode,createNewMap,deleteNode} from './MindmapUtils'\nimport * as actionTypes from '../state/action';\nimport '../styles/CanvasEnE.scss'\n\nconst types = {\n    'modules': 112,\n    'scenarios': 237,\n    'screens': 363,\n    'testcases': 488\n};\nvar count;\nvar zoom //global var to store zoom\nvar nodeMoving = false;\nvar temp = {\n    s: [],\n    hidden:[],\n    deleted:[],\n    t: \"\"\n};\n\nconst CanvasEnE =(props)=>{\n    const dispatch = useDispatch()\n    const CanvasRef = useRef();\n    const setBlockui=props.setBlockui\n    const setPopup=props.setPopup\n    const [ctrlBox,setCtrlBox] = useState(false);\n    const [inpBox,setInpBox] = useState(false);\n    const [links,setLinks] = useState({})\n    const [nodes,setNodes] = useState({})\n    const [dNodes,setdNodes] = useState([])\n    const [dLinks,setdLinks] = useState([])\n    const [sections,setSection] =  useState({})\n    const [ctScale,setCtScale] = useState({})\n    const [verticalLayout,setVerticalLayout] = useState(false)\n    const [createnew,setCreateNew] = useState(false)\n    const scenarioList = useSelector(state=>state.mindmap.scenarioList)\n    const deletedNodes = useSelector(state=>state.mindmap.deletedNodes)\n\n    const clickDeleteNode=(id)=>{\n        var res = deleteNode(id,[...dNodes],[...dLinks],{...links},{...nodes},setPopup)\n        if(res){\n            dispatch({type:actionTypes.UPDATE_DELETENODES,payload:[...deletedNodes,...res.deletedNodes]})\n            setNodes(res.nodeDisplay)\n            setLinks(res.linkDisplay)\n            setdLinks(res.dLinks)\n            setdNodes(res.dNodes)\n        }\n    }\n    useEffect(()=>{\n        //useEffect to clear redux data selected module on unmount\n        return ()=>{\n            dispatch({type:actionTypes.SELECT_MODULE,payload:{}})\n        }\n    },[dispatch])\n    useEffect(()=>{\n        var tree;\n        count = {\n            'modules': 0,\n            'scenarios': 0,\n            'screens': 0,\n            'testcases': 0\n        }\n        if(props.module.createnew && verticalLayout===props.verticalLayout){\n            tree = createNewMap(props.verticalLayout,'endtoend')\n            tree.sections = types\n            tree.links = {}\n            tree.dLinks = []\n            if(zoom){\n                zoom.scale(1).translate([0,0]).event(d3.select(`.mp__canvas_svg`))\n                zoom.on(\"zoom\",null)\n            }\n            count['modules'] = 1\n            setCreateNew(0)\n        }else{\n            // To load an existing module. Tree has to be loaded. Possible places, module box / switch layout.\n            tree = props.module\n            if(verticalLayout !== props.verticalLayout && dNodes.length > 0){\n                tree = dNodes[0]\n            }\n            //load mindmap from data\n            tree = generateTree(tree,types,{...count},props.verticalLayout)\n            count= {...count,...tree.count}\n        }\n        d3.select('.ct-container').attr(\"transform\", \"translate(\" + tree.translate[0]+','+tree.translate[1] + \")scale(\" + 1 + \")\");\n        zoom = bindZoomListner(setCtScale,tree.translate,ctScale)\n        setLinks(tree.links)\n        setdLinks(tree.dLinks)\n        setNodes(tree.nodes)\n        setdNodes(tree.dNodes)\n        setCtScale({x:tree.translate[0],y:tree.translate[1],k:1})\n        setSection(tree.sections)\n        setVerticalLayout(props.verticalLayout);\n        setBlockui({show:false})\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.module,props.reload,props.verticalLayout]);\n    useEffect(()=>{\n        if(createnew !== false){\n            var p = d3.select('#node_'+createnew);\n            setCreateNew(false)\n            setInpBox(p)\n        }\n    },[createnew])\n    useEffect(()=>{\n        if(Object.keys(scenarioList).length<1)return;\n        setBlockui({show:true,content:'Creating Nodes...'})\n        var cnodes = {...nodes}\n        var clinks = {...links}\n        var cdNodes = [...dNodes]\n        var cdLinks = [...dLinks]\n        var csections = {...sections}\n        Object.entries(scenarioList).forEach(e => {\n            var res = createNode(0,{...cnodes},{...clinks},[...cdNodes],[...cdLinks],{...csections},{...count},e[1],verticalLayout,e[0])\n            cnodes = res.nodeDisplay\n            clinks = res.linkDisplay\n            cdNodes = res.dNodes\n            cdLinks = res.dLinks\n            count= {...count,...res.count}\n        });\n        setNodes(cnodes)\n        setLinks(clinks)\n        setdLinks(cdLinks)\n        setdNodes(cdNodes)\n        dispatch({type:actionTypes.UPDATE_SCENARIOLIST,payload:{}})\n        setBlockui({show:false})\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[scenarioList])\n    const clickCollpase=(e)=>{\n        var id = e.target.parentElement.id;\n        var res = toggleNode(id,{...nodes},{...links},[...dNodes],[...dLinks])\n        setNodes(res.nodeDisplay)\n        setLinks(res.linkDisplay)\n        setdLinks(res.dLinks)\n        setdNodes(res.dNodes)\n    }\n    const moveNode=(e,type)=>{\n        var res;\n        var id = e.target.parentElement.id.split('node_')[1];\n        if(type==='KeyUp'){\n            res = moveNodeEnd(id,[...dNodes],[...dLinks],{...links},{...temp},verticalLayout)\n            setLinks(res.linkDisplay)\n            nodeMoving = false\n            temp = {\n                s: [],\n                hidden:[],\n                deleted:[],\n                t: \"\"\n            };\n        }\n        else{\n            nodeMoving = true\n            res = moveNodeBegin(id,{...links},[...dLinks],{...temp},{...ctScale},verticalLayout)\n            setLinks(res.linkDisplay)\n            temp={...temp,...res.temp}\n        }\n    }\n    const nodeClick=(e)=>{\n        e.stopPropagation()\n        setInpBox(false)\n        setCtrlBox(e.target.parentElement.id)\n    }\n    return (\n        <Fragment>\n            <Legends isEnE={true}/>\n            {(inpBox !== false)?<InputBox setCtScale={setCtScale} zoom={zoom} setPopup={setPopup} node={inpBox} dNodes={[...dNodes]} setInpBox={setInpBox} setCtrlBox={setCtrlBox} ctScale={ctScale} />:null}\n            {(ctrlBox !== false)?<ControlBox isEnE={true} nid={ctrlBox}  clickDeleteNode={clickDeleteNode} setCtrlBox={setCtrlBox} setInpBox={setInpBox} ctScale={ctScale}/>:null}\n            <SaveMapButton isEnE={true} dNodes={[...dNodes]} setPopup={setPopup} setBlockui={setBlockui}/>\n            <SearchBox setCtScale={setCtScale} zoom={zoom}/>\n            <NavButton setCtScale={setCtScale} zoom={zoom}/>\n            <svg id=\"mp__canvas_svg\" className='mp__canvas_svg' ref={CanvasRef}>\n                <g className='ct-container'>\n                {Object.entries(links).map((link)=>{\n                return(<path id={link[0]} key={link[0]+'_link'} className={\"ct-link\"+(link[1].hidden?\" no-disp\":\"\")} d={link[1].d}></path>)\n                })}\n                {Object.entries(nodes).map((node)=>\n                    <g id={'node_'+node[0]} key={node[0]} className={\"ct-node\"+(node[1].hidden?\" no-disp\":\"\")} data-nodetype={node[1].type} transform={node[1].transform}>\n                        <image  onClick={(e)=>nodeClick(e)} style={{height:'40px',width:'40px',opacity:(node[1].state===\"created\")?0.5:1}} className=\"ct-nodeIcon\" xlinkHref={node[1].img_src}></image>\n                        <text className=\"ct-nodeLabel\" textAnchor=\"middle\" x=\"20\" title={node[1].title} y=\"50\">{node[1].name}</text>\n                        <title val={node[0]} className=\"ct-node-title\">{node[1].title}</title>\n                        {(node[1].type!=='scenarios')?\n                        <circle onClick={(e)=>clickCollpase(e)} className={\"ct-\"+node[1].type+\" ct-cRight\"+(!dNodes[node[0]]._children?\" ct-nodeBubble\":\"\")} cx={verticalLayout ? 20 : 44} cy={verticalLayout ? 55 : 20} r=\"4\"></circle>\n                        :null}\n                        {(node[1].type!=='modules' && node[1].type!=='endtoend')?\n                        <circle \n                        onMouseUp={(e)=>moveNode(e,'KeyUp')}\n                        onMouseDown={(e)=>moveNode(e,'KeyDown')}\n                        cx={verticalLayout ? 20 : -3} cy={verticalLayout ? -4 : 20}\n                        className={\"ct-\"+node[1].type+\" ct-nodeBubble\"} r=\"4\"></circle>\n                        :null}\n                    </g>)}\n                </g>\n            </svg>\n        </Fragment>\n    )\n}\n\nconst bindZoomListner = (setCtScale,translate) => {\n    //need global move\n    const svg = d3.select(`.mp__canvas_svg`);\n    const g = d3.select(`.ct-container`);\n    const zoom  = d3.behavior.zoom()\n        .scaleExtent([0.1, 3])\n        .on('zoom', () => {\n            if(!nodeMoving) {\n                g.attr('transform', `translate(${d3.event.translate}) scale(${d3.event.scale})`);\n                var cScale = d3.event.translate;\n                setCtScale({x:cScale[0],y:cScale[1],k:d3.event.scale})\n            } else {\n                const x = g.attr(\"transform\").split(/[()]/)[1].split(',')[0];\n                const y = g.attr(\"transform\").split(/[()]/)[1].split(',')[1];\n                const scale = g.attr(\"transform\").split(/[()]/)[3];\n                // const pos = g.attr(\"transform\");\n                zoom.scale(scale).translate([x,y]);\n            }\n        })\n    if(translate) zoom.scale(1).translate([translate[0],translate[1]])\n    svg.call(zoom)\n    return zoom\n}\n\n\nexport default CanvasEnE","import React, {Fragment, useEffect, useState} from 'react';\nimport {getProjectList, getModules, getScreens} from '../api';\nimport {useDispatch, useSelector} from 'react-redux';\nimport SaveMapButton from '../components/SaveMapButton';\nimport Toolbarmenu from '../components/ToolbarMenu';\nimport ModuleListDrop from '../components/ModuleListDrop';\nimport Legends from '../components/Legends'\nimport * as actionTypes from '../state/action';\nimport CanvasNew from './CanvasNew';\nimport ExportMapButton from '../components/ExportMapButton';\nimport {ClickFullScreen, ClickSwitchLayout, parseProjList} from './MindmapUtils';\nimport {ScreenOverlay, PopupMsg, ReferenceBar} from '../../global';\nimport '../styles/CreateNew.scss';\n\n/*Component CreateNew\n  use: renders create New Mindmap page\n*/\n    \nconst CreateNew = ({importRedirect}) => {\n  const dispatch = useDispatch()\n  const [popup,setPopup] = useState({show:false})\n  const [blockui,setBlockui] = useState({show:false})\n  const [fullScreen,setFullScreen] = useState(false)\n  const [verticalLayout,setVerticalLayout] = useState(false)\n  const [loading,setLoading] = useState(true)\n  const moduleSelect = useSelector(state=>state.mindmap.selectedModule)\n\n  useEffect(()=>{\n    (async()=>{\n        setBlockui({show:true,content:'Loading modules ...'})\n        var res = await getProjectList()\n        if(res.error){displayError(res.error);return;}\n        var data = parseProjList(res)\n        dispatch({type:actionTypes.UPDATE_PROJECTLIST,payload:data})\n        if(!importRedirect){\n            dispatch({type:actionTypes.SELECT_PROJECT,payload:res.projectId[0]}) \n            var moduledata = await getModules({\"tab\":\"tabCreate\",\"projectid\":res.projectId[0],\"moduleid\":null})\n            if(moduledata.error){displayError(moduledata.error);return;}\n            var screendata = await getScreens(res.projectId[0])\n            if(screendata.error){displayError(screendata.error);return;}\n            dispatch({type:actionTypes.UPDATE_SCREENDATA,payload:screendata})\n            dispatch({type:actionTypes.UPDATE_MODULELIST,payload:moduledata})\n        }\n        setBlockui({show:false,content:''})\n        setLoading(false)\n    })()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[])\n\n  const displayError = (error) =>{\n    setBlockui({show:false})\n    setLoading(false)\n    setPopup({\n        title:'ERROR',\n        content:error,\n        submitText:'Ok',\n        show:true\n    })\n  }\n  \n  return (\n    <Fragment>\n        {(blockui.show)?<ScreenOverlay content={blockui.content}/>:null}\n        {(popup.show)?<PopupMsg submit={()=>setPopup({show:false})} close={()=>setPopup({show:false})} title={popup.title} content={popup.content} submitText={popup.submitText}/>:null}\n        {(!loading)?\n            <div className='mp__canvas_container'>\n                <div className='mp__toolbar__container'>\n                    <Toolbarmenu setBlockui={setBlockui} setPopup={setPopup} displayError={displayError}/>\n                </div>\n                <ModuleListDrop setPopup={setPopup}/>\n                <div id='mp__canvas' className='mp__canvas'>\n                    {(Object.keys(moduleSelect).length>0)?\n                    <CanvasNew displayError={displayError} setBlockui={setBlockui} setPopup={setPopup} module={moduleSelect} verticalLayout={verticalLayout}/>\n                    :<Fragment>\n                        <ExportMapButton/>\n                        <SaveMapButton disabled={true}/>\n                        <Legends/>\n                    </Fragment>}\n                </div>\n            </div>:null\n        }\n        <ReferenceBar taskTop={true} collapsible={true} collapse={true}>\n            <div className=\"ic_box\" >\n                <img onClick={()=>ClickSwitchLayout(verticalLayout,setVerticalLayout,moduleSelect,setPopup,setBlockui,dispatch)} alt='Switch Layout' style={{height: '55px'}} className={\"rb__ic-task thumb__ic \" + (verticalLayout?\"active_rb_thumb \":\"\")} src=\"static/imgs/switch.png\"/>\n                <span className=\"rb_box_title\">Switch</span><span className=\"rb_box_title\">Layout</span>\n            </div>\n            <div className=\"ic_box\" >\n                <img onClick={()=>ClickFullScreen(setFullScreen,setPopup)} style={{height: '55px'}} alt='Full Screen' className={\"rb__ic-task thumb__ic \" +(fullScreen?\"active_rb_thumb\":\"\")} src=\"static/imgs/fscr.png\"/>\n                <span className=\"rb_box_title\">Full Screen</span>\n            </div>\n        </ReferenceBar>\n    </Fragment>\n  );\n}\n\nexport default CreateNew;","import React, { Fragment , useState, useEffect} from 'react';\nimport {ScrollBar,ModalContainer} from '../../global';\nimport { useSelector, useDispatch} from 'react-redux';\nimport {getModules,populateScenarios}  from '../api'\nimport * as actionTypes from '../state/action';\nimport '../styles/ModuleListDropEnE.scss'\nimport PropTypes from 'prop-types';\n\n/*Component ModuleListDropEnE\n  use: renders modulelist and scenarios in dropdown for ene called by ToolbarMenuEnE\n*/\n\nconst ModuleListDropEnE = (props) =>{\n    const dispatch = useDispatch()\n    const moduleList = useSelector(state=>state.mindmap.moduleList)\n    const proj = useSelector(state=>state.mindmap.selectedProj)\n    const moduleSelect = useSelector(state=>state.mindmap.selectedModule)\n    const [initScList,setInitScList] = useState([]) \n    const [scenarioList,setScenarioList] = useState([])\n    const [selectedSc,setSelctedSc] = useState([])\n    const [dropdown,setDropdown] = useState(true)\n    const [warning,setWarning] = useState(false)\n    const setBlockui = props.setBlockui\n    const filterSc = props.filterSc\n    useEffect(()=>{\n        var filter = [...initScList].filter((e)=>e.name.toUpperCase().indexOf(filterSc.toUpperCase())!==-1)\n        setScenarioList(filter)\n    },[filterSc,setScenarioList,initScList])\n    useEffect(()=>{\n        setInitScList([])\n        setSelctedSc([])\n    },[proj])\n    const selectModule = async(e) => {\n        setSelctedSc([])\n        var modID = e.currentTarget.getAttribute(\"value\")\n        var type = e.currentTarget.getAttribute(\"type\")\n        var name = e.currentTarget.getAttribute(\"name\")\n        if(Object.keys(moduleSelect).length===0 && type!=='endtoend'){\n            displayError('First, Please select an end to end module or create a new one!');\n            return;\n        }\n        if(type!=='endtoend'){\n            setBlockui({content:'loading scenarios',show:true})\n            //loading screen\n            var res = await populateScenarios(modID)\n            if(res.error){displayError(res.error);return}\n            props.setModName(name)\n            setScenarioList(res)\n            setInitScList(res)\n            setBlockui({show:false})\n            return;\n        }\n        if(Object.keys(moduleSelect).length===0){\n            loadModule(modID)\n            return;\n        }else{\n            setWarning(modID)\n        }\n    }\n    const loadModule = async(modID) =>{\n        // setModdrop(false)\n        setWarning(false)\n        setBlockui({show:true,content:\"Loading Module ...\"})        \n        if(moduleSelect._id === modID){\n            dispatch({type:actionTypes.SELECT_MODULE,payload:{}})\n        }\n        var req={\n            tab:\"endToend\",\n            projectid:proj,\n            version:0,\n            cycId: null,\n            modName:\"\",\n            moduleid:modID\n        }\n        var res = await getModules(req)\n        if(res.error){displayError(res.error);return}\n        dispatch({type:actionTypes.SELECT_MODULE,payload:res})\n        setBlockui({show:false})\n    }\n    const addScenario = (e) => {\n        var sceId = e.currentTarget.getAttribute(\"value\")\n        var sceName = e.currentTarget.getAttribute(\"title\")\n        var scArr = {...selectedSc}\n        if(scArr[sceId]){\n            delete scArr[sceId] \n        }else{\n            scArr[sceId] = sceName\n        }        \n        setSelctedSc(scArr)\n    }\n    const displayError = (err) =>{\n        setBlockui({show:false})\n        props.setPopup({\n          title:'ERROR',\n          content:err,\n          submitText:'Ok',\n          show:true\n        })\n    }\n    const clickAdd = () =>{\n        if(Object.keys(selectedSc).length<1)return;\n        dispatch({type:actionTypes.UPDATE_SCENARIOLIST,payload:selectedSc})\n    }\n    const clickCreateNew = () =>{\n        dispatch({type:actionTypes.SELECT_MODULE,payload:{createnew:true}})\n        dispatch({type:actionTypes.INIT_ENEPROJECT,payload:proj})\n    }\nreturn(\n    <Fragment>\n    {warning?<ModalContainer \n    title='Confirmation'\n    close={()=>setWarning(false)}\n    footer={<Footer modID={warning} loadModule={loadModule} setWarning={setWarning} />}\n    content={<Content/>} \n    modalClass='modal-sm'\n    />:null}\n    <div className='ene_toolbar__dropdown' style={{'height':(dropdown)?'90px':'250px'}}>\n        <div data-test=\"moduleList\"className='ene_toolbar__dropdown_module'>\n            <ScrollBar scrollId='toolbar_module-list' trackColor={'transperent'} thumbColor={'grey'}>\n            {moduleList.map((e,i)=>{\n                return(\n                    <div data-test=\"individualModules\"name={e.name} value={e._id} type={e.type} onClick={(e)=>selectModule(e)} key={i} className={'ene_toolbar__module-box'+((moduleSelect._id === e._id)?\" selected\":\"\")}>\n                        <img src={(e.type===\"endtoend\")?\"static/imgs/node-endtoend.png\":\"static/imgs/node-modules.png\"} alt='module'></img>\n                        <span value={e._id} >{e.name}</span>\n                    </div>\n                )\n            })}\n            </ScrollBar>\n        </div>      \n        <div data-test=\"scenarioList\" className='ene_toolbar__dropdown_scenario'>\n            <div className='ene_toolbar__scrollwrap'>\n                <ScrollBar scrollId='toolbar_module-list' trackColor={'transperent'} thumbColor={'grey'}>\n                <div>\n                {scenarioList.map((e,i)=>{\n                    return(\n                        <div key={i+'scenario'} onClick={(e)=>addScenario(e)} className={'dropdown_scenarios'+(selectedSc[e._id]?' selected':'')} title={e.name} value={e._id} >{e.name}</div>\n                    )\n                })}\n                </div>\n                </ScrollBar>\n            </div>\n            <div data-test=\"EnEbuttons\"className='ene_toolbar__buttons'>\n                <button onClick={clickAdd} className={'btn'+(selectedSc.length<1?' disabled':'')}>Add</button>\n                <button onClick={clickCreateNew}className='btn'>Create New</button>\n            </div>\n        </div>\n        <div className={'ene_toolbar__module-footer'}>\n            <div onClick={()=>setDropdown(!dropdown)}><i className={(dropdown)?\"fa fa-caret-down\":\"fa fa-caret-up\"} title=\"Drop down button\"></i></div>\n        </div>\n    </div>\n    </Fragment>\n)}\n\n//select module warning popups's content\nconst Content = () => (\n    <p>Unsaved work will be lost if you continue. Do you want to continue?</p>\n)\n\n//select module warning popups's footer\nconst Footer = (props) => (\n    <div className='toolbar__module-warning-footer'>\n        <button className='btn-yes' onClick={()=>props.loadModule(props.modID)}>Yes</button>\n        <button onClick={()=>{props.setWarning(false)}}>No</button>\n    </div>\n)\nModuleListDropEnE.propTypes={\n    setBlockui:PropTypes.func.isRequired,\n    setPopup:PropTypes.func.isRequired,\n    filterSc:PropTypes.string.isRequired,\n    setModName: PropTypes.func.isRequired\n}\nexport default ModuleListDropEnE;","import '../styles/ToolbarMenuEnE.scss'\nimport React, { useState, useRef, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {getModules} from '../api';\nimport * as actionTypes from '../state/action';\nimport ModuleListDropEnE from './ModuleListDropEnE';\nimport PropTypes from 'prop-types'\n\n/*Component ToolbarMenuEnE\n  use: renders Toolbar header for ene and also container for moduleList dropdown\n*/\nconst ToolbarMenuEnE = (props) =>{\n    const dispatch = useDispatch()\n    const SearchMdInp = useRef()\n    const SearchScInp = useRef()\n    const moduleList = useSelector(state=>state.mindmap.moduleList)\n    const initProj = useSelector(state=>state.mindmap.selectedProj)\n    const prjList = useSelector(state=>state.mindmap.projectList)\n    const [modName,setModName] = useState(false)\n    const [modlist,setModList] = useState(undefined)\n    const [filterSc,setFilterSc] = useState('')\n    const setPopup = props.setPopup\n    const setBlockui = props.setBlockui\n\n    const selectProj = async(proj) =>{\n        dispatch({type:actionTypes.SELECT_PROJECT,payload:proj})\n        setBlockui({show:true,content:'Loading modules ...'})\n        var moduledata = await getModules({\"tab\":\"endToend\",\"projectid\":proj,\"moduleid\":null})\n        if(moduledata.error){displayError(moduledata.error);return;}\n        dispatch({type:actionTypes.UPDATE_MODULELIST,payload:moduledata})\n        setModList(moduledata)\n        setModName(false)\n        setBlockui({show:false})\n        SearchMdInp.current.value = \"\"\n        SearchScInp.current.value = \"\"\n    }\n    const searchModule = (val) =>{\n        var initmodule = modlist\n        if(!initmodule){\n            initmodule = moduleList\n            setModList(moduleList)\n        }\n        var filter = initmodule.filter((e)=>e.name.toUpperCase().indexOf(val.toUpperCase())!==-1)\n        dispatch({type:actionTypes.UPDATE_MODULELIST,payload:filter})\n    }\n    const searchScenario = (val) =>{\n        setFilterSc(val)\n    }\n    const displayError = (error) =>{\n        setPopup({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n    var projectList = Object.entries(prjList)\n    return(\n        <Fragment>\n            <div className='ene_toolbar__header'>\n                <div className='ene_toolbar_module_header'>\n                    <label data-test=\"projectLabel\">Project:</label>\n                    <select data-test=\"projectSelect\" value={initProj} onChange={(e)=>{selectProj(e.target.value)}}>\n                        {projectList.map((e,i)=><option value={e[1].id} key={i}>{e[1].name}</option>)}\n                    </select>\n                    <span data-test=\"search\" className='ene_toolbar__header-searchbox'>\n                        <input data-test=\"searchInput\" placeholder=\"Search Modules\" ref={SearchMdInp} onChange={(e)=>searchModule(e.target.value)}></input>\n                        <img src={\"static/imgs/ic-search-icon.png\"} alt={'search'}/>\n                    </span>\n                </div>\n                <div className='ene_toolbar_scenario'>\n                    <label>{modName?`Module Name: ${modName}`:'Scenarios'}</label>\n                    <span className='ene_toolbar__header-searchbox'>\n                        <input placeholder=\"Search Scenario\" ref={SearchScInp} onChange={(e)=>searchScenario(e.target.value)}></input>\n                        <img src={\"static/imgs/ic-search-icon.png\"} alt={'search'}/>\n                    </span>\n                </div>\n                <ModuleListDropEnE {...props} filterSc={filterSc} setModName={setModName}/>\n            </div>\n        </Fragment>\n    )\n}\nToolbarMenuEnE.propTypes={\n    setBlockui:PropTypes.func.isRequired,\n    setPopup:PropTypes.func.isRequired\n}\nexport default ToolbarMenuEnE;","import React ,  { Fragment, useEffect, useState } from 'react';\nimport { getProjectList, getModules } from '../api';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { ScreenOverlay, PopupMsg, ReferenceBar} from '../../global';\nimport { ClickFullScreen , parseProjList, ClickSwitchLayout} from './MindmapUtils';\nimport  ToolbarMenuEnE from '../components/ToolbarMenuEnE';\nimport CanvasEnE from './CanvasEnE';\nimport SaveMapButton from '../components/SaveMapButton';\nimport Legends from '../components/Legends';\nimport * as actionTypes from '../state/action';\nimport '../styles/CreateEnE.scss';\n\n\n/*Component CreateEnE\n  use: renders create end to end Mindmap page\n*/\nconst CreateEnE = () =>{\n    const dispatch = useDispatch()\n    const [popup,setPopup] = useState({show:false})\n    const [blockui,setBlockui] = useState({show:false})\n    const [fullScreen,setFullScreen] = useState(false)\n    const [verticalLayout,setVerticalLayout] = useState(false)\n    const moduleSelect = useSelector(state=>state.mindmap.selectedModule)\n    useEffect(()=>{(async()=>{\n        setBlockui({show:true,content:'Loading modules ...'})\n        var res = await getProjectList()\n        if(res.error){displayError(res.error);return;}\n        var data = parseProjList(res)\n        dispatch({type:actionTypes.UPDATE_PROJECTLIST,payload:data})\n        dispatch({type:actionTypes.SELECT_PROJECT,payload:res.projectId[0]}) \n        var moduledata = await getModules({\"tab\":\"endToend\",\"projectid\":res.projectId[0],\"moduleid\":null})\n        if(moduledata.error){displayError(moduledata.error);return;}\n        dispatch({type:actionTypes.SELECT_MODULE,payload:{}})\n        dispatch({type:actionTypes.UPDATE_MODULELIST,payload:moduledata})\n        setBlockui({show:false})\n        })()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    const displayError = (error) =>{\n        setBlockui({show:false})\n        setPopup({\n        title:'ERROR',\n        content:error,\n        submitText:'Ok',\n        show:true\n        })\n    }\n    return(\n    <Fragment>\n        {(blockui.show)?<ScreenOverlay content={blockui.content}/>:null}\n        {(popup.show)?<PopupMsg submit={()=>setPopup({show:false})} close={()=>setPopup({show:false})} title={popup.title} content={popup.content} submitText={popup.submitText}/>:null}\n        <div id='ene' className='mp__canvas_container'>\n            <ToolbarMenuEnE setBlockui={setBlockui} setPopup={setPopup}/>\n            <div id='mp__canvas' className='mp__canvas'>\n                {(Object.keys(moduleSelect).length>0)?<CanvasEnE setBlockui={setBlockui} setPopup={setPopup} module={moduleSelect} verticalLayout={verticalLayout}/>\n                :<Fragment>\n                    <SaveMapButton disabled={true}/>\n                    <Legends isEnE={true}/>\n                </Fragment>}\n            </div>\n        </div>\n        <ReferenceBar taskTop={true} collapsible={true} collapse={true}>\n            <div className=\"ic_box\" >\n                <img alt={\"Switch Layout\"} onClick={()=>ClickSwitchLayout(verticalLayout,setVerticalLayout,moduleSelect,setPopup,setBlockui,dispatch)} style={{height: '55px'}} className={\"rb__ic-task thumb__ic \" + (verticalLayout?\"active_rb_thumb \":\"\")} src=\"static/imgs/switch.png\"/>\n                <span className=\"rb_box_title\">Switch</span><span className=\"rb_box_title\">Layout</span>\n            </div>\n            <div className=\"ic_box\" >\n                <img alt={\"Full Screen\"} onClick={()=>ClickFullScreen(setFullScreen,setPopup)} style={{height: '55px'}} className={\"rb__ic-task thumb__ic \" +(fullScreen?\"active_rb_thumb\":\"\")} src=\"static/imgs/fscr.png\"/>\n                <span className=\"rb_box_title\">Full Screen</span>\n            </div>\n        </ReferenceBar>  \n    </Fragment>\n    )\n}\n\nexport default CreateEnE;","import React, {useEffect, useState, useRef} from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { getProjectList, getModules} from '../api';\nimport {parseProjList} from '../containers/MindmapUtils';\nimport * as actionTypes from '../state/action';\nimport '../styles/ToolbarMenuAssign.scss';\nimport PropTypes from 'prop-types';\n\n/*Component ToolbarMenuAssign\n  use: renders Toolbar header\n*/\nconst ToolbarMenuAssign = (props) => {\n    const dispatch = useDispatch()\n    const SearchInp = useRef()\n    const selectProj = useSelector(state=>state.mindmap.selectedProj)\n    const prjList = useSelector(state=>state.mindmap.projectList)\n    const [modlist,setModList] = useState([])\n    const [relList,setRelList] = useState([])\n    const [relIndex,setRelIndex] = useState(undefined)\n    const [cycle,setCycle] = useState(\"\")\n    const setPopup = props.setPopup\n    const setBlockui = props.setBlockui\n    const cycleRef = props.cycleRef\n    const releaseRef = props.releaseRef\n    useEffect(()=>{\n        (async()=>{\n            if(!selectProj){\n                var res = await getProjectList()\n                if(res.error){displayError(res.error);return;}\n                var data = parseProjList(res)\n                dispatch({type:actionTypes.UPDATE_PROJECTLIST,payload:data})\n                dispatch({type:actionTypes.SELECT_PROJECT,payload:res.projectId[0]})\n            }else{\n                var rel = prjList[selectProj].releases\n                setRelList(rel)\n                setBlockui({show:false})\n            }\n        })()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[selectProj,prjList])\n    const updateModuleList = async(cycle) => {\n        SearchInp.current.value = \"\"\n        setCycle(cycle)\n        setBlockui({content:'Loding Modules',show:true})\n        var data = { \n            cycId: cycle,\n            projectid: selectProj,\n            tab: \"tabAssign\"\n        }\n        var moduledata = await getModules(data)\n        if(moduledata.error){displayError(moduledata.error);return;}\n        dispatch({type:actionTypes.SELECT_MODULE,payload:{}})\n        dispatch({type:actionTypes.UPDATE_MODULELIST,payload:moduledata})\n        setModList(moduledata)\n        setBlockui({show:false})\n    }\n    const displayError = (error) =>{\n        // SetProgressBar(\"stop\",dispatch)\n        setPopup({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n    const changeProject = (val) => {\n        setBlockui({show:true,content:'Loading...'})\n        dispatch({type:actionTypes.SELECT_PROJECT,payload:val})\n        dispatch({type:actionTypes.UPDATE_MODULELIST,payload:[]})\n        dispatch({type:actionTypes.SELECT_MODULE,payload:{}})\n        setRelIndex(undefined)\n        setCycle('')\n        SearchInp.current.value = \"\"\n    }\n    const changeRelease = (val) => {\n        setRelIndex(val)\n        setCycle('Select')\n        dispatch({type:actionTypes.SELECT_MODULE,payload:{}})\n        dispatch({type:actionTypes.UPDATE_MODULELIST,payload:[]})\n        SearchInp.current.value = \"\"\n    }\n    const searchModule = (val) =>{\n        var filter = modlist.filter((e)=>e.name.toUpperCase().indexOf(val.toUpperCase())!==-1)\n        dispatch({type:actionTypes.UPDATE_MODULELIST,payload:filter})\n    }\n    var projectList = Object.entries(prjList)\n    return(\n        <div className='asn_toolbar__header'>\n            <label data-test=\"projectLabel\">Project:</label>\n            <select data-test=\"projectSelect\" value={selectProj} onChange={e=>changeProject(e.target.value)} >\n                {projectList.map((e,i)=><option value={e[1].id} key={i}>{e[1].name}</option>)}\n            </select>\n            <label data-test=\"releaseLablel\">Release:</label>\n            <select data-test=\"releaseSelect\" value={relIndex?relIndex:'Select'} ref={releaseRef} onChange={e=>changeRelease(e.target.value)} className={(!relIndex || relIndex==='Select')?'errorClass':''}>\n                <option value=\"Select\" disabled={true}>Select</option>\n                {relList.map((e,i)=><option value={i} key={i}>{e.name}</option>)}\n            </select>\n            <label data-test=\"cycleLabel\">Cycle:</label>\n            <select data-test=\"cycleSelect\" value={cycle} ref={cycleRef} onChange={e=>updateModuleList(e.target.value)} disabled={(!relIndex||relIndex ==='Select')?true:false} className={(relIndex && relIndex !=='Select'&& cycle==='Select')?'errorClass':''}>\n                <option value=\"Select\" disabled={true}>Select</option>\n                {relIndex && relList[relIndex].cycles.map((e,i)=><option value={e._id} key={i}>{e.name}</option>)}\n            </select>\n            <span data-test=\"searchSpan\" className='asn_toolbar__header-searchbox'>\n                <input data-test=\"searchInput\" disabled={(cycle==='Select'||cycle==='')?true:false} placeholder=\"Search Modules\" ref={SearchInp} onChange={(e)=>searchModule(e.target.value)} ></input>\n                <img src={\"static/imgs/ic-search-icon.png\"} alt={'search'}/>\n            </span>\n        </div>\n    )\n}\nToolbarMenuAssign.propTypes={\n    cycleRef: PropTypes.object.isRequired,\n    releaseRef: PropTypes.object.isRequired,\n    setBlockui: PropTypes.func.isRequired,\n    setPopup:PropTypes.func.isRequired,\n}\nexport default ToolbarMenuAssign;","import React, { createRef, useEffect, useState } from 'react';\nimport {ModalContainer, ScrollBar} from '../../global'\nimport '../styles/Complexity.scss'\nimport PropTypes from 'prop-types';\n\n/*Component Complexity\n  use: returns ComplexityBox near module\n*/\n\nconst Complexity = (props) => {\n    const setShowcomplexity = props.setShowcomplexity\n    const setComplexity = props.setComplexity\n    const complexity = props.complexity\n    const type = props.type\n    const [nclist,setNclist] = useState(complexity.clist?complexity.clist:[])\n    const [refs,setRefs] = useState([])\n    const submitComplexity = (e) => {\n        var err =  false\n        var clist_tmp = [nclist[0]];\n        refs.forEach((e)=>{\n            var value = e.current.value\n            if(value === \"Select Option\"){\n                err = true;\n                e.current.style.borderColor = 'red';\n            }else{\n                clist_tmp.push(value)\n            }\n        })\n        if(!err){\n            var val =  getComplexityLevel(type,clist_tmp[0])\n            setComplexity({show:true,clist:clist_tmp,val:val})\n            setShowcomplexity(false)\n        }\n    }\n    return(\n        <div data-test=\"complexButton\" className='complx_btn'>\n        <ModalContainer\n        title='Complexity'\n        close={()=>setShowcomplexity(false)}\n        footer={<Footer type={type} submitComplexity={submitComplexity} nclist={nclist}/>}\n        content={<Container nclist={nclist} refs={refs} setRefs={setRefs} setNclist={setNclist} type={type}/>} \n      /></div>\n    )\n}\n\nconst Container = ({type,nclist,refs,setRefs,setNclist}) => {\n    const arr = cTableData[type]\n    useEffect(()=>{\n        setRefs((refs)=>Object.keys(arr).map((_,i)=>refs[i]||createRef()))\n    },[arr,setRefs])\n    const onFormChange = (e) => {\n        var cscore_tmp = 0;\n        refs.forEach((e)=>{\n            var label = e.current.attributes[\"label\"].textContent\n            var value = e.current.value\n            if(value !== \"Select Option\")e.current.style.borderColor = '';\n            var cw = cx_weightage[label]? cx_weightage[label] : 0;\n            var cs = cx_scale[value]? cx_scale[value] : 0;\n            cscore_tmp = cscore_tmp + (cs * cw);\n        })\n        var a = [...nclist]\n        a.splice(0,1,cscore_tmp)\n        setNclist(a)\n    }\n    return(\n        <div data-test=\"complexityContainer\" className='complx_container'>\n            <ScrollBar>\n            {Object.entries(arr).map((e,i)=>(\n                <div data-test=\"complexRows\" key={i+'_cmplx'} className='complx_row'>\n                    <label>{e[0]}</label>  \n                    <select ref={refs[i]} label={e[0]} defaultValue={nclist?nclist[i+1]:undefined} onChange={onFormChange}>\n                        <option  selected disabled={true}>Select Option</option>\n                        {e[1].map(k=><option key={k+\"_cr\"} value={k}>{k}</option>)} \n                    </select>\n                </div>\n            ))}\n            </ScrollBar>\n        </div>\n    )\n}\n\nconst Footer = ({nclist,type,submitComplexity}) =>{\n    var val = nclist.length>0?getComplexityLevel(type,nclist[0]):'Not Set'\n    return(\n    <div data-test=\"complexityFooter\"className='complx_footer'>\n        <label data-test=\"complexityLabel\">{'complexity : ' +val}</label>\n        <button data-test=\"okButton\"className='complx_btn' onClick={submitComplexity}>OK</button>\n    </div>\n)}\n\nconst getComplexityLevel = (nType, csc)=>{\n    if (nType === 'scenarios') {\n        if (csc <= 20) {\n            return 'Low';\n        } else if (csc <= 30) {\n            return 'Medium';\n        } else {\n            return 'High';\n        }\n    }\n    if (nType === 'screens') {\n        if (csc <= 20) {\n            return 'Low';\n        } else if (csc <= 30) {\n            return 'Medium';\n        } else {\n            return 'High';\n        }\n    }\n    if (nType === 'testcases') {\n        if (csc <= 20) {\n            return 'Low';\n        } else if (csc <= 35) {\n            return 'Medium';\n        } else {\n            return 'High';\n        }\n    } else return undefined;\n}\n\nconst cx_weightage = { //scale , weightage\n    'Application Type': 3,\n    'Domain knowledge factor': 1,\n    'Requirement Complexity': 2,\n    'Test Data Requirement/complexity': 3,\n    'Test Management Tool being used': 1,\n\n    'Multi-lingual support': 5,\n    '# of Objects': 5,\n\n    'Analytical & Logical Reasoning': 1,\n    'Team Capability': 1,\n    '# of steps': 1,\n    '# of Verification Points': 2,\n    'Multi-browser support': 1,\n    'Re-usability/Re-#': 2,\n    'Database Check points': 1\n}\nconst cx_scale = {\n    //apptype\n    'DW ETL (H)': 5,\n    'Desktop (H)': 5,\n    'Oracle (H)': 5,\n    'SAP (H)': 5,\n    'Mainframe Application (H)': 5,\n    'Mobile Application - IOS (H)': 5,\n    'Mobile Web - IOS (H)': 5,\n    'Webservices - REST (M)': 3,\n    'Mobile Web - Android (M)': 3,\n    'Database Application (M)': 3,\n    'Web Application (L)': 1,\n    'Webservices - SOAP (L)': 1,\n    'Mobile Application - Android (L)': 1,\n    //Domain knowledge\n    'Limited': 5,\n    'Fair': 3,\n    'Good': 1,\n    'H': 5,\n    'M': 3,\n    'L': 1,\n    //Test Management Tool\n    'Yes': 5,\n    'No': 3,\n    //Multi-lingual support Multi-browser support\n    '1': 1,\n    '2 to 3': 3,\n    '>3': 5,\n    //# of objects\n    '<11': 1,\n    '11-25': 3,\n    '>25': 5,\n    //Analytical & Logical Reasoning + Team Capability\n    'Very Low': 5,\n    'Low': 4,\n    'Nominal': 3,\n    'High': 2,\n    'Very High': 1,\n    //# of Steps\n    '< 15': 1,\n    '15-30': 3,\n    '>30': 5,\n    //# of Verification Points Database Check points\n    '< 2': 1,\n    '3-8': 3,\n    '>8': 5,\n    //Re-usability/Re-#\n    'Reused': 1,\n    'Rehashed': 3,\n    'NA': 5\n};\n\nconst cTableData = {\n    'scenarios' : {\n        'Application Type': ['DW ETL (H)', 'Desktop (H)', 'Oracle (H)', 'SAP (H)', 'Mainframe Application (H)', 'Mobile Application - IOS (H)', 'Mobile Web - IOS (H)', 'Webservices - REST (M)', 'Mobile Web - Android (M)', 'Database Application (M)', 'Web Application (L)', 'Webservices - SOAP (L)', 'Mobile Application - Android (L)'],\n        'Domain knowledge factor': ['Limited', 'Fair', 'Good'],\n        'Requirement Complexity': ['H', 'M', 'L'],\n        'Test Data Requirement/complexity': ['H', 'M', 'L'],\n        'Test Management Tool being used': ['Yes', 'No']\n    },\n    'screens' : {\n        'Multi-lingual support': ['1', '2 to 3', '>3'],\n        '# of Objects': ['<11', '11-25', '>25']\n    },\n    'testcases' : {\n        'Analytical & Logical Reasoning': ['Very Low', 'Low', 'Nominal', 'High', 'Very High'],\n        'Team Capability': ['Very Low', 'Low', 'Nominal', 'High', 'Very High'],\n        '# of steps': ['<15', '15-30', '>30'],\n        '# of Verification Points': ['<3', '3-8', '>8'],\n        'Multi-browser support': ['<1', '2-3', '>3'],\n        'Re-usability/Re-#': ['NA', 'Reused', 'Rehashed'],\n        'Database Check points': ['2', '3-8', '>8']\n    }\n};\nComplexity.propTypes={\n    \"complexity\":PropTypes.object.isRequired,\n    \"setComplexity\":PropTypes.func,\n    \"setShowcomplexity\":PropTypes.func\n}\nexport {getComplexityLevel};\nexport default Complexity;","/*eslint eqeqeq: \"off\"*/\nimport React, { Fragment, useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport '../styles/TaskBox.scss';\nimport ClickAwayListener from 'react-click-away-listener';\nimport {populateUsers} from '../api';\nimport { useSelector } from 'react-redux';\nimport {ModalContainer, CalendarComp} from '../../global';\nimport Complexity, {getComplexityLevel} from './Complexity';\nimport PropTypes from 'prop-types'\n\nvar unassignTask = []\nvar reassignFlag = false\nconst defaultVal = 'ct-default';\n\n/*Component TaskBox\n  use: returns TaskBox near module\n  note: eslint eqeqeq: \"off\" added coz many places were logics were needed \" == null\"\n*/\nconst TaskBox = (props) => {\n    const taskRef = useRef()\n    const batchNameRef = useRef()\n    const taskDetailsRef =  useRef()\n    const projectList = useSelector(state=>state.mindmap.projectList)\n    const unassignList = useSelector(state=>state.mindmap.unassignTask)\n    const userInfo = useSelector(state=>state.login.userinfo)\n    const selectedProj = useSelector(state=>state.mindmap.selectedProj)\n    const [closeCal,setCloseCal] = useState(false)\n    const [warning,setWarning]=useState(false)\n    const [task,setTask] = useState({arr:[],initVal:undefined})\n    const [batchName,setBatchName] = useState({show:false})\n    const [userAsgList,setUserAsgList] = useState({loading:true,arr:[],value:undefined,disabled:true})\n    const [userRevList,setUserRevList] = useState({loading:true,arr:[],value:undefined})\n    const [startDate,setStartDate] = useState({show:false,value:undefined})\n    const [endDate,setEndDate] = useState({show:false,value:undefined})\n    const [propagate,setPropagate] = useState({show:false,val:false})\n    const [complexity,setComplexity] = useState({show:false,clist:undefined,val:undefined})\n    const [assignbtn,SetAssignbtn] = useState({disable:true,reassign:false})\n    const [showcomplexity,setShowcomplexity] = useState(false)\n    const appType = projectList[selectedProj].apptypeName\n    const cycleid = props.cycleid;\n    const releaseid = props.releaseid;\n    const setTaskBox = props.setTaskBox;\n    const setPopup = props.setPopup;\n    const displayError = props.displayError\n    var ctScale = props.ctScale;\n    var dNodes = props.dNodes;\n    var nodeDisplay = props.nodeDisplay\n    var clickUnassign = props.clickUnassign\n    var clickAddTask = props.clickAddTask\n    var nid = props.nid;\n    var p = d3.select('#'+nid);\n    var pi = nid.split(\"_\")[1]\n    var t = p.attr('data-nodetype');\n    useEffect(()=>{\n        setCoordinate(p,t,ctScale)\n        return ()=>{\n            d3.select('#ct-assignTable').classed('hide',true)\n            p.classed('node-highlight',false)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[ctScale,nid,p,t])\n    useEffect(()=>{\n        if(dNodes[pi].parent && dNodes[pi].parent.type === 'endtoend'){\n            setTaskBox(false)\n            setPopup({show:true,title:'MindMap',content:'Can not assign scenarios in end to end module. Please select respective modules to assign scenarios',submitText:'Ok'})\n            return;\n        }\n        if (t == 'screens' && (appType == \"System\" || appType == \"Mainframe\")) {\n            setTaskBox(false)\n            setPopup({show:true,title:'Error',content:'Task is disabled for '+appType +' screen',submitText:'Ok'})\n            return;\n        }\n        if (t != 'testcases' && (dNodes[pi]._children != null)) {\n            setTaskBox(false)\n            setPopup({show:true,title:'Error',content:'Expand the node',submitText:'Ok'})\n            return;\n        } \n        if (t != 'testcases' && (dNodes[pi].children == null)) {\n            setTaskBox(false)\n            setPopup({show:true,title:'Error',content:'Incomplete Flow',submitText:'Ok'})\n            return;\n        }\n        unassignTask = unassignList\n        var nt = (dNodes[pi].task !== undefined || dNodes[pi].task != null) ? dNodes[pi].task : !1; \n        if(nt){\n            if(unassignList.indexOf(dNodes[pi].task._id)!=-1){\n                SetAssignbtn({disable:false,reassign:true})\n            }else{\n                SetAssignbtn({disable:false,reassign:false})\n            }            \n        }\n        var tObj = {\n            t: (nt) ? nt.tasktype : '',\n            bn: (nt) ? nt.batchname : '',\n            at: (nt) ? nt.assignedto : '',\n            rw: (nt && nt.reviewer != null) ? nt.reviewer : '',\n            sd: (nt) ? nt.startdate : '',\n            ed: (nt) ? nt.enddate : '',\n            re: (nt && nt.release != null) ? nt.release : '',\n            cy: (nt && nt.cycleid != null) ? nt.cycleid : '',\n            ac: (nt) ? nt.accessibility_testing : 'Disable',\n            det: (nt) ? nt.details : '',\n            cx: (nt) ? nt.complexity : undefined,\n            _id:(nt)? nt._id:null\n        };\n        var taskList = {...taskAssign[t]}\n        if (tObj.t == null || tObj.t == \"\") {\n            tObj.t = taskList.task[0];\n        }\n        if(t === 'scenarios' && appType === 'Web' ){\n            switch(tObj.t){\n                case taskList.task[0]:\n                    tObj.ac = \"Disable\";\n                    break;\n                case taskList.task[1]:\n                    tObj.ac = \"Enable\"\n                    break;\n                case taskList.task[2]:\n                    tObj.ac = \"Exclusive\"\n                    break;\n                default:\n                    tObj.ac = \"Disable\"\n            }\n        }else if(t === 'scenarios'){\n            taskList.task = [taskList.task[0]]\n        }\n        if (tObj.det === null || tObj.det.trim() == \"\") {\n            tObj.det = taskAssign[t].detail(0,dNodes[pi].name)\n        }\n        taskDetailsRef.current.value = tObj.det\n        // populate task \n        var val = dNodes[pi].task ? dNodes[pi].task.tasktype:dNodes[pi].task\n        setTask({arr:taskList.task,initVal:val,disabled:tObj.at?true:false})\n        taskList.attributes.forEach(e => {\n            switch(e){\n                case 'bn':{\n                    changeTask(val=='Execute Batch'?val:'Execute')\n                    return;\n                }\n                case 'at':{\n                    (async()=>{\n                        var res = await populateUsers(selectedProj)\n                        if(res.error){displayError(res.error);setTaskBox(false);return;}\n                        var arr = [...res.rows].sort((a,b)=>a.name.localeCompare(b.name))\n                        setUserAsgList({loading:false,arr:arr,value:tObj.at,disabled:tObj.at?true:false})\n                        setUserRevList({loading:false,arr:arr,value:tObj.rw})\n                    })()\n                    return;\n                }\n                case 'rw':\n                    return;\n                case 'sd':\n                    if (tObj.sd != '' && tObj.sd.indexOf('-')==-1) {\n                        var d=new Date(tObj.sd);\n                        tObj.sd=d.getDate()+\"/\"+(d.getMonth()+1)+\"/\"+d.getFullYear();\n                    }\n                    setStartDate({show:true,value:tObj.sd})\n                    return;\n                case 'ed':\n                    if (tObj.ed != '' && tObj.ed.indexOf('-')==-1) {\n                        var d1=new Date(tObj.ed);\n                        tObj.ed=d1.getDate()+\"/\"+(d1.getMonth()+1)+\"/\"+d1.getFullYear();\n                    }\n                    setEndDate({show:true,value:tObj.ed})\n                    return;\n                case 'pg':\n                    setPropagate({show:true,val:false})\n                    return;\n                case 'cx':\n                    if (dNodes[pi].parent) {\n                        var clist = tObj.cx;\n                        var cval ='Not Set'\n                        if (!(clist == \"undefined\" || clist == undefined || clist == \"\")){\n                            clist = clist.split(\",\");\n                            cval = getComplexityLevel(t, parseInt(clist[0]))\n                        }else{\n                            clist=undefined\n                        } \n                        setComplexity({show:true,clist:clist,val:cval})\n                    }\n                    return;\n                default : return;\n            }\n\n        });\n        return()=>{\n            unassignTask=[]\n            reassignFlag=false\n            setTask({arr:[],initVal:undefined})\n            setBatchName({show:false})\n            setUserAsgList({loading:true,arr:[],value:undefined,disabled:true})\n            setUserRevList({loading:true,arr:[],value:undefined})\n            setStartDate({show:false,value:undefined})\n            setEndDate({show:false,value:undefined})\n            setPropagate({show:false,val:false})\n            setComplexity({show:false,clist:undefined,val:undefined})\n            SetAssignbtn({disable:true,reassign:false})\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[nid])\n    const propList = {\n        userInfo,pi,dNodes,userAsgList,userRevList,batchNameRef,taskRef,startDate,endDate,taskDetailsRef,complexity,cycleid,releaseid,appType\n    }\n    const changeTask = (initVal) =>{\n        if(initVal === 'Execute Batch' || (taskRef.current && taskRef.current.value === 'Execute Batch')){\n            if(batchNameRef.current)batchNameRef.current.value = dNodes[pi].task?dNodes[pi].task.batchname:\"\"\n            setBatchName({show:true,val:dNodes[pi].task?dNodes[pi].task.batchname:\"\",disabled:false})\n        }else if(initVal === 'Execute' || (taskRef.current && taskRef.current.value === 'Execute')){\n            if(batchNameRef.current)batchNameRef.current.value = \"\"\n            setBatchName({show:true,disabled:true,val:\"\"})\n        }\n    }\n    const unAssign = (flag) => {\n        if(assignbtn.disable)return;\n        reassignFlag = flag;\n        var twf= userInfo.taskwflow;\n        if (twf && (dNodes[pi].type==\"screens\" || dNodes[pi].type==\"testcases\") && !warning){\n            setWarning(true)\n            return;\n        }\n        setWarning(false)\n        removeTask(pi,undefined,userInfo,propagate.val,dNodes,nodeDisplay,cycleid,pi)\n        if(nodeDisplay){\n            clickUnassign({nodeDisplay,unassignTask})\n        }\n    }\n    const addTask = () => {\n        if(!assignBoxValidator(propList))return;\n        if(assignbtn.reassign){\n            props.setTaskBox(false);\n            return;\n        }\n        var tObj = initTaskObject(propList);\n        Object.keys(tObj).forEach((k)=>{\n            if (tObj[k] === undefined) tObj[k] = null;\n        });\n        //assignedObj[pi] = {[tObj.t]:tObj.atName}\n        // if(p.select('.ct-nodeTask')[0][0]==null) p.append('image').attr('class','ct-nodeTask').attr('xlink:href','imgs/node-task-assigned.png').attr('x',29).attr('y',-10);\n        if (t == \"modules\" || t == \"endtoend\") {\n            if (dNodes[pi]._id != \"null\") {\n                addTask_11(pi, tObj, 0, cycleid, dNodes, nodeDisplay);\n            }\n            //Logic to add tasks for the scenario\n            if (dNodes[pi].children && propagate.val) dNodes[pi].children.forEach(function(tSc) {\n                addTask_11(tSc.id, tObj, 1, cycleid, dNodes, nodeDisplay);\n                if (tSc.children != undefined) {\n                    tSc.children.forEach(function(scr) {\n                        if (appType != \"System\" && appType != \"Mainframe\") addTask_11(scr.id, tObj, 2, cycleid, dNodes, nodeDisplay);\n                        scr.children.forEach(function(tCa) {\n                            addTask_11(tCa.id, tObj, 3, cycleid, dNodes, nodeDisplay);\n                        });\n                    });\n                }\n            });\n        }\n        //Logic to add tasks for the scenario\n        else if (t == \"scenarios\") {\n            //var modid = dNodes[pi].parent.id_c,\n            var tscid = dNodes[pi].id_c;\n            if (tscid != 'null') {\n                addTask_11(dNodes[pi].id, tObj, 4, cycleid, dNodes, nodeDisplay);\n                if (dNodes[pi].children && propagate.val) dNodes[pi].children.forEach(function(scr) {\n                    if (appType != \"System\" && appType != \"Mainframe\") addTask_11(scr.id, tObj, 5, cycleid, dNodes, nodeDisplay);\n                    scr.children.forEach(function(tCa) {\n                        addTask_11(tCa.id, tObj, 6, cycleid, dNodes, nodeDisplay);\n                    });\n                });\n            }\n        } else if (t == \"screens\") {\n            addTask_11(pi, tObj, 7, cycleid, dNodes, nodeDisplay);\n            if (dNodes[pi].children && propagate.val) dNodes[pi].children.forEach(function(tCa) {\n                var cTask = (tObj.t == \"Scrape\" || tObj.t == \"Append\" || tObj.t == \"Compare\") ? \"Design\" : \"Debug\";\n                addTask_11(tCa.id, tObj, 8, cycleid, dNodes, nodeDisplay , cTask,);\n            });\n        } else if (t == \"testcases\") {\n            addTask_11(pi, tObj, 9, cycleid, dNodes, nodeDisplay);\n        }\n        clickAddTask({dNodes,nodeDisplay})\n    }\n    const stopPropagate = (e) => {\n        if(e.target && !e.target.className.includes(\"rdt\"))setCloseCal(true);\n        if(e.target && e.target.id === 'task-ok')return;\n        e.stopPropagation()\n        if(e.nativeEvent){\n            e.nativeEvent.stopImmediatePropagation()\n        }\n    }\n    return(\n        <Fragment>\n        {warning?<ModalContainer \n            title='Confirmation'\n            close={()=>setWarning(false)}\n            footer={<Footer unAssign={()=>unAssign(reassignFlag)} setWarning={setWarning} />}\n            content={<Content/>} \n            modalClass='modal-sm'\n        />:null}\n        <ClickAwayListener onClickAway={()=>{props.setTaskBox(false)}}>\n            <div onClick={stopPropagate} id='ct-assignTable' className='task-box__container hide'>\n                <ul>\n                    {task.arr.length>0?\n                        <li>\n                            <label data-test=\"taskLabel\">Task</label>\n                            <select data-test=\"taskSelect\" onChange={changeTask}  disabled={assignbtn.reassign || task.disabled}  defaultValue={task.initVal} ref={taskRef}>\n                                {task.arr.map((e)=>\n                                    <option key={e} value={e}>{e}</option>\n                                )}\n                            </select>\n                        </li>\n                    :null}\n                    {(batchName.show)?\n                        <li>\n                            <label data-test=\"batchLabel\">Batch Name</label>\n                            <input data-test=\"batchInput\" id='ct-batchName' disabled={batchName.disabled || assignbtn.reassign} ref={batchNameRef} defaultValue={batchName.val}></input>\n                        </li>\n                    :null}\n                    <li>\n                        <label data-test=\"assignedtoLabel\">Assigned to</label>\n                        {userAsgList.loading?\n                        <select data-test=\"assignedselect1\" key='select_1' disabled={true} value={defaultVal}><option value={defaultVal}>Loading...</option></select>\n                        :<select data-test=\"assignedselect2\" key='select_2' id='ct-assignedTo' onChange={(e)=>setUserAsgList({...userAsgList,value:e.target.value})} disabled={userAsgList.disabled || assignbtn.reassign} defaultValue={userAsgList.value} >\n                            <option value={defaultVal}>Select User</option>\n                            {userAsgList.arr.map((e)=>\n                                <option key={e._id} value={e._id}>{e.name}</option>\n                            )}\n                        </select>}\n                    </li>\n                    <li>\n                        <label data-test=\"reviewLabel\">Reviewer</label>\n                        {userRevList.loading?\n                        <select data-test=\"reviewSelect1\" key='selectr_1' disabled={true} value={defaultVal}><option value={defaultVal}>Loading...</option></select>\n                        :<select data-test=\"reviewSelect2\" key='selectr_2'id='ct-assignRevw' onChange={(e)=>setUserRevList({...userRevList,value:e.target.value})} disabled={assignbtn.reassign} defaultValue={userRevList.value}>\n                            <option value={defaultVal}>Select Reviewer</option>\n                            {userRevList.arr.map((e)=>\n                                <option key={e._id} value={e._id}>{e.name}</option>\n                            )}\n                        </select>   \n                        }                     \n                    </li>\n                    {startDate.show?\n                        <li data-test=\"startDate\" id='ct-startDate'>\n                            <label data-test=\"startDateLabel\">Start Date</label>\n                            <CalendarComp setCloseCal={setCloseCal} closeCal={closeCal} disabled={assignbtn.reassign} date={startDate.value} setDate={(val)=>setStartDate({show:true,value:val})}/>\n                        </li>\n                    :null}\n                    {endDate.show?\n                        <li data-test=\"endDate\" id='ct-endDate'>\n                            <label data-test=\"endDateLabel\" >End Date</label>\n                            <CalendarComp setCloseCal={setCloseCal} closeCal={closeCal} disabled={assignbtn.reassign} date={endDate.value} setDate={(val)=>setEndDate({show:true,value:val})}/>\n                        </li>\n                    :null}\n                    {propagate.show?\n                        <li>\n                            <label data-test=\"propogateLabel\">Propagate</label>\n                            <input data-test=\"propogateInput\" onChange={()=>setPropagate({show:true,val:!propagate.val})} type='checkbox'></input>\n                        </li>\n                    :null}\n                    {complexity.show?\n                        <li>\n                            <label data-test=\"complexityLabel\" >Complexity</label>\n                            <span data-test=\"complexity\">\n                            <label data-test=\"complexityValue\" >{complexity.val}</label>\n                                <i className=\"fa fa-list\" aria-hidden=\"true\" onClick={()=>setShowcomplexity(true)}></i>\n                            </span>\n                        </li>\n                    :null}\n                    {showcomplexity && !assignbtn.reassign?<Complexity setComplexity={setComplexity} complexity={complexity} type={t} setShowcomplexity={setShowcomplexity}/>:null}\n                </ul>\n                <div>\n                    <textarea data-test=\"taskDetails\" ref={taskDetailsRef} placeholder={\"Enter Task Details\"} disabled={assignbtn.reassign} id='ct-assignDetails' ></textarea>\n                </div>\n                <div id='ct-submitTask'>\n                    {(assignbtn.reassign)?\n                    <span data-test=\"reassign\" id='unassign-btn' tabIndex={'0'}  onKeyPress={()=>unAssign(true)} onClick={()=>unAssign(true)} className={(assignbtn.disable)?'disableButton':''}>Reassign</span>:\n                    <span data-test=\"unassign\" id='unassign-btn' tabIndex={'0'}  onKeyPress={()=>unAssign(false)} onClick={()=>unAssign(false)} className={(assignbtn.disable)?'disableButton':''}>Unassign</span>\n                    }\n                    <span data-test=\"ok\" id='task-ok' tabIndex={'0'} onClick={addTask} onKeyPress={addTask}>Ok</span>\n                </div>\n            </div>\n        </ClickAwayListener>\n        </Fragment>\n    )\n}\n\n//content for moduleclick warning popup\nconst Content = () => (\n    <p>Taskworkflow Strict mode enabled ! Unassigning Tasks of Screens and Tetscases will lead to failure of Execution. Do you wish to continue?</p>\n)\n\n//footer for moduleclick warning popup\nconst Footer = (props) => (\n    <div className='toolbar__module-warning-footer'>\n        <button className='btn-yes' onClick={props.unAssign}>Yes</button>\n        <button onClick={()=>{props.setWarning(false)}}>No</button>\n    </div>\n)\n\nfunction addTask_11(pi, tObj, qid, cycleid,dNodes,nodeDisplay,cTask) {\n    var validate = checkAndUpdate(dNodes[pi], []);\n    var taskUndef = (dNodes[pi].task === undefined || dNodes[pi].task == null || (dNodes[pi].task != null && dNodes[pi].task.status== \"complete\"));\n    var origTask = ([0, 4, 7, 9].indexOf(qid) != -1); // Orignal tasks not cascaded  \n    var taskStatus;\n    if(dNodes[pi].type==\"screens\" || dNodes[pi].type==\"testcases\")\n    {\n       if(dNodes[pi].task!=null && dNodes[pi].task.cycleid!=cycleid)\n       {\n           return;\n       } \n    }\n    if (validate[0]) {\n        //var taskflag = true;\n        // if (taskUndef && dNodes[pi].type == \"scenarios\") {\n        //     switch(tObj.t){\n        //         case \"Execute Scenario Accessibility Only\": \n        //             d3.select('#ct-node-' + pi).append('image').attr('class', 'ct-nodeTask').attr('xlink:href', 'imgs/ic-accessibility-enabled.png').attr('x', -14).attr('y', -10).attr('width', '21px').attr('height', '21px');\n        //             break;\n        //         case \"Execute Scenario with Accessibility\":\n        //             d3.select('#ct-node-' + pi).append('image').attr('class', 'ct-nodeTask').attr('xlink:href', 'imgs/ic-accessibility-enabled.png').attr('x', -14).attr('y', -10).attr('width', '21px').attr('height', '21px');\n        //             d3.select('#ct-node-' + pi).append('image').attr('class', 'ct-nodeTask').attr('xlink:href', 'imgs/ic-functional-enabled.png').attr('x', 29).attr('y', -10).attr('width', '21px').attr('height', '21px');\n        //             break;\n        //         default:\n        //             d3.select('#ct-node-' + pi).append('image').attr('class', 'ct-nodeTask').attr('xlink:href', 'imgs/ic-functional-enabled.png').attr('x', 29).attr('y', -10).attr('width', '21px').attr('height', '21px');\n        //             break;\n        //     }\n        // }else if(taskUndef){\n        //     d3.select('#ct-node-' + pi).append('image').attr('class', 'ct-nodeTask').attr('xlink:href', 'imgs/ic-functional-enabled.png').attr('x', 29).attr('y', -10).attr('width', '21px').attr('height', '21px');\n        // }\n        if (taskUndef) {\n            nodeDisplay[pi].task=true;\n            //d3.select('#ct-node-' + pi).append('image').attr('class', 'ct-nodeTask').attr('xlink:href', 'imgs/node-task-assigned.png').attr('x', 29).attr('y', -10).attr('width', '21px').attr('height', '21px');\n        }\n        nodeDisplay[pi].ac=tObj.ac;\n        // If task already exists then set it to true\n        if (dNodes[pi].task) taskStatus = dNodes[pi].task.status;\n        else taskStatus = 'assigned';\n        if (qid == 9)\n            dNodes[pi].task = updateTaskObject(tObj, {\n                id: 9,\n                parent: (tObj.parent != null) ? tObj.parent : dNodes[pi].parent.parent._id\n            },taskUndef);\n        else if (qid == 7)\n            dNodes[pi].task = updateTaskObject(tObj, {\n                id: 7,\n                parent: (tObj.parent != null) ? tObj.parent : dNodes[pi].projectID\n            },taskUndef);\n        else if (qid == 8 && taskUndef) {\n            dNodes[pi].task = updateTaskObject(tObj, {\n                id: 8,\n                parent: dNodes[pi].parent.parent._id,\n                ctask: cTask\n            },taskUndef);\n        } else if (qid == 5 && taskUndef) {\n            dNodes[pi].task = updateTaskObject(tObj, {\n                id: 5,\n                parent: dNodes[pi].projectID\n            },taskUndef);\n        } else if (qid == 6 && taskUndef) {\n            dNodes[pi].task = updateTaskObject(tObj, {\n                id: 6,\n                parent: dNodes[pi].parent.parent._id\n            },taskUndef);\n        } else if (qid == 4) {\n            dNodes[pi].task = updateTaskObject(tObj, {\n                id: 4,\n                parent: (tObj.parent != null) ? tObj.parent : dNodes[pi].parent._id\n            },taskUndef)\n        } else if (qid == 3 && taskUndef) {\n            dNodes[pi].task = updateTaskObject(tObj, {\n                id: 3,\n                parent: dNodes[pi].parent.parent._id\n            },taskUndef);\n        } else if (qid == 2 && taskUndef) {\n            dNodes[pi].task = updateTaskObject(tObj, {\n                id: 2,\n                parent: dNodes[pi].projectID\n            },taskUndef);\n        } else if (qid == 1 && taskUndef) {\n            dNodes[pi].task = updateTaskObject(tObj, {\n                id: 1,\n                parent: dNodes[pi].parent._id\n            },taskUndef);\n        } else if (qid == 0) {\n            dNodes[pi].task = updateTaskObject(tObj, {\n                id: 0,\n                parent: (tObj.parent != null) ? tObj.parent : \"\"\n            },taskUndef);\n        }\n        if ((!taskUndef && !origTask) || origTask) {\n            //update parent\n            if (tObj.parent != validate[1]) {\n                dNodes[pi].task['updatedParent'] = validate[1];\n            }\n        }\n        if (!origTask) {\n            dNodes[pi].task.complexity = undefined;\n            dNodes[pi].task.details = '';\n        }\n        if(!origTask && taskUndef){\n            var type = dNodes[pi].type.slice(0,-1) //remove plural\n            // to avoid phrasing \"Execute scenario scenarios\" \n            type = (type)?\" \"+type.charAt(0).toUpperCase()+type.slice(1):\"\"\n            if(dNodes[pi].task.task == 'Execute Scenario')type = \"\"\n            dNodes[pi].task.details = dNodes[pi].task.task + type + \" \" + dNodes[pi].name\n            // dNodes[pi].task.details =  dNodes[pi].task.task + \" \" + dNodes[pi].type.substring(0,dNodes[pi].type.length-1) + \" \" + dNodes[pi].name;\n        }                \n        if(!taskUndef && !origTask){\n            dNodes[pi].task.reviewer = tObj.rw;\n            dNodes[pi].task.enddate = tObj.ed;\n        }\n        dNodes[pi].task.status = taskStatus;\n      \n\n        function replicateTask(pi) {\n            var reuseDict = getReuseDetails(dNodes);\n            //replicate task to reused node\n            //extend creates new copy of object instead of taking reference\n            //var tempTask = jQuery.extend(true, {}, dNodes[pi].task);\n            var tempTask = {...dNodes[pi].task}\n            if (reuseDict[pi].length > 0) {\n                reuseDict[pi].forEach(function(e, i) {\n                    if (dNodes[e]._id == null) return;\n                    dNodes[e].task = tempTask;\n                    dNodes[e].task.copied = true;\n                    dNodes[e].task.copiedidx = pi;\n                    nodeDisplay[e].task = true;\n                    // d3.select('#ct-node-' + e).append('image').attr('class', 'ct-nodeTask').attr('xlink:href', 'imgs/node-task-assigned.png').attr('style', 'opacity:1').attr('x', 29).attr('y', -10).attr('width', '21px').attr('height', '21px');\n                });\n            }\n            dNodes[pi].task.copied = false; // why ???\n        }\n\n        replicateTask(pi);\n    }\n}\n\n\n// update task \nfunction updateTaskObject(tObj, data,taskUndef) {\n\n    var t = {\n        taskvn: tObj.tvn,\n        _id:null,\n        batchName: tObj.bn,\n        task: tObj.t,\n        assignedto: tObj.at,\n        assignedToName: tObj.atName,\n        accessibilityTesting: tObj.ac,\n        reviewer: tObj.rw,\n        startdate: tObj.sd,\n        enddate: tObj.ed,\n        reestimation: tObj.reestimation,\n        release: tObj.re,\n        cycleid: tObj.cy,\n        details: tObj.det,\n        parent: data.parent,\n        complexity: tObj.complexity != undefined ? tObj.complexity.toString() : undefined\n    };\n    if (!taskUndef) t._id = tObj._id != undefined ? tObj._id : null\n    \n    if (data.id == 0) return t;\n    else delete t.batchName;\n    if (data.id == 1) {\n        t.task = \"Execute Scenario\";\n    } else if (data.id == 2) {\n        t.task = \"Scrape\";\n    } else if (data.id == 3) {\n        t.task = \"Design\";\n    } else if (data.id == 5) {\n        delete t.taskvn;\n        t.task = \"Scrape\";\n    } else if (data.id == 8) {\n        t.task = data.ctask;\n    } else if (data.id == 6) {\n        t.task = \"Design\";\n    }\n    return t;\n}\n\n// ??\nconst checkAndUpdate = (nObj, parentlist) => {\n    parentlist.unshift(nObj.id_c);\n    if (nObj.id_c == \"null\") return [false, []];\n    if (nObj.type == 'modules' || nObj.type == 'endtoend') {\n        return [true, parentlist];\n    }\n    if (nObj.parent) {\n        return checkAndUpdate(nObj.parent, parentlist);\n    }\n}\n\n// creates task object based on inputs  \nconst initTaskObject = ({pi,dNodes,userAsgList,userRevList,batchNameRef,taskRef,startDate,endDate,taskDetailsRef,complexity,cycleid,releaseid,appType}) =>{\n    var estimationCount = 0;\n    if (dNodes[pi].task != undefined || dNodes[pi].task != null) {\n        if (dNodes[pi].task.enddate != \"\" || dNodes[pi].task.enddate != undefined || dNodes[pi].task.enddate != \" \") {\n            var nodeDateSplit = dNodes[pi].task.enddate.split(\"-\");\n            var modDateSplit = endDate.value.split(\"-\");\n            if (new Date(nodeDateSplit[2], (nodeDateSplit[1] - 1), nodeDateSplit[0]) != new Date(modDateSplit[2], (modDateSplit[1] - 1), modDateSplit[0])) {\n                estimationCount = parseInt(dNodes[pi].task.reestimation) + 1;\n            }\n        }\n    }\n    var accessibilityToggle = 'Disable';\n    if  (taskRef.current.value == taskAssign.scenarios.task[1]) accessibilityToggle = \"Enable\"\n    else if (taskRef.current.value == taskAssign.scenarios.task[2]) accessibilityToggle = \"Exclusive\"\n    var tObj = {\n        // tvn: tvn,\n        t: taskRef.current.value,\n        bn: batchNameRef.current ? batchNameRef.current.value: undefined,\n        at: userAsgList.value,\n        atName: d3.select('#ct-assignedTo').node().selectedOptions[0].text,\n        rw: userRevList.value,\n        sd: startDate.value,\n        ed: endDate.value,\n        reestimation: estimationCount,\n        ac: accessibilityToggle,\n        re: releaseid,\n        cy: cycleid,\n        app: appType,\n        det: taskDetailsRef.current.value,  \n        complexity:complexity.clist\n    };\n    if (dNodes[pi].task) {\n        tObj._id = dNodes[pi].task._id;\n        tObj.parent = dNodes[pi].task.parent;\n    } else {\n        tObj._id = null;\n        tObj.parent = null;\n    }\n    return tObj;\n}\n\n//validate Task box values return boolean and adds error border\nconst assignBoxValidator = ({userInfo,userAsgList,userRevList,batchNameRef,startDate,endDate}) =>{\n    var pass = true;\n    d3.selectAll('#ct-assignTable .errorBorder').classed('errorBorder',false)\n    var twf= userInfo.taskwflow; \n    if(twf){\n        //check reviewer == assignee\n        if(userAsgList.value==userRevList.value){\n            d3.selectAll('#ct-assignRevw,#ct-assignedTo').classed('errorBorder',true)\n            pass = false;\n        }\n    }\n    if(!userAsgList.value || userAsgList.value == defaultVal){\n        d3.select('#ct-assignedTo').classed('errorBorder',true);\n        pass = false;\n    }\n    if(!userRevList.value || userRevList.value == defaultVal){\n        d3.select('#ct-assignRevw').classed('errorBorder',true);\n        pass = false;\n    }\n    if(batchNameRef.current && !batchNameRef.current.disabled && (batchNameRef.current.value == undefined || batchNameRef.current.value == \"\")){\n        d3.select('#ct-batchName').classed('errorBorder',true);\n        pass = false;\n    }\n    if (startDate.value == \"\") {\n        d3.select('#ct-startDate .fc-datePicker').classed('errorBorder',true);\n        pass = false;\n    }\n    if (endDate.value == \"\") {\n        d3.select('#ct-endDate .fc-datePicker').classed('errorBorder',true);\n        pass = false;\n    }\n    var ed = endDate.value.split('-');\n    var sd = startDate.value.split('-');\n    var start_date = new Date(sd[2] + '-' + sd[1] + '-' + sd[0]);\n    var end_date = new Date(ed[2] + '-' + ed[1] + '-' + ed[0]);\n    if (end_date < start_date) {\n        d3.select('#ct-endDate .fc-datePicker').classed('errorBorder',true);\n        pass = false;\n    }\n    return pass\n}\n\nconst setCoordinate = (p,t,ctScale) => {\n    p.classed('node-highlight',!0)\n    var split_char = ',';\n    p.classed('node-highlight',!0)\n    var c = d3.select('#ct-assignTable')\n    var cSize = [270, 367];\n    var s = d3.select(\"#mp__canvas_svg\");\n    var canvSize = [parseFloat(s.style(\"width\")), parseFloat(s.style(\"height\"))];\n    if (t == 'modules' || t == 'endtoend') cSize = [270, 452];\n    var l = p.attr('transform').slice(10, -1).split(split_char);\n    l = [(parseFloat(l[0]) + 50) * ctScale.k + ctScale.x, (parseFloat(l[1]) - 20) * ctScale.k + ctScale.y];\n    if (canvSize[0] - l[0] < cSize[0]) l[0] = l[0] - cSize[0] - 60 *  ctScale.k;\n    if (canvSize[1] - l[1] < cSize[1]) {\n        l[1] = canvSize[1] - cSize[1] - 40 *  ctScale.k;\n    }\n    //c.style('top', l[1] + 'px').style('left', l[0] + 'px');\n    // if(l[1]<0){\n    //     c.style('top', '0px').style('height', 'auto');\n    // }\n    if (l[1] < 0)l[1] = 0;\n    else if (l[1] > canvSize[1] - cSize[1])l[1] = (canvSize[1] - cSize[1]) - 150;\n    c.style('top', l[1] + 'px').style('left', l[0] + 'px').style('height', 'auto');\n    d3.select('#ct-assignTable').classed('hide',false)\n}\n\nconst removeTask = (pi,twf,userInfo,propagate,dNodes,nodeDisplay,cycleid,activeNode) => {\n    //Fetching the config value for strictTaskWorkflow for the first time, hence the check\n    if (twf !== false) twf= userInfo.taskwflow; \n    if((dNodes[pi].type==\"screens\" || dNodes[pi].type==\"testcases\") && dNodes[pi].task!=null && dNodes[pi].task.cycleid!=cycleid)return;\n    task_unassignment(pi,twf,dNodes,nodeDisplay,cycleid,userInfo,propagate,activeNode);\n    var reuseDict = getReuseDetails(dNodes);\n    if (reuseDict[pi].length > 0) {\n        reuseDict[pi].forEach(function(e, i) {\n            if (dNodes[e]._id == null) return;\n            if(reassignFlag){\n                nodeDisplay[e].task = true;\n            }else{\n                nodeDisplay[e].task = false;\n            }\n        });\n    }\n    // if (reuseDict[pi].length > 0) {\n    //     reuseDict[pi].forEach(count1.add, count1)\n    // }\n    // count1.forEach(function(ee,indx){\n    //     var p = d3.select('#ct-node-' + indx);\n    //     p.select('.ct-nodeTask').classed('no-disp', !0);\n    //     count1.delete(indx);\n    // });\n    \n\n}\n\nconst task_unassignment=(pi,twf,dNodes,nodeDisplay,cycleid,userInfo,propagate,activeNode)=>{\n    if (dNodes[pi].task != null) {\n        dNodes[pi].task.status = 'unassigned'; //status and assignedtoname are solely for notification\n        if (dNodes[pi].task._id!=null)\n        {\n            if(reassignFlag){\n                unassignTask = unassignTask.filter(i=>i!=dNodes[pi].task._id)\n                nodeDisplay[pi].task=true;\n            }else{\n                unassignTask.push(dNodes[pi].task._id);\n                nodeDisplay[pi].task=false;\n            }\n        }else{\n            nodeDisplay[pi].task=false;\n            dNodes[pi].task = null; //?? should we do it\n        }\n    }\n    //d3.select('#ct-assignBox').classed('no-disp', !0); remove box\n    var index = activeNode\n    if (dNodes[pi].children && propagate && (index == pi || dNodes[index]._id==dNodes[pi].parent._id || dNodes[index].type == \"modules\")) {\n        dNodes[pi].children.forEach(function(e, i) {\n            removeTask(e.id,twf,userInfo,propagate,dNodes,nodeDisplay,cycleid,activeNode);\n        });\n    }\n}\n\nconst getReuseDetails = (dNodes) => {\n    // reuse details within the same module\n    var dictTmp = {};\n    dNodes.forEach((e, i) =>{\n        dictTmp[i] = [];\n        if (e.reuse) {\n            dNodes.forEach((f, j) =>{\n                if (e.type == f.type && e.type == 'screens' && e.name == f.name && i != j && f.reuse)\n                    dictTmp[i].push(j);\n                else if (e.type == f.type && e.type == 'testcases' && e.name == f.name && i != j && e.parent && f.parent && e.parent.name == f.parent.name && f.reuse)\n                    dictTmp[i].push(j);\n                else if (e.type == f.type && e.type== 'scenarios' && e.name==f.name && i!=j && f.reuse)\n                    dictTmp[i].push(j);\n            })\n        }\n    })\n    return dictTmp;\n}\n\nconst taskAssign = {\n    \"endtoend\": {\n        \"task\": [\"Execute\", \"Execute Batch\"],\n        \"attributes\": [\"bn\", \"at\", \"rw\", \"sd\", \"ed\", \"reestimation\"],\n        \"detail\": (i,node)=>taskAssign.endtoend.task[i] +\" end to end \"+node\n    },\n    \"modules\": {\n        \"task\": [\"Execute\", \"Execute Batch\"],\n        \"attributes\": [\"bn\", \"at\", \"rw\", \"sd\", \"ed\", \"reestimation\", \"pg\"],\n        \"detail\": (i,node)=>taskAssign.modules.task[i] +\" module \"+node\n    },\n    \"scenarios\": {\n        \"task\": [\"Execute Scenario\",\"Execute Scenario with Accessibility\", \"Execute Scenario Accessibility Only\"],\n        \"attributes\": [\"at\", \"rw\", \"sd\", \"ed\", \"reestimation\", \"pg\", \"cx\"],\n        \"detail\": (i,node)=>\"Execute scenario \"+node +\" \"+taskAssign.scenarios.task[i].split(\"Execute Scenario\")[1]\n    },\n    \"screens\": {\n        \"task\": [\"Scrape\", \"Append\", \"Compare\", \"Add\", \"Map\"],\n        \"attributes\": [\"at\", \"rw\", \"sd\", \"ed\", \"reestimation\", \"pg\", \"cx\"],\n        \"detail\": (i,node)=>taskAssign.screens.task[i]+\" screen \"+node\n    },\n    \"testcases\": {\n        \"task\": [\"Design\", \"Update\"],\n        \"attributes\": [\"at\", \"rw\", \"sd\", \"ed\", \"reestimation\", \"cx\"],\n        \"detail\": (i,node)=>taskAssign.testcases.task[i]+\" testcase \"+node\n    }\n};\nTaskBox.propTypes={\n    setPopup: PropTypes.func,\n    clickUnassign:PropTypes.func ,\n    nodeDisplay: PropTypes.object,\n    releaseid: PropTypes.string,\n    cycleid: PropTypes.string,\n    ctScale:PropTypes.object ,\n    nid:PropTypes.string,\n    dNodes:PropTypes.array,\n    setTaskBox:PropTypes.func ,\n    clickAddTask:PropTypes.func ,\n    displayError:PropTypes.func \n}\nexport default TaskBox;","import React, { useRef, useEffect, useState, Fragment } from 'react';\nimport * as d3 from 'd3';\nimport SearchBox from '../components/SearchBox'\nimport NavButton from '../components/NavButton'\nimport Legends from '../components/Legends'\nimport TaskBox from '../components/TaskBox'\nimport ExportMapButton from '../components/ExportMapButton'\nimport SaveMapButton from '../components/SaveMapButton'\nimport { useDispatch } from 'react-redux';\nimport {generateTree,toggleNode,moveNodeEnd,moveNodeBegin} from './MindmapUtils'\nimport * as actionTypes from '../state/action';\nimport '../styles/CanvasAssign.scss'\n\nconst types = {\n    'modules': 112,\n    'scenarios': 237,\n    'screens': 363,\n    'testcases': 488\n};\nconst assignedIco = \"static/imgs/Functional.svg\"\nconst accessibilityIco = \"static/imgs/Accessibility.svg\"\nvar count;\nvar zoom //global var to store zoom\nvar nodeMoving = false;\nvar temp = {\n    s: [],\n    hidden:[],\n    deleted:[],\n    t: \"\"\n};\n\nconst CanvasAssign =(props)=>{\n    const dispatch = useDispatch()\n    const CanvasRef = useRef();\n    const setBlockui=props.setBlockui\n    const setPopup=props.setPopup\n    const cycleid = props.cycleRef.current.value;\n    const releaseid = props.releaseRef.current.value\n    const displayError = props.displayError\n    const [links,setLinks] = useState({})\n    const [nodes,setNodes] = useState({})\n    const [dNodes,setdNodes] = useState([])\n    const [dLinks,setdLinks] = useState([])\n    const [ctScale,setCtScale] = useState({})\n    const [verticalLayout,setVerticalLayout] = useState(false)\n    const [taskbox,setTaskBox] = useState(false)\n\n    useEffect(()=>{\n        //useEffect to clear redux data selected module on unmount\n        return ()=>{\n            dispatch({type:actionTypes.SELECT_MODULE,payload:{}})\n        }\n    },[dispatch])\n\n    useEffect(()=>{\n        var tree;\n        count = {\n            'modules': 0,\n            'scenarios': 0,\n            'screens': 0,\n            'testcases': 0\n        }\n            // To load an existing module. Tree has to be loaded. Possible places, module box / switch layout.\n            tree = props.module\n            if(verticalLayout !== props.verticalLayout && dNodes.length > 0){\n                tree = dNodes[0]\n            }\n            //load mindmap from data\n            tree = generateTree(tree,types,{...count},props.verticalLayout,true,cycleid)\n            count= {...count,...tree.count}\n        d3.select('.ct-container').attr(\"transform\", \"translate(\" + tree.translate[0]+','+tree.translate[1] + \")scale(\" + 1 + \")\");\n        zoom = bindZoomListner(setCtScale,tree.translate,ctScale)\n        setLinks(tree.links)\n        setdLinks(tree.dLinks)\n        setNodes(tree.nodes)\n        setdNodes(tree.dNodes)\n        setCtScale({x:tree.translate[0],y:tree.translate[1],k:1})\n        setVerticalLayout(props.verticalLayout);\n        setBlockui({show:false})\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.module,props.reload,props.verticalLayout]);\n\n    const clickCollpase=(e)=>{\n        var id = e.target.parentElement.id;\n        var res = toggleNode(id,{...nodes},{...links},[...dNodes],[...dLinks])\n        setNodes(res.nodeDisplay)\n        setLinks(res.linkDisplay)\n        setdLinks(res.dLinks)\n        setdNodes(res.dNodes)\n    }\n    const moveNode=(e,type)=>{\n        var res;\n        var id = e.target.parentElement.id.split('node_')[1];\n        if(type==='KeyUp'){\n            res = moveNodeEnd(id,[...dNodes],[...dLinks],{...links},{...temp},verticalLayout)\n            setLinks(res.linkDisplay)\n            nodeMoving = false\n            temp = {\n                s: [],\n                hidden:[],\n                deleted:[],\n                t: \"\"\n            };\n        }\n        else{\n            nodeMoving = true\n            res = moveNodeBegin(id,{...links},[...dLinks],{...temp},{...ctScale},verticalLayout)\n            setLinks(res.linkDisplay)\n            temp={...temp,...res.temp}\n        }\n    }\n    const nodeClick=(e)=>{\n        e.stopPropagation()\n        setTaskBox(e.target.parentElement.id)\n    }\n    const clickUnassign = (res) =>{\n        setNodes(res.nodeDisplay)\n        dispatch({type:actionTypes.UPDATE_UNASSIGNTASK,payload:res.unassignTask})\n        setTaskBox(false)\n    }\n    const clickAddTask = (res) =>{\n        setNodes(res.nodeDisplay)\n        setdNodes(res.dNodes)\n        setTaskBox(false)\n    }\n    return (\n        <Fragment>\n            <Legends/>\n            {taskbox?<TaskBox setPopup={setPopup} clickUnassign={clickUnassign} nodeDisplay={{...nodes}} releaseid={releaseid} cycleid={cycleid} ctScale={ctScale} nid={taskbox} dNodes={[...dNodes]} setTaskBox={setTaskBox} clickAddTask={clickAddTask} displayError={displayError}/>:null}\n            <SaveMapButton isAssign={true} dNodes={[...dNodes]} cycId={cycleid} setPopup={setPopup} setBlockui={setBlockui}/>\n            <ExportMapButton isAssign={true} setBlockui={setBlockui} setPopup={setPopup} displayError={displayError} releaseRef={props.releaseRef} cycleRef={props.cycleRef}/>\n            <SearchBox setCtScale={setCtScale} zoom={zoom}/>\n            <NavButton setCtScale={setCtScale} zoom={zoom}/>\n            <svg id=\"mp__canvas_svg\" className='mp__canvas_svg' ref={CanvasRef}>\n                <g className='ct-container'>\n                {Object.entries(links).map((link)=>{\n                return(<path id={link[0]} key={link[0]+'_link'} className={\"ct-link\"+(link[1].hidden?\" no-disp\":\"\")} d={link[1].d}></path>)\n                })}\n                {Object.entries(nodes).map((node)=>\n                    <g id={'node_'+node[0]} key={node[0]} className={\"ct-node\"+(node[1].hidden?\" no-disp\":\"\")} data-nodetype={node[1].type} transform={node[1].transform}>\n                        <image  onClick={(e)=>nodeClick(e)} style={{height:'40px',width:'40px',opacity:(node[1].state===\"created\"?0.5:1)}} className=\"ct-nodeIcon\" xlinkHref={node[1].img_src}></image>\n                        <image className={\"ct-nodeTask\"+(node[1].task?\"\":\" no-disp\")} style={{opacity:node[1].taskOpacity}} xlinkHref={assignedIco} x=\"29\" y=\"-10\" width=\"21px\" height=\"21px\"></image>\n                        <image className={\"ct-nodeTask\"+((node[1].task && node[1].ac !== 'Disable' && node[1].type==='scenarios')?\"\":\" no-disp\")} style={{opacity:node[1].taskOpacity}} xlinkHref={accessibilityIco} x=\"-10\" y=\"-10\" width=\"21px\" height=\"21px\"></image>\n                        <text className=\"ct-nodeLabel\" textAnchor=\"middle\" x=\"20\" title={node[1].title} y=\"50\">{node[1].name}</text>\n                        <title val={node[0]} className=\"ct-node-title\">{node[1].title}</title>\n                        {(node[1].type!=='testcases')?\n                        <circle onClick={(e)=>clickCollpase(e)} className={\"ct-\"+node[1].type+\" ct-cRight\"+(!dNodes[node[0]]._children?\" ct-nodeBubble\":\"\")} cx={verticalLayout ? 20 : 44} cy={verticalLayout ? 55 : 20} r=\"4\"></circle>\n                        :null}\n                        {(node[1].type!=='modules' && node[1].type!=='endtoend')?\n                        <circle \n                        onMouseUp={(e)=>moveNode(e,'KeyUp')}\n                        onMouseDown={(e)=>moveNode(e,'KeyDown')}\n                        cx={verticalLayout ? 20 : -3} cy={verticalLayout ? -4 : 20}\n                        className={\"ct-\"+node[1].type+\" ct-nodeBubble\"} r=\"4\"></circle>\n                        :null}\n                    </g>)}\n                </g>\n            </svg>\n        </Fragment>\n    )\n}\n\nconst bindZoomListner = (setCtScale,translate) => {\n    //need global move\n    const svg = d3.select(`.mp__canvas_svg`);\n    const g = d3.select(`.ct-container`);\n    const zoom  = d3.behavior.zoom()\n        .scaleExtent([0.1, 3])\n        .on('zoom', () => {\n            if(!nodeMoving) {\n                g.attr('transform', `translate(${d3.event.translate}) scale(${d3.event.scale})`);\n                var cScale = d3.event.translate;\n                setCtScale({x:cScale[0],y:cScale[1],k:d3.event.scale})\n            } else {\n                const x = g.attr(\"transform\").split(/[()]/)[1].split(',')[0];\n                const y = g.attr(\"transform\").split(/[()]/)[1].split(',')[1];\n                const scale = g.attr(\"transform\").split(/[()]/)[3];\n                // const pos = g.attr(\"transform\");\n                zoom.scale(scale).translate([x,y]);\n            }\n        })\n    if(translate) zoom.scale(1).translate([translate[0],translate[1]])\n    svg.call(zoom)\n    return zoom\n}\n\nexport default CanvasAssign","import React, { useEffect } from 'react';\nimport MindmapHome from './containers/MindmapHome';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { SetProgressBar, RedirectPage } from '../global';\nexport var history\n\n/*Component Mindmap\n  use: direct to mindmap landing page\n*/\n\nconst Mindmap = () => {\n  history =  useHistory()\n  const dispatch = useDispatch();\n  useEffect(()=>{\n    if(window.localStorage['navigateScreen'] !== \"mindmap\"){\n        RedirectPage(history);\n    }\n    SetProgressBar(\"stop\", dispatch);\n  }, [dispatch]);\n  return (\n    <MindmapHome/>\n  );\n}\n\nexport default Mindmap;","import React, { Fragment, useState, useEffect, useRef} from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport ToolbarMenuAssign from '../components/ToolbarMenuAssign';\nimport ModuleListDrop from '../components/ModuleListDrop';\nimport CanvasAssign from './CanvasAssign';\nimport { ScreenOverlay ,PopupMsg,ReferenceBar,SetProgressBar} from '../../global'\nimport {getProjectList} from '../api';\nimport { ClickFullScreen , parseProjList, ClickSwitchLayout} from './MindmapUtils';\nimport SaveMapButton from '../components/SaveMapButton';\nimport Legends from '../components/Legends';\nimport ExportMapButton from '../components/ExportMapButton';\nimport * as actionTypes from '../state/action';\n\n/*Component CreateAssign\n  use: renders Mindmap assign page\n*/\nconst CreateAssign = () => {\n    const dispatch = useDispatch()\n    const cycleRef = useRef()\n    const releaseRef = useRef()\n    const [popup,setPopup] = useState({show:false})\n    const [blockui,setBlockui] = useState({show:false})\n    const [fullScreen,setFullScreen] = useState(false)\n    const [verticalLayout,setVerticalLayout] = useState(false)\n    const moduleSelect = useSelector(state=>state.mindmap.selectedModule)\n\n    useEffect(()=>{(async()=>{\n        SetProgressBar(\"start\",dispatch)\n        var res = await getProjectList()\n        if(res.error){displayError(res.error);return;}\n        var data = parseProjList(res)\n        dispatch({type:actionTypes.UPDATE_PROJECTLIST,payload:data})\n        SetProgressBar(\"stop\",dispatch)\n        })()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    const displayError = (error) =>{\n        setBlockui({show:false})\n        SetProgressBar(\"stop\",dispatch)\n        setPopup({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n    return(\n        <Fragment>\n            {(blockui.show)?<ScreenOverlay content={blockui.content}/>:null}\n            {(popup.show)?<PopupMsg submit={()=>setPopup({show:false})} close={()=>setPopup({show:false})} title={popup.title} content={popup.content} submitText={popup.submitText}/>:null}\n            <div className='mp__canvas_container'>\n            <div className='mp__toolbar__container'>\n              <ToolbarMenuAssign cycleRef={cycleRef} releaseRef={releaseRef} setBlockui={setBlockui} setPopup={setPopup}/>\n              <ModuleListDrop cycleRef={cycleRef} setPopup={setPopup} isAssign={true}/>\n            </div>\n            <div id='mp__canvas' className='mp__canvas'>\n                {(Object.keys(moduleSelect).length>0 && cycleRef.current)?<CanvasAssign displayError={displayError} setBlockui={setBlockui} releaseRef={releaseRef} cycleRef={cycleRef} setPopup={setPopup} module={moduleSelect} verticalLayout={verticalLayout}/>\n                :<Fragment>\n                    <SaveMapButton disabled={true}/>\n                    <ExportMapButton/>\n                    <Legends/>\n                </Fragment>}\n            </div>\n            </div>\n            <ReferenceBar taskTop={true} collapsible={true} collapse={true}>\n                <div className=\"ic_box\" >\n                    <img alt={\"Switch Layout\"} onClick={()=>ClickSwitchLayout(verticalLayout,setVerticalLayout,moduleSelect,setPopup,setBlockui,dispatch)} style={{height: '55px'}} className={\"rb__ic-task thumb__ic \" + (verticalLayout?\"active_rb_thumb \":\"\")} src=\"static/imgs/switch.png\"/>\n                    <span className=\"rb_box_title\">Switch</span><span className=\"rb_box_title\">Layout</span>\n                </div>\n                <div className=\"ic_box\" >\n                    <img alt={\"Full Screen\"} onClick={()=>ClickFullScreen(setFullScreen,setPopup)} style={{height: '55px'}} className={\"rb__ic-task thumb__ic \" +(fullScreen?\"active_rb_thumb\":\"\")} src=\"static/imgs/fscr.png\"/>\n                    <span className=\"rb_box_title\">Full Screen</span>\n                </div>\n            </ReferenceBar>\n        </Fragment>\n    )\n}\n\nexport default CreateAssign;","import React, { useState, Fragment } from 'react';\nimport { Header, FooterTwo as Footer,ActionBar,ReferenceBar} from '../../global'\nimport CreateOptions from '../components/CreateOptions.js'; \nimport CreateNew from './CreateNew.js';\nimport CreateEnE from './CreateEnE.js'\nimport CreateAssign from './CreateAssign.js';\nimport '../styles/MindmapHome.scss';\n\n\n/*Component MindmapHome\n  use: renders mindmap plugins landing page \n  todo: \n    import header, footer, and list of side bar element for differnet page\n*/\n\nconst MindmapHome = () => {\n  const [options,setOptions] = useState(undefined)\n  const createType = {\n    'newmindmap': React.memo(() => (<CreateNew/>)),\n    'importmindmap': React.memo(() => (<CreateNew importRedirect={true}/>)),\n    'enemindmap': React.memo(() => (<CreateEnE/>)),\n    'assignmap': React.memo(() => (<CreateAssign/>))\n  }\n\n  var Component = (!options)? null : createType[options];\n  return (\n    <div className='mp__container'>\n      <Header/> \n      <div className='mp__body'>\n        <ActionBar collapsible={true} collapse={options}>\n          <div className=\"mp__ic_box\">\n            <div className=\"ic_box\" >\n              <img onClick={()=>setOptions(undefined)} alt='Create Mindmap' className={\"thumb__ic\"+(options!=='assignmap'? \" selected_rb_thumb\":\"\")} src=\"static/imgs/create.png\"/>\n                <span className=\"rb_box_title\">Create</span>\n            </div>\n            <div className=\"ic_box\" >\n              <img onClick={()=>setOptions('assignmap')} alt='Assign Mindmap' className={\"thumb__ic\"+(options==='assignmap'? \" selected_rb_thumb\":\"\")} src=\"static/imgs/assign.png\"/>\n              <span className=\"rb_box_title\">Assign</span>\n            </div>\n          </div>\n        </ActionBar>\n        {(!options)?\n        <Fragment>\n          <div className='mp__middle_container'>\n            <CreateOptions setOptions={setOptions}/>\n          </div>\n          <ReferenceBar taskTop={true} collapsible={true} hideInfo={true}/>\n        </Fragment>:\n        <Component/>\n        }\n      </div>\n      <div className='mp__footer'><Footer/></div>\n    </div>\n  );\n}\nexport default MindmapHome;","import React, { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux';\nimport ClickAwayListener from 'react-click-away-listener';\nimport * as actions from '../state/action';\nimport \"../styles/ScrapeObject.scss\";\n\nconst ScrapeObject = props => {\n\n    const dispatch = useDispatch();\n\n    const [objName, setObjName] = useState(props.object.title);\n    const [checked, setChecked] = useState(props.object.checked);\n    const [edit, setEdit] = useState(false);\n\n    const handleObjName = event => setObjName(event.target.value);\n    const handleCheckbox = event => props.updateChecklist(props.object.val);\n\n    useEffect(()=>{\n        setObjName(props.object.title);\n        setChecked(props.object.checked);\n        setEdit(false);\n    }, [props]);\n    \n    const handleOutsideClick = event => {\n        setObjName(props.object.title);\n        setEdit(false);        \n    }\n\n    const checkKeyPress = event => {\n        if (event.keyCode === 13) {\n            setEdit(false);\n            props.modifyScrapeItem(props.object.val, {custname: objName})\n        }\n    }\n\n    const onHighlight = () => {\n        props.setActiveEye(props.object.val);\n        let objVal = { val:  props.object.val };\n        dispatch({type: actions.SET_OBJVAL, payload: objVal});\n    }\n\n    return (\n        <div className=\"ss__scrape_obj\">\n            <img data-test=\"eyeIcon\"className=\"ss_eye_icon\" \n                onClick={onHighlight} \n                src={props.activeEye === props.object.val ? \n                        \"static/imgs/ic-highlight-element-active.png\" : \n                        \"static/imgs/ic-highlight-element-inactive.png\"} \n                alt=\"eyeIcon\"/>\n            {\n                edit ? \n                <ClickAwayListener className=\"ss_obj_name_e\" onClickAway={handleOutsideClick}>\n                    <input  data-test=\"objectInput\"  className=\"ss_obj_name_input\" value={objName} onChange={handleObjName} onKeyDown={checkKeyPress}/>\n                </ClickAwayListener>\n                : \n                <div className=\"ss_obj_label\">\n                    {!props.hideCheckbox && <input data-test=\"checkBox\"className=\"ss_obj_chkbx\" type=\"checkbox\" onChange={handleCheckbox} checked={checked} />}\n                    <div  data-test=\"objectName\" className={\"ss_obj_name\" + (props.object.duplicate ? \" ss__red\" : \"\" + (!props.object.objId ? \" ss__newObj\" : \"\" )) + (props.object.isCustom ? \" ss__customObject\": \"\")} onDoubleClick={!props.notEditable ? ()=>setEdit(true) : null}>{objName}</div> \n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ScrapeObject;","import { createContext } from 'react';\n\nexport const ScrapeContext = createContext(null);","import axios from 'axios';\nimport { RedirectPage } from '../global';\nimport { history } from './index';\nimport {url} from '../../App';\n\n/*Component ActionBarItems (Scrape)\n  api returns Invalid Session/Response Body exceeds max. Limit./scheduleModeOn/unavailableLocalServer/fail/Terminate/wrongWindowName/ExecutionOnlyAllowed/{\"mirror\":\"\",\"name\":\"\",scrapedurl\":\"\",\"view\":[{\"_id\":\"\",\"cord\":\"\",\"custname\":\"\",\"height\":,\"hiddentag\":\"\",\"left\":,\"objectType\":\"\",\"parent\":[\"\"],\"tag\":\"\",\"top\":,\"url\":\"\",\"width\":,\"xpath\":\"\"}/{\"_id\":\"\",\"custname\":\"\",\"height\":,\"hiddentag\":\"\",\"left\":,\"parent\":[\"\"],\"tag\":\"button\",\"top\":,\"url\":\"\",\"width\":,\"xpath\":\"\"}]}\n*/\nexport const initScraping_ICE = screenViewObject => {\n    return new Promise((resolve, reject)=>{\n        axios(url+\"/initScraping_ICE\", {\n            method: 'POST',\n            headers : {\n                'Content-type' : 'application/json'\n            },\n            data : {'param': 'initScraping_ICE', 'screenViewObject': screenViewObject},\n            credentials : 'include',\n        })\n        .then(res=>{\n            if (res.status === 401) {\n                RedirectPage(history);\n                reject(\"Invalid Session\");\n            }\n            else if (res.status === 200 && res.data !== 'fail') resolve(res.data);\n            else reject(res.status)\n        })\n        .catch(err => reject(err))\n    });\n}\n\nexport const highlightScrapElement_ICE = (xpath, objurl, appType) => {\n    return new Promise((resolve, reject)=> {\n        axios(url+\"/highlightScrapElement_ICE\", {\n            method: 'POST',\n            headers : {\n                'Content-type' : 'application/json'\n            },\n            data : {\"action\": \"highlightScrapElement_ICE\",\n                    \"elementXpath\": xpath, \n                    \"elementUrl\": objurl,\n                    \"appType\": appType\n                },\n            credentials : 'include',\n        })\n        .then(res=>{\n            if (res.status === 200) resolve(res.data);\n            else reject(res.status);\n        })\n        .catch(err => reject(err));\n    });\n}\n\n/*Component ScrapeScreen\n  api returns {\"mirror\":\"\",\"name\":\"\",\"reuse\":bool,\"scrapedurl\":\"\",\"view\":[{\"_id\":\"\",\"cord\":\"\",\"custname\":\"\",\"height\":,\"hiddentag\":\"\",\"left\":,\"objectType\":\"\",\"parent\":[\"\"],\"tag\":\"\",\"top\":,\"url\":\"\",\"width\":,\"xpath\":\"\"}/{\"_id\":\"\",\"custname\":\"\",\"height\":,\"hiddentag\":\"\",\"left\":,\"parent\":[\"\"],\"tag\":\"button\",\"top\":,\"url\":\"\",\"width\":,\"xpath\":\"\"}]}\n*/\nexport const getScrapeDataScreenLevel_ICE = (type, screenId, projectId, testCaseId) =>\t{\n    return new Promise((resolve, reject)=>{\n        axios(url+\"/getScrapeDataScreenLevel_ICE\", {\n            method: 'POST',\n            headers : {\n                'Content-type' : 'application/json'\n            },\n            data : {\n                param: 'getScrapeDataScreenLevel_ICE',\n                screenId: screenId,\n                projectId: projectId,\n                type: type,\n                testCaseId: testCaseId\n            },\n            credentials : 'include',\n        })\n        .then(res=>{\n            if (res.status === 200) resolve(res.data)\n            else reject(res.status);\n        })\n        .catch(error=>reject(error))\n    })\n}\n\nexport const userObjectElement_ICE = custObjProps => {\n    return new Promise((resolve, reject) => {\n        axios(url+\"/userObjectElement_ICE\", {\n            method: 'POST',\n            headers : {\n                'Content-type' : 'application/json'\n            },\n            data : { \"action\": \"userObjectElement_ICE\", \"object\": custObjProps },\n            credentials : 'include',\n        })\n        .then(res=>{\n            if (res.status === 200) resolve(res.data)\n            else reject(res.status);\n        })\n        .catch(err => reject(err));\n    });\n}\n\nexport const updateScreen_ICE = arg => {\n    return new Promise((resolve, reject)=>{\n        axios(url+\"/updateScreen_ICE\", {\n            method: 'POST',\n            headers : {\n                'Content-type' : 'application/json'\n            },\n            data : { \n                data: arg\n            },\n            credentials : 'include',\n        })\n        .then(res=>{\n            if (res.status === 200) resolve(res.data)\n            else reject(res.status);\n        })\n        .catch(error=>reject(error));\n    });\n}\n\nexport const initScrapeWS_ICE = arg => {\n    return new Promise((resolve, reject) => {\n        axios(url+\"/debugTestCase_ICE\", {\n            method: 'POST',\n            headers : {\n                'Content-type' : 'application/json'\n            },\n            data : {\n                param : 'debugTestCaseWS_ICE',\n                testCaseWS: arg\n            },\n            credentials : 'include',\n        })\n        .then(res=>{\n            if (res.status === 200) resolve(res.data)\n            else reject(res.status);\n        })\n        .catch(error=>reject(error));\n    });\n}\n\nexport const launchWSDLGo = wsdlUrl => {\n    return new Promise((resolve, reject) => {\n        axios(url+\"/debugTestCase_ICE\", {\n            method: 'POST',\n            headers : {\n                'Content-type' : 'application/json'\n            },\n            data : {\n                param : 'wsdlListGenerator_ICE',\n                wsdlurl: wsdlUrl\n            },\n            credentials : 'include',\n        })\n        .then(res=>{\n            if (res.status === 200) resolve(res.data)\n            else reject(res.status);\n        })\n        .catch(error=>reject(error));\n    });\n}\n\nexport const wsdlAdd = (wsdlUrl, wsdlSelectedMethod, resultFile) => {\n    return new Promise((resolve, reject) => {\n        axios(url+\"/debugTestCase_ICE\", {\n            method: 'POST',\n            headers : {\n                'Content-type' : 'application/json'\n            },\n            data : {\n                param : 'wsdlServiceGenerator_ICE',\n                wsdlurl: wsdlUrl,\n                method : wsdlSelectedMethod,\n                resultFile:resultFile\n            },\n            credentials : 'include',\n        })\n        .then(res=>{\n            if (res.status === 200) resolve(res.data)\n            else reject(res.status);\n        })\n        .catch(error=>reject(error));\n    });\n}\n\nexport const updateIrisDataset = data => {\n    return new Promise((resolve, reject) => {\n        axios(url+\"/updateIrisDataset\", {\n            method: 'POST',\n            headers : {\n                'Content-type' : 'application/json'\n            },\n            data : {\n                data : data\n            },\n            credentials : 'include',\n        })\n        .then(res=>{\n            if (res.status === 200) resolve(res.data)\n            else reject(res.status);\n        })\n        .catch(error=>reject(error));\n    });\n}\n\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport \"../styles/ScreenWrapper.scss\";\n\nconst ScreenWrapper = props => {\n    const { taskName } = useSelector(state=>state.plugin.CT);\n    return (\n        <div className=\"ss__content\">\n            <div className=\"ss__content_wrap\" style={ props.fullHeight ? {height: \"100%\"} : {}}>\n                { /* Task Name */ }\n                <div className=\"ss__task_title\">\n                    <div className=\"ss__task_name\">{taskName}</div>\n                </div>\n                {props.compareContent}\n                {props.buttonGroup}\n                {props.webserviceContent}\n            </div>\n            {props.scrapeObjectList}\n        </div>\n    )\n}\n\nexport default ScreenWrapper;","import React, { useContext } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { ScrapeContext } from './ScrapeContext';\nimport { reviewTask } from '../../global/api';\nimport \"../styles/SubmitTask.scss\";\n\nconst SubmitTask = () => {\n\n    const { isUnderReview, hideSubmit, setShowConfirmPop, setShowPop } = useContext(ScrapeContext);\n    const current_task = useSelector(state=>state.plugin.CT);\n    const history = useHistory();\n    \n\n    const redirectToPlugin = () => {\n        window.localStorage['navigateScreen'] = \"plugin\";\n        history.replace('/plugin');\n    }\n\n    const onAction = operation => {\n        switch(operation){\n            case \"submit\": setShowConfirmPop({'title':'Submit Task', 'content': 'Are you sure you want to submit the task ?', 'onClick': ()=>submitTask(operation)});\n                           break;\n            case \"reassign\": setShowConfirmPop({'title':'Reassign Task', 'content': 'Are you sure you want to reassign the task ?', 'onClick': ()=>submitTask(operation)});\n                             break;\n            case \"approve\": setShowConfirmPop({'title':'Approve Task', 'content': 'Are you sure you want to approve the task ?', 'onClick': ()=>submitTask(operation)});\n                            break;\n            default: break;\n        }                       \n    }\n\n    const submitTask = submitOperation => {\n\t\tlet taskid = current_task.subTaskId;\n\t\tlet taskstatus = current_task.status;\n\t\tlet version = current_task.versionnumber;\n\t\tlet batchTaskIDs = current_task.batchTaskIDs;\n        let projectId = current_task.projectId;\n        \n\t\tif (submitOperation === 'reassign') {\n\t\t\ttaskstatus = 'reassign';\n        }\n\n        reviewTask(projectId, taskid, taskstatus, version, batchTaskIDs)\n        .then(result => {\n            if (result === \"fail\") setShowPop({'title': 'Task Submission Error', 'content': 'Reviewer is not assigned !'});\n            else if (taskstatus === 'reassign') setShowPop({'title': \"Task Reassignment Success\", 'content': \"Task Reassigned successfully!\", onClick: ()=>redirectToPlugin()});\n            else if (taskstatus === 'underReview') setShowPop({'title': \"Task Completion Success\", 'content': \"Task Approved successfully!\", onClick: ()=>redirectToPlugin()});\n            else setShowPop({'title': \"Task Submission Success\", 'content': \"Task Submitted successfully!\", onClick: ()=>redirectToPlugin()});\n        })\n        .catch(error => {\n\t\t\tconsole.error(error);\n        })\n        \n        setShowConfirmPop(false);\n    }\n\n    return (\n        <div className=\"ss__right-btns\">\n            { isUnderReview && \n                <>\n                <button data-test=\"reassignButton\" className=\"ss__reassignBtn\" onClick={()=>onAction(\"reassign\")}>\n                    Reassign\n                </button>\n                <button data-test=\"approveButton\" className=\"ss__approveBtn\" onClick={()=>onAction(\"approve\")}>\n                    Approve\n                </button>\n                </>\n            }\n            { !hideSubmit && !isUnderReview &&\n                <button data-test=\"submitButton\"className=\"ss__submitBtn\" onClick={()=>onAction(\"submit\")}>\n                    Submit\n                </button>\n            }\n        </div>\n    );\n}\n\nexport default SubmitTask;","import React, { useState, useEffect, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport ScrapeObject from '../components/ScrapeObject';\nimport { ScrollBar, RedirectPage } from \"../../global\"\nimport { ScrapeContext } from '../components/ScrapeContext';\nimport * as actionTypes from '../state/action';\nimport * as scrapeApi from '../api';\nimport \"../styles/ScrapeObjectList.scss\";\nimport ScreenWrapper from './ScreenWrapper';\nimport SubmitTask from '../components/SubmitTask';\n\nconst ScrapeObjectList = () => {\n    const dispatch = useDispatch();\n    const current_task = useSelector(state=>state.plugin.CT);\n    const { user_id, role } = useSelector(state=>state.login.userinfo);\n    const history = useHistory();\n\n    const [activeEye, setActiveEye] = useState(null);\n    const [disableBtns, setDisableBtns] = useState({save: true, delete: true, edit: true, search: false, selAll: false});\n    const [showSearch, setShowSearch] = useState(false);\n    const [searchVal, setSearchVal] = useState(\"\");\n    const [selAllCheck, setSelAllCheck] = useState(false);\n    const [deleted, setDeleted] = useState([]);\n    const [modified, setModified] = useState({});\n    const [editableObj, setEditableObj] = useState({});\n    const { setShowObjModal, fetchScrapeData, saved, setSaved, newScrapedData, setNewScrapedData, setShowPop, setShowConfirmPop, mainScrapedData, scrapeItems, setScrapeItems } = useContext(ScrapeContext);\n\n    useEffect(()=> {\n        setActiveEye(null);\n        setShowSearch(false);\n        setSearchVal(\"\");\n        setSelAllCheck(false);\n        setDeleted([]);\n        setModified({});\n        setEditableObj({});\n        setSaved(true);\n        //eslint-disable-next-line\n    }, [current_task])\n\n    useEffect(()=>{\n        let disable = {};\n        let disableSelect = false;\n        let disableDelete = true;\n        let checkAll = false;\n        let hidden = 0;\n        let selected = 0;\n        let total = 0;\n        let visible = 0;\n        let selectedObj = null;\n        scrapeItems.forEach(item=>{\n            if (item.hide) hidden++;\n            else visible++;\n            if (!item.hide && item.checked) {\n                selected++;\n                selectedObj = item;\n            }\n            total++;\n        })\n\n        if (total === hidden) disableSelect = true;\n        else if (visible === selected) checkAll = true;\n        \n        if (visible > 0 && selected > 0) disableDelete = false;\n\n        if (disableSelect) disable = { ...disable, selAll: true };\n        else disable = { ...disable, selAll: false }\n\n        if (!disableDelete) disable = {...disable, delete: false};\n        else disable = {...disable, delete: true};\n\n        if (selected === 1 && selectedObj.editable) {\n            disable = { ...disable, edit: false};\n            setEditableObj(selectedObj);\n        } else {\n            disable = { ...disable, edit: true};\n            setEditableObj({});\n        }\n\n        setDisableBtns({...disableBtns, ...disable})\n        setSelAllCheck(checkAll);\n        //eslint-disable-next-line\n    }, [scrapeItems])\n\n    useEffect(()=>{\n        if (!saved) setDisableBtns({...disableBtns, save: false});\n        else {\n            setDisableBtns({...disableBtns, save: true});\n            setDeleted([]);\n            setModified({});\n            setActiveEye(null);\n            setShowSearch(false);\n            setSearchVal(\"\");\n            setSelAllCheck(false);\n            setEditableObj({});\n        }\n        //eslint-disable-next-line\n    }, [saved])\n\n    const updateChecklist = (value, event) => {\n\n        let localItems = [...scrapeItems];\n        \n        if (value === \"all\") {\n            if (event.target.checked) {\n                localItems.forEach(item => { if (!item.hide) {\n                    item.checked = true;\n                }})\n            }\n            else localItems.forEach(item => { if (!item.hide) {\n                item.checked = false;\n            }})\n        }\n        else {\n            localItems.forEach(item => { \n                if (!item.hide && item.val === value) item.checked = !item.checked;\n            })\n        }\n\n        setScrapeItems(localItems)\n    }\n    \n    const modifyScrapeItem = (value, newProperties, customFlag) => {\n        let localScrapeItems = [...scrapeItems];\n        let updNewScrapedData = {...newScrapedData};\n        let objId = \"\";\n        let obj = null;\n        for (let scrapeItem of localScrapeItems){\n            if (scrapeItem.val === value) {\n                scrapeItem.title = newProperties.custname;\n                if (customFlag) {\n                    scrapeItem.tag = newProperties.tag;\n                    scrapeItem.url = newProperties.url;\n                    scrapeItem.xpath = newProperties.xpath;\n                    scrapeItem.editable = true;\n                }\n                objId = scrapeItem.objId;\n                if (objId) obj = {...mainScrapedData.view[scrapeItem.objIdx], ...newProperties};\n                else updNewScrapedData.view[scrapeItem.objIdx] = {...newScrapedData.view[scrapeItem.objIdx], ...newProperties}\n                // else only if customFlag is true\n            };\n        }\n        \n        if (objId) {\n            let modifiedDict = {...modified}\n            modifiedDict[objId] = obj;\n            setModified(modifiedDict);\n        }\n        else setNewScrapedData(updNewScrapedData);\n        if(!(newProperties.tag && newProperties.tag.substring(0, 4) === \"iris\")) setSaved(false);\n        setScrapeItems(localScrapeItems);\n    }\n\n    const toggleSearch = () => {\n        setShowSearch(!showSearch);\n        if (!showSearch === false) {\n            let scrapeItemsL = [...scrapeItems]\n            scrapeItemsL.forEach(item => item.hide = false);\n            setScrapeItems(scrapeItemsL)\n        }\n        setSearchVal(\"\");\n    }\n\n    const onEdit = () => {\n        let modalObject = {};\n        if (editableObj.tag.substring(0, 4) === \"iris\") {\n            modalObject = {\n                operation: \"editIrisObject\",\n                object: editableObj,\n                modifyScrapeItem: (value, newProperties, customFlag) => modifyScrapeItem(value, newProperties, customFlag),\n                cord: (editableObj.objId ? mainScrapedData.view : newScrapedData.view)[editableObj.objIdx].cord\n            };\n        } else {\n            modalObject = {\n                operation: \"editObject\",\n                modifyScrapeItem: (value, newProperties, customFlag) => modifyScrapeItem(value, newProperties, customFlag),\n                object: editableObj\n            }\n        }\n        setShowObjModal(modalObject);\n    }\n\n    const onSearch = event => {\n        let scrapeItemsL = [...scrapeItems]\n        let value = event.target.value;\n        scrapeItemsL.forEach(item => {\n                        if (item.title.toLowerCase().indexOf(value.toLowerCase()) < 0){\n                            item.hide = true;\n                        } else {\n                            item.hide = false\n                        };\n                    });\n        setSearchVal(value);\n        setScrapeItems(scrapeItemsL)\n    }\n\n    const onDelete = () => {\n        let deletedArr = [];\n        let scrapeItemsL = [...scrapeItems];\n        let modifiedDict = {...modified}\n        let newScrapeList = [];\n        newScrapeList = scrapeItemsL.filter( item => {\n            if (item.checked){\n                if (item.objId) {\n                    deletedArr.push(item.objId);\n                    if (item.objId in modifiedDict)\n                        delete modifiedDict[item.objId]\n                }\n                return false;\n            } else return true;\n        });\n        setScrapeItems(newScrapeList)\n        setDeleted(deletedArr);\n        setModified(modifiedDict);\n        setDisableBtns({...disableBtns, delete: true, save: false})\n    }\n\n    const onSave = () => {\n        let continueSave = true;\n        \n        if (mainScrapedData.reuse === 'True') {\n            setShowConfirmPop({'title': \"Save Scraped data\", 'content': 'Screen is been reused. Are you sure you want to save objects?', 'onClick': ()=>{setShowConfirmPop(false); saveScrapedObjects();}})\n            continueSave = false;\n        }\n\n        let dXpath = false;\n        let dCustname = false;\n        let uniqueCusts = [];\n        let uniqueXPaths = [];\n        let dCusts = [];\n        let dCusts2 = [];\n        let scrapeItemsL = [...scrapeItems];\n\n        if (scrapeItemsL.length > 0) {\n            for (let scrapeItem of scrapeItemsL) {\n                if (uniqueCusts.includes(scrapeItem.title)) {\n                    dCustname = true;\n                    scrapeItem.duplicate = true;\n                    dCusts.push(scrapeItem.title);\n                }\n                else uniqueCusts.push(scrapeItem.title);\n            }\n            if (!dCustname) {\n                for (let scrapeItem of scrapeItemsL) {\n                    if (scrapeItem.xpath === \"\" || scrapeItem.xpath === undefined) continue;\n                    let xpath = scrapeItem.xpath;\n    \n                    if (current_task.appType === 'MobileWeb') xpath = xpath.split(\";\")[2];\n    \n                    if (uniqueXPaths.includes(xpath)) {\n                        dXpath = true;\n                        scrapeItem.duplicate = true;\n                        dCusts2.push(scrapeItem.title);\n                    }\n                    else uniqueXPaths.push(xpath);\n                }\n            }\n\n            if (dCustname) {\n                continueSave = false;\n                setShowPop({\n                    'type': 'modal',\n                    'title': 'Save Scrape data',\n                    'content': <div className=\"ss__dup_labels\">\n                        Please rename/delete duplicate scraped objects\n                        <br/><br/>\n                        Object characterstics are same for:\n                        <ScrollBar hideXbar={true} thumbColor= \"#321e4f\" trackColor= \"rgb(211, 211, 211)\">\n                            <div className=\"ss__dup_scroll\">\n                            { dCusts.map((custname, i) => <span key={i} className=\"ss__dup_li\">{custname}</span>) }\n                            </div>\n                        </ScrollBar>\n                    </div>,\n                    'footer': <button onClick={()=>setShowPop(\"\")}>OK</button>\n                })\n            } else if (dXpath) {\n                continueSave = false;\n                setShowConfirmPop({\n                    'title': 'Save Scrape data',\n                    'content': <div className=\"ss__dup_labels\">\n                        Object characteristics are same for the below list of objects:\n                        <ScrollBar hideXbar={true} thumbColor= \"#321e4f\" trackColor= \"rgb(211, 211, 211)\">\n                            <div className=\"ss__dup_scroll\">\n                            { dCusts2.map((custname, i) => <span key={i} className=\"ss__dup_li\">{custname}</span>) }\n                            </div>\n                        </ScrollBar>\n                        <br/>\n                        Do you still want to continue?\n                    </div>,\n                    'onClick': ()=>{setShowConfirmPop(false); saveScrapedObjects();},\n                    'continueText': \"Continue\",\n                    'rejectText': \"Cancel\"\n                })\n            }\n        }\n\n        if (continueSave) saveScrapedObjects();\n    }\n\n    const saveScrapedObjects = () => {\n        let scrapeItemsL = [...scrapeItems];\n        let added = Object.keys(newScrapedData).length ? { ...newScrapedData } : { ...mainScrapedData };\n        let views = []\n        for (let scrapeItem of scrapeItemsL) {\n            if (!scrapeItem.objId) {\n                if (scrapeItem.isCustom) views.push({custname: scrapeItem.title, xpath: scrapeItem.xpath, tag: scrapeItem.tag});\n                else views.push({...newScrapedData.view[scrapeItem.objIdx], custname: scrapeItem.title});\n            }\n        }\n        \n        let params = {\n            'deletedObj': deleted,\n            'modifiedObj': Object.values(modified),\n            'addedObj': {...added, view: views},\n            'screenId': current_task.screenId,\n            'userId': user_id,\n            'roleId': role,\n            'param': 'saveScrapeData'\n        }\n\n        scrapeApi.updateScreen_ICE(params)\n        .then(response => {\n            if (response === \"Invalid Session\") return RedirectPage(history);\n            else fetchScrapeData().then(resp=>{\n                if (resp === 'success' || typeof(resp) === \"object\"){\n                    setShowPop({\n                        'title': 'Save Scrape data',\n                        'content': typeof(resp)===\"object\" && resp.length>0 ? <div className=\"ss__dup_labels\">\n                            Scraped data saved successfully.\n                            <br/><br/>\n                            <strong>Warning: Please scrape an IRIS reference object.</strong>\n                            <br/><br/>\n                            Matching objects found for:\n                            { resp.map((custname, i) => <span key={i} className=\"ss__dup_li\">{custname}</span>) }\n                        </div> : 'Scraped data saved successfully.'\n                    })\n                    setDisableBtns({save: true, delete: true, edit: true, search: false, selAll: false});\n                    dispatch({type: actionTypes.SET_DISABLEACTION, payload: scrapeItemsL.length !== 0});\n                    dispatch({type: actionTypes.SET_DISABLEAPPEND, payload: scrapeItemsL.length === 0});\n                    setSaved(true);\n                } else console.error(resp);\n            })\n            .catch(error => console.error(error));\n        })\n        .catch(error => console.error(error))\n    }\n\n    return (\n        <ScreenWrapper \n            buttonGroup={\n                <div className=\"ss__btngroup\">\n                    <div className=\"ss__left-btns\">\n                        <label data-test=\"selectalllabel\" className=\"ss__select-all\">\n                            <input className=\"ss__select-all-chkbox\" type=\"checkbox\" checked={selAllCheck} disabled={disableBtns.selAll} onChange={(e)=>updateChecklist(\"all\", e)}/>\n                            <span className=\"ss__select-all-lbl\">\n                                Select all\n                            </span>\n                        </label>\n                        <button data-test=\"save\" className=\"ss__taskBtn ss__btn\" disabled={disableBtns.save} onClick={onSave}>Save</button>\n                        <button data-test=\"delete\"className=\"ss__taskBtn ss__btn\" disabled={disableBtns.delete} onClick={onDelete}>Delete</button>\n                        <button data-test=\"edit\"className=\"ss__taskBtn ss__btn\" disabled={disableBtns.edit} onClick={onEdit}>Edit</button>\n                        <button data-test=\"search\"className=\"ss__search-btn\" onClick={toggleSearch}>\n                            <img className=\"ss__search-icon\" alt=\"search-ic\" src=\"static/imgs/ic-search-icon.png\"/>\n                        </button>\n                        { showSearch && <input data-test=\"searchbox\" className=\"ss__search_field\" value={searchVal} onChange={onSearch}/>}\n                    </div>\n\n                    <SubmitTask />\n\n                </div>\n            }\n            scrapeObjectList={\n                <div className=\"scraped_obj_list\">\n                <div className=\"sc__ab\">\n                    <div className=\"sc__min\">\n                    <div className=\"sc__con\" id=\"scrapeObjCon\">\n                    <ScrollBar scrollId=\"scrapeObjCon\" thumbColor= \"#321e4f\" trackColor= \"rgb(211, 211, 211)\" verticalbarWidth='8px'>\n                    <div data-test=\"scrapeObjectContainer\"className=\"scrape_object_container\">\n                    {\n                        scrapeItems.map((object, index) => !object.hide && <ScrapeObject key={object.val} \n                                                                            idx={index}\n                                                                            object={object} \n                                                                            activeEye={activeEye}\n                                                                            setActiveEye={setActiveEye}\n                                                                            updateChecklist={updateChecklist}\n                                                                            modifyScrapeItem={modifyScrapeItem}\n                                                                        />)\n                    }\n                    </div>\n                    </ScrollBar>\n                    </div>\n                    </div>\n                </div>\n                </div>\n            }\n        />\n    );\n}\n\nexport default ScrapeObjectList;","import React, { useState, useEffect } from 'react';\nimport { ScrollBar } from '../../global';\nimport ScrapeObject from '../components/ScrapeObject';\nimport \"../styles/CompareBox.scss\";\n\nconst CompareBox = props => {\n\n    const [checkAll, setCheckAll] = useState(false);\n    const [objectList, setObjectList] = useState([]);\n    \n\n    useEffect(()=>{\n        setObjectList(props.objList);\n        //eslint-disable-next-line\n    }, [])\n\n    const updateChecklist = (value, event) => {\n\n        let localItems = [...objectList];\n        let localChecks = [...props.checkedList];\n        \n        if (value === \"all\") {\n            if (event.target.checked) \n                localItems.forEach((item, index) => {\n                    item.checked = true;\n                    let loc = localChecks.indexOf(index);\n                    if (loc < 0) localChecks.push(index);\n                })\n            else localItems.forEach((item, index) => {\n                item.checked = false;\n                let loc = localChecks.indexOf(index);\n                if (loc > -1) localChecks.splice(loc, 1);\n            })\n        }\n        else {\n            localItems.forEach((item, index) => { \n                if (item.val === value) {\n                    item.checked = !item.checked;\n                    let loc = localChecks.indexOf(index);\n                    if (loc < 0 ) localChecks.push(index);\n                    else localChecks.splice(loc, 1);\n                };\n            })\n        }\n        \n        setObjectList(localItems)\n        props.setCheckedList(localChecks);\n        setCheckAll(localChecks.length===localItems.length);\n    }\n\n    return (\n        <div className=\"ss__cmprbox\">\n            <div data-test=\"header\"className=\"ss__cmprHeader\">\n                {!props.hideCheckbox && <input className=\"ss__cmprBoxChk\" type=\"checkbox\" onChange={(e)=>updateChecklist('all', e)} checked={checkAll} />}\n                {props.header}\n            </div>\n            <div data-test=\"compareList\"className=\"ss__cmprList\" id=\"cmprObjId\">\n                <ScrollBar scrollId=\"cmprObjId\" thumbColor= \"#321e4f\" trackColor= \"rgb(211, 211, 211)\" verticalbarWidth='8px'>\n                    {objectList.map( (object, index) => <ScrapeObject key={index} updateChecklist={updateChecklist} hideCheckbox={props.hideCheckbox} notEditable={true} idx={index} object={object}/>)}\n                </ScrollBar>\n            </div>\n        </div>\n    );\n}\n\nexport default CompareBox;","import React, { useState, useContext, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ScrollBar, RedirectPage } from '../../global'; \nimport { useHistory } from 'react-router-dom';\nimport CompareBox from './CompareBox';\nimport ScreenWrapper from './ScreenWrapper';\nimport { ScrapeContext } from '../components/ScrapeContext';\nimport * as actions from '../state/action';\nimport { updateScreen_ICE } from '../api';\nimport \"../styles/CompareObjectList.scss\";\n\nconst CompareObjectList = () => {\n\n    const { changedObj, notChangedObj, notFoundObj } = useSelector(state=>state.scrape.compareObj);\n    const { screenId } = useSelector(state=>state.plugin.CT);\n    const { user_id, role } = useSelector(state=>state.login.userinfo);\n    const compareData = useSelector(state=>state.scrape.compareData);\n    const { setShowPop, fetchScrapeData, mainScrapedData, newScrapedData } = useContext(ScrapeContext);  \n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [checkedList, setCheckedList] = useState([]);\n    const [viewString, setViewString] = useState({});\n\n    useEffect(()=>{\n        let newViewString = {...viewString};\n        newViewString = Object.keys(newScrapedData).length ? {...newScrapedData, view: [...mainScrapedData.view, ...newScrapedData.view]} : { ...mainScrapedData };\n        newViewString = {...newViewString, view: newViewString.view.filter(object => object.xpath.substring(0, 4)!==\"iris\")}\n        setViewString(newViewString);\n\n        return ()=>{\n            dispatch({type: actions.RESET_COMPARE, payload: null})\n        }\n        //eslint-disable-next-line\n    }, [])\n\n    const closeCompare = () => {\n        dispatch({type: actions.RESET_COMPARE, payload: null})\n    }\n\n    const updateObjects = () => {\n\t\t\n        let updatedObjects = [];\n        let updatedCompareData = {...compareData};\n\t\tfor (let index of checkedList) {\n\t\t\tupdatedCompareData.view[0].changedobject[index]._id = viewString.view[updatedCompareData.changedobjectskeys[index]]._id\n\t\t\tupdatedObjects.push(updatedCompareData.view[0].changedobject[index]);\n\t\t};\n\t\t\n\t\tlet arg = {\n            // 'deletedObj': deleted,\n            'modifiedObj': updatedObjects,\n            // 'addedObj': {...added, view: views},\n            'screenId': screenId,\n            'userId': user_id,\n            'roleId': role,\n            'param': 'saveScrapeData'\n        };\n        \n\t\tupdateScreen_ICE(arg)\n        .then(data => {\n            if (data.toLowerCase() === \"invalid session\") return RedirectPage(history);\n            if (data.toLowerCase() === 'success') {\n                setShowPop({\n                    title: \"Compared Objects\", \n                    content: \"Updated Compared Objects Successfully!\",\n                    onClick: ()=>{\n                        fetchScrapeData().then(resp=>{\n                            if(resp===\"success\") {\n                                closeCompare();\n                                setShowPop(false);\n                            }\n                            else console.error(resp)\n                        })\n                        .catch(err => console.error(err));\n                    }\n                });\n            } else {\n                setShowPop({title: \"Compared Objects\", content: \"Failed to update objects\"});\n                closeCompare();\n            }\n        })\n        .catch(error => console.error(error) );\n    }\n\n    return (\n        <ScreenWrapper \n            fullHeight = {true}\n            compareContent = {\n                <div className=\"ss__compareContents\">\n                    <div className=\"ss__comparebtngroup\">\n                        { changedObj && changedObj.length && <button className=\"ss__compareAction\" onClick={updateObjects}>Update</button>}\n                        <button className=\"ss__compareAction\" onClick={closeCompare}>Cancel</button>\n                    </div>\n                    <div className=\"ss__compareboxes\">\n                    <div className=\"ss__cmprListAbsolute\">\n                    <div className=\"ss__cmprListMin\">\n                    <div className=\"ss__cmprListCon\" id=\"cmprObjListId\">\n                        <ScrollBar scrollId=\"cmprObjListId\" thumbColor= \"#321e4f\" trackColor= \"rgb(211, 211, 211)\" verticalbarWidth='8px'>\n                            { changedObj && changedObj.length && <CompareBox checkedList={checkedList} setCheckedList={setCheckedList} header=\"Changed Objects\" objList={changedObj} /> }\n                            { notChangedObj && notChangedObj.length && <CompareBox header=\"Unchanged Objects\" objList={notChangedObj} hideCheckbox={true}/> }\n                            { notFoundObj && notFoundObj.length && <CompareBox header=\"Not Found Objects\" objList={notFoundObj} hideCheckbox={true}/>}\n                        </ScrollBar>\n                    </div>\n                    </div>\n                    </div>    \n                    </div>\n                </div>\n            }\n        />\n    );\n}\n\nexport default CompareObjectList;","import React, { useState, useContext } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport XMLParser from 'react-xml-parser';\nimport { useHistory } from 'react-router-dom';\nimport ScreenWrapper from './ScreenWrapper';\nimport { ScrapeContext } from '../components/ScrapeContext';\nimport { RedirectPage, ResetSession } from '../../global';\nimport SubmitTask from '../components/SubmitTask';\nimport * as api from '../api';\nimport * as actions from '../state/action';\nimport \"../styles/WebserviceScrape.scss\";\n\nlet allXpaths = [];\nlet allCustnames = [];\nlet objectLevel = 1;\nlet xpath = \"\";\n\nconst WebserviceScrape = () => {\n\n    const dispatch = useDispatch();\n\n    const { setShowObjModal, setShowPop, setOverlay, saved, setSaved, fetchScrapeData } = useContext(ScrapeContext);\n    const disableAction = useSelector(state=>state.scrape.disableAction);\n    const current_task = useSelector(state=>state.plugin.CT);\n    const { user_id, role } = useSelector(state=>state.login.userinfo);\n    const certificateInfo = useSelector(state=>state.scrape.cert);\n    const {endPointURL, method, opInput, reqHeader, reqBody, respHeader, respBody, paramHeader} = useSelector(state=>state.scrape.WsData);\n    const actionError = useSelector(state=>state.scrape.actionError);\n    const wsdlError = useSelector(state=>state.scrape.wsdlError);\n    const [wsdlURL, setwsdlURL] = useState(\"\");\n    const [opDropdown, setOpDropdown] = useState(\"0\");\n    const [opList, setOpList] = useState([]);\n    const [activeView, setActiveView] = useState(\"req\");\n    const history = useHistory();\n\n    const wsdlURLHandler = event => setwsdlURL(event.target.value);\n    const opDropdownHandler = event => setOpDropdown(event.target.value);\n    const endpointURLHandler = event => dispatch({type: actions.SET_WSDATA, payload: {endPointURL : event.target.value}}) //setEndpoinURL(event.target.value);\n    const methodHandler = event => dispatch({type: actions.SET_WSDATA, payload: {method : event.target.value}}) //setMethod(event.target.value);\n    const opInputHandler = event => dispatch({type: actions.SET_WSDATA, payload: {opInput : event.target.value}}) //setOpInput(event.target.value);\n    const onHeaderChange = event => {\n        if (activeView === \"req\") dispatch({type: actions.SET_WSDATA, payload: {reqHeader : event.target.value}}) // setReqHeader(event.target.value);\n        else if (activeView === \"param\") dispatch({type: actions.SET_WSDATA, payload: {paramHeader : event.target.value}}) //setParamHeader(event.target.value);\n        else dispatch({type: actions.SET_WSDATA, payload: {respHeader : event.target.value}}) //setRespHeader(event.target.value);\n    }\n    const onBodyChange = event => {\n        if (activeView === \"req\") dispatch({type: actions.SET_WSDATA, payload: {reqBody : event.target.value}})//setReqBody(event.target.value);\n        else dispatch({type: actions.SET_WSDATA, payload: {respBody : event.target.value}})//setRespBody(event.target.value);\n    }\n\n    const clearFields = () => {\n        setwsdlURL(\"\");\n        setOpDropdown(\"0\");\n        setOpList([]);\n        dispatch({\n            type: actions.SET_WSDATA, \n            payload:  {\n                endPointURL: \"\",\n                method: \"0\",\n                opInput: \"\",\n                reqHeader: \"\",\n                reqBody: \"\",\n                respHeader: \"\",\n                respBody: \"\",\n                paramHeader: \"\",\n            }\n        });\n        dispatch({type: actions.SET_DISABLEACTION, payload: false});\n        dispatch({type: actions.SET_DISABLEAPPEND, payload: true});\n        dispatch({type: actions.SET_ACTIONERROR, payload: []});\n        dispatch({type: actions.SET_WSDLERROR, payload: []});\n    }\n\n    const onSave = () => {\n        let arg = {};\n        let callApi = true;\n        //eslint-disable-next-line\n        let rReqHeader = reqHeader.replace(/[\\n\\r]/g, '##').replace(/\"/g, '\\\"');\n        //eslint-disable-next-line\n        let rParamHeader = paramHeader.replace(/[\\n\\r]/g, '##').replace(/\"/g, '\\\"');\n        //eslint-disable-next-line\n        let rReqBody = reqBody.replace(/[\\n\\r]/g, '').replace(/\\s\\s+/g, ' ').replace(/\"/g, '\\\"').replace(/'+/g, \"\\\"\");\n        //eslint-disable-next-line\n        let rRespHeader = respHeader.replace(/[\\n\\r]/g, '##').replace(/\"/g, '\\\"');\n        //eslint-disable-next-line\n\t\tlet rRespBody = respBody.replace(/[\\n\\r]/g, '').replace(/\\s\\s+/g, ' ').replace(/\"/g, '\\\"');\n\t\tif (!endPointURL) dispatch({type: actions.SET_ACTIONERROR, payload: [\"endPointURL\"]}); // error\n\t\telse if (method===\"0\") dispatch({type: actions.SET_ACTIONERROR, payload: [\"method\"]}); // error\n\t\telse {\n            dispatch({type: actions.SET_ACTIONERROR, payload: []});\n            let temp_flag = true; // someflag\n            try {\n                let viewArray = [];\n                if (method && rReqHeader && rReqBody) {\n                    if (method === 'POST') {\n                        if (rReqBody){\n                            if(rReqHeader.indexOf('json') === -1){\n                                if (rReqBody.indexOf('Envelope') !== -1) {\n                                    let parsedReqBody =  new XMLParser().parseFromString(rReqBody);\n                                    if ('root' in parsedReqBody) {\n                                        parsedReqBody = parsedReqBody.body;\n                                    } \n                                    temp_flag = false;\n                                    allXpaths = [];\n                                    allCustnames = [];\n                                    \n                                    if (rParamHeader.trim() !== \"\"){\n                                        let reqparams=parseRequestParam(rParamHeader);\n                                        if (reqparams.length>0) viewArray.concat(reqparams);\n                                    }\n                                    try {\n                                        parseRequest(parsedReqBody);\n                                    } catch (err) {\n                                        console.error(\"Error While Parsing. ERROR::::\", err);\n                                        callApi = false;\n                                    }\n\n                                    for (let populationindex = 0; populationindex < allXpaths.length; populationindex++) {\n                                        let scrapedObjectsWS = {};\n                                        scrapedObjectsWS.xpath = allXpaths[populationindex];\n                                        scrapedObjectsWS.custname = allCustnames[populationindex];\n                                        scrapedObjectsWS.tag = \"elementWS\";\n                                        viewArray.push(scrapedObjectsWS);\n                                    }\n                                    // scrapedObjects.view = viewArray;\n                                    // scrapedObjects = JSON.stringify(scrapedObjects);\n                                    // scrapedObjects = scrapedObjects.replace(/'+/g, \"''\")\n                                } else {\n                                    console.error(\"Invalid Request header or Request body for XML\");\n                                    callApi = false;\n                                }\n                            } else if(rReqHeader.indexOf('json') !== -1){\n                                try{\n                                    \n                                    //Parsing Request Parameters\n                                    if (rParamHeader.trim() !== \"\"){\n                                        let reqparams = parseRequestParam(rParamHeader);\n                                        if (reqparams.length > 0) viewArray.concat(reqparams);\n                                    }\n                                    //Parsing Request Body\n                                    let xpaths = parseJsonRequest(rReqBody,\"\",\"\", []);\n                                    for (let object of xpaths) {\n                                        let scrapedObjectsWS = {};\n                                        scrapedObjectsWS.xpath = object;\n                                        scrapedObjectsWS.custname = object;\n                                        scrapedObjectsWS.tag = \"elementWS\";\n                                        viewArray.push(scrapedObjectsWS);\n                                    }\n                                    // if (viewArray.length>0) scrapedObjects.view=viewArray;\n                                }\n                                catch(Exception){\n                                    console.error(\"Invalid Request body.\");\n                                    callApi = false;\n                                }\n                            }\n                        }\n                    } else if (method === 'GET' && rParamHeader.trim() !== \"\") {\n                        try{\n                            //Parsing Request Parameters\n                            if (rParamHeader.trim() !== \"\"){\n                                var reqparams=parseRequestParam(rParamHeader);\n                                if (reqparams.length>0) viewArray=reqparams;\n                            }\t\n                        } catch(Exception){\n                            console.error(\"Invalid Request Header for GET API\");\n                            callApi = false;\n                        }\n                    }\n                }\n                \n                let scrapeData = {\n                    \"body\": rReqBody,\n                    \"operations\": opInput,\n                    \"responseHeader\": rRespHeader,\n                    \"responseBody\": rRespBody,\n                    \"method\": method,\n                    \"endPointURL\": endPointURL,\n                    \"header\": rReqHeader,\n                    \"param\": rParamHeader\n                };\n\n                if (viewArray.length > 0) scrapeData.view = viewArray;\n\n                arg = {\n                    \"scrapedata\": JSON.stringify(scrapeData).replace(/'+/g, \"''\"),\n                    \"userId\": user_id,\n                    \"roleId\": role,\n                    \"screenId\": current_task.screenId,\n                    \"projectid\": current_task.projectId,\n                    \"screenname\": current_task.screenName,\n                    \"versionnumber\": current_task.versionnumber,\n                    \"param\": \"WebserviceScrapeData\"\n                }\n\n                if (!temp_flag) arg[\"query\"] = \"updatescreen\";\n\n            } catch (exception) {\n                console.error(\"Exception - WEBSERVICE::::\",exception);\n                callApi = false;\n            }\n\n            if (!callApi) return; // Error, do not call API\n\n\t\t\tapi.updateScreen_ICE(arg)\n            .then(data => {\n                if (data === \"Invalid Session\") {\n                    return RedirectPage(history);\n                }\n                if (data === \"Success\") {\n                    // $(\"#enbledWS\").prop(\"checked\", false)\n                    fetchScrapeData()\n                    .then(data=>setShowPop({title: \"Save WebService Template\", content: \"WebService Template saved successfully.\"}))\n                    .catch(error => setShowPop({title: \"Save WebService Template\", content: \"Failed to save WebService Template. Invalid Request Header or Body\"}));\n                } else if(data === \"Invalid Input\"){\n                    setShowPop({title: \"Save WebService Template\", content: \"Failed to save WebService Template. Invalid Request Header or Body\"});\n                } else{\n                    setShowPop({title: \"Save WebService Template\", content: \"Failed to save WebService Template.\"});\n                }\n            })\n            .catch(error => {\n                console.error(\"Error::::\", error)\n            })\n\t\t}\n    }\n\n\n    const onGo = () => {\n\t\tif (!wsdlURL) setShowPop({title: \"Launch WSDL\", content: \"Invalid WSDL url.\"}); \n\t\telse {\n\t\t\tsetOverlay('Please Wait...');\n\t\t\tResetSession.start();\n\t\t\tapi.launchWSDLGo(wsdlURL)\n            .then(data => {\n                setOverlay(\"\");\n                ResetSession.end();\n                if (data === \"Invalid Session\") return RedirectPage(history);\n                else if (data === \"fail\") setShowPop({title: \"WSDL-Scrape Screen\", content: \"Invalid WSDL url.\"});\n                else if (data === \"unavailableLocalServer\") setShowPop({title: \"WSDL-Scrape Screen\", content: \"No Intelligent Core Engine (ICE) connection found with the Avo Assure logged in username. Please run the ICE batch file once again and connect to Server.\"});\n                else if (data === \"scheduleModeOn\") setShowPop({ title: \"WSDL-Scrape Screen\", content: \"Schedule mode is Enabled, Please uncheck 'Schedule' option in ICE Engine to proceed.\"})\n                else if (data === \"ExecutionOnlyAllowed\") setShowPop({title: \"WSDL-Scrape Screen\", content: \"Execution Only Allowed\"})\n                else {\n                    let localList = [];\n                    for (let i = 0; i < data.listofoperations.length; i++) {\n                        localList.push(data.listofoperations[i]);\n                    }\n                    setOpList(localList);\n                }\n            })\n            .catch(error => {\n                setOverlay(\"\");\n                ResetSession.end();\n                setShowPop({title: \"WSDL-Scrape Screen\", content: \"Error while performing operation.\"});\n                console.error(\"Fail to launch WSDL_GO. ERROR::::\", error);\n            });\n\t\t}\n    }\n    \n    const onAdd = () => {\n\t\tlet certificate = '';\n        if (Object.keys(certificateInfo).length!==0) certificate = certificateInfo;\n        \n\t\tif (!wsdlURL) dispatch({type: actions.SET_WSDLERROR, payload: [\"wsdlURL\"]}); //error wsdlURL\n\t\telse if (opDropdown===\"0\") dispatch({type: actions.SET_WSDLERROR, payload: [\"opDropdown\"]}); //error\n\t\telse {\n            dispatch({type: actions.SET_WSDLERROR, payload: []});\n\t\t\tsetOverlay('Please Wait...');\n\t\t\tResetSession.start();\n\t\t\tapi.wsdlAdd(wsdlURL, opDropdown, certificate)\n            .then(data => {\n                setOverlay(\"\");\n                if (data === \"Invalid Session\") return RedirectPage(history);\n                else if (data === \"unavailableLocalServer\") setShowPop({title: \"WSDL-Scrape Screen\", content: \"No Intelligent Core Engine (ICE) connection found with the Avo Assure logged in username. Please run the ICE batch file once again and connect to Server.\"});\n                else if (data === \"scheduleModeOn\") setShowPop({ title: \"WSDL-Scrape Screen\", content: \"Schedule mode is Enabled, Please uncheck 'Schedule' option in ICE Engine to proceed.\"})\n                else if (typeof data === \"object\") {\n                    dispatch({type: actions.SET_WSDATA, payload: {endPointURL : data.endPointURL[0]}});\n                    dispatch({type: actions.SET_WSDATA, payload: {method : data.method[0]}});\n                    dispatch({type: actions.SET_WSDATA, payload: {opInput : data.operations[0]}});\n                    dispatch({type: actions.SET_WSDATA, payload: {reqHeader : data.header[0].split(\"##\").join(\"\\n\")}})\n                    dispatch({type: actions.SET_WSDATA, payload: {reqHeader : data.header[0].split(\"##\").join(\"\\n\")}})\n                    if (data.param) dispatch({type: actions.SET_WSDATA, payload: {paramHeader : data.param[0].split(\"##\").join(\"\\n\")}});\n\n                    let localReqBody;\n                    if (!data.body[0].indexOf(\"{\") || !data.body[0].indexOf(\"[\")) {\n                        let jsonObj = JSON.parse(data.body[0]);\n                        let jsonPretty = JSON.stringify(jsonObj, null, '\\t');\n                        localReqBody = jsonPretty;\n                    } else {\n                        localReqBody = formatXml(data.body[0].replace(/>\\s+</g, '><'));\n                    }\n                    \n                    dispatch({type: actions.SET_WSDATA, payload: {reqBody : localReqBody}});\n                    setSaved(false);\n                }\n            })\n            .catch(error => {\n                setOverlay(\"\");\n                ResetSession.end();\n                setShowPop({title: \"WSDL Add-Scrape Screen\", content: \"Error while performing operation.\"});\n                console.error(\"Fail to Add-Scrape. Error::::\", error);\n            });\n\t\t}\n\t}\n\n    return (\n        <ScreenWrapper\n            fullHeight = {true}\n            webserviceContent = {<div className=\"ws__mainContainer\">\n                <div className=\"ws__row\">\n                    <div className=\"ws__url_method\">\n                        <div className=\"ws__url_m_wrapper\">\n                            <label>WSDL</label>\n                            <input className={\"ws__input\"+(wsdlError.includes(\"wsdlURL\")?\" ws_eb\":\"\")} type='text' placeholder='Enter WSDL URL' onChange={wsdlURLHandler} value={wsdlURL} />\n                            <button className=\"ws__goBtn\" onClick={onGo}>Go</button>\n                            <select className={\"ws__select\"+(wsdlError.includes(\"opDropdown\")?\" ws_eb\":\"\")} value={opDropdown} onChange={opDropdownHandler}>\n                                <option disabled={true} value=\"0\">Select Operation</option>\n                                { opList.map((op, i) => <option key={i} value={op}>{op}</option>)}\n                            </select>\n                            <button className=\"ws__action_btn ws__bigBtn ws__addBtn\" onClick={onAdd}>Add</button>\n                        </div>\n                    </div>\n                    <SubmitTask />\n                </div>\n                \n                <div className=\"ws__row ws__action_wrapper\">\n                    <button className={\"ws__action_btn\" + (activeView===\"req\" ? \" ws__active\": \"\")} onClick={()=>setActiveView(\"req\")}>\n                        Request\n                        { activeView === \"req\" && <div className=\"caret__ws fa fa-caret-down\"></div>}\n                    </button>\n                    <button className={\"ws__action_btn\" + (activeView===\"param\" ? \" ws__active\": \"\")} onClick={()=>setActiveView(\"param\")}>\n                        Params\n                        { activeView === \"param\" && <div className=\"caret__ws fa fa-caret-down\"></div>}\n                    </button>\n                    <button className={\"ws__action_btn\" + (activeView===\"resp\" ? \" ws__active\": \"\")} onClick={()=>setActiveView(\"resp\")}>\n                        Response\n                        { activeView === \"resp\" && <div className=\"caret__ws fa fa-caret-down\"></div>}\n                    </button>\n                    <input className={\"ws__input\"+(actionError.includes(\"endPointURL\")?\" ws_eb\":\"\")} type='text' placeholder='End Point URL' onChange={endpointURLHandler} value={endPointURL} disabled={disableAction}/>\n                    <select className={\"ws__select\"+(actionError.includes(\"method\")?\" ws_eb\":\"\")} onChange={methodHandler} value={method} disabled={disableAction} >\n                        <option disabled value=\"0\">Select Method</option>\n                        <option value=\"GET\">GET</option>\n                        <option value=\"POST\">POST</option>\n                        <option value=\"HEAD\">HEAD</option>\n                        <option value=\"PUT\">PUT</option>\n                        <option value=\"DELETE\">DELETE</option>\n                    </select>\n                    <input className={\"ws__input ws__op_input\"+(actionError.includes(\"opInput\")?\" ws_eb\":\"\")} type=\"text\" placeholder=\"Operation\" onChange={opInputHandler} value={opInput} disabled={disableAction} />\n                    <button className=\"ws__cert_btn\" onClick={()=>setShowObjModal(\"addCert\")}>\n                        <img alt=\"cert-icon\" src=\"static/imgs/certificate_ws.png\"/>\n                    </button>\n                    <button className=\"ws__action_btn ws__bigBtn\" disabled={saved && disableAction } onClick={onSave}>Save</button>\n                    <button className=\"ws__action_btn ws__bigBtn\" disabled={\n                        !wsdlURL && opDropdown === \"0\" && !endPointURL && method === \"0\" && !opInput && !reqHeader && !reqBody && !respHeader && !respBody && !paramHeader\n                    } onClick={clearFields}>Clear</button>\n                </div>\n                \n                <textarea \n                    className={\"ws__rqst_resp_header\"+(actionError.includes(\"reqHeader\")&&activeView===\"req\"?\" ws_eb\":\"\")}\n                    value={activeView === \"req\" ? reqHeader : activeView === \"param\" ? paramHeader : respHeader} \n                    placeholder={activeView === \"req\" ? \"Request Header\" : \n                        activeView === \"param\" ? \"param_name = value\" : \"Response Header\"\n                    }\n                    onChange={onHeaderChange}\n                    disabled={disableAction || activeView === \"resp\"}\n                />\n                \n                {activeView !== \"param\" && <textarea \n                    className={\"ws__rqst_resp_body\" +(actionError.includes(\"reqBody\")&&activeView===\"req\"?\" ws_eb\":\"\")}\n                    value={activeView === \"req\" ? reqBody : respBody} \n                    placeholder={activeView === \"req\" ? \"Request Body\" : \"Response Body\"\n                    }\n                    onChange={onBodyChange}\n                    disabled={disableAction || activeView === \"resp\"}\n                />}\n            </div>}\n        />\n    );\n}\n\nexport default WebserviceScrape;\n\n\nfunction formatXml(xml) {\n\tlet formatted = '';\n\tlet reg = /(>)(<)(\\/*)/g;\n\txml = xml.replace(reg, '$1\\r\\n$2$3');\n\tlet pad = 0;\n\txml.split('\\r\\n').forEach(function (node, index) {\n\t\tlet indent = 0;\n\t\tif (node.match(/.+<\\/\\w[^>]*>$/)) {\n\t\t\tindent = 0;\n\t\t} else if (node.match(/^<\\/\\w/)) {\n\t\t\tif (pad !== 0) {\n\t\t\t\tpad -= 1;\n\t\t\t}\n        } //eslint-disable-next-line\n        else if (node.match(/^<\\w[^>]*[^\\/]>.*$/)) {\n\t\t\tindent = 1;\n\t\t} else {\n\t\t\tindent = 0;\n\t\t}\n\t\tlet padding = '';\n\t\tfor (let i = 0; i < pad; i++) {\n\t\t\tpadding += '  ';\n\t\t}\n\t\tformatted += padding + node + '\\r\\n';\n\t\tpad += indent;\n\t});\n\treturn formatted;\n}\n\nfunction parseRequest(readChild) {\n\ttry {\n\t\tif ('name' in readChild) {\n\t\t\tif (xpath === \"\") {\n\t\t\t\txpath = \"/\" + readChild.name;\n\t\t\t\t\tallXpaths.push(xpath);\n\t\t\t\tallCustnames.push(readChild.name);\n\t\t\t}\n\t\t\tif ('attributes' in readChild) {\n\t\t\t\tlet attrchildren = Object.keys(readChild.attributes);\n\t\t\t\tif (attrchildren.length >= 1) {\n\t\t\t\t\tlet basexpath = xpath;\n\t\t\t\t\tfor (let attrindex = 0; attrindex < attrchildren.length; attrindex++) {\n\t\t\t\t\t\tlet newLevel = attrchildren[attrindex];\n\t\t\t\t\t\tif (xpath === undefined) {\n\t\t\t\t\t\t\txpath = \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet custname = readChild.name + \"_\" + newLevel;\n\t\t\t\t\t\txpath = xpath + \"/\" + newLevel;\n\t\t\t\t\t\tallCustnames.push(custname);\n\t\t\t\t\t\tallXpaths.push(xpath);\n\t\t\t\t\t\txpath = basexpath;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ('children' in readChild) {\n\t\t\t\tif (readChild.children.length >= 1) {\n\t\t\t\t\tvar basexpath = xpath;\n\t\t\t\t\tfor (var childrenindex = 0; childrenindex < readChild.children.length; childrenindex++) {\n\t\t\t\t\t\tobjectLevel = objectLevel + 1;\n\t\t\t\t\t\tvar newLevel = readChild.children[childrenindex].name;\n\t\t\t\t\t\tif (xpath === undefined || xpath === 'undefined') {\n\t\t\t\t\t\t\txpath = \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\txpath = xpath + \"/\" + newLevel;\n\t\t\t\t\t\tallCustnames.push(newLevel);\n\t\t\t\t\t\tallXpaths.push(xpath);\n\t\t\t\t\t\tparseRequest(readChild.children[childrenindex]);\n\t\t\t\t\t\txpath = basexpath;\n\t\t\t\t\t\tobjectLevel = objectLevel - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (exception) {\n\t\tconsole.error(\"Exception in the function parseRequest: ERROR::::\", exception);\n\t}\n}\n\nfunction parseJsonRequest(requestedBody, base_key, cur_key, xpath) {\n\tlet xpaths=xpath;\n\ttry {\n     \tfor (let key in requestedBody){\n\t\t\t var value=requestedBody[key];\n\t\t\t if (typeof(value)===\"object\" && !(Array.isArray(value))){\n\t\t\t\tif (base_key!== \"\")  base_key+='/'+key;\n\t\t\t\telse base_key=key;\n\t\t\t\txpaths.push(base_key);\n\t\t\t\txpaths.concat(parseJsonRequest(value,base_key,key,xpaths));\n\t\t\t\tbase_key=base_key.slice(0,-key.length-1);\n\t\t\t } else if (Array.isArray(value)) {\n\t\t\t\tfor (var i=0;i<value.length;i++){\n\t\t\t\t\tbase_key+=key+\"[\"+i.toString()+\"]\";\n\t\t\t\t\txpaths.concat(parseJsonRequest(value[i],base_key,key,xpaths));\n\t\t\t\t}\n\t\t\t } else {\n\t\t\t\txpaths.push(base_key+'/'+key);\n\t\t\t }\n\t\t }\n\t\t base_key=base_key.slice(0,-cur_key.length);\n\t} catch (exception) {\n\t\tconsole.error(\"Exception in the function parseRequest: ERROR::::\", exception);\n\t}\n\treturn xpaths;\n}\n\nfunction parseRequestParam(parameters){\n\tlet paramsArray=[];\n    try{\n\t\tvar params=parameters.split('##');\n\t\tfor (let object of params) {\n\t\t\tobject=object.split(\":\");\n\t\t\tlet scrapedObjectsWS = {};\n\t\t\tscrapedObjectsWS.xpath = object[0].trim();\n\t\t\tscrapedObjectsWS.custname = object[0].trim();\n\t\t\tscrapedObjectsWS.tag = \"elementWS\";\n\t\t\tparamsArray.push(scrapedObjectsWS);\n\t\t}\n\t}catch (Exception){\n\t\tconsole.error(Exception);\n\t}\t\n\treturn paramsArray\t\t\t\t\t\t\t\t\t\t\n}","export const otherObjects = ScrapeObjectTag => {\n    let isOtherObject = true;\n    let objectTag = ScrapeObjectTag.toLowerCase();\n    let typeArray = [ \n        \"button\", \"checkbox\", \"select\", \"img\", \"a\", \"radiobutton\", \"input\", \"list\", \"link\", \n        \"scroll bar\", \"internal frame\", \"table\", \"grid\", \"tablecell\", \"edit\", \"text\", \"combo box\",\n        \"hyperlink\", \"check box\", \"checkbox\", \"image\", \"radio button\"\n    ]\n\n    if (typeArray.includes(objectTag)) isOtherObject = false;\n\n    return isOtherObject;\n}\n\nexport const otherMobileObjects = ScrapeObjectTag => {\n    let isOtherObject = true;\n    let objectTag = ScrapeObjectTag.toLowerCase();\n\n    let mobileTypeArray = [\n        \"android.widget.button\", \"android.widget.checkbox\", \"android.widget.numberpicker\", \"android.widget.timepicker\", \n        \"android.widget.datepicker\", \"android.widget.radiobutton\", \"android.widget.edittext\", \"android.widget.listview\",\n        \"android.widget.spinner\", \"android.widget.switch\", \"android.widget.imagebutton\", \"android.widget.seekbar\",\n        \"button\", \"links\", \"statictext\", \"image\", \"radiobutton\", \"xcuielementtypeslider\", \"datepicker\", \"iosedittext\",\n        \"iosxcuielementtypesecuretextfield\", \"iosxcuielementtypesearchfield\", \"xcuieelementtypepickerwheel\", \"textView\", \"cell\"\n    ]\n    \n    if (mobileTypeArray.includes(objectTag) || isInArray(mobileTypeArray, objectTag)) isOtherObject = false;\n\n    return isOtherObject;\n}\n\nexport const duplicateObjects = scrapedItems => {\n    let newScrapedItems = scrapedItems;\n    let reversedScrapeItems = newScrapedItems.reverse();\n    let uniqueBucket = []\n\n    reversedScrapeItems.forEach(item => {\n        let custname = item.title.trim().replace(/[<>]/g, '');\n        if (!uniqueBucket.includes(custname)) {\n            uniqueBucket.push(custname);\n        }\n        else {\n            item.hide = false;\n            item.duplicate = true;\n        }\n    })\n\n    newScrapedItems = reversedScrapeItems.reverse();\n\n    return newScrapedItems;\n}\n\nexport const isSelectedElement = (selectedFilterTag, ScrapeObjectTag) => {\n    let isDesiredElement = false;\n    let objectTag = ScrapeObjectTag.toLowerCase();\n    let selectedTag = selectedFilterTag.toLowerCase();\n\n    if (\n        selectedTag === objectTag\n        || (objectTag.includes(selectedTag) && selectedTag !== \"a\" && objectTag !== \"radio button\" && objectTag !== \"radiobutton\" && !objectTag.includes(\"listview\") && !objectTag.includes(\"tablecell\"))\n        || (selectedTag === \"input\" && (objectTag.includes(\"edit\") || objectTag.includes(\"text\")))\n        || (selectedTag === \"select\" && objectTag.includes(\"combo box\"))\n        || (selectedTag === \"a\" && (objectTag.includes(\"hyperlink\"))) \n        || (selectedTag === \"checkbox\" && objectTag.includes(\"check box\")) \n        || (selectedTag === \"radiobutton\" && objectTag.includes(\"radio button\"))\n    ) isDesiredElement = true;\n\n    return isDesiredElement;\n}\n\nfunction isInArray (array, item) {\n    let found = false;\n    for (let arrayItem of array){\n        if (arrayItem.includes(item) || item.includes(arrayItem)) {\n            found = true;\n            break;\n        }\n    }\n    return found;\n}","export const mobileMacFilters = [\n    { label: \"Button\", tag: \"Button\"},\n    { label: \"Links\", tag: \"links\"},\n    { label: \"Cells\", tag: \"cell\"},\n    { label: \"TextField\", tag: \"iOSEditText\"},\n    { label: \"StaticTexts\", tag: \"statictext\"},\n    { label: \"Image\", tag: \"image\"},\n    { label: \"RadioButton\", tag: \"RadioButton\"},\n    { label: \"Datepicker\", tag: \"Datepicker\"},\n    { label: \"SecureTextField\", tag: \"iOSXCUIElementTypeSecureTextField\"},\n    { label: \"Slider\", tag: \"XCUIElementTypeSlider\"},\n    { label: \"OtherElements\", tag: \"othersMobile\"},\n    { label: \"SearchField\", tag: \"iOSXCUIElementTypeSearchField\"},\n    { label: \"PickerWheel\", tag: \"XCUIElementTypePickerWheel\"},\n    { label: \"TextView\", tag: \"textView\"},\n    { label: \"Duplicate Custnames\", tag: \"duplicateCustnames\"}\n]\n\nexport const mobileFilters = [\n    { label: \"Button\", tag: \"android.widget.Button\"},\n    { label: \"Switch\", tag: \"android.widget.Switch\"},\n    { label: \"Others\", tag: \"othersMobile\"},\n    { label: \"Checkbox\", tag: \"android.widget.CheckBox\"},\n    { label: \"SeekBar\", tag: \"android.widget.SeekBar\"},\n    { label: \"NumberPicker\", tag: \"android.widget.NumberPicker\"},\n    { label: \"TimePicker\", tag: \"android.widget.TimePicker\"},\n    { label: \"DatePicker\", tag: \"android.widget.DatePicker\"},\n    { label: \"RadioButton\", tag: \"android.widget.RadioButton\"},\n    { label: \"TextBox\", tag: \"android.widget.EditText\"},\n    { label: \"ListView\", tag: \"android.widget.ListView\"},\n    { label: \"Spinner\", tag: \"android.widget.Spinner\"},\n    { label: \"ImageButton\", tag: \"android.widget.ImageButton\"},\n    { label: \"IRIS\", tag: \"iris\"},\n    { label: \"Duplicate Custnames\", tag: \"duplicateCustnames\"}\n]\n\nexport const nonMobileFilters = [\n    { label: \"Button\", tag: \"button\"},\n    { label: \"Checkbox\", tag: \"checkbox\"},\n    { label: \"Dropdown\", tag: \"select\"},\n    { label: \"Image\", tag: \"img\"},\n    { label: \"Link\", tag: \"a\"},\n    { label: \"Radio Button\", tag: \"radiobutton\"},\n    { label: \"Text Box\", tag: \"input\"},\n    { label: \"List Box\", tag: \"list\"},\n    { label: \"Table\", tag: \"table\"},\n    { label: \"IRIS\", tag: \"iris\"},\n    { label: \"Others\", tag: \"others\"},\n    { label: \"User Created\", tag: \"userobj\"},\n    { label: \"Duplicate Custnames\", tag: \"duplicateCustnames\"}\n]\n\nexport const objectTypes = [\n    {value: \"a\", typeOfElement: \"lnk\", name: \"Link\"}, \n    {value: \"input\", typeOfElement: \"txtbox\", name: \"Textbox/Textarea\"}, \n    {value: \"table\", typeOfElement: \"tbl\", name: \"Table\"}, \n    {value: \"list\", typeOfElement: \"lst\", name: \"List\"},\n    {value: \"select\", typeOfElement: \"select\", name: \"Dropdown\"},\n    {value: \"img\", typeOfElement: \"img\", name: \"Image\"},\n    {value: \"button\", typeOfElement: \"btn\", name: \"Button\"},\n    {value: \"radiobutton\", typeOfElement: \"radiobtn\", name: \"Radiobutton\"},\n    {value: \"checkbox\", typeOfElement: \"chkbox\", name: \"Checkbox\"}, \n    {value: \"Element\", typeOfElement: \"elmnt\", name: \"Element\"}\n];\n\nexport const tagList = ['a', 'input', 'table', 'list', 'select', 'img', 'button', 'radiobutton', 'checkbox', 'Element']\n\nexport const irisObjectTypes = {\n    \"button\": { name: \"Button\", states: [0] }, \n    \"checkbox\": { name: \"Checkbox\", states: [0, 1] }, \n    \"radiobutton\": { name: \"Radiobutton\", states: [0, 1] }, \n    \"textbox\": { name: \"Textbox\", states: [0] }, \n    \"label\": { name: \"Label\", states: [0] }, \n    \"tree\": { name: \"Tree\", states: [0] }, \n    \"table\": { name: \"Table\", states: [0]}, \n    \"dropdown\": { name: \"Dropdown\", states: [0]}, \n    \"image\": { name: \"Image\", states: [0]}, \n    \"scroll\": { name: \"Scroll\", states: [0]}, \n    \"unrecognizableobject\": { name: \"Others\", states: [0]}\n};\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { RedirectPage } from '../global';\nimport ScrapeScreen from './containers/ScrapeScreen';\nexport let history;\n\n\nconst Scrape = ()=>{\n    history = useHistory();\n\n    useEffect(()=>{\n        if(window.localStorage['navigateScreen'] !== \"Scrape\"){\n            RedirectPage(history);\n        }\n    }, []);\n\n\n    return (\n        <ScrapeScreen/>\n    );\n}\n\nexport default Scrape;","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ClickAwayListener from 'react-click-away-listener';\nimport { ReferenceBar, ScrollBar, RedirectPage } from '../../global';\nimport  * as ScrapeFilter  from './FilterScrapeObjects';\nimport * as list from './ListVariables';\nimport { ScrapeContext } from './ScrapeContext';\nimport * as actions from '../state/action';\nimport { highlightScrapElement_ICE } from '../api';\nimport \"../styles/RefBarItems.scss\";\n\nconst RefBarItems = props => {\n\n\tconst dispatch = useDispatch();\n\tconst highlightRef = useRef();\n\tconst history = useHistory();\n\tconst { appType, uid } = useSelector(state=>state.plugin.CT);\n\tconst compareFlag = useSelector(state=>state.scrape.compareFlag);\n\tconst objValue = useSelector(state=>state.scrape.objValue);\n    const [toFilter, setToFilter] = useState([]);\n\tconst [tagList, setTagList] = useState([]);\n\tconst [showFilterPop, setShowFilterPop] = useState(false);\n\tconst [filterY, setFilterY] = useState(null);\n\tconst [showScreenPop, setShowScreenPop] = useState(false);\n\tconst [screenshotY, setScreenshotY] = useState(null);\n\tconst [highlight, setHighlight] = useState(false);\n\tconst [mirrorHeight, setMirrorHeight] = useState(\"0px\");\n\tconst [currMobileType, setCurrMobileType]  = useState('Android');\n\tconst [dsRatio, setDsRatio] = useState(1); //downScale Ratio\n\tconst { scrapeItems, setScrapeItems, scrapedURL, mainScrapedData, newScrapedData, setShowPop } = useContext(ScrapeContext);\n\n\tuseEffect(()=>{\n\t\treturn ()=>{\n\t\t\tdispatch({type: actions.SET_OBJVAL, payload: {val: null}});\n\t\t}\n\t}, [dispatch])\n\n\tuseEffect(()=>{\n\t\tdispatch({type: actions.SET_OBJVAL, payload: {val: null}});\n\t\tsetHighlight(false);\n\t\tsetToFilter([]);\n\t\t//eslint-disable-next-line\n\t}, [uid, newScrapedData])\n\n\tuseEffect(()=>{\n\t\tif (appType === \"MobileApp\") setTagList(list.mobileFilters);\n\t\telse setTagList(list.nonMobileFilters);\n\t}, [appType]);\n\n\tuseEffect(()=>{\n\t\tif (props.mirror){\n\t\t\tlet mirrorImg = new Image();\n\n\t\t\tmirrorImg.onload = function(){\n\t\t\t\tlet aspect_ratio = mirrorImg.height / mirrorImg.width;\n\t\t\t\tlet ds_width = 500;\n\t\t\t\tlet ds_height = ds_width * aspect_ratio;\n\t\t\t\tlet ds_ratio = 490 / mirrorImg.width;\n\t\t\t\tif (ds_height > 300) ds_height = 300;\n\t\t\t\tds_height += 45; // popup header size included\n\t\t\t\tsetMirrorHeight(ds_height);\n\t\t\t\tsetDsRatio(ds_ratio);\n\t\t\t}\n\n\t\t\tmirrorImg.src = `data:image/PNG;base64,${props.mirror}`;\n\t\t}\n\t\tdispatch({type: actions.SET_OBJVAL, payload: {val: null }});\n\t\tsetHighlight(false);\n\t\tfilter([]);\n\t\tsetToFilter([]);\n\t\t//eslint-disable-next-line\n\t}, [props.mirror])\n\n\tuseEffect(()=>{\n\t\t// !== null because objValue can be 0\n\t\tif (objValue.val !== null){\n\t\t\tlet clickedObj = null;\n\n\t\t\tfor (let scrapeObj of scrapeItems) {\n\t\t\t\tif (scrapeObj.val === objValue.val) {\n\t\t\t\t\tclickedObj = scrapeObj;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (clickedObj) {\n\t\t\t\tlet ScrapedObject = {};\n\t\t\t\tif (clickedObj.objId) ScrapedObject = mainScrapedData.view[clickedObj.objIdx];\n\t\t\t\telse ScrapedObject = newScrapedData.view[clickedObj.objIdx];\n\t\n\t\t\t\tlet top=0; let left=0; let height=0; let width=0;\n\t\n\t\t\t\tif (ScrapedObject.top){\n\t\t\t\t\ttop = ScrapedObject.top * dsRatio;\n\t\t\t\t\tleft = ScrapedObject.left * dsRatio;\n\t\t\t\t\theight = ScrapedObject.height * dsRatio;\n\t\t\t\t\twidth = ScrapedObject.width * dsRatio;\n\t\n\t\t\t\t\tif (appType === \"MobileWeb\" && navigator.appVersion.indexOf(\"Mac\") !== -1){\n\t\t\t\t\t\ttop = top + 112;\n\t\t\t\t\t\tleft = left + 15;\t\n\t\t\t\t\t} \n\t\t\t\t\telse if (appType === \"SAP\" && mainScrapedData.createdthrough !== 'PD'){\n\t\t\t\t\t\ttop = top + 2;\n\t\t\t\t\t\tleft = left + 3;\n\t\t\t\t\t}\n\t\t\t\t\telse if (appType === \"OEBS\" && mainScrapedData.createdthrough === 'PD'){\n\t\t\t\t\t\ttop = top + 35;\n\t\t\t\t\t\tleft = left-36;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tsetHighlight({\n\t\t\t\t\t\ttop: `${Math.round(top)}px`, \n\t\t\t\t\t\tleft: `${Math.round(left)}px`, \n\t\t\t\t\t\theight: `${Math.round(height)}px`, \n\t\t\t\t\t\twidth: `${Math.round(width)}px`, \n\t\t\t\t\t\tbackgroundColor: \"yellow\", \n\t\t\t\t\t\tborder: \"1px solid red\", \n\t\t\t\t\t\topacity: \"0.7\"\n\t\t\t\t\t}, ()=>highlightRef.current.scrollIntoView({block: 'nearest', behavior: 'smooth'}));\n\t\n\t\t\t\t\tif(!ScrapedObject.xpath.startsWith('iris')){\n\t\t\t\t\t\thighlightScrapElement_ICE(ScrapedObject.xpath, ScrapedObject.url, appType)\n\t\t\t\t\t\t\t.then(data => {\n\t\t\t\t\t\t\t\tif (data === \"Invalid Session\") return RedirectPage(history);\n\t\t\t\t\t\t\t\tif (data === \"fail\") setShowPop({title: \"Fail\", content: \"Failed to highlight\"})\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(error => console.error(\"Error while highlighting. ERROR::::\", error));\n\t\t\t\t\t}\n\t\n\t\t\t\t} else setHighlight(false);\n\t\t\t}\n\t\t}\n\t\telse setHighlight(false);\n\t\t//eslint-disable-next-line\n\t}, [objValue])\n\n    const closeAllPopups = () => {\n\t\tsetShowScreenPop(false);\n\t\tsetShowFilterPop(false);\n\t}\n\n\tconst toggleScreenshotPop = event => {\n\t\tcloseAllPopups();\n        setScreenshotY(event.clientY)\n        setShowScreenPop(!showScreenPop)\n    }\n\n    const toggleFilterPop = event =>{\n\t\tcloseAllPopups();\n        setFilterY(event.clientY)\n        setShowFilterPop(!showFilterPop)\n    }\n    const filterMain=(dataTag)=>{\n\t\tlet tempToFilterArr = [...toFilter];\n\t\tif (dataTag === \"*selectAll*\") {\n\t\t\tif (tagList.length === tempToFilterArr.length) {\n\t\t\t\ttempToFilterArr = []\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (let tag of tagList) {\n\t\t\t\t\tif (!tempToFilterArr.includes(tag.tag)) tempToFilterArr.push(tag.tag);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n        else if (tempToFilterArr.includes(dataTag)) tempToFilterArr.splice(tempToFilterArr.indexOf(dataTag), 1)\n        else tempToFilterArr.push(dataTag);\n\t\tfilter(tempToFilterArr);\n        setToFilter(tempToFilterArr)\n    }\n\n    const filter = toFilter => {\n\t\tlet scrapedItems = [...scrapeItems];\n\t\tscrapedItems.forEach(item => {\n\t\t\titem.hide = true;\n\t\t\titem.duplicate = false;\n\t\t})\n\t\tif (toFilter.length > 0) {\n\t\t\tfor (let tag of toFilter) {\n\t\t\t\tif (tag === \"others\") {\n\t\t\t\t\tscrapedItems.forEach(item => {\n                        if (ScrapeFilter.otherObjects(item.tag)) {\n\t\t\t\t\t\t\t\titem.hide = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse if (tag === \"othersMobile\"){\n\t\t\t\t\tscrapedItems.forEach(item => {\n\t\t\t\t\t\tif (ScrapeFilter.otherMobileObjects(item.tag)){\n\t\t\t\t\t\t\t\titem.hide = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t/*** Filtering Duplicate Objects ***/\n\t\t\t\telse if (tag === \"duplicateCustnames\") {\n\t\t\t\t\tscrapedItems = ScrapeFilter.duplicateObjects(scrapedItems);\n\t\t\t\t}\n\t\t\t\telse if(tag === \"userobj\"){\n\t\t\t\t\tscrapedItems.forEach(item => {\n\t\t\t\t\t\tif (item.isCustom) {\n\t\t\t\t\t\t\titem.hide = false\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tscrapedItems.forEach(item => {\n\t\t\t\t\t\tif (ScrapeFilter.isSelectedElement(tag, item.tag)) {\n\t\t\t\t\t\t\titem.hide = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tscrapedItems.forEach(item => item.hide = false)\n\t\t}\n        setScrapeItems(scrapedItems)\n\t}\n\n\tconst toggleMobileType = event => {\n\n\t\tconst selectedType = event.target.value;\n\t\tlet newTagList = [];\n\t\t\n\t\tif (selectedType === \"iOS\") \n\t\t\tnewTagList = list.mobileMacFilters;\n\t\telse if (selectedType === \"Android\") \n\t\t\tnewTagList = list.mobileFilters;\n\t\t\n\t\tsetCurrMobileType(selectedType);\n\t\tsetTagList(newTagList);\n\t\tsetToFilter([]);\n\t\tfilter([]);\n\t}\n\n\tconst Popups = () => (\n        <>\n        {\n            showScreenPop && \n            // <ClickAwayListener onClickAway={closeAllPopups}>\n            <div data-test=\"popupSS\" className=\"ref_pop screenshot_pop\" style={{marginTop: `calc(${screenshotY}px - 15vh)`, height: `${mirrorHeight}px`}}>\n                <h4 className=\"pop__header\" onClick={()=>setShowScreenPop(false)}><span className=\"pop__title\">Screenshot</span><img className=\"task_close_arrow\" alt=\"task_close\" src=\"static/imgs/ic-arrow.png\"/></h4>\n\t\t\t\t<div className=\"screenshot_pop__content\" >\n\t\t\t\t<div className=\"scrsht_outerContainer\" id=\"ss_ssId\">\n\t\t\t\t<ScrollBar scrollId=\"ss_ssId\" thumbColor= \"#321e4f\" trackColor= \"rgb(211, 211, 211)\" verticalbarWidth='8px' hideXbar={true}>\n\t\t\t\t\t<div data-test=\"ssScroll\" className=\"ss_scrsht_insideScroll\">\n\t\t\t\t\t{ highlight && <div ref={highlightRef} style={{display: \"flex\", position: \"absolute\", ...highlight}}></div>}\n\t\t\t\t\t{ props.mirror ? <img id=\"ss_screenshot\" className=\"screenshot_img\" alt=\"screenshot\" src={`data:image/PNG;base64,${props.mirror}`} /> : \"No Screenshot Available\"}\n\t\t\t\t\t</div>\n\t\t\t\t</ScrollBar>\n\t\t\t\t</div>\n\t\t\t\t</div>\n            </div>\n            // </ClickAwayListener>\n\t\t}\n\t\t{\n            showFilterPop && \n            <ClickAwayListener onClickAway={closeAllPopups}>\n            <div  data-test=\"popupFilter\" className=\"ref_pop filter_pop\" style={{marginTop: `calc(${filterY}px - 15vh)`}}>\n                <h4 className=\"pop__header\" onClick={()=>setShowFilterPop(false)}><span className=\"pop__title\">Filter</span><img className=\"task_close_arrow\" alt=\"task_close\" src=\"static/imgs/ic-arrow.png\"/></h4>\n                <div data-test=\"popupFilterContent\" className=\"filter_pop__content\">\n\t\t\t\t\t<div className=\"scrape__filterActionBtns\">\n\t\t\t\t\t<div className=\"d__filter-selall\" onClick={()=>filterMain(\"*selectAll*\")}><input type=\"checkbox\" checked={tagList.length === toFilter.length}/><span>Select All</span></div>\n\t\t\t\t\t{ appType === \"MobileApp\" && \n\t\t\t\t\t\t<select className=\"scrape__mobileType\" onChange={toggleMobileType} value={currMobileType}>\n\t\t\t\t\t\t\t<option value=\"Android\" >Android</option>\n\t\t\t\t\t\t\t<option value=\"iOS\" >iOS</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"scrape__filterTagBtns\">\n\t\t\t\t\t{ tagList.map((tag, index)=>(\n\t\t\t\t\t\t<button key={index} data-test=\"filterButton\" className={\"d__filter-btn\" + (toFilter.includes(tag.tag) ? \" active-filter\" : \"\")} key={index} onClick={()=>filterMain(tag.tag)}>{tag.label}</button>\n\t\t\t\t\t))}\n\t\t\t\t\t</div>\n                </div>\n            </div>\n            </ClickAwayListener>\n        }\n        </>\n    );\n\n    \n    return (\n    \n        <ReferenceBar popups={Popups()} closeAllPopups={closeAllPopups} scrapeScreenURL={scrapedURL} >\n\t\t\t{ appType!==\"Webservice\" && appType!==\"Mainframe\" && <div data-test=\"screenshot\" className=\"ic_box\" onClick={toggleScreenshotPop}><img className={\"rb__ic-task thumb__ic \"} alt=\"screenshot-ic\" src=\"static/imgs/ic-screenshot.png\"/><span className=\"rb_box_title\">Screenshot</span></div>}\n            { appType!==\"Webservice\" && <span data-test=\"filter\" onClick={toggleFilterPop} className={\"ic_box\"+(compareFlag?\" ss__filterDisable\":\"\")}  ><span><img className={\"rb__ic-info thumb__ic \" + (showFilterPop && \"active_rb_thumb\")} src=\"static/imgs/ic-filter.png\" alt=\"fliter\"/></span><span className=\"rb_box_title\">Filter</span></span>}\n        </ReferenceBar>\n        \n    \n    )\n}\n\nexport default RefBarItems;","import React, { useState } from 'react';\nimport { ModalContainer, ScrollBar } from '../../global';\nimport \"../styles/AddObjectModal.scss\";\nimport PropTypes from 'prop-types';\n\nconst AddObjectModal = props => {\n\n    const [tempIdCounter, setTempIdCounter] = useState(1);\n    const [objects, setObjects] = useState([{objName: \"\", objType: \"\", tempId: tempIdCounter}]);\n    const [error, setError] = useState({});\n\n    const objectTypes = [\n        {value: \"a\", typeOfElement: \"lnk\", name: \"Link\"}, \n        {value: \"input\", typeOfElement: \"txtbox\", name: \"Textbox/Textarea\"}, \n        {value: \"table\", typeOfElement: \"tbl\", name: \"Table\"}, \n        {value: \"list\", typeOfElement: \"lst\", name: \"List\"},\n        {value: \"select\", typeOfElement: \"select\", name: \"Dropdown\"},\n        {value: \"img\", typeOfElement: \"img\", name: \"Image\"},\n        {value: \"button\", typeOfElement: \"btn\", name: \"Button\"},\n        {value: \"radiobutton\", typeOfElement: \"radiobtn\", name: \"Radiobutton\"},\n        {value: \"checkbox\", typeOfElement: \"chkbox\", name: \"Checkbox\"}, \n        {value: \"Element\", typeOfElement: \"elmnt\", name: \"Element\"}\n    ];\n\n    const newField = () => {\n        let updatedObjects = [...objects];\n        let newTempId = tempIdCounter + 1;\n        updatedObjects.push({ objName: \"\", objType: \"\", tempId: newTempId});\n        setObjects(updatedObjects);\n        setTempIdCounter(newTempId);\n    }\n\n    const deleteField = index => {\n        let updatedObjects = [...objects];\n        updatedObjects.splice(index, 1);\n        setObjects(updatedObjects);\n    }\n\n    const handleInput = (event, index) => {\n        let updatedObjects = [...objects];\n        updatedObjects[index].objName = event.target.value;\n        setObjects(updatedObjects);\n    }\n\n    const handleType = (event, index) =>{\n        let updatedObjects = [...objects];\n        updatedObjects[index].objType = event.target.value;\n        setObjects(updatedObjects);\n    }\n\n    const onSubmit = () => {\n        let errorObj = {};\n        let errorFlag = null;\n        let lastObj = props.scrapeItems[props.scrapeItems.length-1]\n        let lastVal = lastObj ? lastObj.val : 0;\n\n        let duplicateDict = {};\n        let idArr = [];\n        let newObjects = [];\n        \n        for (let i=0; i<objects.length; i++){\n            let name = objects[i].objName;\n            let type = objects[i].objType;\n            let tempId = objects[i].tempId;\n            let [tag, value] = type.split(\"-\");\n            let custname = `${name.trim()}_${value}`;\n\n            for(let object of props.scrapeItems) {\n                if (object.title === custname) {\n                    errorObj = { type: \"input\", tempId: [tempId], dTitle: custname };\n                    errorFlag = 'present';\n                    break;\n                }\n            }\n            if (errorFlag==='present') break;\n\n            if (!name || !type) {\n                errorObj = { type: !name ? \"input\" : \"type\", tempId: [tempId] };\n                errorFlag = 'empty';\n                break;\n            }\n\n            if (custname in duplicateDict){\n                duplicateDict[custname].push(tempId);\n                idArr.push(...duplicateDict[custname]);\n                errorFlag = 'duplicate';\n            }\n            else duplicateDict[custname] = [tempId];\n\n            newObjects.push({\n                objIdx: i,\n                title: `${name}_${value}`, \n                tag: tag, \n                xpath: \"\", \n                val: ++lastVal,\n                isCustom: true\n            });\n        }\n\n        if (errorFlag) {\n            if (errorFlag==='duplicate') {\n                errorObj = {type: 'input', tempId: idArr};\n                props.setShowPop({title: 'Add Objects', content: 'Duplicate Object Names Found!'})\n            } \n            else if (errorFlag==='present') props.setShowPop({title: 'Add Objects', content: `Object Characteristics are same for ${errorObj.dTitle.split('_')[0]}!`})\n            setError(errorObj);\n        };\n        \n        if (!errorFlag && newObjects.length > 0) {\n            props.setScrapeItems([...props.scrapeItems, ...newObjects]);\n            props.setShow(false);\n            props.setSaved(false);\n            props.setShowPop({title: \"Add Object\", content: \"Objects has been added successfully.\"});\n        }\n    }\n\n    const resetFields = () => {\n        let emptyFields = [...objects];\n        for (let i=0; i<emptyFields.length; i++) {\n            emptyFields[i] = {objName: \"\", objType: \"\"};\n        }\n        setObjects(emptyFields);\n        setError({});\n    }\n\n    return (\n        <div data-test=\"ssObjectModal\" className=\"ss__objModal\">\n            <ModalContainer \n                title=\"Add Object\"\n                content={\n                    <div data-test=\"ssObjModalContent\" className=\"ss__objModal_content\" id=\"ss__objModalListId\">\n                        <ScrollBar scrollId=\"ss__objModalListId\" thumbColor=\"#321e4f\" trackColor= \"rgb(211, 211, 211)\" verticalbarWidth='8px'>\n                                { objects.map((object, index) => <div data-test=\"objModalItem\" className=\"ss__objModal_item\" key={index}>\n                                        <input data-test=\"addObjectInput\" className={\"addObj_name\"+(error.type===\"input\" && error.tempId.includes(object.tempId) ? \" ss__error_field\" : \"\")} value={object.objName} onChange={(e)=>handleInput(e, index)} placeholder=\"Enter Object Name\" />\n                                        <select  data-test=\"addObjectTypeSelect\" className={\"addObj_objType\"+(error.type===\"type\" && error.tempId.includes(object.tempId) ? \" ss__error_field\" : \"\")} value={object.objType} onChange={(e)=>handleType(e, index)}>\n                                            <option className=\"addObj_option\" disabled selected value=\"\">Select Object Type</option>\n                                            { objectTypes.map((objectType, i) =>\n                                                <option key={i} className=\"addObj_option\" value={`${objectType.value}-${objectType.typeOfElement}`}>\n                                                    {objectType.name}\n                                                </option>\n                                            ) }\n                                        </select>\n                                        <button data-test=\"deleteObjectButton\" className=\"addObj_btn\" onClick={()=>deleteField(index)} disabled={objects.length === 1}><img alt=\"delete-ic\" src=\"static/imgs/ic-delete.png\" /></button>\n                                        { objects.length-1 === index && <button data-test=\"addObjectButton\" className=\"addObj_btn\" onClick={newField}><img alt=\"add-ic\" src=\"static/imgs/ic-add.png\" /></button>}\n                                    </div>\n                                ) }\n                        </ScrollBar>\n                    </div>\n                }\n                close={()=>props.setShow(false)}\n                footer={<>\n                    <button  data-test=\"reset\" onClick={resetFields}>Reset</button>\n                    <button  data-test=\"submit\" onClick={onSubmit}>Submit</button>\n                </>}\n            />\n        </div>\n    );\n}\n\nAddObjectModal.propTypes={\n    scrapeItems:PropTypes.array,\n    setShow:PropTypes.func,\n    setScrapeItems:PropTypes.func,\n    setSaved:PropTypes.func,\n    setShowPop:PropTypes.func\n}\nexport default AddObjectModal;","import React, { useState, useEffect } from 'react';\nimport { ModalContainer } from '../../global';\nimport \"../styles/CompareObjectModal.scss\";\nimport PropTypes from 'prop-types'\nconst CompareObjectModal = props => {\n\n    const [isMac, setIsMac] = useState(false);\n    \n    useEffect(() => {\n        const macOS = navigator.appVersion.indexOf(\"Mac\") !== -1;\n        setIsMac(macOS);\n        //eslint-disable-next-line\n    }, []);\n\n    const webIcons = [\n        {'src': 'static/imgs/ic-reports-ie.png', 'title': 'Launch Internet Explorer', 'action': ()=>props.startScrape('ie', 'compare')},\n        {'src': 'static/imgs/ic-reports-chrome.png', 'title': 'Launch Google Chrome', 'action': ()=>props.startScrape('chrome', 'compare')},\n        {'src': 'static/imgs/ic-reports-safari.png', 'title': 'Launch Safari', 'hide': !isMac, 'action': ()=>props.startScrape('safari', 'compare')},\n        {'src': 'static/imgs/ic-reports-firefox.png', 'title': 'Launch Mozilla Firefox', 'action': ()=>props.startScrape('mozilla', 'compare')},\n        {'src': 'static/imgs/ic-reports-edge.svg', 'title': 'Launch Microsoft Edge', 'action': ()=>props.startScrape('edge', 'compare')},\n        {'src': 'static/imgs/ic-reports-edge-chromium.svg', 'title': 'Launch Edge Chromium', 'action': ()=>props.startScrape('chromium', 'compare')}\n    ];\n\n    return (\n        <div className=\"ss__compareObj\">\n            <ModalContainer \n                title=\"Compare Object\"\n                content={<div data-test=\"ssCompareObjectContent\" className=\"ss__compareObj_content\">\n                    <span>Select one of the browsers below to compare objects</span>\n                    <div data-test=\"compareObjectButtons\" className=\"compareObj_btns\">\n                        { webIcons.map((icon, i) => !icon.hide && <button data-test=\"compareObjectButton\" key={i} className=\"compareObj_btn\" title={icon.title} onClick={icon.action}>\n                                <img data-test=\"webIcons\" className=\"ss__web_icons\" src={icon.src} alt={icon.title}/>\n                            </button>\n                        ) }\n                    </div>\n                </div>}\n                footer={<button  data-test=\"cancelButton\" onClick={()=>props.setShow(false)}>Cancel</button>}\n                close={()=>props.setShow(false)}\n            />\n        </div>\n    )\n}\nCompareObjectModal.propTypes={\n    startScrape:PropTypes.func,\n    setShow:PropTypes.func\n}\nexport default CompareObjectModal;","import React, { useState, useEffect, Fragment } from 'react';\nimport { ModalContainer, ScrollBar, RedirectPage } from '../../global';\nimport { tagList } from  './ListVariables';\nimport { updateScreen_ICE } from '../api';\nimport \"../styles/MapObjectModal.scss\";\nimport PropTypes from 'prop-types'\n\nconst MapObjectModal = props => {\n\n    const [scrapedList, setScrapedList] = useState({});\n    const [nonCustomList, setNonCustomList] = useState([]);\n    const [customList, setCustomList]  = useState({});\n    const [selectedTag, setSelectedTag] = useState(\"\");\n    const [map, setMap] = useState({});\n    const [showName, setShowName] = useState(\"\");\n    const [selectedItems, setSelectedItems] = useState([]);\n    const [errorMsg, setErrorMsg] = useState(\"\");\n\n    useEffect(()=>{\n        let tempScrapeList = {};\n        let tempCustomList = {};\n        let tempNonCustom = [];\n        if (props.scrapeItems.length) {\n            props.scrapeItems.forEach(object => {\n                let elementType = object.tag;\n                elementType = tagList.includes(elementType) ? elementType : 'Element';\n                if (!object.objId) {}\n                else if (object.isCustom) {\n                    if (tempCustomList[elementType]) tempCustomList[elementType] = [...tempCustomList[elementType], object];\n                    else tempCustomList[elementType] = [object]\n                    if (!tempScrapeList[elementType]) tempScrapeList[elementType] = []\n                }\n                else {\n                    tempNonCustom.push(object);\n                    if (tempScrapeList[elementType]) tempScrapeList[elementType] = [...tempScrapeList[elementType], object];\n                    else tempScrapeList[elementType] = [object]\n                }\n            });\n            setScrapedList(tempScrapeList);\n            setCustomList(tempCustomList);\n            setNonCustomList(tempNonCustom);\n        }\n        //eslint-disable-next-line\n    }, [])\n\n    const onDragStart = (event, data) => event.dataTransfer.setData(\"object\", JSON.stringify(data))\n\n    const onDragOver = event => event.preventDefault();\n\n    const onDrop = (event, currObject) => {\n        if (map[currObject.val]) setErrorMsg(\"Object already merged\");\n        else {\n            let draggedObject = JSON.parse(event.dataTransfer.getData(\"object\"));\n            let mapping = { \n                ...map, \n                [currObject.val]: [draggedObject, currObject],\n                [draggedObject.val]: null            \n            }\n            setMap(mapping);\n            setErrorMsg(\"\");\n        }\n    }\n\n    const onUnlink = () => {\n        let mapping = { ...map };\n        for (let customObjVal of selectedItems) {\n            let scrapeObjVal = mapping[customObjVal][0].val\n            delete mapping[customObjVal];\n            delete mapping[scrapeObjVal];\n        }\n        setMap(mapping);\n        setSelectedItems([]);\n        setShowName(\"\");\n    }\n\n    const onShowAllObjects = () => setSelectedTag(\"\");\n\n    const submitMap = () => {\n\n        if (!Object.keys(map).length) {\n            setErrorMsg(\"Please select atleast one object to Map\");\n            return;\n        }\n\n        let { screenId, screenName, projectId, appType, versionnumber } = props.current_task;\n        \n        let arg = {\n            projectId: projectId,\n            screenId: screenId,\n            screenName: screenName,\n            userId: props.user_id,\n            roleId: props.role,\n            param: \"mapScrapeData\",\n            appType: appType,\n            objList: [],\n            versionnumber: versionnumber\n        };\n\n        let mapping = {...map};\n        for (let val in mapping) {\n            if (mapping[val])\n                arg.objList.push([mapping[val][0].objId, mapping[val][1].objId, mapping[val][1].custname]);\n        }\n\n        updateScreen_ICE(arg)\n        .then(response => {\n            if (response === \"Invalid Session\") return RedirectPage(props.history);\n            else props.fetchScrapeData()\n                    .then(resp => {\n                        if (resp === \"success\") {\n                            props.setShow(false);\n                            props.setShowPop({title: 'Map Scrape Data', content: 'Mapped Scrape Data Successfully!'})\n                        }\n                        else props.setShowPop({title: 'Map Scrape Data', content: 'Mapped Scrape Data Failed!'})\n                    })\n                    .catch(err => {\n                        props.setShowPop({title: 'Map Scrape Data', content: 'Mapped Scrape Data Failed!'})\n                        // console.error(err);\n                    });\n        })\n        .catch(error => {\n            props.setShowPop({title: 'Map Scrape Data', content: 'Mapped Scrape Data Failed!'})\n            console.err(error);\n        })\n    }\n\n    const onCustomClick = (showName, id) => {\n        let updatedSelectedItems = [...selectedItems]\n        let indexOfItem = selectedItems.indexOf(id);\n        \n        if (indexOfItem>-1) updatedSelectedItems.splice(indexOfItem, 1);\n        else updatedSelectedItems.push(id);\n        \n        setShowName(showName);\n        setSelectedItems(updatedSelectedItems);\n    }\n\n    return (\n        <div  data-test=\"mapObject\" className=\"ss__mapObj\">\n            <ModalContainer \n                title=\"Map Object\"\n                content={\n                    <div className=\"ss__mapObjBody\">\n                        <div   data-test=\"mapObjectHeading\" className=\"ss__mo_lbl headerMargin\">Please select the objects to drag and drop</div>\n                        <div className=\"ss__mo_lists\">\n                            <div data-test=\"mapObjectScrapeObjectList\" className=\"ss__mo_scrapeObjectList\">\n                                <div  data-test=\"mapObjectLabel\" className=\"ss__mo_lbl lblMargin\">Scraped Objects</div>\n                                <div className=\"mo_scrapeListContainer\">\n                                    <div className=\"mo_listCanvas\">\n                                        <div className=\"mo_listMinHeight\">\n                                            <div data-test=\"mapObjectListContent\" className=\"mo_listContent\" id=\"moListId\">\n                                            <ScrollBar scrollId=\"moListId\" thumbColor= \"#321e4f\" trackColor= \"rgb(211, 211, 211)\" verticalbarWidth='8px'>\n                                            <>\n                                            { (()=> selectedTag ? scrapedList[selectedTag] : nonCustomList)()\n                                            .map((object, i) => {\n                                                let mapped = object.val in map;\n                                                return (<div data-test=\"mapObjectListItem\" key={i} className={\"ss__mo_listItem\"+(mapped ? \" mo_mapped\" : \"\")} draggable={ mapped ? \"false\" : \"true\"} onDragStart={(e)=>onDragStart(e, object)}>\n                                                    {object.title}\n                                                </div>)\n                                            }) }\n                                            </>\n                                            </ScrollBar>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            <div  data-test=\"mapObjectCustomObjectList\" className=\"ss__mo_customObjectList\">\n                                <div  data-test=\"mapObjectCustomHeading\" className=\"ss__mo_lbl lblMargin\">Custom Objects</div>\n                                <div className=\"ss__mo_customOutContainer\">\n                                <div className=\"mo_listCanvas\">\n                                <div className=\"mo_listMinHeight\">\n                                <div className=\"mo_listContent\" id=\"moListId\">\n                                <ScrollBar scrollId=\"moListId\">\n                                <div data-test=\"mapObjectCustomContainer\" className=\"ss__mo_customInContainer\">\n                                { Object.keys(customList).map((elementType, i) => (\n                                    <Fragment key={i}>\n                                    <div data-test=\"mapObjectTagHead\" className=\"mo_tagHead\" onClick={()=>setSelectedTag(elementType === selectedTag ? \"\" : elementType )}>{elementType}</div>\n                                    { selectedTag === elementType && <div className=\"mo_tagItemList\"> \n                                        {customList[selectedTag].map((object, j) => <div data-test=\"mapObjectCustomListItem\" key={j} className={\"mo_tagItems\"+(selectedItems.includes(object.val) ? \" mo_selectedTag\" : \"\")} onDragOver={onDragOver} onDrop={(e)=>onDrop(e, object)}>\n                                            { object.val in map ?\n                                            <>\n                                            <span data-test=\"mapObjectMappedName\" className=\"mo_mappedName\" onClick={()=>onCustomClick(\"\", object.val)}>\n                                                { showName === object.val ? object.title : map[object.val][0].title }\n                                            </span>\n                                            <span data-test=\"mapObjectFlipName\" className=\"mo_nameFlip\" onClick={()=>onCustomClick(object.val, object.val)}></span>\n                                            </> : \n                                            <span data-test=\"h3\">{object.title}</span> }\n                                            \n                                        </div>)} \n                                    </div> }\n                                    </Fragment>\n                                ))}\n                                </div>\n                                </ScrollBar>\n                                </div>\n                                </div>\n                                </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                }\n                close={()=>props.setShow(false)}\n                footer={<>\n                    { errorMsg && <span  data-test=\"errorMessage\" className=\"mo_errorMsg\">{errorMsg}</span>}\n                    <button data-test=\"showAll\" onClick={onShowAllObjects}>Show All Objects</button>\n                    <button data-test=\"unLink\" onClick={onUnlink} disabled={!selectedItems.length}>Un-Link</button>\n                    <button data-test=\"submit\" onClick={submitMap}>Submit</button>\n                </>}\n            />\n        </div>\n    );\n}\nMapObjectModal.propTypes={\n    scrapeItems: PropTypes.arrayOf(PropTypes.object),\n    current_task:PropTypes.object,\n    user_id: PropTypes.string,\n    role: PropTypes.string,\n    fetchScrapeData:PropTypes.func,\n    setShow:PropTypes.func,\n    setShowPop: PropTypes.func,\n}\nexport default MapObjectModal;\n\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ModalContainer } from '../../global';\nimport { SET_CERT } from '../state/action';\nimport \"../styles/CertificateModal.scss\";\nimport PropTypes from 'prop-types';\n\nconst CertificateModal = props => {\n\n    const dispatch = useDispatch();\n    const certificateInfo = useSelector(state=>state.scrape.cert);\n    const [certPath, setCertPath] = useState(\"\");\n    const [certPass, setCertPass] = useState(\"\");\n    const [authName, setAuthName] = useState(\"\");\n    const [authPass, setAuthPass] = useState(\"\");\n    const [error, setError] = useState(false);\n\n    useEffect(()=>{\n        let { certsDetails, authDetails } = certificateInfo;\n        let [newCertPath, newCertPass] = certsDetails ? certsDetails.split(\";;\") : \"\";\n        let [newAuthName, newAuthPass] = authDetails ? authDetails.split(\";\") : \"\";\n\n        setCertPath(newCertPath || \"\");\n        setCertPass(newCertPass || \"\");\n        setAuthName(newAuthName || \"\");\n        setAuthPass(newAuthPass || \"\");\n    }, [certificateInfo])\n\n    const certPathHandler = event => { \n        setCertPath(event.target.value); \n        if (error) setError(false); \n    };\n    const certPassHandler = event => setCertPass(event.target.value);\n    const authNameHandler = event => setAuthName(event.target.value);\n    const authPassHandler = event => setAuthPass(event.target.value);\n\n    const resetFields = () => {\n        setCertPath(\"\");\n        setCertPass(\"\");\n        setAuthName(\"\");\n        setAuthPass(\"\");\n        setError(false);\n    }\n\n    const submitCert = () => {\n        if (!certPath) setError(true);\n        else {\n            let certObj ={\n                certsDetails: `${certPath};;${certPass}`,\n                authDetails: `${authName};${authPass}`\n            }\n            dispatch({type: SET_CERT, payload: certObj});\n            props.setShowPop({title: \"Certificate\", content: \"Certificate Saved successfully\"});\n            props.setShow(false);\n        }\n    }\n\n    return (\n        <div className=\"ws__cert_container\">\n        <ModalContainer \n            title=\"Add Certificate\"\n            content={<>\n                <input data-test=\"certPath\" className={\"cert_input\"+( error ? \" cert_error\" : \"\")} onChange={certPathHandler} value={certPath} placeholder=\"Enter Certificate Path;Enter Certificate Key(optional)\"/>\n                <input data-test=\"certPass\" className=\"cert_input\" onChange={certPassHandler} value={certPass} placeholder=\"Enter Certificate Password(AES Encrypted);Enter server Certificate Path(Optional)\"/>\n                <input data-test=\"authUserName\" className=\"cert_input\" onChange={authNameHandler} value={authName} placeholder=\"Enter AuthUserName\"/>\n                <input data-test=\"authPass\" className=\"cert_input\" onChange={authPassHandler} value={authPass} placeholder=\"Enter AuthUserPassword(AES Encrypted)\"/>\n            </>}\n            footer={<>\n                <button data-test=\"reset\" onClick={resetFields}>Reset</button>\n                <button data-test=\"submit\" onClick={submitCert}>Submit</button>\n            </>}\n            close={()=>props.setShow(false)}\n        />\n        </div>\n    );\n}\nCertificateModal.propTypes={\n    setShowPop:PropTypes.func,\n    setShow:PropTypes.func\n}\nexport default CertificateModal;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ModalContainer, RedirectPage } from '../../global';\nimport { irisObjectTypes } from './ListVariables';\nimport { updateIrisDataset, userObjectElement_ICE } from '../api';\nimport \"../styles/EditIrisObject.scss\";\nimport PropTypes from 'prop-types'\n\nconst EditIrisObject = props => {\n\n    const history = useHistory();\n    const [selectedType, setSelectedType] = useState(\"\");\n    const [selectedStatus, setSelectedStatus] = useState(\"\");\n\n    useEffect(()=>{\n        let objType = props.utils.object.xpath.split(\";\")[6];\n        let objStatus = props.utils.object.xpath.split(\";\")[7];\n        if (objType==='' || objType==='Unable to recognize object type') objType = \"unrecognizableobject\";\n        setSelectedType(objType);\n        setSelectedStatus(objStatus);\n        //eslint-disable-next-line\n    }, [])\n\n    const onSelectType = event => {\n        setSelectedType(event.target.value);\n    }\n\n    const onSelectStatus = event => {\n        setSelectedStatus(event.target.value);\n    }\n\n    const submitData = () => {\n        let existingType = props.utils.object.xpath.split(\";\")[6] || \"unrecognizableobject\";\n        let existingStatus = props.utils.object.xpath.split(\";\")[7]\n\n        let newXpath = props.utils.object.xpath.split(';');\n        newXpath.splice(6, 1, selectedType);\n        newXpath.splice(7, 1, selectedStatus);\n        newXpath = newXpath.join(';');\n        \n        let data = {\n            \"_id\": (props.utils.object.objId || ''),\n            \"cord\": props.utils.cord,\n            \"type\": selectedType, \n            \"xpath\": newXpath,\n            \"status\": parseInt(selectedStatus),\n            ...props.taskDetails\n        };\n\n        let irisAppType = `saveirisimage_${props.taskDetails.appType}`;\n\n        if (!props.utils.object.objId) {\n            props.setShow(false);\n            props.setShowPop({title: \"IRIS Object Details\", content: \"Please save the object first.\"});\n        }\n        else {\n            updateIrisDataset(data)\n            .then(val => {\n                if(val === 'success'){\n                    // props.setShowPop({title: \"IRIS Object Details\", content: \"Submitted Successfully.\"});\n                    if(selectedType !== existingType || selectedStatus !== existingStatus){\n                        props.utils.modifyScrapeItem(props.utils.object.val, {\n                            custname: props.utils.object.custname,\n                            tag: `iris;${selectedType}`,\n                            url: props.utils.object.url,\n                            xpath: newXpath,\n                            editable: true\n                        }, true);\n                    }\n                    \n                    let args =[irisAppType, props.utils.cord, selectedType, (props.utils.object.objId || '')];\n                    userObjectElement_ICE(args)\n                        .then(datairis => {\n                            let msg = null;\n                            if (datairis === \"Invalid Session\") return RedirectPage(history);\n                            else if (datairis === \"unavailableLocalServer\") msg ={title: \"IRIS Object Details\", content: \"Submitted successfully but failed to save IRIS image, ICE not available.\"};\n                            else if (datairis === \"fail\" && selectedType === \"unrecognizableobject\") msg = {title: \"IRIS Object Details\", content: \"Submitted successfully.\"};\n                            else if (datairis === \"fail\") msg = {title: \"IRIS Object Details\", content: \"Submitted successfully but failed to save IRIS image.\"};\n                            else msg = {title: \"IRIS Object Details\", content: \"Submitted Successfully. IRIS image saved.\"};\n                            if (msg) props.setShowPop(msg);\n                            props.setShow(false);\n                        })\n                        .catch(error => {\n                            props.setShowPop({title: \"IRIS Object Details\", content: \"Submitted successfully but failed to save IRIS image.\"});\n                            props.setShow(false);\n                            console.error(\"ERROR::::\", error);\n                        });\n                }\n                else {\n                    props.setShow(false);\n                    props.setShowPop({title: \"IRIS Object Details\", content: \"Failed to updated IRIS Object Details.\"});\n                }\n            })\n            .catch(error => {\n                props.setShowPop({title: \"IRIS Object Details\", content: \"Failed to updated IRIS Object Details.\"});\n                props.setShow(false);\n                console.error(\"ERROR::::\", error);\n            });\n        }\n    }\n\n    return (\n        <div className=\"ss__ei_container\">\n            <ModalContainer \n                title=\"IRIS Object Details\"\n                content={\n                    <div className=\"ss__ei_body\">\n                        <div className=\"ss__ei_info_panel\">\n                            <span data-test=\"objTypeHeading\">Object Type:</span>\n                            <span><select data-test=\"selectObjType\" className=\"ss__ei_objType\" value={selectedType} onChange={onSelectType}>\n                                <option className=\"ss__ei_options\" disabled value={0}>Select Object Type</option>\n                                { Object.keys(irisObjectTypes).map((key, i) => <option key={i} className=\"ss__ei_options\" value={key}>\n                                        {irisObjectTypes[key].name}\n                                    </option>) }\n                            </select></span>\n                            { irisObjectTypes[selectedType] && irisObjectTypes[selectedType].states.length > 1 ?\n                                <> \n                                <span data-test=\"objStatusHeading\">Object Status:</span>\n                                <span>\n                                    <select data-test=\"selectobjStatus\" className=\"ss__ei_objType\" value={selectedStatus} onChange={onSelectStatus}>\n                                        <option className=\"ss__ei_options\" value={\"0\"}>Unchecked</option>\n                                        <option className=\"ss__ei_options\" value={\"1\"}>Checked</option>\n                                    </select>\n                                </span>\n                                </>\n                                : null }\n                            <span data-test=\"objTag\">Object Tag:</span>\n                            <span data-test=\"objTagValue\">{props.utils.object.xpath.split(\";\").pop()}</span>\n                        </div>\n                        <div className=\"ss__ei_img_panel\">\n                            <span>Object Image</span>\n                            <div className=\"ss__ei_img_box\">\n                                <img    \n                                    data-test=\"irirsImage\" \n                                    className=\"ss__ei_img\" \n                                    alt=\"iris\" \n                                    src={`data:image/PNG;base64,\n                                        ${getImage(props.utils.cord)}\n                                    `}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                }\n                footer={\n                    <button data-test=\"submit\" onClick={submitData}>Submit</button>\n                }\n                close={()=>props.setShow(false)}\n            />\n        </div>\n    ); \n}\nEditIrisObject.propTypes={\n    utils:PropTypes.object,\n    taskDetails:PropTypes.object,\n    setShow:PropTypes.func,\n    setShowPop:PropTypes.func\n}\n\nconst getImage = base64 => {\n    let newBase64;\n    if (base64.substring(base64.length-2) === \"''\")\n        newBase64 = base64.substring(3, base64.length - 2);\n    else \n        newBase64 = base64.substring(2, base64.length - 1)\n    return newBase64;\n}\n\nexport default EditIrisObject;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ModalContainer, ScrollBar, RedirectPage } from '../../global';\nimport { objectTypes } from './ListVariables';\nimport { userObjectElement_ICE } from '../api';\nimport \"../styles/CreateObjectModal.scss\";\nimport PropTypes from 'prop-types'\n\nconst CreateObjectModal = props => {\n\n    const history = useHistory();\n\n    const customObj = { objName: \"\", objType: \"\", url: \"\", name: \"\", relXpath: \"\", absXpath: \"\", className: \"\", id: \"\", qSelect: \"\"};\n    const [tempIdCounter, setTempIdCounter] = useState(1);\n    const [objects, setObjects] = useState([ { ...customObj, tempId: tempIdCounter } ]);\n    const [customObjList, setCustomObjList] = useState({});\n    const [error, setError] = useState({type: '', tempId: ''});\n    const [showFields, setShowFields] = useState([tempIdCounter]);\n\n    useEffect(()=>{\n        if (props.editFlag) {\n            let customFields = ['decrypt', props.utils.object.xpath, props.utils.object.url, props.utils.object.tag];\n            \n            userObjectElement_ICE(customFields)\n            .then(data => {\n                if (data === \"unavailableLocalServer\") \n                    props.setShowPop({title: \"Fail\", content: \"Failed to create object ICE not available\"});\n                else if (data === \"invalid session\") return RedirectPage(history);\n                else if (data === \"fail\") \n                    props.setShowPop({title: \"Fail\", content: \"Failed to create object\"});\n                else{\n                    let custname = props.utils.object.title;\n                    let newObj = { \n                        objName:  custname.slice(0, custname.lastIndexOf(\"_\")), \n                        objType: `${data.tag}-${custname.slice(custname.lastIndexOf(\"_\")+1)}`, \n                        url: data.url, \n                        name: data.name, \n                        relXpath: data.rpath, \n                        absXpath: data.apath, \n                        className: data.classname, \n                        id: data.id, \n                        qSelect: data.selector\n                    }\n                    let obj = [...objects];\n                    obj[0] = {...obj[0], ...newObj};\n                    setObjects(obj);\n                }})\n                .catch(error => console.log(error));\n        }\n        //eslint-disable-next-line\n    }, [])\n\n    const newField = () => {\n        let updatedObjects = [...objects];\n        let updatedShowFields = [...showFields];\n        let newTempId = tempIdCounter + 1;\n        updatedObjects.push({ ...customObj, tempId: newTempId});\n        updatedShowFields.push(newTempId);\n        setObjects(updatedObjects);\n        setShowFields(updatedShowFields);\n        setTempIdCounter(newTempId);\n    }\n\n    const deleteField = index => {\n        let updatedObjects = [...objects];\n\n        updatedObjects.splice(index, 1);\n        \n        if (objects[index].tempId in customObjList){\n            let updatedCustomsObjList = {...customObjList};\n            delete updatedCustomsObjList[objects[index].tempId];\n            setCustomObjList(updatedCustomsObjList);\n        }\n        let indexOfId = showFields.indexOf(objects[index].tempId);\n        if (indexOfId >=0 ) {\n            let updatedShowFields = [...showFields];\n            updatedShowFields.splice(indexOfId, 1);\n            setShowFields(updatedShowFields);\n        }\n        setObjects(updatedObjects);\n    }\n    \n    const handleInputs = (event, index) => {\n        let updatedObjects = [...objects];\n        updatedObjects[index] = { ...updatedObjects[index], [event.target.name]: event.target.value };\n        setObjects(updatedObjects);\n    }\n\n    const onEdit = id => {\n        let indexOfId = showFields.indexOf(id);\n        if (indexOfId < 0) {\n            let updatedShowFields = [...showFields];\n            updatedShowFields.push(id);\n            setShowFields(updatedShowFields)\n        }\n    }\n\n    const onSave = index => {\n        let object = objects[index];\n        let [tag, elementType] = object.objType.split('-');\n        let customFields = ['encrypt'];\n        let errorObj = {};\n        \n        if (!object.objName || !object.objType || !object.url) {\n            errorObj = { [object.tempId]: !object.objName ? \"objName\" : !object.objType ?  \"objType\" : \"url\" };\n        } else if (object.name === \"\" && object.relXpath === \"\" && object.absXpath === \"\" && object.className === \"\" && object.id === \"\" && object.qSelect === \"\"){\n            errorObj = { missingField: true }\n            props.setShowPop({title: 'Warning!', content: \"Please enter at least one property\"});\n        }\n\n        if (!Object.keys(errorObj).length) {\n            customFields.push(...[object.url, object.name, object.relXpath, object.absXpath, object.className, object.id, object.qSelect, elementType]);\n            userObjectElement_ICE(customFields)\n\t\t\t.then(data => {\n\t\t\t\tif (data === \"unavailableLocalServer\")\n\t\t\t\t\tprops.setShowPop({title: \"Fail\", content: `Failed to ${props.editFlag ? \"edit\" : \"create\"} object ICE not available`});\n\t\t\t\telse if (data === \"Invalid Session\")\n\t\t\t\t\treturn RedirectPage(history);\n\t\t\t\telse if (data === \"fail\")\n\t\t\t\t\tprops.setShowPop({title: \"Fail\", content: `Failed to ${props.editFlag ? \"edit\" : \"create\"} object`});\n\t\t\t\telse{\n                    let customObject = { custname: `${object.objName}_${elementType}`,\n                                        tag: tag,\n                                        url: data.url,\n                                        xpath: data.xpath,\n                                        editable: 'yes'\n                                        };\n\t\t\t\t\tlet customObjectsList = { ...customObjList, [object.tempId]: customObject};\n                    \n                    let indexOfId = showFields.indexOf(object.tempId);\n                    let updatedShowFields = [...showFields];\n                    updatedShowFields.splice(indexOfId, 1);\n                    setShowFields(updatedShowFields);\n                    setCustomObjList(customObjectsList);\n\t\t\t\t}\n            })\n            .catch(error=>console.error(error));\n        }\n        setError(errorObj)\n    }\n\n    const onSubmit = () => {\n        if (props.editFlag) {\n            let errorFlag = null;\n            let errorObj = {};\n            let custname = customObjList[1].custname.replace(/\\r?\\n|\\r/g, \" \").replace(/\\s+/g, ' ').replace(/[\"]/g, '&quot;').replace(/[']/g, '&#39;').replace(/[<>]/g, '').trim();\n            for(let object of props.scrapeItems) {\n                if (object.title === custname && object.val !== props.utils.object.val) {\n                    errorObj = { [customObjList[1].tempId]: \"objName\", dTitle: custname };\n                    errorFlag = 'present';\n                    break;\n                }\n            }\n            if (errorFlag) {\n                setError(errorObj);\n                props.setShowPop({title: 'Edit Object', content: `Object Characteristics are same for ${errorObj.dTitle.split('_')[0]}!`});\n            }\n            else {\n                props.utils.modifyScrapeItem(props.utils.object.val, {\n                    custname: custname,\n                    tag: customObjList[1].tag,\n                    url: customObjList[1].url,\n                    xpath: customObjList[1].xpath,\n                    editable: true\n                }, true);\n                props.setShow(false);\n            }\n        }\n        else {\n            let localScrapeList = [];\n            let viewArray = [];\n            let lastObj = props.scrapeItems[props.scrapeItems.length-1]\n            let lastVal = lastObj ? lastObj.val : 0;\n            let lastIdx = props.newScrapedData.view ? props.newScrapedData.view.length : 0;\n\n            let duplicateDict = {};\n            let tempIdArr = [];\n            let duplicateFlag = false;\n            let errorFlag = null;\n            let errorObj = {};\n\n            for (let tempId of Object.keys(customObjList)){\n\n                let custname = customObjList[tempId].custname.replace(/\\r?\\n|\\r/g, \" \").replace(/\\s+/g, ' ').replace(/[\"]/g, '&quot;').replace(/[']/g, '&#39;').replace(/[<>]/g, '').trim();\n\n                for(let object of props.scrapeItems) {\n                    if (object.title === custname) {\n                        errorObj = { [tempId]: \"objName\", dTitle: custname };\n                        errorFlag = 'present';\n                        break;\n                    }\n                }\n\n                if (errorFlag==='present') break;\n\n                if (custname in duplicateDict){\n                    duplicateDict[custname].push(tempId);\n                    tempIdArr.push(...duplicateDict[custname]);\n                    duplicateFlag = true;\n                } else duplicateDict[custname] = [tempId]\n\n                localScrapeList.push({\n                    objId: undefined,\n                    objIdx: lastIdx++,\n                    val: ++lastVal,\n                    hide: false,\n                    title: custname,\n                    url: customObjList[tempId].url,\n                    tag: customObjList[tempId].tag,\n                    xpath: customObjList[tempId].xpath,\n                    editable: true\n                });\n                viewArray.push({\n                    custname: custname,\n                    tag: customObjList[tempId].tag,\n                    url: customObjList[tempId].url,\n                    xpath: customObjList[tempId].xpath,\n                    editable: true\n                });  \n            }\n            \n            if (errorFlag) {\n                setError(errorObj);\n                props.setShowPop({title: 'Create Object', content: `Object Characteristics are same for ${errorObj.dTitle.split('_')[0]}!`});\n            } \n            else if (duplicateFlag) {\n                tempIdArr.forEach(tempId => errorObj[tempId] = \"objName\");\n                setError(errorObj);\n                props.setShowPop({title: 'Create Object', content: 'Duplicate Object Names Found!'});\n            } else {\n                let updatedNewScrapeData = {...props.newScrapedData};\n                if (updatedNewScrapeData.view) updatedNewScrapeData.view.push(...viewArray);\n                else updatedNewScrapeData = { view: [...viewArray] };\n                props.setNewScrapedData(updatedNewScrapeData);\n                props.updateScrapeItems(localScrapeList)\n                props.setSaved(false);\n                props.setShow(false);\n                props.setShowPop({title: \"Add Object\", content: \"Objects has been created successfully.\"});\n            }\n        }\n    }\n\n    const handleType = (event, index) => {\n        let updatedObjects = [...objects];\n        updatedObjects[index].objType = event.target.value;\n        setObjects(updatedObjects);\n    }\n\n    const resetFields = () => {\n        let emptyFields = [...objects];\n        let showAll = [...showFields];\n        for (let i=0; i<emptyFields.length; i++) {\n            emptyFields[i] = { ...emptyFields[i], ...customObj};\n            if (!showAll.includes(emptyFields[i].tempId)) \n                showAll.push(emptyFields[i].tempId)\n        }\n        setObjects(emptyFields);\n        setShowFields(showAll);\n        setError({type: '', tempId: ''});\n    }\n\n    return (\n        <div data-test=\"createObject\" className=\"ss__createObj\">\n            <ModalContainer \n                title={props.editFlag ? \"Edit Object\" : \"Create Object\"}\n                content={\n                    <div data-test=\"createObjectModalContent\" className=\"ss__createObj_content\" id=\"createObjListId\">\n                        <ScrollBar scrollId=\"createObjListId\" thumbColor= \"#321e4f\" trackColor= \"rgb(211, 211, 211)\" verticalbarWidth='8px'>\n                                { objects.map((object, index) => <div data-test=\"ssCreateObjectItem\" className=\"ss__createObj_item\" key={object.tempId}>\n                                        <div data-test=\"createObjectRow\" className=\"createObj_row\">\n                                            <input  data-test=\"createObjectInput\" className={\"createObj_input\"+(error[object.tempId] === \"objName\" ? \" ss__error_border\" : \"\")} disabled={!showFields.includes(object.tempId)} name=\"objName\" onChange={(e)=>handleInputs(e, index)} value={object.objName} placeholder=\"Enter Object Name\" />\n                                            <select data-test=\"createObjectType\" className={\"createObj_objType\"+(error[object.tempId] === \"objType\" ? \" ss__error_border\" : \"\")} disabled={!showFields.includes(object.tempId)} value={object.objType} onChange={(e)=>handleType(e, index)}>\n                                                <option className=\"createObj_option\" disabled selected value=\"\">Select Object Type</option>\n                                                { objectTypes.map( (objectType, i) =>\n                                                    <option key={i} className=\"createObj_option\" value={`${objectType.value}-${objectType.typeOfElement}`}>{objectType.name}</option>\n                                                ) }\n                                            </select>\n                                            {!props.editFlag && <button data-test=\"objectDeleteButton\" className=\"createObj_btn\" onClick={()=>deleteField(index)} disabled={objects.length === 1}><img alt=\"del-ic\" src=\"static/imgs/ic-delete.png\" /></button>}\n                                            <button data-test=\"objectEditButton\" className=\"createObj_btn\" onClick={()=>onEdit(object.tempId)} style={props.editFlag ? {flex: \"1 0\"} : null}><img alt=\"edit-ic\" src=\"static/imgs/ic-jq-editstep.png\" /></button>\n                                            {!props.editFlag && objects.length-1 === index && <button data-test=\"objectAddButton\" className=\"createObj_btn\" onClick={newField}><img alt=\"add-ic\" src=\"static/imgs/ic-add.png\" /></button>}\n                                        </div>\n                                        {\n                                            showFields.includes(object.tempId) && \n                                            <>\n                                            <div data-test=\"enterURL\" className=\"createObj_row\"><input  data-test=\"enterURLInput\" className={\"createObj_input\"+(error[object.tempId] === \"url\" ? \" ss__error_border\" : \"\")} name=\"url\" onChange={(e)=>handleInputs(e, index)} value={object.url} placeholder=\"Enter URL\" /></div>\n                                            <div data-test=\"enterName\" className=\"createObj_row\"><input data-test=\"enterNameInput\"className=\"createObj_input\" name=\"name\" onChange={(e)=>handleInputs(e, index)} value={object.name} placeholder=\"Enter name\" /></div>\n                                            <div data-test=\"enterrelXpath\" className=\"createObj_row\"><input className=\"createObj_input\" name=\"relXpath\" onChange={(e)=>handleInputs(e, index)} value={object.relXpath} placeholder=\"Enter Relative xpath\" /></div>\n                                            <div data-test=\"enterabsXpath\"className=\"createObj_row\"><input className=\"createObj_input\" name=\"absXpath\" onChange={(e)=>handleInputs(e, index)} value={object.absXpath} placeholder=\"Enter Absolute xpath\" /></div>\n                                            <div data-test=\"enterclassName\" className=\"createObj_row\"><input className=\"createObj_input\" name=\"className\" onChange={(e)=>handleInputs(e, index)} value={object.className} placeholder=\"Enter class name\" /></div>\n                                            <div data-test=\"enterID\" className=\"createObj_row\"><input className=\"createObj_input\" name=\"id\" onChange={(e)=>handleInputs(e, index)} value={object.id} placeholder=\"Enter ID\" /></div>\n                                            <div data-test=\"enterQuery\" className=\"createObj_row\">\n                                                <input className=\"createObj_input\" name=\"qSelect\" onChange={(e)=>handleInputs(e, index)} value={object.qSelect} placeholder=\"Enter Query Selector\" />\n                                                <button   data-test=\"saveButton\"  className=\"createObj_save\" onClick={()=>onSave(index)}>Save</button>\n                                            </div>\n                                            </>\n                                        }\n                                    </div>\n                                ) }\n                        </ScrollBar>\n                    </div>\n                }\n                close={()=>props.setShow(false)}\n                footer={<>\n                    <button data-test=\"reset\" onClick={resetFields}>Reset</button>\n                    <button data-test=\"submit\" disabled={showFields.length} onClick={onSubmit}>Submit</button>\n                </>}\n            />\n        </div>\n    );\n}\n\nconst EditObjectModal = props => {\n    return (\n        <CreateObjectModal {...props} editFlag={true} />\n    );\n}\nCreateObjectModal.propTypes={\n    scrapeItems: PropTypes.arrayOf(PropTypes.object),\n    newScrapedData: PropTypes.array,\n    setNewScrapedData:PropTypes.func,\n    setSaved: PropTypes.func,\n    setShow: PropTypes.func,\n    setShowPop: PropTypes.func,\n    updateScrapeItems:PropTypes.func\n}\nexport { CreateObjectModal, EditObjectModal };","import React, { useState, useEffect, Fragment, useContext, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/ActionBarItems.scss'\nimport * as actionTypes from '../state/action';\nimport { ScrapeContext } from \"../components/ScrapeContext\";\nimport * as scrapeApi from '../api';\nimport { RedirectPage, ActionBar, Thumbnail } from '../../global';\n\n/*Component LeftBarItems\n  use: renders  6 options in design  in the left of screen\n  props: \n    setoptions from scrapeHome.js \n*/\nconst UpperContent = props => {\n\n    const dispatch = useDispatch();\n    const disableAction = useSelector(state => state.scrape.disableAction);\n    const disableAppend = useSelector(state => state.scrape.disableAppend);\n    const compareFlag = useSelector(state=>state.scrape.compareFlag);\n    const { appType, subTaskId } = useSelector(state => state.plugin.CT);\n    const [isMac, setIsMac] = useState(false);\n    const [appendCheck, setAppendCheck] = useState(false);\n    const { setShowAppPop, saved, startScrape, setSaved } = useContext(ScrapeContext);\n\n    useEffect(() => {\n        setIsMac(navigator.appVersion.indexOf(\"Mac\") !== -1);\n        if (saved || disableAction) setAppendCheck(false);\n        //eslint-disable-next-line\n    }, [appType, saved, subTaskId]);\n\n\n    const WebList = [\n        { 'title': \"Internet Explorer\", 'img': \"static/imgs/ic-ie.png\", action: () => startScrape('ie'), 'disable': disableAction || compareFlag },\n        { 'title': \"Google Chrome\", 'img': \"static/imgs/ic-chrome.png\", action: () => startScrape('chrome'), 'disable': disableAction || compareFlag },\n        { 'title': \"Safari\", 'img': \"static/imgs/ic-safari.png\", action: () => startScrape('safari'), 'disable': disableAction || compareFlag },\n        { 'title': \"Mozilla Firefox\", 'img': \"static/imgs/ic-mozilla.png\", action: () => startScrape('mozilla'), 'disable': disableAction || compareFlag },\n        { 'title': \"Microsoft Edge\", 'svg': \"static/imgs/ic-edge.svg\", action: () => startScrape('edge'), 'disable': disableAction || compareFlag },\n        { 'title': \"Edge Chromium\", 'svg': \"static/imgs/ic-edge-chromium.svg\", action: () => startScrape('chromium'), 'disable': disableAction || compareFlag }\n    ]\n\n    const oebsList = [{ 'title': \"OEBS Apps\", 'img': 'static/imgs/ic-desktop.png', action: ()=> setShowAppPop({'appType': 'OEBS', 'startScrape': (scrapeObjects)=>startScrape(scrapeObjects)}), 'disable': disableAction }]\n\n    const desktopList = [{ 'title': \"Desktop Apps\", 'img': 'static/imgs/ic-desktop.png', action: () => setShowAppPop({'appType': 'Desktop', 'startScrape': (scrapeObjects)=>startScrape(scrapeObjects)}), 'disable': disableAction }]\n\n    const sapList = [{ 'title': \"SAP Apps\", 'img': 'static/imgs/ic-desktop.png', action: () => setShowAppPop({'appType': 'SAP', 'startScrape': (scrapeObjects)=>startScrape(scrapeObjects)}), 'disable': disableAction }]\n\n    const webserviceList = [{ 'title': \"Web Services\", 'img': 'static/imgs/ic-webservice.png', action: () => startScrape(), 'disable': disableAction }]\n\n    const mobileAppList = [{ 'title': \"Mobile Apps\", 'img': 'static/imgs/ic-mobility.png', action: () => setShowAppPop({'appType': 'MobileApp', 'startScrape': (scrapeObjects)=>startScrape(scrapeObjects)}), 'disable': disableAction }]\n\n    const mobileWebList = [{ 'title': \"Mobile Web\", 'img': 'static/imgs/ic-mobility.png', action: () => setShowAppPop({'appType': 'MobileWeb', 'startScrape': (scrapeObjects)=>startScrape(scrapeObjects)}), 'disable': disableAction || compareFlag }]\n\n\n    const onAppend = event => {\n        dispatch({ type: actionTypes.SET_DISABLEACTION, payload: !event.target.checked });\n        if (event.target.checked) {\n            setAppendCheck(true);\n            if (appType===\"Webservice\") setSaved(false);\n        }\n        else setAppendCheck(false);\n    }\n\n    let renderComp = [\n        <div data-test=\"scrapeOnHeading\" key=\"scrapeOn\" className={'ss__scrapeOn' + (disableAction || compareFlag ? \" disable-thumbnail\" : \"\")}>Scrape On</div>,\n        (appType!==\"Webservice\" && <Thumbnail data-test=\"pdfUtility\" key=\"pdf-icon-scrape\" title=\"Launch PDF utility\" img=\"static/imgs/ic-pdf_scrape.png\" action={() => startScrape(\"pdf\")} disable={disableAction} />),\n        <div key=\"append-edit\" className={\"ss__thumbnail\" + (disableAppend || compareFlag ? \" disable-thumbnail\" : \"\")}>\n            <input data-test=\"appendInput\" id=\"enable_append\" type=\"checkbox\" onChange={onAppend} checked={appendCheck} />\n            <span data-test=\"append\" className=\"ss__thumbnail_title\">{appType===\"Webservice\" ? \"Edit\" : \"Append\"}</span>\n        </div>\n    ];\n\n    switch (appType) {\n        case \"Web\": renderComp.splice(1, 0, <Fragment key=\"scrape-upper-section\"> {WebList.map((icon, i) => icon.title !== \"Safari\" || isMac ? <Thumbnail key={i} title={icon.title} img={icon.img} svg={icon.svg} action={icon.action} disable={icon.disable} /> : null)}</Fragment>);\n            break;\n        case \"OEBS\": renderComp.splice(1, 0, <Fragment key=\"scrape-upper-section\">{oebsList.map((icon, i) => <Thumbnail key={i} title={icon.title} img={icon.img} action={icon.action} disable={icon.disable} />)}</Fragment>);\n            break;\n        case \"Desktop\": renderComp.splice(1, 0, <Fragment key=\"scrape-upper-section\">{desktopList.map((icon, i) => <Thumbnail key={i} title={icon.title} img={icon.img} action={icon.action} disable={icon.disable} />)}</Fragment>);\n            break;\n        case \"SAP\": renderComp.splice(1, 0, <Fragment key=\"scrape-upper-section\">{sapList.map((icon, i) => <Thumbnail key={i} title={icon.title} img={icon.img} action={icon.action} disable={icon.disable} />)}</Fragment>);\n            break;\n        case \"Webservice\": renderComp.splice(1, 0, <Fragment key=\"scrape-upper-section\">{webserviceList.map((icon, i) => <Thumbnail key={i} title={icon.title} img={icon.img} action={icon.action} disable={icon.disable} />)}</Fragment>);\n            break;\n        case \"MobileApp\": renderComp.splice(1, 0, <Fragment key=\"scrape-upper-section\">{mobileAppList.map((icon, i) => <Thumbnail key={i} title={icon.title} img={icon.img} action={icon.action} disable={icon.disable} />)}</Fragment>);\n            break;\n        case \"MobileWeb\": renderComp.splice(1, 0, <Fragment key=\"scrape-upper-section\">{mobileWebList.map((icon, i) => <Thumbnail key={i} title={icon.title} img={icon.img} action={icon.action} disable={icon.disable} />)}</Fragment>);\n            break;\n        default: break;\n    }\n\n    return renderComp;\n}\n\nconst BottomContent = () => {\n\n    const hiddenInput = useRef();\n    const { appType, screenId, screenName, versionnumber, projectId, testCaseId } = useSelector(state => state.plugin.CT);\n    const disableAction = useSelector(state => state.scrape.disableAction);\n    const compareFlag = useSelector(state=>state.scrape.compareFlag);\n    const { user_id, role } = useSelector(state=>state.login.userinfo);\n\n    const { setShowObjModal, scrapeItems, setShowPop, fetchScrapeData, setOverlay } = useContext(ScrapeContext);\n    const [customLen, setCustomLen] = useState(0);\n    const [scrapeItemsLength, setScrapeLen] = useState(0);\n\n    const history = useHistory();\n    \n    useEffect(()=>{\n        let customs = 0;\n        let savedObjects = 0;\n        for (let scrapeItem of scrapeItems){\n            if ( scrapeItem.objId && scrapeItem.isCustom) customs++;\n            if (scrapeItem.objId) savedObjects++;\n        }\n        setScrapeLen(savedObjects);\n        setCustomLen(customs);\n    }, [scrapeItems])\n\n    const exportScrapeObjects = () => {\n\t\tscrapeApi.getScrapeDataScreenLevel_ICE(appType, screenId, projectId, testCaseId)\n        .then(data => {\n            if (data === \"Invalid Session\") return RedirectPage(history);\n            let temp = {}\n            let responseData;\n            let hasData = false;\n\n            if (typeof data === 'object' && data.view.length > 0) { \n                hasData = true;\n                if (appType === \"Webservice\"){\n                    let {view, reuse, ...info } = data; \n                    temp['scrapeinfo'] = info;\n                    temp['reuse'] = reuse;\n                    temp['view'] = view;\n                } else temp = data;\n\n                temp['appType'] = appType;\n                temp['screenId'] = screenId;\n                temp['versionnumber'] = versionnumber;\n                responseData = JSON.stringify(temp, undefined, 2);\n            }\n\n            if (hasData){\n                let filename = \"Screen_\" + screenName + \".json\";\n\n                let objectsBlob = new Blob([responseData], {\n                    type: \"text/json\"\n                });\n\n                if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n                    window.navigator.msSaveOrOpenBlob(objectsBlob, filename);\n                }\n                else {\n                    let a = window.document.createElement('a');\n                    a.href = window.URL.createObjectURL(objectsBlob);\n                    a.download = filename;\n                    document.body.appendChild(a);\n                    a.click();\n                    document.body.removeChild(a);\n                  } \n            } else setShowPop({title: \"No Objects found\", content: \"The screen has no objects to export, please check!\"});\n        })\n        .catch(error => console.error(error));\n    }\n    \n    const onInputChange = (event) => {\n        let file = event.target.files[0];\n        let reader = new FileReader();\n        reader.onload = function (e) {\n            hiddenInput.current.value = '';\n            if (file.name.split('.').pop().toLowerCase() === \"json\") {\n                setOverlay(\"Loading...\")\n                let resultString = JSON.parse(reader.result);\n                if (!('appType' in resultString))\n                    setShowPop({title: \"Import Error\", content: \"Incorrect JSON imported. Please check the contents!\"});\n                else if (resultString.appType !== appType)\n                    setShowPop({title: \"App Type Error\", content: \"Project application type and Imported JSON application type doesn't match, please check!\"});\n                else if (resultString.view.length === 0)\n                    setShowPop({title: \"No Objects found\", content: \"The file has no objects to import, please check!\"});\n                else {\n                    let objList = {};\n                    if ('body' in resultString) {\n                        let { reuse, appType, screenId, view, versionnumber, ...scrapeinfo } = resultString; \n                        objList['reuse'] = reuse;\n                        objList['appType'] = appType;\n                        objList['screenId'] = screenId;\n                        objList['view'] = view;\n                        objList['scrapeinfo'] = scrapeinfo;\n                    }\n                    else objList = resultString;\n\n                    let arg = {\n                        projectId: projectId,\n                        screenId: screenId,\n                        screenName: screenName,\n                        userId: user_id,\n                        roleId: role,\n                        param: \"importScrapeData\",\n                        appType: appType,\n                        objList: objList\n                    };\n                    scrapeApi.updateScreen_ICE(arg)\n                        .then(data => {\n                            if (data === \"Invalid Session\") return RedirectPage(history);\n                            else fetchScrapeData().then(response => {\n                                    if (response === \"success\")\n                                        setShowPop({title: \"Import Screen\", content: \"Screen Json imported successfully.\"}) \n                                    setOverlay(\"\");\n                            });\n                        })\n                        .catch(error => {\n                            setOverlay(\"\");\n                            console.log(error)\n                        });\n                }\n            } else {\n                setOverlay(\"\");\n                setShowPop({'title': \"Import Screen\", 'content': \"Please Check the file format you have uploaded!\"});\n            }\n        }\n        reader.readAsText(file);\n    }\n\n    const importTestCase = (overWrite) => {\n\n        // if(overWrite) setShowConfirmPop(false);\n        \n        // DesignApi.readTestCase_ICE(userInfo, testCaseId, testCaseName, versionnumber)\n\t\t// .then(response => {\n\t\t// \t\tif (response === \"Invalid Session\") RedirectPage(history);\n        //         if (response.testcase.length === 0 || overWrite) {\n                    hiddenInput.current.click();\n                    // document.getElementById(\"importScreenField\").click();\n        //         }\n        //         else{\n        //             setShowConfirmPop({'title': 'Table Consists of Data', 'content': 'Import will erase your old data. Do you want to continue?', 'onClick': ()=>importTestCase(true)});\n        //         }\n        //     })\n        // .catch(error => console.error(\"ERROR::::\", error));\n    }\n    \n    const lowerList = [\n        {'title': 'Add Object', 'img': 'static/imgs/ic-addobject.png', 'action': ()=>setShowObjModal(\"addObject\"), 'show': appType === 'Web' || appType === \"MobileWeb\", disable:  compareFlag}, \n        {'title': 'Map Object', 'img': 'static/imgs/ic-mapobject.png', 'action': ()=>setShowObjModal(\"mapObject\"), 'show': appType === 'Web' || appType === \"MobileWeb\", 'disable': customLen <= 0 || scrapeItemsLength-customLen <= 0 || compareFlag},\n        {'title': 'Compare Object', 'img': 'static/imgs/ic-compareobject.png', 'action': ()=>setShowObjModal(\"compareObject\"), 'show': appType === 'Web' || appType === \"MobileWeb\", 'disable': scrapeItemsLength-customLen <= 0 || !disableAction || compareFlag },\n        {'title': 'Create Object', 'img': 'static/imgs/ic-jq-editstep.png', 'action': ()=>setShowObjModal(\"createObject\"), 'show': appType === 'Web' || appType === \"MobileWeb\", disable: compareFlag},\n        {'title': 'Import Screen', 'img': 'static/imgs/ic-import-script.png', 'action': ()=>importTestCase(true), show: true, disable: compareFlag && appType!==\"Webservice\"},\n        {'title': 'Export Screen', 'img': 'static/imgs/ic-export-script.png', 'action': ()=>exportScrapeObjects(), 'disable': ((customLen <= 0 && scrapeItemsLength-customLen <= 0) || compareFlag) && appType!==\"Webservice\", show: true}\n    ]\n\n    return (\n        <>\n            {lowerList.map((icon, i) => icon.show && <Thumbnail data-test=\"bottomContent\" key={i} title={icon.title} img={icon.img} action={icon.action} disable={icon.disable}/>)}\n            <input ref={hiddenInput} data-test=\"fileInput\" id=\"importScreenField\" type=\"file\" style={{display: \"none\"}} onChange={onInputChange} accept=\".json\"/>\n        </>\n    );\n}\n\n\nconst ActionBarItems = props => {\n    const { appType } = useSelector(state=>state.plugin.CT);\n    return (\n        <ActionBar\n            upperContent={ appType === \"Mainframe\" ? null : <UpperContent />}\n            bottomContent={ appType === \"Mainframe\" ? null : <BottomContent />}\n        />\n    )\n}\n\nexport default ActionBarItems;","import React, { useState } from 'react';\nimport { ModalContainer } from '../../global';\nimport \"../styles/LaunchApplication.scss\"\n\nconst LaunchApplication = props => {\n\n    const [error, setError] = useState({});\n\n    // DESKTOP\n\n    const [windowName, setWindowName] = useState(\"\");\n    const windowNameHandler = event => setWindowName(event.target.value);\n\n    const [processID, setProcessID] = useState(\"\");\n    const processIDHandler = event => {\n        let value = event.target.value;\n        value = value.replace(/[^0-9]/, \"\");\n        setProcessID(value);\n    }\n\n    const [selectedMethod, setSelectedMethod] = useState(\"A\")\n    const onMethodSelect = event => {\n        setSelectedMethod(event.target.value);\n    }\n\n    const onDesktopLaunch = () => {\n        let scrapeObject = {\n            appPath: windowName,\n            processID: processID,\n            method: selectedMethod\n        }\n        if (!windowName && !processID) setError({windowName: !windowName, processID: !processID})\n        else {\n            setError(false);\n            props.appPop.startScrape(scrapeObject);\n        }\n    }\n\n    const desktopApp = {\n        'content': <div className=\"ss__desktop_dlg\">\n            <input data-test=\"windowName\" className={'ss__dsktp_wndw_name'+(error.windowName ? \" la_invalid\": \"\")} placeholder='Enter window name' value={windowName} onChange={windowNameHandler}/>\n            <input data-test=\"processID\" className={\"ss__dsktp_prc_id\"+(error.processID ? \" la_invalid\" : \"\")} placeholder='Enter process ID' value={processID} onChange={processIDHandler}/>\n        </div>,\n        'footer': <div className=\"ss__sdkpt_footer\">\n            <span className=\"ss__dskp_footer_span\">\n                Object Identification: \n                <label className=\"ss__dsktp_method\">\n                    <input data-test=\"methodA\" className=\"ss__dsktp_method_rad\" type=\"radio\" name=\"method\" value=\"A\" checked={selectedMethod === \"A\"} onChange={onMethodSelect}/>Method A\n                </label>\n                <label className=\"ss__dsktp_method\">\n                    <input data-test=\"methodB\" className=\"ss__dsktp_method_rad\" type=\"radio\" name=\"method\" value=\"B\" checked={selectedMethod === \"B\"} onChange={onMethodSelect}/>Method B\n                </label>\n            </span>\n            <button data-test=\"desktopLaunch\" onClick={onDesktopLaunch} style={{width: \"100px\"}}>\n                Launch\n            </button>\n        </div>\n    }\n\n\n    // SAP\n\n    const [appName, setAppName] = useState(\"\");\n    const appNameHandler = event => setAppName(event.target.value);\n\n    const onSapLaunch = () => {\n        let scrapeObject = {\n            'appName' : appName\n        }\n        if (!appName) setError({appName: !appName})\n        else {\n            setError(false);\n            props.appPop.startScrape(scrapeObject);\n        }\n    }\n\n    const sapApp = {\n        'content': <input data-test=\"exePath\" className={'ss__sap_input'+(error.appName ? \" la_invalid\" : \"\")} placeholder='Enter the .exe path;App Name' value={appName} onChange={appNameHandler}/>,\n        'footer': <button data-test=\"sapLaunch\"onClick={onSapLaunch} style={{width: \"100px\"}}>Launch</button>\n    }\n\n    // Mobile App\n\n    const [os, setOS] = useState(null);\n\n    const [appPath, setAppPath] = useState(\"\");\n    const appPathHandler = event => setAppPath(event.target.value);\n\n    const [sNum, setSNum] = useState(\"\");\n    const sNumHandler = event => setSNum(event.target.value);\n\n    const [appPath2, setAppPath2] = useState(\"\");\n    const appPath2Handler = event => setAppPath2(event.target.value);\n\n    const [verNum, setVerNum] = useState(\"\");\n    const verNumHandler = event => setVerNum(event.target.value);\n\n    const [deviceName, setDeviceName] = useState(\"\");\n    const deviceNameHandler = event => setDeviceName(event.target.value);\n\n    const [uuid, setUUID] = useState(\"\");\n    const uuidHandler = event => setUUID(event.target.value);\n\n    const onMobileAppLaunch = () => {\n        let scrapeObject = {\n            'appPath': appPath,\n            'sNum': sNum,\n            'appPath2': appPath2,\n            'verNum': verNum,\n            'deviceName': deviceName,\n            'uuid': uuid\n        }\n        if ( os === \"ios\" && (!appPath2 || !verNum | !deviceName || !uuid))\n            setError({appPath2: !appPath2, verNum: !verNum, deviceName: !deviceName, uuid: !uuid})\n        else if (os === \"android\" && (!appPath || !sNum))\n            setError({appPath: !appPath, sNum: !sNum})\n        else {\n            setError(false);\n            props.appPop.startScrape(scrapeObject);\n        }\n    }\n\n    const mobileApp = {\n        'content': <div className=\"ss__mblapp_inputs\">\n                { !os && <div className=\"ss__mblapp_os_op\">Choose OS</div>}\n                <div className=\"ss__mblapp_chooseApp\">\n                    <button data-test=\"chooseAndriod\" className={\"ss__mblapp_os_b\"+(os===\"android\" ? \" ss__os_active\":\"\")} onClick={()=>{setOS(\"android\"); setError(false);}}>Android</button>\n                    <button data-test=\"chooseIOS\"className={\"ss__mblapp_os_b\"+(os===\"ios\" ? \" ss__os_active\":\"\")} onClick={()=>{setOS(\"ios\"); setError(false);}}>iOS</button>\n                </div>\n                { os === \"ios\" && <>\n                    <input data-test=\"iosApppath\" className={\"ss__mblapp_input\"+(error.appPath2 ? \" la_invalid\": \"\")} placeholder=\"Enter Application path\" value={appPath2} onChange={appPath2Handler}/>\n                    <input data-test=\"iosVersionNumber\" className={\"ss__mblapp_input\"+(error.verNum ? \" la_invalid\": \"\")} placeholder='Enter Version Number' value={verNum} onChange={verNumHandler}/>\n                    <input data-test=\"iosDeviceName\" className={\"ss__mblapp_input\"+(error.deviceName ? \" la_invalid\": \"\")} placeholder='Enter Device Name'value={deviceName} onChange={deviceNameHandler}/>\n                    <input data-test=\"iosUDID\" className={\"ss__mblapp_input\"+(error.uuid ? \" la_invalid\": \"\")} placeholder='Enter UDID' value={uuid} onChange={uuidHandler}/>\n                </> }\n                { os === \"android\" && <>\n                    <input data-test=\"andriodAppPath\" className={\"ss__mblapp_input\"+(error.appPath ? \" la_invalid\": \"\")} placeholder=\"Enter Application path\" value={appPath} onChange={appPathHandler}/> \n                    <input data-test=\"andriodSerialNumber\" className={\"ss__mblapp_input\"+(error.sNum ? \" la_invalid\": \"\")} placeholder=\"Enter mobile serial number\" value={sNum} onChange={sNumHandler} />\n                </> }\n        </div>,\n\n        'footer': <button data-test=\"mobileAppLaunch\" onClick={onMobileAppLaunch} style={{width: \"100px\"}}>Launch</button>\n    }\n\n    // OEBS\n\n    const [winName, setWinName] = useState(\"\");\n    const winNameHandler = event => setWinName(event.target.value);\n\n    const onWinLaunch = () => {\n        let scrapeObject = {\n            'winName' : winName\n        }\n        if (!winName) setError({winName: !winName})\n        else {\n            setError(false);\n            props.appPop.startScrape(scrapeObject);\n        }\n    }\n\n    const oebsApp = {\n        'content': <input data-test=\"oebsWinName\" className={'ss__oebs_input'+(error.winName ? \" la_invalid\": \"\")} placeholder='Enter window name' value={winName} onChange={winNameHandler}/>,\n        'footer': <button data-test=\"oebsLaunch\" onClick={onWinLaunch} style={{width: \"100px\"}}>Launch</button>\n    }\n    \n    \n    // Mobile Web\n\n    const [slNum, setSlNum] = useState(\"\");\n    const slNumHandler = event => setSlNum(event.target.value);\n\n    const [vernNum, setVernNum] = useState(\"\");\n    const vernNumHandler = event => setVernNum(event.target.value);\n\n    const onMobileWebLaunch = () => {\n        let scrapeObject = {\n            'slNum': slNum,\n            'vernNum': vernNum\n        }\n        if (!slNum || !vernNum) setError({slNum: !slNum, vernNum: !vernNum});\n        else {\n            setError(false);\n            props.appPop.startScrape(scrapeObject);\n        }\n    }\n\n    const mobileWeb = {\n        'content': <div className=\"ss__mblweb_inputs\">    \n            <input data-test=\"MWserdev\" className={\"ss__mblweb_input\"+(error.slNum ? \" la_invalid\": \"\")} placeholder=\"AndroidDeviceSerialNumber/iOSDeviceName\" value={slNum} onChange={slNumHandler}/> \n            <input data-test=\"MWversion\" className={\"ss__mblweb_input\"+(error.vernNum ? \" la_invalid\": \"\")} placeholder=\"Android/iOSVersion;UDID(for iOS device only)\" value={vernNum} onChange={vernNumHandler} />\n        </div>,\n\n        'footer': <button data-test=\"MWLaunch\" onClick={onMobileWebLaunch} style={{width: \"100px\"}}>Launch</button>\n    }\n\n    const appDict = {'Desktop': desktopApp, \"SAP\": sapApp, 'MobileApp': mobileApp, 'OEBS': oebsApp, 'MobileWeb': mobileWeb}\n\n    return (\n        <div className=\"ss__launch_app_dialog\">\n            <ModalContainer\n                title=\"Launch Application\"\n                content={appDict[props.appPop.appType].content}\n                footer={appDict[props.appPop.appType].footer}\n                close={()=>{\n                    props.setShow(false);\n                    setError(false);\n                }}\n            />\n        </div> \n    );\n}\n\nexport default LaunchApplication;","import React ,{ useState, useEffect } from 'react';\nimport {useSelector, useDispatch} from \"react-redux\"\nimport { useHistory } from 'react-router-dom';\nimport ScrapeObjectList from './ScrapeObjectList';\nimport CompareObjectList from './CompareObjectList';\nimport WebserviceScrape from './WebserviceScrape';\nimport RefBarItems from '../components/RefBarItems.js';\nimport AddObjectModal from '../components/AddObjectModal';\nimport CompareObjectModal from '../components/CompareObjectModal';\nimport MapObjectModal from '../components/MapObjectModal';\nimport CertificateModal from '../components/CertificateModal';\nimport EditIrisObject from '../components/EditIrisObject';\nimport { CreateObjectModal, EditObjectModal } from '../components/CustomObjectModal';\nimport ActionBarItems from '../components/ActionBarItems';\nimport LaunchApplication from '../components/LaunchApplication';\nimport { ScrapeContext } from '../components/ScrapeContext';\nimport { Header, FooterTwo as Footer, ScreenOverlay, RedirectPage, PopupMsg, ModalContainer, ResetSession } from '../../global';\nimport * as scrapeApi from '../api';\nimport * as actionTypes from '../state/action';\nimport * as pluginActions from \"../../plugin/state/action\";\nimport '../styles/ScrapeScreen.scss';\n\nconst ScrapeScreen = ()=>{\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const current_task = useSelector(state=>state.plugin.CT);\n    const certificateInfo = useSelector(state=>state.scrape.cert);\n    const  { user_id, role } = useSelector(state=>state.login.userinfo);\n    const compareFlag = useSelector(state=>state.scrape.compareFlag);\n    const {endPointURL, method, opInput, reqHeader, reqBody, paramHeader} = useSelector(state=>state.scrape.WsData);\n\n    const [overlay, setOverlay] = useState(null);\n    const [showPop, setShowPop] = useState(\"\");\n    const [showConfirmPop, setShowConfirmPop] = useState(false);\n    const [scrapeItems, setScrapeItems] = useState([]);\n    const [mainScrapedData, setMainScrapedData] = useState({});\n    const [saved, setSaved] = useState(true);\n    const [mirror, setMirror] = useState(null);\n    const [showAppPop, setShowAppPop] = useState(false);\n    const [isUnderReview, setIsUnderReview] = useState(false);\n    const [scrapedURL, setScrapedURL] = useState(\"\");\n    const [hideSubmit, setHideSubmit] = useState(true);\n    const [showObjModal, setShowObjModal] = useState(false);\n    const [newScrapedData, setNewScrapedData] = useState({});\n\n    useEffect(() => {\n        if(Object.keys(current_task).length !== 0) {\n            fetchScrapeData()\n            .then(data => setIsUnderReview(current_task.status === \"underReview\"))\n            .catch(error=> console.log(error));\n        }\n        //eslint-disable-next-line\n    }, [current_task])\n\n    useEffect(()=>{\n        if (!showObjModal) {\n            let selected = 0;\n            let selectedObj = null;\n\n            scrapeItems.forEach(item=>{\n                if (!item.hide && item.checked) {\n                    selected++;\n                    selectedObj = item;\n                }\n            })\n\n            if (selected === 1 && selectedObj && selectedObj.editable && selectedObj.tag && selectedObj.tag.substring(0, 4) === \"iris\") {\n                let localScrapeItems = [...scrapeItems];\n\n                localScrapeItems.forEach(item => { if (!item.hide) {\n                    item.checked = false;\n                }})\n                \n                setScrapeItems(localScrapeItems);\n            }\n        }\n    }, [showObjModal])\n\n    const fetchScrapeData = () => {\n\t\treturn new Promise((resolve, reject) => {\n            setOverlay(\"Loading...\");\n            \n            let viewString = scrapeItems;\n            let haveItems = viewString.length !== 0;\n\n            scrapeApi.getScrapeDataScreenLevel_ICE(current_task.appType, current_task.screenId, current_task.projectId, current_task.testCaseId)\n            .then(data => {\n                if (current_task.subTask === \"Scrape\") setScrapedURL(data.scrapedurl);\n                \n                if (data === \"Invalid Session\") return RedirectPage(history);\n                else if (typeof data === \"object\" && current_task.appType!==\"Webservice\") {\n\n                    viewString = data;\n                    \n                    haveItems = viewString.view.length !== 0;\n                    \n                    if (haveItems) {\n                        let newScrapeList = generateScrapeItemList(-1, 0, viewString);\n\n                        setMainScrapedData(viewString);\n                        setMirror(viewString.mirror);\n                        setNewScrapedData([]);\n                        setScrapeItems(newScrapeList);\n                        setHideSubmit(false);\n                        setSaved(true);\n                    }\n                    else {\n                        setScrapeItems([]);\n                        setMainScrapedData({});\n                        setNewScrapedData([]);\n                        setMirror(null);\n                        setSaved(true);\n                        setHideSubmit(true);\n                    }\n                    setOverlay(\"\");\n                    dispatch({type: actionTypes.SET_DISABLEACTION, payload: haveItems});\n                    dispatch({type: actionTypes.SET_DISABLEAPPEND, payload: !haveItems});\n                }\n                else if (typeof data === \"object\" && current_task.appType===\"Webservice\"){\n                    haveItems = data.endPointURL && data.method;\n                    if (haveItems) {\n                        \n                        let localReqBody = \"\";\n                        if (data.body) localReqBody = getProcessedBody(data.body, 'fetch');\n                        \n                        let localRespBody = \"\";\n                        if (data.responseBody) localRespBody = getProcessedBody(data.responseBody, 'fetch');\n\n                        dispatch({\n                            type: actionTypes.SET_WSDATA, \n                            payload: {\n                                endPointURL: data.endPointURL,\n                                method : data.method,\n                                opInput : data.operations || \"\",\n                                reqHeader : data.header ? data.header.split(\"##\").join(\"\\n\"): \"\",\n                                reqBody : localReqBody,\n                                paramHeader : data.param ? data.param.split(\"##\").join(\"\\n\"): \"\",\n                                respHeader : data.responseHeader ? data.responseHeader.split(\"##\").join(\"\\n\") : \"\",\n                                respBody : localRespBody\n                            }\n                        });\n                        setSaved(true);\n                        setHideSubmit(false);\n\t\t\t\t\t} else {\n                        setSaved(false);\n                        setHideSubmit(true);\n                        dispatch({type: actionTypes.SET_WSDATA, payload: {\n                            endPointURL: \"\", method: \"0\", opInput: \"\", reqHeader: \"\",\n                            reqBody: \"\", respHeader: \"\", respBody: \"\", paramHeader: \"\",\n                        }});\n                    }\n                    setOverlay(\"\");\n                    dispatch({type: actionTypes.SET_DISABLEAPPEND, payload: !haveItems});\n                    dispatch({type: actionTypes.SET_DISABLEACTION, payload: haveItems});\n                    dispatch({type: actionTypes.SET_ACTIONERROR, payload: []});\n                    dispatch({type: actionTypes.SET_WSDLERROR, payload: []});\n                }\n                else{\n                    dispatch({type: actionTypes.SET_DISABLEACTION, payload: haveItems});\n                    dispatch({type: actionTypes.SET_DISABLEAPPEND, payload: !haveItems});\n                    setOverlay(\"\");\n                    // screenshot\n                }\n            resolve(\"success\");\n            })\n            .catch(error => {\n                dispatch({type: actionTypes.SET_DISABLEACTION, payload: haveItems});\n                dispatch({type: actionTypes.SET_DISABLEAPPEND, payload: !haveItems});\n                console.error(\"error\", error);\n                setOverlay(\"\");\n                reject(\"fail\")\n            })\n        });\n    }\n\n    const startScrape = (browserType, compareFlag) => {\n        let appType = current_task.appType;\n        if (appType === \"Webservice\") {\n            let arg = {}\n            let testCaseWS = []\n            let keywordVal = [\"setEndPointURL\", \"setMethods\", \"setOperations\", \"setHeader\", \"setWholeBody\"];\n            let wsdlInputs = [ \n                endPointURL, method, opInput, getFormattedValue(reqHeader), \n                getFormattedValue(paramHeader), getFormattedValue(reqBody, true) \n            ];\n\n            if (Object.keys(certificateInfo).length)\n                wsdlInputs.push(...[certificateInfo.certsDetails+\";\", certificateInfo.authDetails]);\n\n            if (endPointURL.indexOf('https')===0) \n                arg.res = certificateInfo;\n\n            let [ error, auth, proceed ] = validateWebserviceInputs(wsdlInputs);\n\n            if (error) dispatch({type: actionTypes.SET_ACTIONERROR, payload: error});\n\n            if (proceed) {\n                dispatch({type: actionTypes.SET_ACTIONERROR, payload: []});\n                if (auth)\n                    keywordVal.push(...[\"addClientCertificate\",\"setBasicAuth\"])\n\n                if (wsdlInputs[4]) keywordVal.splice(4, 0, 'setParamValue');\n                else wsdlInputs.splice(4, 1);\n\n                setOverlay(\"Fetching Response Header & Body...\");\n                ResetSession.start();\n                for (let i = 0; i < wsdlInputs.length; i++) {\n                    if (wsdlInputs[i] !== \"\") {\n                        testCaseWS.push(getWSTestCase(i, appType, wsdlInputs[i], keywordVal[i]));\n                    }\n                }\n                testCaseWS.push(getWSTestCase(testCaseWS.length, appType, \"\", \"executeRequest\"));\n                arg.testcasename = \"\";\n                arg.apptype = \"Webservice\";\n                arg.testcase = testCaseWS;\n                scrapeApi.initScrapeWS_ICE(arg)\n                .then(data => {\n                    setOverlay(\"\");\n                    ResetSession.end();\n                    if (data === \"Invalid Session\") {\n                        return RedirectPage(history);\n                    } else if (data === \"unavailableLocalServer\") {\n                        setShowPop({title: \"Web Service Screen\", content: \"No Intelligent Core Engine (ICE) connection found with the Avo Assure logged in username. Please run the ICE batch file once again and connect to Server.\"});\n                    } else if (data === \"scheduleModeOn\") {\n                        setShowPop({title: \"Web Service Screen\", content: \"Schedule mode is Enabled, Please uncheck 'Schedule' option in ICE Engine to proceed.\"});\n                    } else if (data === \"ExecutionOnlyAllowed\" || data[\"responseHeader\"] === \"ExecutionOnlyAllowed\"){\n                        setShowPop({title: \"Web Service Screen\", content: \"Execution Only Allowed\"});\n                    } else if (typeof data === \"object\") {\n                        setShowPop({title: \"Data Retrieve\", content: \"Web Service response received successfully\"});\n                        dispatch({type: actionTypes.SET_WSDATA, payload: {respHeader: data.responseHeader[0].split(\"##\").join(\"\\n\")}});\n                        let localRespBody = getProcessedBody(data.responseBody[0], 'scrape');\n                        dispatch({type: actionTypes.SET_WSDATA, payload: {respBody: localRespBody}});\n                    } else setShowPop({title: \"Debug Web Service\", content: \"Debug Terminated.\"});\n                })\n                .catch(error => {\n                    setOverlay(\"\");\n                    ResetSession.end();\n                    setShowPop({title: \"Web Service Screen\", content: \"Error while performing operation.\"});\n                    console.error(\"Fail to initScrapeWS_ICE. ERROR::::\", error);\n                });\n            }\n        } else {\n            let screenViewObject = {};\n            let blockMsg = 'Scraping in progress. Please Wait...';\n            if (compareFlag) {\n                blockMsg = 'Comparing objects in progress...';\n                setShowObjModal(false);\n            };\n\n            screenViewObject = getScrapeViewObject(appType, browserType, compareFlag, mainScrapedData, newScrapedData);\n            setShowAppPop(false);\n            setOverlay(blockMsg);\n\n            ResetSession.start();\n            scrapeApi.initScraping_ICE(screenViewObject)\n            .then(data=> {\n                let err = null;\n                setOverlay(\"\");\n                ResetSession.end();\n                if (data === \"Invalid Session\") return RedirectPage(history);\n                else if (data === \"Response Body exceeds max. Limit.\")\n                    err = { 'title': 'Scrape Screen', 'content': 'Scraped data exceeds max. Limit.' };\n                else if (data === 'scheduleModeOn' || data === \"unavailableLocalServer\") {\n                    let scrapedItemsLength = scrapeItems.length;\n\n                    if (scrapedItemsLength > 0) dispatch({ type: actionTypes.SET_DISABLEACTION, payload: true });\n                    else dispatch({ type: actionTypes.SET_DISABLEACTION, payload: false });\n\n                    setSaved(false);\n                    err = {\n                        'title': 'Scrape Screen', 'content':\n                            data === 'scheduleModeOn' ?\n                                \"Schedule mode is Enabled, Please uncheck 'Schedule' option in ICE Engine to proceed.\" :\n                                \"No Intelligent Core Engine (ICE) connection found with the Avo Assure logged in username. Please run the ICE batch file once again and connect to Server.\"\n                    };\n                } else if (data === \"fail\")\n                    err = { 'title': 'Scrape', 'content': 'Failed to scrape.' };\n                else if (data === \"Terminate\") {\n                    setOverlay(\"\");\n                    err = { 'title': 'Scrape Screen', 'content': 'Scrape Terminated' };\n                }\n                else if (data === \"wrongWindowName\")\n                    err = { 'title': 'Scrape', 'content': 'Window not found - Please provide valid window name.' };\n                else if (data === \"ExecutionOnlyAllowed\")\n                    err = { 'title': 'Scrape Screen', 'content': 'Execution Only Allowed' };\n\n                if (err) {\n                    setShowPop(err);\n                    return false;\n                }\n                //COMPARE & UPDATE SCRAPE OPERATION\n                if (data.action === \"compare\") {\n                    if (data.status === \"SUCCESS\") {\n                        let compareObj = generateCompareObject(data, scrapeItems.filter(object => object.xpath.substring(0, 4)===\"iris\"));\n                        dispatch({type: actionTypes.SET_COMPAREDATA, payload: data});\n                        dispatch({type: actionTypes.SET_COMPAREOBJ, payload: compareObj});\n                        dispatch({type: actionTypes.SET_COMPAREFLAG, payload: true});\n                    } else {\n                        if (data.status === \"EMPTY_OBJECT\")\n                            setShowPop({title: \"Compare Objects\", content: \"Failed to compare objects - Unmapped object(s) found\"});\n                        else\n                            setShowPop({title: \"Compare Objects\", content: \"Failed to compare objects\"});\n                    }\n                } else {\n                    let viewString = data;\n\n                    if (viewString.view.length !== 0){\n                        let lastObj = scrapeItems[scrapeItems.length-1];\n                        let lastVal = lastObj ? lastObj.val : 0;\n                        let lastIdx = newScrapedData.view ? newScrapedData.view.length : 0;\n\n                        let scrapeItemList = generateScrapeItemList(lastVal, lastIdx, viewString);\n\n                        let updatedNewScrapeData = {...newScrapedData};\n                        if (updatedNewScrapeData.view) {\n                            let viewArr = [...updatedNewScrapeData.view]\n                            viewArr.push(...viewString.view);\n                            updatedNewScrapeData = { ...viewString, view: viewArr};\n                        }\n                        else updatedNewScrapeData = viewString;\n\n                        setNewScrapedData(updatedNewScrapeData);\n                        updateScrapeItems(scrapeItemList);\n                        setScrapedURL(updatedNewScrapeData.scrapedurl);\n                        setMirror(viewString.mirror);\n                        \n                        if (viewString.view.length > 0) setSaved(false);\n                    }                        \n                }\n\n\n            })\n            .catch(error => {\n                setOverlay(\"\");\n                ResetSession.end();\n                setShowPop({'title': \"Scrape Screen\",'content': \"Error while performing Scrape.\"});\n                console.error(\"Fail to Load design_ICE. Cause:\", error);\n            });\n        }\n    }\n\n    const PopupDialog = () => (\n        showPop.type === \"modal\" ? \n        <ModalContainer \n            title={showPop.title}\n            modalClass=\"modal-sm\"\n            close={()=>setShowPop(\"\")}\n            content={showPop.content}\n            footer={showPop.footer}\n        /> :\n        <PopupMsg \n            title={showPop.title}\n            close={()=>setShowPop(\"\")}\n            content={showPop.content}\n            submitText=\"OK\"\n            submit={showPop.onClick ? showPop.onClick : ()=>setShowPop(\"\")}\n        />\n    );\n\n    const ConfirmPopup = () => (\n        <ModalContainer \n            title={showConfirmPop.title}\n            content={showConfirmPop.content}\n            close={()=>setShowConfirmPop(false)}\n            footer={\n                <>\n                <button onClick={showConfirmPop.onClick}>\n                    {showConfirmPop.continueText ? showConfirmPop.continueText : \"Yes\"}\n                </button>\n                <button onClick={()=>setShowConfirmPop(false)}>\n                    {showConfirmPop.rejectText ? showConfirmPop.rejectText : \"No\"}\n                </button>\n                </>\n            }\n        />\n    )\n\n    const updateScrapeItems = newList => {\n        setScrapeItems([...scrapeItems, ...newList])\n    }\n\n    return (\n        <>\n        { overlay && <ScreenOverlay content={overlay} />}\n        { showPop && <PopupDialog />}\n        { showConfirmPop && <ConfirmPopup /> }\n        { showObjModal === \"mapObject\" && <MapObjectModal setShow={setShowObjModal} setShowPop={setShowPop} scrapeItems={scrapeItems} current_task={current_task} user_id={user_id} role={role} fetchScrapeData={fetchScrapeData} history={history} /> }\n        { showObjModal === \"addObject\" && <AddObjectModal setShow={setShowObjModal} setShowPop={setShowPop} scrapeItems={scrapeItems} setScrapeItems={setScrapeItems} setSaved={setSaved}/> }\n        { showObjModal === \"compareObject\" && <CompareObjectModal setShow={setShowObjModal} startScrape={startScrape} /> }\n        { showObjModal === \"createObject\" && <CreateObjectModal setSaved={setSaved} setShow={setShowObjModal} scrapeItems={scrapeItems} updateScrapeItems={updateScrapeItems} setShowPop={setShowPop} newScrapedData={newScrapedData} setNewScrapedData={setNewScrapedData} />}\n        { showObjModal === \"addCert\" && <CertificateModal setShow={setShowObjModal} setShowPop={setShowPop} /> }\n        { showObjModal.operation === \"editObject\" && <EditObjectModal utils={showObjModal} setSaved={setSaved} scrapeItems={scrapeItems} setShow={setShowObjModal} setShowPop={setShowPop}/>}\n        { showObjModal.operation === \"editIrisObject\" && <EditIrisObject utils={showObjModal} setShow={setShowObjModal} setShowPop={setShowPop} taskDetails={{projectid: current_task.projectId, screenid: current_task.screenId, screenname: current_task.screenName,versionnumber: current_task.versionnumber, appType: current_task.appType}} />}\n        { showAppPop && <LaunchApplication setShow={setShowAppPop} appPop={showAppPop} />}\n        <div data-test=\"ssBody\" className=\"ss__body\">\n            <Header/>\n            <div data-test=\"ssMidSection\" className=\"ss__mid_section\">\n                <ScrapeContext.Provider value={{ startScrape, setScrapedURL, scrapedURL, isUnderReview, fetchScrapeData, setShowObjModal, saved, setShowAppPop, setSaved, newScrapedData, setNewScrapedData, setShowConfirmPop, mainScrapedData, scrapeItems, setScrapeItems, hideSubmit, setOverlay, setShowPop, updateScrapeItems }}>\n                    <ActionBarItems />\n                    { current_task.appType === \"Webservice\" \n                        ? <WebserviceScrape /> \n                        : compareFlag ? <CompareObjectList /> : <ScrapeObjectList />}\n                    <RefBarItems mirror={mirror}/>\n                </ScrapeContext.Provider>\n            </div>\n            <div data-test=\"ssFooter\"className='ss__footer'><Footer/></div>\n        </div>\n        </>\n    );\n}\n\nexport default ScrapeScreen;\n\n\nfunction getScrapeViewObject(appType, browserType, compareFlag, mainScrapedData, newScrapedData) {\n    let screenViewObject = {};\n    //For PDF\n    if (browserType === \"pdf\"){\n        screenViewObject.appType = browserType;\n    }\n    //For Desktop\n    else if (appType === \"Desktop\") {\n        screenViewObject.appType = appType;\n        screenViewObject.applicationPath = browserType.appPath;\n        screenViewObject.processID = browserType.processID;\n        screenViewObject.scrapeMethod = browserType.method;\n    }\n    //For SAP\n    else if (appType === \"SAP\") {\n        screenViewObject.appType = appType;\n        screenViewObject.applicationPath = browserType.appName;\n    }\n    //For Mobility\n    else if (appType === \"MobileApp\") {\n        if (browserType.appPath.toLowerCase().indexOf(\".apk\") >= 0) {\n            screenViewObject.appType = appType;\n            screenViewObject.apkPath = browserType.appPath;\n            screenViewObject.mobileSerial = browserType.sNum;\n        } \n        else if (browserType.appPath.toLowerCase().indexOf(\".ios\") >= 0) {\n            screenViewObject.appType = appType;\n            screenViewObject.deviceName = browserType.appPath2;\n            screenViewObject.versionNumber = browserType.verNum;\n            screenViewObject.bundleId = browserType.deviceName;\n            screenViewObject.ipAddress =  browserType.uuid;\n            screenViewObject.param = 'ios';\n        }\n        else {\n            screenViewObject.appType = appType;\n            screenViewObject.apkPath = browserType.appPath;\n            screenViewObject.mobileDeviceName = browserType.deviceName;\n            screenViewObject.mobileUDID = browserType.uuid;\n        }\n    }\n    //For Mobility Web\n    else if (appType === \"MobileWeb\") {\n        screenViewObject.appType = appType;\n        screenViewObject.mobileSerial = browserType.slNum;\n        screenViewObject.androidVersion = browserType.vernNum;\n        if (compareFlag) {\n            // screenViewObject.viewString = viewString;\n            screenViewObject.action = \"compare\";\n        }\n        screenViewObject.browserType = browserType;\n    }\n    // For OEBS\n    else if (appType === \"OEBS\") {\n        screenViewObject.appType = appType;\n        screenViewObject.applicationPath = browserType.winName;\n    }\n    //For Web\n    else {\n        if (compareFlag) {\n            let viewString = Object.keys(newScrapedData).length ? {...newScrapedData, view: [...mainScrapedData.view, ...newScrapedData.view]} : { ...mainScrapedData };\n            screenViewObject.viewString = {...viewString, view: viewString.view.filter(object => object.xpath.substring(0, 4)!==\"iris\")};\n            screenViewObject.action = \"compare\";\n        }\n        screenViewObject.browserType = browserType;\n    }\n\n    return screenViewObject;\n}\n\nfunction generateCompareObject(data, irisObjects){\n    let compareObj = {};\n    if (data.view[0].changedobject.length > 0) {\n        let localList = [];\n        for (let i = 0; i < data.view[0].changedobject.length; i++) {\n            let scrapeObject = data.view[0].changedobject[i];\n            \n            let scrapeItem = {\n                ObjId: scrapeObject._id,\n                objIdx: i,\n                val: data.changedobjectskeys[i],\n                tag: scrapeObject.tag,\n                title: scrapeObject.custname.replace(/[<>]/g, '').trim(),\n                custname: scrapeObject.custname,\n            }\n\n            localList.push(scrapeItem);\n        }\n        compareObj.changedObj = localList;\n    }\n    if (data.view[1].notchangedobject.length > 0) {\n        let localList = [];\n        for (let i = 0; i < data.view[1].notchangedobject.length; i++) {\n            let scrapeObject = data.view[1].notchangedobject[i];\n            \n            let scrapeItem = {\n                ObjId: scrapeObject._id,\n                objIdx: i,\n                val: i,\n                tag: scrapeObject.tag,\n                title: scrapeObject.custname.replace(/[<>]/g, '').trim(),\n                custname: scrapeObject.custname,\n            }\n\n            localList.push(scrapeItem);\n        }   \n        compareObj.notChangedObj = localList;\n    }\n    if (data.view[2].notfoundobject.length > 0 || irisObjects.length > 0) {\n        let localList = [];\n        if (data.view[2].notfoundobject.length > 0) {\n            for (let i = 0; i < data.view[2].notfoundobject.length; i++) {\n                let scrapeObject = data.view[2].notfoundobject[i];\n                \n                let scrapeItem = {\n                    ObjId: scrapeObject._id,\n                    objIdx: i,\n                    val: i,\n                    tag: scrapeObject.tag,\n                    title: scrapeObject.custname.replace(/[<>]/g, '').trim(),\n                    custname: scrapeObject.custname,\n                }\n    \n                localList.push(scrapeItem);\n            }\n        }\n        compareObj.notFoundObj = [...localList, ...irisObjects];\n    }\n    return compareObj;\n} \n\nfunction generateScrapeItemList(lastVal, lastIdx, viewString){\n    let localScrapeList = [];\n    for (let i = 0; i < viewString.view.length; i++) {\n                            \n        let scrapeObject = viewString.view[i];\n        let newTag = scrapeObject.tag;\n        \n        if (scrapeObject.cord) {\n            scrapeObject.hiddentag = \"No\";\n            newTag = `iris;${(scrapeObject.objectType || \"\").toLowerCase()}`;\n            scrapeObject.url = \"\";\n            // if (scrapeObject.xpath.split(';').length<2)\n            scrapeObject.xpath = `iris;${scrapeObject.custname};${scrapeObject.left};${scrapeObject.top};${(scrapeObject.width + scrapeObject.left)};${(scrapeObject.height + scrapeObject.top)};${(scrapeObject.objectType || \"\").toLowerCase()};${(scrapeObject.objectStatus || \"0\")};${scrapeObject.tag}`;\n        }\n\n        let scrapeItem = {  objId: scrapeObject._id,\n                            objIdx: lastIdx++,\n                            val: ++lastVal,\n                            tag: newTag,\n                            hide: false,\n                            title: scrapeObject.custname.replace(/\\r?\\n|\\r/g, \" \").replace(/\\s+/g, ' ').replace(/[\"]/g, '&quot;').replace(/[']/g, '&#39;').replace(/[<>]/g, '').trim(),\n                            custname: scrapeObject.custname,\n                            hiddentag: scrapeObject.hiddentag,\n                            checked: false,\n                            url: scrapeObject.url,\n                            xpath: scrapeObject.xpath,\n                        }\n\n        \n        if(scrapeObject.hasOwnProperty('editable') || scrapeObject.cord){\n            scrapeItem.editable = true;\n        } else {\n            let isCustom = scrapeObject.xpath === \"\";\n            scrapeItem.isCustom = isCustom;\n        };\n    \n        \n        localScrapeList.push(scrapeItem);\n    }\n\n    return localScrapeList;\n}\n\n\nfunction getProcessedBody (body, type) {\n    let processedBody = body;\n    if (body.indexOf(\"{\") === 0 || body.indexOf(\"[\") === 0) \n        processedBody = JSON.stringify(JSON.parse(body), null, '\\t');\n    else \n        processedBody = formatXml(body.replace(/>\\s+</g, '><'));\n\n    if (type === 'scrape')\n        processedBody = processedBody.replace(/\\&gt;/g, '>').replace(/\\&lt;/g, '<');\n    else if (type === 'fetch' && processedBody === '\\r\\n')\n        processedBody = '';\n\n    return processedBody;\n}\n\nfunction getFormattedValue (value, extraspace) {\n    if (extraspace) return value.replace(/[\\n\\r]/g, '##').replace(/\\s\\s+/g, ' ').replace(/\"/g, '\\\"');\n    return value.replace(/[\\n\\r]/g, '##').replace(/\"/g, '\\\"');\n}\n\nfunction validateWebserviceInputs (wsdlInputs) {\n    let error = false;\n    let auth = false;\n    let proceed = false;\n\n    if (!wsdlInputs[0]) error = [\"endPointURL\"];\n    else if (wsdlInputs[1]===\"0\") error = [\"method\"];\n    else if (wsdlInputs[6]){\n        auth = true;\n        proceed = true;\n    }\n    else {\n        if (wsdlInputs[1] === \"POST\") {\n            if (!wsdlInputs[3]) error = [\"reqHeader\"];\n            else if (!wsdlInputs[5]) error = [\"reqBody\"];\n            else proceed = true;\n        } else proceed = true;\n    }\n\n    return [error, auth, proceed];\n}\n\nfunction getWSTestCase (stepNo, appType, input, keyword) {\n    return {\n        \"stepNo\": stepNo + 1, \"appType\": appType, \"objectName\": \"\", \"inputVal\": [input],\n        \"keywordVal\": keyword, \"outputVal\": \"\", \"url\": \"\", \"custname\": \"\", \"remarks\": [\"\"],\n        \"addTestCaseDetails\": \"\", \"addTestCaseDetailsInfo\": \"\"\n    }\n}\n\nfunction formatXml(xml) {\n\tlet formatted = '';\n\tlet reg = /(>)(<)(\\/*)/g;\n\txml = xml.replace(reg, '$1\\r\\n$2$3');\n\tlet pad = 0;\n\txml.split('\\r\\n').forEach(function (node, index) {\n\t\tlet indent = 0;\n\t\tif (node.match(/.+<\\/\\w[^>]*>$/)) {\n\t\t\tindent = 0;\n\t\t} else if (node.match(/^<\\/\\w/)) {\n\t\t\tif (pad !== 0) {\n\t\t\t\tpad -= 1;\n\t\t\t}\n        } //eslint-disable-next-line\n        else if (node.match(/^<\\w[^>]*[^\\/]>.*$/)) {\n\t\t\tindent = 1;\n\t\t} else {\n\t\t\tindent = 0;\n\t\t}\n\t\tlet padding = '';\n\t\tfor (let i = 0; i < pad; i++) {\n\t\t\tpadding += '  ';\n\t\t}\n\t\tformatted += padding + node + '\\r\\n';\n\t\tpad += indent;\n\t});\n\treturn formatted;\n}","import React ,{useEffect} from 'react';\r\nimport Utilities from './containers/UtilityHome';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { SetProgressBar, RedirectPage } from '../global';\r\nexport var history;\r\n\r\n\r\n\r\nconst Utility = ()=>{\r\n    history =  useHistory()\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        if(window.localStorage['navigateScreen'] !== \"utility\"){\r\n            RedirectPage(history);\r\n        }\r\n        SetProgressBar(\"stop\", dispatch);\r\n    }, [dispatch]);\r\n    return (\r\n        <Utilities/>\r\n    );\r\n}\r\n\r\nexport default Utility;","import React, { Fragment, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport ReportHome from './container/ReportHome.js';\nimport { SetProgressBar, RedirectPage } from '../global';\nexport var history\n\n/*Component Report\n  use: direct to Report landing page\n*/\n\nconst Report = () => {\n  history =  useHistory()\n  const dispatch = useDispatch();\n  useEffect(()=>{\n    if(window.localStorage['navigateScreen'] !== \"reports\"){\n        RedirectPage(history);\n    }\n    SetProgressBar(\"stop\", dispatch);\n  }, [dispatch]);\n  return (\n    <ReportHome/>\n  );\n}\n\nexport default Report;","import React, { useEffect } from 'react';\r\nimport Integrations from './containers/IntegrationHome';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { SetProgressBar, RedirectPage } from '../global';\r\nexport var history\r\n\r\n\r\n\r\n\r\nconst Integration = ()=>{\r\n    history =  useHistory()\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        if(window.localStorage['navigateScreen'] !== \"integration\"){\r\n            RedirectPage(history);\r\n        }\r\n    SetProgressBar(\"stop\", dispatch);\r\n    }, [dispatch]);\r\n    return (\r\n        <Integrations/>\r\n    );\r\n}\r\n\r\nexport default Integration;","export const getObjNameList = (appType, data) => {\n    let obnames = [];\n\n    switch(appType){\n        case \"Web\":         obnames = [\"@Generic\", \"@Excel\", \"@Custom\", \"@Browser\", \"@BrowserPopUp\", \"@Object\", \"@Word\"];\n                            break;\n        case \"Webservice\":  obnames = [\"@Generic\", \"@Excel\", \"WebService List\", \"@Word\"];\n                            break;\n        case \"Mainframe\":   obnames = [\"@Generic\", \"@Excel\", \"Mainframe List\", \"@Word\"];\n                            break;\n        case \"Desktop\":     obnames = [\"@Generic\", \"@Excel\", \"@Window\", \"@Custom\", \"@Email\", \"@Word\"];\n                            break;\n        case \"OEBS\":        obnames = [\"@Generic\", \"@Excel\", \"@Oebs\", \"@Custom\", \"@Word\"];\n                            break;\n        case \"MobileApp\":   if (navigator.appVersion.indexOf(\"Mac\") === -1) obnames = [\"@Generic\", \"@Mobile\", \"@Android_Custom\", \"@Action\",\"@Excel\",\"@Word\"];\n                            else if (navigator.appVersion.indexOf(\"Mac\") !== -1) obnames = [\"@Generic\", \"@Mobile\", \"@CustomiOS\",\"@Excel\",\"@Word\"];\n                            break;\n        case \"MobileWeb\":   obnames = [\"@Generic\", \"@Browser\", \"@BrowserPopUp\", \"@Action\",\"@Excel\",\"@Word\",\"@Custom\"];\n                            break;\n        case \"SAP\":         obnames = [\"@Generic\", \"@Sap\", \"@Custom\", \"@Word\",\"@Excel\"];\n                            break;\n        case \"System\":      obnames = [\"@Generic\", \"@Excel\", \"@System\", \"@Word\"];\n                            break;\n        default:            break;\n    }\n\n    for (let i = 0; i < data.length; i++) obnames.push(data[i].custname);\n    \n\treturn obnames;\n}\n\nexport const getKeywordList = (objectName, keywordList, appType, scriptData) => {\n    let cord = null;\n    let objName = \" \";\n    let url = \" \";\n    let tcAppType = appType;\n    let keywords = null;\n    let selectedKeywordList = null;\n\n    let selectedObj = objectName; \n    if (selectedObj === \"\") {\n        selectedObj = \"@Generic\"\n    }\n    switch (selectedObj) {\n        case undefined: /* FALL THROUGH */\n        case \"@Generic\": \n            if (appType === \"MobileApp\") {\n                keywords = Object.keys(keywordList.defaultListMobility);\n                selectedKeywordList = \"defaultListMobility\";\n                tcAppType = \"Generic\";\n            }\n            else {\n                keywords = Object.keys(keywordList.defaultList);\n                selectedKeywordList = \"defaultList\";\n                tcAppType = \"Generic\";\n            }\n            break;\n        case \"@System\":\n            keywords = Object.keys(keywordList.system);\n            selectedKeywordList = \"getOsInfo\";\n            tcAppType = \"System\";\n            break;\n        case \"@Browser\":\n            keywords = Object.keys(keywordList.browser);\n            selectedKeywordList = \"browser\";\n            break;\n        case \"@BrowserPopUp\":\n            keywords = Object.keys(keywordList.browserPopUp);\n            selectedKeywordList = \"browserPopUp\";\n            break;\n        case \"@Custom\":\n            objName = \"@Custom\";\n            url = \"\";\n            if (appType === \"Desktop\") {\n                keywords = Object.keys(keywordList.customDp);\n\t\t\t\tselectedKeywordList = \"customDp\";\n            } else if (appType === \"OEBS\"){\n                keywords = Object.keys(keywordList.customOEBS);\n                selectedKeywordList = \"customOEBS\"; //need check\n                if (scriptData && scriptData !== \"undefined\") {\n                    for (let j = 0; j < scriptData.length; j++) {\n                        if (!(['@Browser', '@Oebs', '@Window', '@Generic', '@Custom'].includes(scriptData[j].custname))) {\n                            if (scriptData[j].url) {\n                                url = scriptData[j].url;\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n\t\t\t\tkeywords = Object.keys(keywordList.custom);\n\t\t\t\tselectedKeywordList = \"custom\";\n\t\t\t}\n            break;\n        case \"@Object\":\n            keywords = Object.keys(keywordList.object);\n            selectedKeywordList = \"object\";\n            objName = \"@Object\";\n            url = \"\";\n            if (appType === 'Web') {\n                if (scriptData && scriptData !== \"undefined\") {\n                    for (let j = 0; j < scriptData.length; j++) {\n                        if (!(['@Browser', '@Oebs', '@Window', '@Generic', '@Custom'].includes(scriptData[j].custname))) {\n                            if (scriptData[j].url) {\n                                url = scriptData[j].url;\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                keywords = Object.keys(keywordList.object);\n                selectedKeywordList = \"object\";\n            }\n            break;\n        case \"WebService List\":\n            keywords = Object.keys(keywordList.defaultListWS);\n            selectedKeywordList = \"defaultListWS\";\n            break;\n        case \"Mainframe List\":\n            keywords = Object.keys(keywordList.defaultListMF);\n            selectedKeywordList = \"defaultListMF\";\n            break;\n        case \"@Email\":\n            keywords = Object.keys(keywordList.defaultListDP);\n            selectedKeywordList = \"defaultListDP\";\n            break;\n        case \"@Window\":\n            keywords = Object.keys(keywordList.generic);\n            selectedKeywordList = \"generic\";\n            break;\n        case \"@Oebs\":\n            keywords = Object.keys(keywordList.generic);\n            selectedKeywordList = \"generic\";\n            break;\n        case \"@Mobile\":\n            if (navigator.appVersion.indexOf(\"Mac\") !== -1){\n                keywords = Object.keys(keywordList.genericIos);\n                selectedKeywordList = \"genericIos\";\n            }\n            else{\n                keywords = Object.keys(keywordList.generic);\n                selectedKeywordList = \"generic\";\n            }\n            break;\n        case \"@Action\":\n            keywords = Object.keys(keywordList.action);\n            selectedKeywordList = \"a\";\n            break;\n        case \"@Android_Custom\":\n            keywords = Object.keys(keywordList.Android_Custom);\n            selectedKeywordList = \"Android_Custom\";\n            break;\n        case \"@CustomiOS\":\n            keywords = Object.keys(keywordList.CustomiOS);\n            selectedKeywordList = \"CustomiOS\";\n            break;\n        case \"@MobileiOS\":\n            keywords = Object.keys(keywordList.genericiOS);\n            selectedKeywordList = \"genericiOS\";\n            break;\n        case \"@Sap\":\n            keywords = Object.keys(keywordList.generic);\n            selectedKeywordList = \"generic\";\n            break;\n        case \"@Excel\":\n            keywords = Object.keys(keywordList.excelList);\n            selectedKeywordList = \"excelList\";\n            tcAppType = \"Generic\";\n            break;\n        case \"@Word\":\n            keywords = Object.keys(keywordList.word);\n            selectedKeywordList = \"word\";\n            tcAppType = \"Generic\";\n            break;\n        default: \n            let scrappedDataCustnames = [];\n            selectedObj = replaceHtmlEntites(selectedObj.trim());\n            \n            for (let i = 0; i < scriptData.length; i++) {\n                let ob = scriptData[i];\n                let custname = ob.custname.trim();\n                scrappedDataCustnames.push(custname);\n                //eslint-disable-next-line\n                if ((custname.replace(/\\s/g, ' ') === (selectedObj.replace('/\\s/g', ' ')).replace('\\n', ' '))) {\n                    let isIos = scriptData[i].text;\n                    if (isIos === 'ios') objName = ob.xpath;\n                    else objName = ob.xpath.replace(/\\r?\\n|\\r/g, \" \").replace(/\\s+/g, ' ');\n\n                    url = ob.url;\n                    let obType = ob.tag;\n                    // let listType = ob.canselectmultiple;\n                    let objNameArray = objName.split(';');\n                    if (ob.cord) {\n                        selectedKeywordList = 'iris';\n                        cord = ob.cord;\n                        url = \"\";\n                        if (objNameArray.length === 9){\n                            switch (objNameArray[6]){\n                                case 'textbox': obType = 'iristextbox'; break;\n                                case 'radiobutton': obType = 'irisradiocheck'; break;\n                                case 'checkbox': obType = 'irisradiocheck'; break;\n                                case 'button': obType = 'irisbutton'; break;\n                                case 'table': obType = 'iristable'; break;\n                                case 'scroll': obType = 'irisscroll'; break;\n                                case 'dropdown':    /* FALL THROUGH */\n                                case 'label':       /* FALL THROUGH */\n                                case 'listbox':     /* FALL THROUGH */\n                                case 'tree':        /* FALL THROUGH */\n                                case 'image': obType = 'irisgeneric'; break;\n                                default: obType = \"iris\"; break;\n                            }\n\t\t\t\t\t\t} else {\n                            obType = \"iris\";\n                        }\n                    }\n\n                    if (!(['a', 'select', 'radiobutton', 'checkbox', 'input', 'list', 'tablecell', 'table', 'grid', 'img', 'button', 'iris', 'iristextbox', 'irisradiocheck', 'irisbutton', 'iristable', 'irisgeneric', 'irisscroll'].includes(obType)) && ['Web', 'MobileWeb'].includes(appType) && !ob.tag.startsWith('@PDF')) {\n                        keywords = Object.keys(keywordList.element);\n                        selectedKeywordList = \"element\";\n                        break;\n                    } else if (ob.tag.startsWith(\"@PDF\")) {\n                        keywords = Object.keys(keywordList.pdfList);\n                        selectedKeywordList = \"pdfList\";\n                        tcAppType = \"pdf\";\n                        break;\n                    } else if (obType === 'elementWS') {\n                        keywords = Object.keys(keywordList.elementWS);\n                        selectedKeywordList = \"elementWS\";\n                        break;\n                    } else if (appType === 'Desktop') {\n                        let listType = ob.canselectmultiple;\n                        switch (obType) {\n                            case 'button':      \n                                keywords = Object.keys(keywordList.button);\n                                selectedKeywordList = \"button\";\n                                break;\n                            case 'input':   /* FALL THROUGH */\n                            case 'edit':\n                                keywords = Object.keys(keywordList.text);\n                                selectedKeywordList = \"text\";\n                                break;\n                            case 'select':\n                                keywords = Object.keys(keywordList.select);\n                                selectedKeywordList = \"select\";\n                                break;\n                            case 'list':\n                                if (listType === 'true') {\n                                    keywords = Object.keys(keywordList.list);\n                                    selectedKeywordList = \"list\";\n                                } else {\n                                    keywords = Object.keys(keywordList.select);\n                                    selectedKeywordList = \"select\";\n                                }\n                                break;\n                            case 'list_item':\n                                keywords = Object.keys(keywordList.list);\n                                selectedKeywordList = \"list\";\n                                break;\n                            case 'tab':\n                                keywords = Object.keys(keywordList.tab);\n                                selectedKeywordList = \"tab\";\n                                break;\n                            case 'datepicker':\n                                keywords = Object.keys(keywordList.datepicker);\n                                selectedKeywordList = \"datepicker\";\n                                break;\n                            case 'checkbox':\n                                keywords = Object.keys(keywordList.checkbox);\n                                selectedKeywordList = \"checkbox\";\n                                break;\n                            case 'radiobutton':\n                                keywords = Object.keys(keywordList.radiobutton);\n                                selectedKeywordList = \"radiobutton\";\n                                break;\n                            case 'hyperlink': /* FALL THROUGH */\n                            case 'lbl': \n                                keywords = Object.keys(keywordList.link);\n                                selectedKeywordList = \"link\";\n                                break;\n                            case 'treeview': /* FALL THROUGH */\n                            case 'TreeView': /* FALL THROUGH */\n                            case 'tree':\n                                keywords = Object.keys(keywordList.tree);\n                                selectedKeywordList = \"tree\";\n                                break;\n                            case 'iris':\n                                keywords = Object.keys(keywordList.iris);\n                                selectedKeywordList = \"iris\";\n                                break;\n                            case 'iristextbox':\n                                keywords = Object.keys(keywordList.iristextbox);\n                                selectedKeywordList = \"iristextbox\";\n                                break;\n                            case 'irisradiocheck':\n                                keywords = Object.keys(keywordList.irisradiocheck);\n                                selectedKeywordList = \"irisradiocheck\";\n                                break;\n                            case 'iristable':\n                                keywords = Object.keys(keywordList.iristable);\n                                selectedKeywordList = \"iristable\";\n                                break;\n                            case 'irisbutton':\n                                keywords = Object.keys(keywordList.irisbutton);\n                                selectedKeywordList = \"irisbutton\";\n                                break;\n                            case 'irisgeneric':\n                                keywords = Object.keys(keywordList.irisgeneric);\n                                selectedKeywordList = \"irisgeneric\";\n                                break;\n                            case 'irisscroll':\n                                keywords = Object.keys(keywordList.irisscroll);\n                                selectedKeywordList = \"irisscroll\";\n                                break;\n                            case 'table':\n                                keywords = Object.keys(keywordList.table);\n                                selectedKeywordList = \"table\";\n                                break;\n                            default: \n                                keywords = Object.keys(keywordList.element);\n                                selectedKeywordList = \"element\";\n                                break;\n                        }\n                        break;\n                    } else if (appType === 'SAP') {\n                        let listType = '';\n                        switch (obType) {\n                            case 'push_button': /* FALL THROUGH */\n                            case 'GuiButton': /* FALL THROUGH */\n                            case 'button':\n                                keywords = Object.keys(keywordList.button);\n                                selectedKeywordList = \"button\";\n                                break;\n                            case 'GuiTextField': /* FALL THROUGH */\n                            case 'GuiCTextField': /* FALL THROUGH */\n                            case 'text': /* FALL THROUGH */\n                            case 'input':\n                                keywords = Object.keys(keywordList.text);\n                                selectedKeywordList = \"text\";\n                                break;\n                            case 'GuiLabel': /* FALL THROUGH */\n                            case 'lbl':\n                                keywords = Object.keys(keywordList.element);\n                                selectedKeywordList = \"element\";\n                                break;\n                            case 'GuiPasswordField':\n                                keywords = Object.keys(keywordList.text);\n                                selectedKeywordList = \"text\";\n                                break;\n                            case 'GuiTab':\n                                keywords = Object.keys(keywordList.tabs);\n                                selectedKeywordList = \"tabs\";\n                                break;\n                            case 'GuiScrollContainer': /* FALL THROUGH */\n                            case 'scroll':\n                                keywords = Object.keys(keywordList.scroll);\n                                selectedKeywordList = \"scroll\";\n                                break;\n                            case 'combo_box': /* FALL THROUGH */\n                            case 'GuiBox': /* FALL THROUGH */\n                            case 'GuiComboBox': /* FALL THROUGH */\n                            case 'select':\n                                keywords = Object.keys(keywordList.select);\n                                selectedKeywordList = \"select\";\n                                break;\n                            case 'list_item':\n                                keywords = Object.keys(keywordList.list);\n                                selectedKeywordList = \"list\";\n                                break;\n                            case 'GuiTableControl': /* FALL THROUGH */\n                            case 'table':\n                                keywords = Object.keys(keywordList.table);\n                                selectedKeywordList = \"table\";\n                                break;\n                            case 'GuiShell': /* FALL THROUGH */\n                            case 'shell':\n                                keywords = Object.keys(keywordList.shell);\n                                selectedKeywordList = \"shell\";\n                                break;\n                            case 'scontainer':\n                                keywords = Object.keys(keywordList.scontainer);\n                                selectedKeywordList = \"scontainer\";\n                                break;\n                            case 'tree':\n                                keywords = Object.keys(keywordList.tree);\n                                selectedKeywordList = \"tree\";\n                                break;\n                            case 'calendar':\n                                keywords = Object.keys(keywordList.calendar);\n                                selectedKeywordList = \"calendar\";\n                                break;\n                            case 'gridview':\n                                keywords = Object.keys(keywordList.gridview);\n                                selectedKeywordList = \"gridview\";\n                                break;\n                            case 'toolbar':\n                                keywords = Object.keys(keywordList.toolbar);\n                                selectedKeywordList = \"toolbar\";\n                                break;\n                            case 'list':\n                                if (listType === 'true') {\n                                    keywords = Object.keys(keywordList.list);\n                                    selectedKeywordList = \"list\";\n                                } else {\n                                    keywords = Object.keys(keywordList.select);\n                                    selectedKeywordList = \"select\";\n                                }\n                                break;\n                            case 'check_box': /* FALL THROUGH */\n                            case 'GuiCheckBox': /* FALL THROUGH */\n                            case 'checkbox':\n                                keywords = Object.keys(keywordList.checkbox);\n                                selectedKeywordList = \"checkbox\";\n                                break;\n                            case 'radio_button': /* FALL THROUGH */\n                            case 'GuiRadioButton': /* FALL THROUGH */\n                            case 'radiobutton':\n                                keywords = Object.keys(keywordList.radiobutton);\n                                selectedKeywordList = \"radiobutton\";\n                                break;\n                            case 'hyperlink': /* FALL THROUGH */\n                            case 'a':\n                                keywords = Object.keys(keywordList.link);\n                                selectedKeywordList = \"link\";\n                                break;\n                            case 'iris':\n                                keywords = Object.keys(keywordList.iris);\n                                selectedKeywordList = \"iris\";\n                                break;\n                            case 'iristextbox':\n                                keywords = Object.keys(keywordList.iristextbox);\n                                selectedKeywordList = \"iristextbox\";\n                                break;\n                            case 'irisradiocheck':\n                                keywords = Object.keys(keywordList.irisradiocheck);\n                                selectedKeywordList = \"irisradiocheck\";\n                                break;\n                            case 'iristable':\n                                keywords = Object.keys(keywordList.iristable);\n                                selectedKeywordList = \"iristable\";\n                                break;\n                            case 'irisbutton':\n                                keywords = Object.keys(keywordList.irisbutton);\n                                selectedKeywordList = \"irisbutton\";\n                                break;\n                            case 'irisgeneric':\n                                keywords = Object.keys(keywordList.irisgeneric);\n                                selectedKeywordList = \"irisgeneric\";\n                                break;\n                            case 'irisscroll':\n                                keywords = Object.keys(keywordList.irisscroll);\n                                selectedKeywordList = \"irisscroll\";\n                                break;\n                            default: \n                                keywords = Object.keys(keywordList.element);\n                                selectedKeywordList = \"element\";\n                                break;\n                        } \n                        break;\n                    } else if (appType === 'MobileApp') {\n                        if (obType.includes(\"RadioButton\")) {\n                            keywords = Object.keys(keywordList.radiobutton);\n                            selectedKeywordList = \"radiobutton\";\n                        } else if (obType.includes(\"TextField\") || obType.includes(\"SearchField\") || obType.includes(\"SecureTextField\")){\n                            keywords = Object.keys(keywordList.inputIos);\n                            selectedKeywordList = \"inputIos\";\n                        } else if (obType.includes(\"EditText\")) {\n                            keywords = Object.keys(keywordList.input);\n                            selectedKeywordList = \"input\";\n                        } else if (obType.includes(\"PickerWheel\")) {\n                            keywords = Object.keys(keywordList.pickerwheel);\n                            selectedKeywordList = \"pickerwheel\";\n                        } else if (obType.includes(\"Slider\")) {\n                            keywords = Object.keys(keywordList.slider);\n                            selectedKeywordList = \"slider\";\n                        } else if (obType.includes(\"Switch\")) {\n                            keywords = Object.keys(keywordList.togglebutton);\n                            selectedKeywordList = \"togglebutton\";\n                        } else if (obType.includes(\"ImageButton\") || obType.includes(\"Button\")) {\n                            keywords = Object.keys(keywordList.button);\n                            selectedKeywordList = \"button\";\n                        } else if (obType.includes(\"Spinner\")) {\n                            keywords = Object.keys(keywordList.spinners);\n                            selectedKeywordList = \"spinners\";\n                        } else if (obType.includes(\"CheckBox\")) {\n                            keywords = Object.keys(keywordList.checkbox);\n                            selectedKeywordList = \"checkbox\";\n                        } else if (obType.includes(\"TimePicker\")) {\n                            keywords = Object.keys(keywordList.timepicker);\n                            selectedKeywordList = \"timepicker\";\n                        } else if (obType.includes(\"DatePicker\")) {\n                            keywords = Object.keys(keywordList.datepicker);\n                            selectedKeywordList = \"datepicker\";\n                        } else if (obType.includes(\"Time\")) {\n                            keywords = Object.keys(keywordList.time);\n                            selectedKeywordList = \"time\";\n                        } else if (obType.includes(\"Date\")) {\n                            keywords = Object.keys(keywordList.date);\n                            selectedKeywordList = \"date\";\n                        } else if (obType.includes(\"NumberPicker\")) {\n                            keywords = Object.keys(keywordList.numberpicker);\n                            selectedKeywordList = \"numberpicker\";\n                        } else if (obType.includes(\"RangeSeekBar\")) {\n                            keywords = Object.keys(keywordList.rangeseekbar);\n                            selectedKeywordList = \"rangeseekbar\";\n                        } else if (obType.includes(\"SeekBar\")) {\n                            keywords = Object.keys(keywordList.seekbar);\n                            selectedKeywordList = \"seekbar\";\n                        } else if (obType.includes(\"ListView\")) {\n                            keywords = Object.keys(keywordList.listview);\n                            selectedKeywordList = \"listview\";\n                        } else if (obType.includes(\"XCUIElementTypeTable\")) {\n                            keywords = Object.keys(keywordList.table);\n                            selectedKeywordList = \"table\";\n                        } else if (obType.includes('iris')) {\n                            keywords = Object.keys(keywordList.iris);\n                            selectedKeywordList = \"iris\";\n                        }\n                        else {\n                            keywords = Object.keys(keywordList.element);\n                            selectedKeywordList = \"element\";\n                        }\n                        break;\n                    } else if (appType === 'OEBS') {\n                        switch (obType) {\n                            case 'push button':\n                            case 'toggle button':\n                                keywords = Object.keys(keywordList.button);\n                                selectedKeywordList = \"button\";\n                                break;\n                            case 'edit':\n                            case 'Edit Box':\n                            case 'text':\n                            case 'password text':\n                                keywords = Object.keys(keywordList.text);\n                                selectedKeywordList = \"text\";\n                                break;\n                            case 'combo box':\n                                keywords = Object.keys(keywordList.select);\n                                selectedKeywordList = \"select\";\n                                break;\n                            case 'list item':\n                            case 'list':\n                                keywords = Object.keys(keywordList.list);\n                                selectedKeywordList = \"list\";\n                                break;\n                            case 'hyperlink':\n                            case 'Static':\n                                keywords = Object.keys(keywordList.link);\n                                selectedKeywordList = \"link\";\n                                break;\n                            case 'check box':\n                                keywords = Object.keys(keywordList.checkbox);\n                                selectedKeywordList = \"checkbox\";\n                                break;\n                            case 'radio button':\n                                keywords = Object.keys(keywordList.radiobutton);\n                                selectedKeywordList = \"radiobutton\";\n                                break;\n                            case 'table': \n                                keywords = Object.keys(keywordList.table);\n                                selectedKeywordList = \"table\";\n                                break;\n                            case 'scroll bar':\n                                keywords = Object.keys(keywordList.scrollbar);\n                                selectedKeywordList = \"scrollbar\";\n                                break;\n                            case 'frame':\n                            case 'internal frame':\n                                keywords = Object.keys(keywordList.internalframe);\n                                selectedKeywordList = \"internalframe\";\n                                break;\n                            case 'iris':\n                                keywords = Object.keys(keywordList.iris);\n                                selectedKeywordList = \"iris\";\n                                break;\n                            case 'iristextbox':\n                                keywords = Object.keys(keywordList.iristextbox);\n                                selectedKeywordList = \"iristextbox\";\n                                break;\n                            case 'irisradiocheck':\n                                keywords = Object.keys(keywordList.irisradiocheck);\n                                selectedKeywordList = \"irisradiocheck\";\n                                break;\n                            case 'iristable':\n                                keywords = Object.keys(keywordList.iristable);\n                                selectedKeywordList = \"iristable\";\n                                break;\n                            case 'irisbutton':\n                                keywords = Object.keys(keywordList.irisbutton);\n                                selectedKeywordList = \"irisbutton\";\n                                break;\n                            case 'irisgeneric':\n                                keywords = Object.keys(keywordList.irisgeneric);\n                                selectedKeywordList = \"irisgeneric\";\n                                break;\n                            case 'irisscroll':\n                                keywords = Object.keys(keywordList.irisscroll);\n                                selectedKeywordList = \"irisscroll\";\n                                break;\n                            default:\n                                keywords = Object.keys(keywordList.element);\n                                selectedKeywordList = \"element\";\n                                break;\n                        }\n                        break;\n                    } else {\n                        keywords = Object.keys(keywordList[obType]);\n                        selectedKeywordList = obType;\n                        break;\n                    }\n                }\n            }\n            break;\n    }\n    const data = { objectName: objName, keywords: keywords, url: url, cord: cord, obType: selectedKeywordList, appType: tcAppType }\n    return data;\n}\n\nconst replaceHtmlEntites = selectedText => {\n\tvar translate_re = /&(nbsp|amp|quot|lt|gt);/g;\n\tvar translate = {\"nbsp\": \" \",\"amp\" : \"&\",\"quot\": \"\\\"\",\"lt\"  : \"<\",\"gt\"  : \">\"};\n\treturn ( selectedText.replace(translate_re, function(match, entity) {\n\t\treturn translate[entity];\n\t}) );\n}","import React, { useState, useEffect, useRef } from 'react';\nimport \"../styles/TableRow.scss\";\n\n/*\n    Component: TableRow\n    Uses: Renders Each Row of the Table\n    Props: \n        idx -> index of row\n        objList -> list of object names\n        testCase -> each testcase object from testcases array\n        edit -> bool flag for edit mode / if true editting mode is ON\n        getKeywords -> method to get a list of keywords\n        getRowPlaceholders -> method to get input/output placeholders\n        checkedRows -> array of indexes of checked rows\n        updateChecklist -> method to call when checking/unchecking row to update overall array and other states\n        focusedRow -> holds index of row which is currently highlighted, contains array when multiple is require to highlight\n        setFocusedRow -> setState for focusedRow\n        setRowData -> method to update overall testCase data\n        showRemarkDialog -> setState to display remark dialog\n        showDetailDialog -> setState to display details dialog\n        rowChange -> flag to check if any row is changed\n*/\n\nconst TableRow = (props) => {\n\n    const rowRef = useRef(null);\n    const [checked, setChecked] = useState(false);\n    const [objName, setObjName] = useState(null);\n    const [objType, setObjType] = useState(null);\n    const [keyword, setKeyword] = useState(null);\n    const [input, setInput] = useState('');\n    const [output, setOutput] = useState('');\n    const [inputPlaceholder, setInputPlaceholder] = useState('');\n    const [outputPlaceholder, setOutputPlaceholder] = useState('');\n    const [keywordList, setKeywordList] = useState(null);\n    const [focused, setFocused] = useState(false);\n    const [highlight, setHighlight] = useState(false);\n    const [commented, setCommented] = useState(false);\n    const [remarks, setRemarks] = useState([]);\n    const [TCDetails, setTCDetails] = useState(\"\");\n    const [escapeFlag, setEscapeFlag] = useState(true);\n    const [tcAppType, setTcAppType] = useState(\"\");\n    const [disableStep, setDisableStep] = useState(false);\n    let objList = props.objList;\n    \n    \n    useEffect(()=>{\n        if (!focused){\n            setObjName(props.testCase.custname);\n            setObjType(null);\n            setKeyword(props.testCase.keywordVal);\n            setInput(props.testCase.inputVal[0]);\n            setOutput(props.testCase.outputVal);\n            setInputPlaceholder(null);\n            setOutputPlaceholder(null);\n            setKeywordList(null);\n            setTcAppType(props.testCase.appType);\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            objList = props.objList;\n            setRemarks(props.testCase.remarks.split(\";\").filter(remark => remark.trim()!==\"\"));\n            setCommented(props.testCase.outputVal.slice(-2) === \"##\");\n            setTCDetails(props.testCase.addTestCaseDetailsInfo === \"\" ? \"\" : JSON.parse(props.testCase.addTestCaseDetailsInfo));\n        }\n    }, [props.rowChange, props.testCase]);\n\n    useEffect(()=>{\n        setChecked(props.checkedRows.includes(props.idx));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.checkedRows]);\n\n    useEffect(()=>{\n        if (props.edit){\n            if (props.focusedRow === props.idx){\n                setFocused(true);\n                setEscapeFlag(false);\n                rowRef.current.scrollIntoView({block: 'nearest', behavior: 'smooth'});\n                let caseData = null;\n                let placeholders = null;\n\n                if (!objName || (objName !== \"OBJECT_DELETED\" && objList.includes(objName))){\n                    let obj = !objName ? objList[0] : objName;\n                    caseData = props.getKeywords(obj);\n                    let key = (!caseData.keywords.includes(keyword) || !objName) ? caseData.keywords[0] : keyword;\n                    placeholders = props.getRowPlaceholders(caseData.obType, key);\n\n                    setKeywordList(caseData.keywords);\n                    setObjType(caseData.obType);\n                    setOutputPlaceholder(placeholders.outputval);\n                    setInputPlaceholder(placeholders.inputval);\n                    setTcAppType(caseData.appType);\n                    setDisableStep(false);\n                } else setDisableStep(true);\n            }\n            else{\n                setFocused(false);\n                if (escapeFlag){\n                    setObjName(props.testCase.custname);\n                    setKeyword(props.testCase.keywordVal);\n                    setInput(props.testCase.inputVal[0]);\n                    setOutput(props.testCase.outputVal);\n                }\n                else{\n                    props.setRowData({\n                        rowIdx: props.idx,\n                        operation: \"row\",\n                        objName: !objName ? objList[0] : objName,\n                        keyword: !keyword ? keywordList[0] : keyword,\n                        inputVal: input,\n                        outputVal: output,\n                        appType: tcAppType\n                    });\n                    setEscapeFlag(true);\n                }\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.focusedRow, props.edit]);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(()=>{\n        if (props.focusedRow !== props.idx) {\n            setFocused(false);\n            setHighlight(false);\n        }\n        if (props.focusedRow !== null && typeof props.focusedRow === \"object\" && props.focusedRow.includes(props.idx)) {\n            rowRef.current.scrollIntoView({block: 'nearest', behavior: 'smooth'});\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    });\n\n    const onBoxCheck = event => {\n        props.updateChecklist(props.idx,\"check\");\n        if (event.target.checked) setChecked(true);\n        else setChecked(false);\n    }\n\n    const onRowClick = (event, msg) => {\n        props.updateChecklist(props.idx, \"row\", msg);\n        if(!props.edit) setHighlight(true);\n        setChecked(true);\n    }\n\n    const onObjSelect = event => {\n        const caseData = props.getKeywords(event.target.value)\n        const placeholders = props.getRowPlaceholders(caseData.obType, caseData.keywords[0]);\n        setInput(\"\");\n        setOutput(\"\");\n        setKeywordList(caseData.keywords);\n        setObjType(caseData.obType);\n        setOutputPlaceholder(placeholders.outputval);\n        setInputPlaceholder(placeholders.inputval);\n        setObjName(event.target.value)\n        setKeyword(caseData.keywords[0]);\n        setTcAppType(caseData.appType);\n        setDisableStep(false);\n    };\n\n    const onKeySelect = event => {\n        const placeholders = props.getRowPlaceholders(objType, event.target.value);\n        setInput(\"\");\n        setOutput(\"\");\n        setOutputPlaceholder(placeholders.outputval);\n        setInputPlaceholder(placeholders.inputval);\n        setKeyword(event.target.value);\n    };\n\n    const submitChanges = event => {\n        if (event.keyCode === 13){\n            props.setRowData({rowIdx: props.idx, operation: \"row\", objName: objName, keyword: keyword, inputVal: input, outputVal: output, appType: tcAppType});\n            props.setFocusedRow(null);\n        }\n        else if (event.keyCode === 27) {\n            setEscapeFlag(true);\n            props.setFocusedRow(null);\n        }\n    }\n\n    const onInputChange = event => setInput(event.target.value)\n\n    const onOutputChange = event => setOutput(event.target.value)\n    \n    return (\n        <>\n        <div ref={rowRef} className={\"d__table_row\" + (props.idx % 2 === 1 ? \" d__odd_row\" : \"\") + (commented ? \" commented_row\" : \"\") + (highlight || (props.focusedRow!== null  && typeof props.focusedRow === \"object\" && props.focusedRow.includes(props.idx)) ? \" highlight-step\" : \"\") + (disableStep ? \" d__row_disable\": \"\")}>\n                <span className=\"step_col\">{props.idx + 1}</span>\n                <span className=\"sel_col\"><input className=\"sel_obj\" type=\"checkbox\" checked={checked} onChange={onBoxCheck}/></span>\n            <div className=\"design__tc_row\" onClick={!focused ? onRowClick : undefined}>\n                <span className=\"objname_col\">\n                    { focused ? \n                    <select className=\"col_select\" value={objName} onChange={onObjSelect} onKeyDown={submitChanges} title={objName} autoFocus>\n                        { objName === \"OBJECT_DELETED\" && <option disabled>{objName}</option> }\n                        { objList.map((object, i)=> <option key={i} value={object}>{object.length >= 50 ? object.substr(0, 44)+\"...\" : object}</option>) }\n                    </select> :\n                    <div className=\"d__row_text\" title={objName} >{objName}</div>\n                    }\n                </span>\n                <span className=\"keyword_col\" >\n                    { focused ? \n                    <select className=\"col_select\" value={keyword} onChange={onKeySelect} onKeyDown={submitChanges} title={keyword} disabled={disableStep}>\n                        { objName === \"OBJECT_DELETED\" && <option>{keyword}</option> }\n                        { keywordList && keywordList.map((keyword, i) => <option key={i} value={keyword}>{keyword}</option>) }\n                    </select> :\n                    <div className=\"d__row_text\" title={keyword} >{keyword}</div> }\n                </span>\n                <span className=\"input_col\" >\n                    { focused ? ['getBody', 'setHeader', 'setWholeBody', 'setHeaderTemplate'].includes(keyword) ? \n                                    <textarea className=\"col_inp col_inp_area\" value={input} onChange={onInputChange} title={inputPlaceholder} disabled={disableStep}/> : \n                                    <input className=\"col_inp\" value={input} placeholder={inputPlaceholder} onChange={onInputChange} onKeyDown={submitChanges} title={inputPlaceholder} disabled={disableStep}/> :\n                        <div className=\"d__row_text\" title={input}>{input}</div> }\n                </span>\n                <span className=\"output_col\" >\n                    { focused ? <input className=\"col_inp\" value={output} placeholder={outputPlaceholder} onChange={onOutputChange} onKeyDown={submitChanges} title={outputPlaceholder} disabled={disableStep}/> :\n                    <div className=\"d__row_text\" title={output}>{output}</div> }\n                </span>\n            </div>\n            <span className={\"remark_col\"+(disableStep? \" d__disabled_step\":\"\")}  onClick={(e)=>onRowClick(e, \"noFocus\")}><img src={\"static/imgs/ic-remarks-\" + (remarks.length > 0 ? \"active.png\" : \"inactive.png\")} alt=\"remarks\" onClick={()=>{props.showRemarkDialog(props.idx); setFocused(false)}} /></span>\n            <span className={\"details_col\"+(disableStep? \" d__disabled_step\":\"\")} onClick={(e)=>onRowClick(e, \"noFocus\")}><img src={\"static/imgs/ic-details-\" + ( TCDetails !== \"\" ? (TCDetails.testcaseDetails || TCDetails.actualResult_pass || TCDetails.actualResult_fail ) ? \"active.png\" : \"inactive.png\" : \"inactive.png\")} alt=\"details\"  onClick={()=>{props.showDetailDialog(props.idx); setFocused(false)}} /></span>\n        </div>\n        </>\n    );\n};\n\n\n\n\n\nexport default TableRow;","import React, { useState } from 'react';\nimport { ModalContainer } from \"../../global\";\nimport \"../styles/DetailsDialog.scss\";\n\n/*\n    Component: Details Dialog\n    Uses: Renders details dialog for each row's actual/pass/fail inputs\n    Props: \n        setShow -> show/hide dialog setState\n        onSetRowData -> Method for on saving the changes\n        TCDetails -> testcase's testcasedetails field\n        idx -> index of row\n*/\n\nconst DetailsDialog = ({setShow, onSetRowData, TCDetails, idx}) => {\n\n    const [res, setRes] = useState(TCDetails.testcaseDetails || \"\" );\n    const [pass, setPass] = useState(TCDetails.actualResult_pass || \"\");\n    const [fail, setFail] = useState(TCDetails.actualResult_fail || \"\");\n\n    const onResChange = event => setRes(event.target.value);\n    const onPassChange = event => setPass(event.target.value);\n    const onFailChange = event => setFail(event.target.value);\n\n    const onReset = () => {\n        setRes(\"\");\n        setPass(\"\");\n        setFail(\"\");\n    }\n\n    const onSave = () => {\n        let TCDetail = \"\";\n        if (res.trim() || pass.trim() || fail.trim()) {\n            TCDetail = { testcaseDetails: \"\" || res.trim(),\n                         actualResult_pass: \"\" || pass.trim(), \n                         actualResult_fail: \"\" || fail.trim()\n                        }    \n        }\n        // onSaveDetails(idx, TCDetail === \"\" ? \"\" : JSON.stringify(TCDetail));\n        onSetRowData({rowIdx: idx, operation: \"details\", details: TCDetail === \"\" ? \"\" : JSON.stringify(TCDetail)});\n        setShow(false);\n    }\n\n    return (\n        <div className=\"d__details_container\" data-test=\"d__ddc\">\n            <ModalContainer \n                title=\"Add Test Step Details\"\n                content={\n                    <div className=\"d__detail_input_group\">\n                    <input data-test=\"d__ddinp\" className=\"d__detail_input\" placeholder=\"Enter Expected Result\" value={res} onChange={onResChange}/>\n                    <input data-test=\"d__ddinp\" className=\"d__detail_input\" placeholder=\"Enter Actual Result for Pass Status\" value={pass} onChange={onPassChange}/>\n                    <input data-test=\"d__ddinp\" className=\"d__detail_input\" placeholder=\"Enter Actual Result for Fail Status\" value={fail} onChange={onFailChange}/>\n                    </div>\n                }\n                footer={\n                    <>\n                    <button data-test=\"d__ddbtn\" onClick={onReset}>Reset</button>\n                    <button data-test=\"d__ddbtn\" onClick={onSave}>Save</button>\n                    </>\n                }\n                close={\n                    ()=>setShow(false)\n                }\n\n            />\n        </div>\n    );\n}\n\nexport default DetailsDialog;\n","import React, { useState } from 'react';\nimport { ModalContainer } from \"../../global\";\nimport \"../styles/RemarkDialog.scss\";\n\n/*\n    Component: Remark Dialog\n    Uses: Renders Remark dialog box to input remark for specific row\n    Props: \n        setShow -> show/hide dialog setState\n        onSetRowData -> Method for on saving the changes\n        remarks -> testcase's remark field\n        idx -> index of row\n        firstname -> userinfo's field / user's first name\n        lastname -> userinfo's field / user's last name\n*/\n\nconst RemarkDialog = ({setShow, onSetRowData, remarks, idx, firstname, lastname}) => {\n    \n    const [remarkError, setRemarkError] = useState(false);\n    const [remark, setRemark] = useState(\"\");\n\n    const onRemarkChange = event => {\n        if (remarkError) setRemarkError(false);\n        let value = event.target.value;\n        value = value.replace(\";\", \"\")\n        setRemark(value);\n    }\n\n    const submitRemark = () => {\n        let remarkVal = remark.trim()\n        if (!remarkVal) {\n            setRemark(\"\");\n            setRemarkError(true)\n        }\n        else{\n            let date = new Date();\n\t\t\tlet DATE = date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n\t\t\tlet TIME = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n            remarkVal = `${remarkVal} (From: ${firstname} ${lastname} On: ${DATE} ${TIME})`;\n            let Arr = []\n            if (remarks !== \"\") Arr = remarks.split(\";\")\n            let remarkArr = [...Arr];\n            remarkArr.push(remarkVal);\n            let remarkString = remarkArr.join(\";\")\n            setRemark(\"\");\n            // saveRemarks(parseInt(showRemarkDlg), remarkString)\n            onSetRowData({rowIdx: parseInt(idx), operation: \"remarks\", remarks: remarkString})\n            setShow(false);\n        }\n    }\n\n    return ( <div className=\"remark_container\" data-test=\"d__remcontainer\">\n        <ModalContainer\n            title=\"Remarks\"\n            content={\n                <div className=\"d__add_remark_content\">\n                    { \n                        remarks.split(';').filter(remark => remark.trim()!==\"\").length > 0 &&\n                        <>\n                        <div className=\"remark_history_lbl\" data-test=\"d__remhistorylbl\">History</div>\n                        <div className=\"remark_history_content\" data-test=\"d__remhistory\">\n                            { remarks.split(';').filter(remark => remark.trim()!==\"\").map((remark, idx)=><li data-test=\"d__remhistoryitem\" key={idx}>{remark}</li>) }\n                        </div>\n                        </>\n                    }\n                    <div className=\"d__add_remark_lbl\" data-test=\"d__remaddlbl\">Add Remarks</div>\n                    <textarea data-test=\"d__remtextarea\" className={\"remark_input\" + (remarkError ? \" remark_error\" : \"\")} value={remark} onChange={onRemarkChange} />\n                </div>\n            }\n            footer={\n                <button onClick={submitRemark} data-test=\"d__rembtn\">Submit</button>\n            }\n            close={()=>{\n                setRemark(\"\");\n                setRemarkError(false);\n                setShow(false)\n            }}\n        />\n        </div>\n    );\n};\n\n\nexport default RemarkDialog;\n\n\n","import React, { useState } from 'react';\nimport { ModalContainer } from '../../global';\nimport \"../styles/PasteStepDialog.scss\";\n\n/*\n    Component: Paste Steps Dialog\n    Uses: Renders small dialog box to input test step number to paste after\n    Props: \n        setShow -> show/hide dialog setState\n        upperLimit -> maximum size of testcases / testcase array length\n        pasteSteps -> method to call when pressing paste\n*/\n\nconst PasteStepDialog = (props) => {\n\n    const [stepNum, setStepNum] = useState(\"\");\n    const [pasteError, showPasteError] = useState(\"\");\n    const pasteErrors = { 'empty': '*Textbox cannot be empty',\n                        'invalidChar': '*Textbox cannot contain characters other than numbers seperated by single semi colon',\n                        'invalidStep': '*Please enter a valid step no'\n                    }\n\n    const pasteCopiedSteps = () => {\n        showPasteError(\"\");\n        if (stepNum){\n            if (/^[0-9;]+$/.test(stepNum)){\n                let pass = true\n                let stepList = stepNum.split(\";\");\n                for(let step of stepList){\n                    let stepInt = parseInt(step)\n                    if (isNaN(stepInt)) {\n                        showPasteError('invalidChar');\n                        pass = false\n                        break;\n                    }\n                    if(stepInt > props.upperLimit || stepInt < 0) {\n                        showPasteError('invalidStep');\n                        pass = false\n                        break;\n                    }\n                }\n                if (pass) {\n                    props.pasteSteps(stepList);\n                    setStepNum(\"\");\n                }\n            }\n            else showPasteError('invalidChar')\n        }\n        else showPasteError('empty');\n    }\n\n    const PSHandler = event => {\n        let value = event.target.value\n        value = value.replace(/[^0-9;]/g, \"\")\n        setStepNum(value)\n    };\n    \n    return (<ModalContainer \n        data-test=\"d__psd\"\n        modalClass=\"modal-sm\"\n        title=\"Paste Test Step\"\n        content={\n        <div className=\"ps_dialog\"> \n            <div className=\"ps_lbl\" data-test=\"d__pslbl\">Paste after step no:</div>\n            <div className=\"ps_hint\" data-test=\"d__pslbl\">For multiple paste. Eg: 5;10;20</div>\n            <input data-test=\"d__psinp\" className=\"ps_input\" placeholder=\"Enter a value\" onChange={PSHandler} value={stepNum}/>\n            { pasteError && \n                <div data-test=\"d__pserrmsg\" className=\"ps_error\">{pasteErrors[pasteError]}</div>\n            }\n        </div>}\n        close={()=>{\n            setStepNum(\"\");\n            showPasteError(\"\");\n            props.setShow(false)\n        }}\n        footer={ <button onClick={pasteCopiedSteps} data-test=\"d__psbtn\">Submit</button> }\n    />\n)\n}\n\nexport default PasteStepDialog;","import React, { useState } from 'react';\nimport { ModalContainer } from '../../global';\nimport \"../styles/SelectMultipleDialog.scss\";\n\n/*\n    Component: Select Steps Dialog\n    Uses: Renders small dialog box to select testcases\n    Props: \n        setShow -> show/hide dialog setState\n        upperLimit -> maximum size of testcases / testcase array length\n        selectSteps -> method to call when pressing select\n*/\n\nconst SelectMultipleDialog = props => {\n\n    const [stepNum, setStepNum] = useState(\"\");\n    const [selectError, showSelectError] = useState(\"\");\n    const selectErrors = { 'empty': '*Textbox cannot be empty',\n                        'invalidFormat': 'Invalid format is given',\n                        'invalidStep': '*Please enter a valid step no'\n                    }\n\n    const SMHandler = event =>{\n        let value = event.target.value\n        //eslint-disable-next-line\n        value = value.replace(/[^0-9;\\-]/g, \"\")\n        setStepNum(value)\n    }\n\n    const selectSteps = () =>{\n        showSelectError(\"\");\n        if (stepNum){\n            if (/^(?:\\d+(?:-\\d+)?(;(?!$)|$))+$/.test(stepNum)){\n                let pass = true\n                let steps = new Set();\n                let stepBlockList = stepNum.split(\";\");\n\n                for(let stepBlock of stepBlockList) {\n                    let stepsArray = stepBlock.split(\"-\");\n                    if (stepsArray.length === 1){\n                        let stepInt = parseInt(stepsArray[0])\n                        if (isNaN(stepInt) || stepInt > props.upperLimit || stepInt < 1) {\n                            if (isNaN(stepInt)) showSelectError('invalidFormat');\n                            else showSelectError('invalidStep');\n                            pass = false\n                            break;\n                        }\n                        else steps.add(stepInt-1);\n                    }\n                    else if(stepsArray.length === 2){\n                        let lowStep = parseInt(stepsArray[0])\n                        let highStep = parseInt(stepsArray[1])\n                        if (isNaN(lowStep) || isNaN(highStep) || lowStep > props.upperLimit || lowStep < 1 || highStep > props.upperLimit || highStep < 1 || lowStep === highStep || lowStep>highStep){\n                            if (isNaN(lowStep) || isNaN(highStep)) showSelectError('invalidFormat');\n                            if (lowStep === highStep) showSelectError('invalidFormat');\n                            else showSelectError('invalidStep');\n                            pass = false\n                            break;\n                        }\n                        else for (let i=lowStep; i<=highStep; i++) steps.add(i-1);\n                    }\n                    else{\n                        showSelectError('invalidStep');\n                    }\n                }\n                if (pass) {\n                    props.selectSteps(Array.from(steps));\n                    setStepNum(\"\");\n                }\n            }\n            else showSelectError('invalidFormat')\n        }\n        else showSelectError('empty');\n    }\n\n    return (<ModalContainer \n        title=\"Select Test Step(s)\"\n        modalClass=\"modal-sm\"\n        content={\n        <div className=\"sm_dialog\"> \n            <div className=\"sm_lbl\" data-test=\"d__smlbl\">Select step(s) no:</div>\n            <div className=\"sm_hint\" data-test=\"d__smlbl\">For multiple select. Eg: 5;10-15;20;22</div>\n            <input className=\"sm_input\" data-test=\"d__sminp\" placeholder=\"Enter a value\" onChange={SMHandler} value={stepNum}/>\n            { selectError && \n                <div className=\"sm_error\" data-test=\"d__smerror\">{selectErrors[selectError]}</div>            }\n        </div>}\n        close={()=>{\n            setStepNum(\"\");\n            showSelectError(\"\");\n            props.setShow(false)\n        }}\n        footer={\n            <button onClick={selectSteps} data-test=\"d__smactionbtn\">Submit</button>\n        }\n    />\n)\n}\n\nexport default SelectMultipleDialog;\n","import axios from 'axios';\nimport {url} from '../../App';\n\n/*Component DesignContent\n  api returns {\"mirror\":\"\",\"name\":\"\",\"reuse\":bool,\"scrapedurl\":\"\",\"view\":[{\"_id\":\"\",\"cord\":\"\",\"custname\":\"\",\"height\":,\"hiddentag\":\"\",\"left\":,\"objectType\":\"\",\"parent\":[\"\"],\"tag\":\"\",\"top\":,\"url\":\"\",\"width\":,\"xpath\":\"\"}/{\"_id\":\"\",\"custname\":\"\",\"height\":,\"hiddentag\":\"\",\"left\":,\"parent\":[\"\"],\"tag\":\"button\",\"top\":,\"url\":\"\",\"width\":,\"xpath\":\"\"}]}\n*/\nexport const getScrapeDataScreenLevel_ICE = (type, screenId, projectId, testCaseId) =>\t{\n    return new Promise((resolve, reject)=>{\n        axios(url+\"/getScrapeDataScreenLevel_ICE\", {\n            method: 'POST',\n            headers : {\n                'Content-type' : 'application/json'\n            },\n            data : {\n                param: 'getScrapeDataScreenLevel_ICE',\n                screenId: screenId,\n                projectId: projectId,\n                type: type,\n                testCaseId: testCaseId\n            },\n            credentials : 'include',\n        }).then(res=>{\n            if (res.status === 200){\n                resolve(res.data);\n            }\n            else{\n                reject(res.status);\n            }\n        })\n        .catch(error=>reject(error))\n    })\n}\n\n/*Component DesignContent\n  api returns String (Invalid Session/Success)\n*/\nexport const updateScreen_ICE = arg => {\n    return new Promise((resolve, reject)=>{\n        axios(url+\"/updateScreen_ICE\", {\n            method: 'POST',\n            headers : {\n                'Content-type' : 'application/json'\n            },\n            data : { \n                data: arg\n            },\n            credentials : 'include',\n        })\n        .then(res=>{\n            if (res.status === 200) resolve(res.data)\n            else reject(res.status);\n        })\n        .catch(error=>reject(error));\n    });\n}\n\n/*Component DesignContent\n  api returns {\"template\":\"\",\"reuse\":bool,\"testcase\":[{\"addTestCaseDetails\":\"\",\"addTestCaseDetailsInfo\":\"{\\\"actualResult_fail\\\":\\\"\\\",\\\"actualResult_pass\\\":\\\"\\\",\\\"testcaseDetails\\\":\\\"\\\"}\",\"appType\":\"\",\"cord\":\"\",\"custname\": \"\",\"inputVal\":[\"\"],\"keywordVal\":\"\",\"objectName\":\"\",\"outputVal\":\"\",\"remarks\": \"a;b\",\"stepNo\":int,\"url\":\"\"}],\"testcasename\":\"\",\"del_flag\":bool}\n*/\nexport const readTestCase_ICE = (userInfo, testCaseId, testCaseName, versionnumber, screenName) => {\n    return new Promise((resolve, reject)=> {\n        axios(url+\"/readTestCase_ICE\", {\n            method: 'POST',\n            headers : {\n                'Content-type' : 'application/json'\n            },\n            data : {\n                param : 'readTestCase_ICE',\n                userInfo: userInfo,\n                testcaseid: testCaseId,\n                testcasename: testCaseName,\n                versionnumber: versionnumber,\n                screenName : screenName\n            },\n            credentials : 'include',\n        })\n        .then(res=>{\n            if (res.status === 200){\n                resolve(res.data);\n            }\n            else{\n                reject({error: res.status});\n            }\n        })\n        .catch(err=>reject({error: err}));\n    });\n}\n\n/*Component DesignContent\n  api returns String (Invalid Session/Success)\n*/\nexport const updateTestCase_ICE = (testCaseId, testCaseName, testCaseData, userInfo, versionnumber, import_status, copiedTestCases) => {\n    return new Promise((resolve, reject)=>{\n        axios(url+\"/updateTestCase_ICE\", {\n            method: 'POST',\n            headers : {\n                'Content-type' : 'application/json'\n            },\n            data : {\n                param : 'updateTestCase_ICE',\n                testcaseid: testCaseId,\n                testcasename: testCaseName,\n                testcasesteps: JSON.stringify(testCaseData),\n                userinfo: userInfo,\n                skucodetestcase : \"skucodetestcase\",\n                tags: \"tags\",\n                versionnumber: versionnumber,\n                import_status: import_status,\n                copiedTestCases: copiedTestCases\n            },\n            credentials : 'include',\n        })\n        .then(res=>{\n            if (res.status === 200){\n                resolve(res.data);\n            }\n            else{\n                reject(res.status);\n            }\n        })\n        .catch(error=>reject(error));\n    });\n}\n\n/*Component ActionbarItems (DesignPage)\n  api returns String (Invalid Session/unavailableLocalServer/success/fail/Terminate/browserUnavailable/scheduleModeOn/ExecutionOnlyAllowed)\n                or {status:\"\", \"\":xpath}\n*/ \nexport const debugTestCase_ICE = (browserType, testcaseID, userInfo, appType) => {\n    return new Promise((resolve, reject)=>{\n        axios(url+\"/debugTestCase_ICE\", {\n            method: 'POST',\n            headers : {\n                'Content-type' : 'application/json'\n            },\n            data : {\n                param : 'debugTestCase_ICE',\n                userInfo: userInfo,\n                browsertypes: browserType,\n                testcaseids: testcaseID,\n                apptype: appType\n            },\n            credentials : 'include',\n        })\n        .then(res=>{\n            if (res.status === 200){\n                resolve(res.data);\n            }\n            else{\n                reject(res.status);\n            }\n        })\n        .catch(error=>reject(error));\n    });\n}\n\n/*Component ActionbarItems (DesignPage)\n  api returns {\"<type>\":{\"<keyword>\":{\"inputtype\": [\"\"],\"inputval\": [\"\"],\"outputval\": [\"\"]}}\n}\n*/ \nexport const getKeywordDetails_ICE = (appType) => {\n    return new Promise((resolve, reject)=>{\n        axios(url+\"/getKeywordDetails_ICE\", {\n            method: 'POST',\n            headers : {\n                'Content-type' : 'application/json'\n            },\n            data : {\n                param : 'getKeywordDetails_ICE',\n                projecttypename : appType\n            },\n            credentials : 'include',\n        })\n        .then(res=>{\n            if (res.status === 200){\n                resolve(res.data);\n            }\n            else{\n                reject(res.status);\n            }\n        })\n        .catch(error=>reject(error))\n    })\n}\n\n/*Component DependentTestCaseDialog\n  api returns [{\"testcaseId\":\"\",\"testcaseName\":\"\"}]\n*/ \nexport const getTestcasesByScenarioId_ICE = (testScenarioId) => {\n    return new Promise((resolve, reject)=>{\n        axios(url+\"/getTestcasesByScenarioId_ICE\", {\n            method: 'POST',\n            headers : {\n                'Content-type' : 'application/json'\n            },\n            data : {\n                param : 'getTestcasesByScenarioId_ICE',\n                testScenarioId : testScenarioId\n            },\n            credentials : 'include',\n        })\n        .then(res=>{   \n            if (res.status === 200){\n                resolve(res.data);\n            }\n            else{\n                reject(res.status)\n            }\n        })\n        .catch(error=>reject(error))\n    })\n}","import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ReactSortable } from 'react-sortablejs';\nimport ClickAwayListener from 'react-click-away-listener';\nimport { ScreenOverlay, RedirectPage, ScrollBar, ModalContainer } from '../../global'\nimport { getObjNameList, getKeywordList } from '../components/UtilFunctions';\nimport TableRow from '../components/TableRow';\nimport DetailsDialog from '../components/DetailsDialog';\nimport RemarkDialog from '../components/RemarkDialog';\nimport PasteStepDialog from '../components/PasteStepDialog';\nimport SelectMultipleDialog from '../components/SelectMultipleDialog';\nimport * as DesignApi from \"../api\";\nimport { reviewTask } from '../../global/api';\nimport * as pluginActions from \"../../plugin/state/action\";\nimport * as designActions from '../state/action';\nimport \"../styles/DesignContent.scss\";\n\n/*\n    Container: DesignContent\n    Uses: Renders middle contents of DesignScreen \n    Props: \n        current_task -> current task state from redux\n        imported -> imported flag / changes everytime a testcase is imported\n        setImported -> Changes \"imported\" state\n        setMirror -> Changes \"mirror\" state\n        setShowPop -> Show/Hide MsgPopup,  arguments used - {title:'',content:''}/false\n        setShowConfirmPop -> Show/Hide Confirmation Popup,  arguments used - {title:'',content:'',footer:''}/false\n        setDisableActionBar -> Manages Disabling/Enabling of ActionBar\n*/\n\nconst DesignContent = props => {\n    \n    const userInfo = useSelector(state=>state.login.userinfo);\n    const copiedContent = useSelector(state=>state.design.copiedTestCases);\n    const modified = useSelector(state=>state.design.modified);\n    const saveEnable = useSelector(state=>state.design.saveEnable);\n\n    const headerCheckRef = useRef();\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [overlay, setOverlay] = useState(\"\");\n    const [hideSubmit, setHideSubmit] = useState(false);\n    const [keywordList, setKeywordList] = useState(null);\n    const [testCaseData, setTestCaseData] = useState([]);\n    const [testScriptData, setTestScriptData] = useState(null);\n    const [checkedRows, setCheckedRows] = useState([]);\n    const [focusedRow, setFocusedRow] = useState(null);\n    const [draggable, setDraggable] = useState(false);\n    // const [dataFormat, setDataFormat] = useState(null);\n    const [objNameList, setObjNameList] = useState(null);\n    const [showConfPaste, setShowConfPaste] = useState(false);\n    const [showPS, setShowPS] = useState(false);\n    const [edit, setEdit] = useState(false);\n    const [showRemarkDlg, setShowRemarkDlg] = useState(false);\n    const [showDetailDlg, setShowDetailDlg] = useState(false);\n    const [showSM, setShowSM] = useState(false);\n    const [changed, setChanged] = useState(false);\n    const [isUnderReview, setIsUnderReview] = useState(props.current_task.status === \"underReview\");\n    const [rowChange, setRowChange] = useState(false);\n    const [headerCheck, setHeaderCheck] = useState(false);\n    const [commentFlag, setCommentFlag] = useState(false);\n    const [pastedTC, setPastedTC] = useState([]);\n    let runClickAway = true;\n    const emptyRowData = {\n        \"objectName\": \"\",\n        \"custname\": \"\",\n        \"keywordVal\": \"\",\n        \"inputVal\": [\"\"],\n        \"outputVal\": \"\",\n        \"stepNo\": \"\",\n        \"url\": \"\",\n        \"appType\": \"\",\n        \"remarksStatus\": \"\",\n        \"remarks\": \"\",\n        \"_id_\": \"\",\n        \"addTestCaseDetails\": \"\",\n        \"addTestCaseDetailsInfo\": \"\"\n    };\n\n    const tableActionBtnGroup = [\n        {'title': 'Add Test Step', 'img': 'static/imgs/ic-jq-addstep.png', 'alt': 'Add Steps', onClick: ()=>addRow()},\n        {'title': 'Edit Test Step', 'img': 'static/imgs/ic-jq-editstep.png', 'alt': 'Edit Steps', onClick:  ()=>editRow()},\n        {'title': 'Select Test Step(s)', 'img': 'static/imgs/ic-selmulti.png', 'alt': 'Select Steps', onClick: ()=>selectMultiple()},\n        {'title': 'Drag & Drop Test Step', 'img': 'static/imgs/ic-jq-dragstep.png', 'alt': 'Drag Steps', onClick:  ()=>toggleDrag()},\n        {'title': 'Copy Test Step', 'img': 'static/imgs/ic-jq-copystep.png', 'alt': 'Copy Steps', onClick:  ()=>copySteps()},\n        {'title': 'Paste Test Step', 'img': 'static/imgs/ic-jq-pastestep.png', 'alt': 'Paste Steps', onClick:  ()=>onPasteSteps()},\n        {'title': 'Skip Test Step', 'img': 'static/imgs/ic-jq-commentstep.png', 'alt': 'Comment Steps', onClick:  ()=>commentRows()}\n    ]\n\n    useEffect(()=>{\n        dispatch({type: designActions.SET_TESTCASES, payload: testCaseData})\n        //eslint-disable-next-line\n    }, [testCaseData]);\n\n    useEffect(()=>{\n        setChanged(true);\n    }, [saveEnable]);\n\n    useEffect(()=>{\n        if (props.imported) {\n            fetchTestCases()\n            .then(data=>{\n                data !== \"success\" && props.setShowPop({ \"title\": \"Deleted objects found\", \"content\": \"Deleted objects found in some teststeps, Please delete or modify those steps.\"});\n                props.setImported(false)\n                setCheckedRows([]);\n                headerCheckRef.current.indeterminate = false;\n            })\n            .catch(error=>console.error(\"Error: Fetch TestCase Failed ::::\", error));\n        }\n        //eslint-disable-next-line\n    }, [props.imported]);\n\n    useEffect(()=>{\n        if (Object.keys(userInfo).length && Object.keys(props.current_task).length) {\n            fetchTestCases()\n            .then(data=>{\n                data !== \"success\" &&\n                props.setShowPop({ \"title\": \"Deleted objects found\", \"content\": \"Deleted objects found in some teststeps, Please delete or modify those steps.\"});\n                setEdit(false);\n                setFocusedRow(null);\n                setCheckedRows([]);\n                headerCheckRef.current.indeterminate = false;\n                setDraggable(false);\n                setChanged(false);\n                setHeaderCheck(false);\n                setIsUnderReview(props.current_task.status === \"underReview\")\n            })\n            .catch(error=>console.error(\"Error: Fetch TestCase Failed ::::\", error));\n        }\n        //eslint-disable-next-line\n    }, [userInfo, props.current_task]);\n\n    const fetchTestCases = () => {\n\t\treturn new Promise((resolve, reject)=>{\n            let { testCaseName, versionnumber, screenName, screenId, projectId, testCaseId, appType } = props.current_task;\n            let deleteObjectFlag = false;\n            \n            setOverlay(\"Loading...\");\n            \n            // service call # 1 - getTestScriptData service call\n            DesignApi.readTestCase_ICE(userInfo, testCaseId, testCaseName, versionnumber, screenName)\n            .then(data => {\n                if (data === \"Invalid Session\") return RedirectPage(history);\n                \n                let changeFlag = false\n                let taskObj = props.current_task\n                if(data.screenName && data.screenName !== taskObj.screenName){\n                    taskObj.screenName = data.screenName;\n                    changeFlag = true\n                }\n                if(data.reuse && data.reuse !== taskObj.reuse){\n                    taskObj.reuse = \"True\";\n                    changeFlag = true\n                }\n                if (changeFlag) dispatch({type: pluginActions.SET_CT, payload: taskObj});\n\n                if(data.del_flag){\n                    deleteObjectFlag = true; // Flag for DeletedObjects Popup\n                    props.setDisableActionBar(true); //disable left-top-section\n                }\n                else props.setDisableActionBar(false); //enable left-top-section\n                \n                setHideSubmit(data.testcase.length === 0);\n                \n                // service call # 2 - objectType service call \n\n                DesignApi.getScrapeDataScreenLevel_ICE(appType, screenId, projectId, testCaseId)\n                    .then(scriptData => {\n                        if (scriptData === \"Invalid Session\") return RedirectPage(history);\n                        if (appType === \"Webservice\"){\n                            if (scriptData.view.length > 0) {\n                                // if (scriptData.view[0].header) setDataFormat(scriptData.view[0].header[0].split(\"##\").join(\"\\n\"));\n                                // else setDataFormat(scriptData.header[0].split(\"##\").join(\"\\n\"));\n                            }\t\n                        }\n\n                        setTestScriptData(scriptData.view);\n                        props.setMirror(scriptData.mirror);\n                        \n                        // service call # 3 -objectType service call\n                        DesignApi.getKeywordDetails_ICE(appType)\n                            .then(keywordData => {\n                                if (keywordData === \"Invalid Session\") return RedirectPage(history);\n                                \n                                setKeywordList(keywordData);\n                                let testcaseArray = [];\n                                if (data === \"\" || data === null || data === \"{}\" || data === \"[]\" || data.testcase.toString() === \"\" || data.testcase === \"[]\") {\n                                    testcaseArray.push(emptyRowData);\n                                    props.setDisableActionBar(true);\n                                    setOverlay(\"\");\n                                } else {\n                                    let testcase = data.testcase;\n                                    \n                                    for (let i = 0; i < testcase.length; i++) {\n                                        if (\"comments\" in testcase[i]) {\n                                            delete testcase[i];\n                                            testcase = testcase.filter(n => n !== null);\n                                        } else {\n                                            if (appType === \"Webservice\") {\n                                                if (testcase[i].keywordVal === \"setHeader\" || testcase[i].keywordVal === \"setHeaderTemplate\") {\n                                                    testcase[i].inputVal[0] = testcase[i].inputVal[0].split(\"##\").join(\"\\n\")\n                                                }\n                                            }\n                                            testcase[i].stepNo = (i + 1).toString();\n                                            testcaseArray.push(testcase[i]);\n                                            // props.setDisableActionBar(false);\n                                        }\n                                    }\n                                    setOverlay(\"\");\n                                }\n                                setDraggable(false);\n                                setTestCaseData(testcaseArray);\n                                setPastedTC([]);\n                                setObjNameList(getObjNameList(props.current_task.appType, scriptData.view));\n                                let msg = deleteObjectFlag ? \"deleteObjs\" : \"success\"\n                                resolve(msg);\n                            })\n                            .catch(error => {\n                                setOverlay(\"\");\n                                setTestCaseData([]);\n                                setTestScriptData(null);\n                                setKeywordList(null);\n                                setObjNameList(null);\n                                console.error(\"Error getObjectType method! \\r\\n \" + (error.data));\n                                reject(\"fail\");\n                            });\n                    })\n                    .catch(error => {\n                        setOverlay(\"\");\n                        setTestCaseData([]);\n                        setTestScriptData(null);\n                        setKeywordList(null);\n                        setObjNameList(null);\n                        console.error(\"Error getObjectType method! \\r\\n \" + (error));\n                        reject(\"fail\");\n                    });\n            })\n            .catch(error => {\n                setOverlay(\"\");\n                setTestCaseData([]);\n                setTestScriptData(null);\n                setKeywordList(null);\n                setObjNameList(null);\n                console.error(\"Error getTestScriptData method! \\r\\n \" + (error));\n                reject(\"fail\");\n            });\n        });\n    };\n    \n    const saveTestCases = () => {\n        if (userInfo.role !== \"Viewer\") {\n            let { screenId, testCaseId, testCaseName, versionnumber } = props.current_task;\n            let import_status = false;\n\n            if (String(screenId) !== \"undefined\" && String(testCaseId) !== \"undefined\") {\n                let errorFlag = false;\n                let testCases = [...testCaseData]\n\n                for (let i = 0; i < testCases.length; i++) {\n                    let step = i + 1\n                    testCases[i].stepNo = step;\n\n                    if (!testCases[i].custname || !testCases[i].keywordVal) {\n                        let col = \"Object Name\";\n                        if (!testCases[i].keywordVal) col = \"keyword\";\n                        props.setShowPop({'title': 'Save Testcase', 'content': `Please select ${col} Name at Step No. ${step}`});\n                        errorFlag = true;\n                        break;\n                    } else {\n                        testCases[i].custname = testCases[i].custname.trim();\n                         if (testCases[i].keywordVal === 'SwitchToFrame' && String(testScriptData) !== \"undefined\") {\n                            let scriptData = [...testScriptData];\n                            for (let j = 0; j < scriptData.length; j++) {\n                                if (!(['@Browser', '@Oebs', '@Window', '@Generic', '@Custom'].includes(scriptData[j].custname)) && scriptData[j].url !== \"\") {\n                                    testCases[i].url = scriptData[j].url;\n                                    break;\n                                }\n                            }\n                        }\n                        if ([\"setHeader\", \"setHeaderTemplate\"].includes(testCases[i].keywordVal)) {\n                            if (typeof (testCases[i].inputVal) === \"string\") testCases[i].inputVal = testCases[i].inputVal.replace(/[\\n\\r]/g, '##');\n                            else testCases[i].inputVal[0] = testCases[i].inputVal[0].replace(/[\\n\\r]/g, '##');\n                        }\n                    }\n                    if (!testCases[i].url) testCases[i].url = \"\";\n                    \n                    if (!testCases[i].cord) testCases[i].cord = \"\";\n\n                }\n\n                if (!errorFlag) {\n                    DesignApi.updateTestCase_ICE(testCaseId, testCaseName, testCases, userInfo, versionnumber, import_status, pastedTC)\n                    .then(data => {\n                        if (data === \"Invalid Session\") return RedirectPage(history);\n                        if (data === \"success\") {\n                            \n                            if(props.current_task.appType.toLowerCase()===\"web\" && Object.keys(modified).length !== 0){\n                                let scrape_data = {};\n                                let { appType, projectId, testCaseId, versionnumber } = props.current_task;\n                                \n                                DesignApi.getScrapeDataScreenLevel_ICE(appType, screenId, projectId, testCaseId)\n                                .then(res => {\n                                    scrape_data=res;\n                                    let modifiedObjects = [];\n                                    for(let i=0; i<scrape_data.view.length; i++){\n                                        if(scrape_data.view[i].custname in modified){\n                                            scrape_data.view[i].xpath = modified[scrape_data.view[i].custname];\n                                            modifiedObjects.push(scrape_data.view[i]);\n                                        }\n                                    } \n\n                                    let params = {\n                                        'deletedObj': [],\n                                        'modifiedObj': modifiedObjects,\n                                        'addedObj': {...scrape_data, view: []},\n                                        'testCaseId': testCaseId,\n                                        'userId': userInfo.user_id,\n                                        'roleId': userInfo.role,\n                                        'versionnumber': versionnumber,\n                                        'param': 'DebugModeScrapeData'\n                                    }\n                                    \n                                    DesignApi.updateScreen_ICE(params)\n                                    .then(data1 => {\n                                        if (data1 === \"Invalid Session\") return RedirectPage(history);\n                                        \n                                        if (data1 === \"Success\") {            \n                                            fetchTestCases()\n                                            .then(msg=>{\n                                                setChanged(false);\n                                                msg === \"success\"\n                                                ? props.setShowPop({'title': 'Save Testcase', 'content': 'Testcase saved successfully'})\n                                                : props.setShowPop({ \"title\": \"Deleted objects found\", \"content\": \"Deleted objects found in some teststeps, Please delete or modify those steps.\"})\n                                            })\n                                            .catch(error => console.error(\"Error: Fetch TestCase Failed ::::\", error));\n                                        } else props.setShowPop({'title': 'Save Testcase', 'content': 'Failed to save Testcase'});\n                                    })\n                                    .catch(error => {\n                                        console.error(\"Error::::\", error)\n                                    })\n                                })\n                                .catch(error=> console.error(\"Error:::::\", error) );\n                            }\n                            else{\n                                fetchTestCases()\n                                .then(data=>{\n                                    setChanged(false);\n                                    data === \"success\" \n                                    ? props.setShowPop({'title': 'Save Testcase', 'content': 'Testcase saved successfully'}) \n                                    : props.setShowPop({ \"title\": \"Deleted objects found\", \"content\": \"Deleted objects found in some teststeps, Please delete or modify those steps.\"});\n                                })\n                                .catch(error=>console.error(\"Error: Fetch TestCase Failed ::::\", error));\n                            }\n                        } else props.setShowPop({'title':'Save Testcase', 'content':'Failed to save Testcase'});\n                    })\n                    .catch(error => { \n                        console.error(\"Error::::\", error);\n                    });\n                    errorFlag = false;\n                }\n            } else props.setShowPop({'title':'Save Testcase', 'content':'ScreenID or TestscriptID is undefined'});\n        }\n        setFocusedRow(null);\n        setCheckedRows([]);\n        headerCheckRef.current.indeterminate = false;\n        setHeaderCheck(false);\n    }\n\n    const setRowData = data => {\n        let testCases = [...testCaseData];\n        let { rowIdx, operation } = data;\n        let changed = false;\n        if (operation === \"row\") {\n            const { objName, keyword, inputVal, outputVal, appType } = data;\n            if (testCases[rowIdx].custname !== objName || testCases[rowIdx].keywordVal !== keyword || testCases[rowIdx].inputVal[0] !== inputVal || testCases[rowIdx].outputVal !== outputVal || commentFlag){\n                testCases[rowIdx].custname = objName;\n                testCases[rowIdx].keywordVal = keyword;\n                testCases[rowIdx].inputVal = [inputVal];\n                testCases[rowIdx].appType = appType;\n\n                let outputVal2 = outputVal\n                if (commentFlag) {\n                    let isComment = outputVal2.slice(-2) === \"##\";\n                    if (isComment) outputVal2 = outputVal2.replace(/(;*##)$/g, \"\")\n                    else outputVal2 += outputVal2.length === 0 ? \"##\" : \";##\"\n                    setCommentFlag(false);\n                }\n\n                testCases[rowIdx].outputVal = outputVal2;\n                changed = true;\n            }\n        }\n        else if (operation === \"remarks\") {\n            testCases[rowIdx].remarks = data.remarks;\n            changed = true;\n        }\n        else if (operation === \"details\") {\n            let testCase = {...testCases[rowIdx]};\n            testCase.addTestCaseDetailsInfo = data.details;\n            testCases[rowIdx] = testCase\n            changed = true;\n        }\n        if (changed) {\n            setTestCaseData(testCases);\n            setChanged(true);\n            setRowChange(!rowChange);\n        }\n    }\n\n    const redirectToPlugin = () => {\n        window.localStorage['navigateScreen'] = \"plugin\";\n        history.replace('/plugin');\n    }\n\n    const submitTask = submitOperation => {\n        let { subTaskId: taskid, status: taskstatus, versionnumber: version, batchTaskIDs, projectId } = props.current_task;\n        \n\t\tif (submitOperation === 'reassign') taskstatus = 'reassign';\n\n        reviewTask(projectId, taskid, taskstatus, version, batchTaskIDs)\n        .then(result => {\n            if (result === \"fail\") props.setShowPop({'title': 'Task Submission Error', 'content': 'Reviewer is not assigned !'});\n            else if (taskstatus === 'reassign') props.setShowPop({'title': \"Task Reassignment Success\", 'content': \"Task Reassigned successfully!\", onClick: ()=>redirectToPlugin()});\n            else if (taskstatus === 'underReview') props.setShowPop({'title': \"Task Completion Success\", 'content': \"Task Approved successfully!\", onClick: ()=>redirectToPlugin()});\n            else props.setShowPop({'title': \"Task Submission Success\", 'content': \"Task Submitted successfully!\", onClick: ()=>redirectToPlugin()});\n        })\n        .catch(error => console.error(error))\n        \n        props.setShowConfirmPop(false);\n    }\n\n    const deleteTestcase = () => {\n        let testCases = [...testCaseData]\n        if (testCases.length === 1 && !testCases[0].custname) props.setShowPop({'title': 'Delete Testcase step', 'content': 'No steps to Delete'});\n        else if (checkedRows.length <= 0) props.setShowPop({'title': 'Delete Test step', 'content': 'Select steps to delete'});\n        else if (props.current_task.reuse === 'True') props.setShowConfirmPop({'title': 'Delete Test Step', 'content': 'Testcase is been reused. Are you sure, you want to delete?', 'onClick': ()=>onDeleteTestStep()});\n        else props.setShowConfirmPop({'title': 'Delete Test Step', 'content': 'Are you sure, you want to delete?', 'onClick': ()=>onDeleteTestStep()});\n    }\n\n    const onDeleteTestStep = () => {\n        let testCases = []\n        let localPastedTc = [...pastedTC];\n\n        testCaseData.forEach((val, idx) => {\n            if (!checkedRows.includes(idx)) {\n                testCases.push(val);\n            }\n            else {\n                let tcIndex = pastedTC.indexOf(val.objectid)\n                if (tcIndex > -1) localPastedTc.splice(tcIndex, 1);\n            }\n        })\n\n        setPastedTC(localPastedTc);\n        setTestCaseData(testCases);\n        setCheckedRows([]);\n        headerCheckRef.current.indeterminate = false;\n        setHeaderCheck(false);\n        setFocusedRow(null);\n        props.setShowConfirmPop(false);\n        setChanged(true);\n    }\n\n    const addRow = () => {\n        let testCases = [...testCaseData]\n        let insertedRowIdx = [];\n        runClickAway = false;\n        if (checkedRows.length === 1) {\n            const rowIdx = checkedRows[0];\n            testCases.splice(rowIdx+1, 0, emptyRowData);\n            insertedRowIdx.push(rowIdx+1)\n        }\n        else {\n            testCases.splice(testCaseData.length, 0, emptyRowData);\n            insertedRowIdx.push(testCaseData.length)\n        }\n        setTestCaseData(testCases);\n        setCheckedRows([]);\n        setHeaderCheck(false);\n        setFocusedRow(insertedRowIdx);\n        setChanged(true);\n        headerCheckRef.current.indeterminate = false;\n        // setEdit(false);\n    }\n\n    const selectMultiple = () => {\n        // setHeaderCheck(false);\n        setFocusedRow(null);\n        setShowSM(true);\n    }\n\n    const selectSteps = stepList => {\n        stepList.push(...checkedRows)\n        let newChecks = Array.from(new Set(stepList))\n        setCheckedRows([...newChecks]);\n        headerCheckRef.current.indeterminate = newChecks.length!==0 && newChecks.length !== testCaseData.length;\n        setShowSM(false);\n    }\n\n    const editRow = () => {\n        let check = [...checkedRows];\n        let focus = null;\n        runClickAway = false;\n        if (check.length === 0) props.setShowPop({'title': 'Edit Step', 'content': 'Select step to edit'});\n        else {\n            if (check.length === 1) focus = check[0]\n            else check = []\n            \n            setCheckedRows(check);\n            setHeaderCheck(false);\n            setFocusedRow(focus);\n            setEdit(true);\n            setDraggable(false);\n            headerCheckRef.current.indeterminate = check.length!==0 && check.length !== testCaseData.length;\n        }\n    }\n\n    const toggleDrag = () => {\n        setCheckedRows([]);\n        setFocusedRow(null);\n        setHeaderCheck(false);\n        setEdit(false);\n        headerCheckRef.current.indeterminate = false;\n\n        if (draggable) setDraggable(false);\n        else setDraggable(true);\n    }\n\n    const copySteps = () => {\n        let selectedRows = [...checkedRows]\n        let copyTestCases = []\n        let copyContent = {}\n        let copyErrorFlag = false;\n        if (selectedRows.length === 0) props.setShowPop({'title': 'Copy Test Step', 'content': 'Select step to copy'});\n        else{\n            let sortedSteps = selectedRows.map(step=>parseInt(step)).sort((a,b)=>a-b)\n            for (let idx of sortedSteps) {\n                if (!testCaseData[idx].custname) {\n                    if (selectedRows.length === 1) props.setShowPop({'title': 'Copy Test Step', 'content': 'Empty step can not be copied.'});\n                    else props.setShowPop({'title': 'Copy Test Step', 'content': 'The operation cannot be performed as the steps contains invalid/blank object references'});\n                    copyErrorFlag = true;\n                    break\n                } \n                else{\n                    let testCase = Object.assign({}, testCaseData[idx])\n                    copyTestCases.push(testCase);\n                }\n            }\n            \n            if (!copyErrorFlag) {\n                copyContent = {'appType': props.current_task.appType, 'testCaseId': props.current_task.testCaseId, 'testCases': copyTestCases};\n                dispatch({type: designActions.SET_COPYTESTCASES, payload: copyContent});\n                setEdit(false);\n            }\n            setCheckedRows([]);\n            headerCheckRef.current.indeterminate = false;\n            setHeaderCheck(false);\n            setFocusedRow(null);\n        }\n    }\n\n    const onPasteSteps = () => {\n        setFocusedRow(null);\n\n        if (!copiedContent.testCaseId){\n            props.setShowPop({'title': 'Paste Test Step', 'content': 'No Testcases to Paste! Please Copy Testcase(s) before Pasting.'});\n            return;\n        }\n\n        if (copiedContent.testCaseId !== props.current_task.testCaseId) {\n            let appTypeFlag = false;\n            for (let testCase of copiedContent.testCases){\n                if ([\"Web\", \"Desktop\", \"Mainframe\", \"OEBS\", \"MobileApp\", \"MobileWeb\", \"MobileApp\", \"SAP\"].includes(testCase.appType)) {\n                    appTypeFlag = true;\n                    break;\n                }\n            }\n            if (copiedContent.appType !== props.current_task.appType && appTypeFlag) {\n                props.setShowPop({'title': 'Paste Test Step', 'content': 'Project Type is not same.'});\n            }\n            else{\n                setShowConfPaste(true);\n            }\n        }\n        else setShowPS(true);\n    }\n\n    const ConfPasteStep = () => (\n        <ModalContainer \n            title=\"Paste Test Step\"\n            close={()=>setShowConfPaste(false)} \n            content=\"Copied step(s) might contain object reference which will not be supported for other screen. Do you still want to continue ?\"\n            footer={\n                <>\n                <button onClick={()=>{\n                    setShowConfPaste(false);\n                    setShowPS(true);\n                }}>Yes</button>\n                <button onClick={()=>setShowConfPaste(false)}>No</button>\n                </>}\n        />\n    );\n\n    const pasteSteps = (stepList) => {\n        let toFocus = []\n        let testCases = [...testCaseData]\n        let offset = 0;\n\n        let sortedSteps = stepList.map(step=>parseInt(step)).sort((a,b)=>a-b)\n\n        for(let step of sortedSteps){\n            let stepInt = parseInt(step)\n            let testCasesToCopy = JSON.parse(JSON.stringify(copiedContent.testCases));\n            \n            stepInt = stepInt+offset\n            if (testCases.length === 1 && !testCases[0].custname) testCases = testCasesToCopy;\n            else testCases.splice(stepInt, 0, ...testCasesToCopy);\n            for(let i=0; i<copiedContent.testCases.length; i++){\n                toFocus.push(stepInt+i);\n            }\n            offset=offset+copiedContent.testCases.length;\n        }\n\n        let localPastedTc = [...pastedTC];\n        copiedContent.testCases.forEach(testcase => testcase.objectid ? localPastedTc.push(testcase.objectid) : null)\n\n        localPastedTc = [...new Set(localPastedTc)];\n        runClickAway = false;\n        setPastedTC(localPastedTc);\n        setTestCaseData(testCases);\n        setShowPS(false);\n        setFocusedRow(toFocus);\n        setCheckedRows([]);\n        headerCheckRef.current.indeterminate = false;\n        setHeaderCheck(false);\n        setChanged(true);\n    }\n\n    const commentRows = () => {\n        let selectedIndexes = [...checkedRows]\n        let testCases = [ ...testCaseData ]\n        runClickAway = false;\n        if (selectedIndexes.length === 0) props.setShowPop({'title': 'Skip Testcase step', 'content': 'Please select step to skip'});\n        else if (selectedIndexes.length === 1 && !testCases[selectedIndexes[0]].custname) props.setShowPop({'title': 'Comment step', 'content': 'Empty step can not be commented.'});\n        else{\n            for(let idx of selectedIndexes){\n                if (focusedRow === idx && edit) continue;\n                let testCase = { ...testCases[idx] }\n                let isComment = testCase.outputVal.slice(-2) === \"##\";\n                if (isComment) testCase.outputVal = testCase.outputVal.replace(/(;*##)$/g, \"\")\n                else testCase.outputVal += testCase.outputVal.length === 0 ? \"##\" : \";##\"\n                testCases[idx] = { ...testCase }\n            }\n            setTestCaseData(testCases);\n            setFocusedRow(null);\n            setCheckedRows([]);\n            setHeaderCheck(false);\n            // setEdit(false);\n            // setRowChange(!rowChange);\n            setChanged(true);\n            if(edit) setCommentFlag(true);\n            headerCheckRef.current.indeterminate = false;\n        }\n    }\n\n    \n\n    const showRemarkDialog = (rowIdx) => {\n        setFocusedRow(null);\n        setShowRemarkDlg(String(rowIdx));\n    }\n\n    const showDetailDialog = (rowIdx) => {\n        setFocusedRow(null);\n        setShowDetailDlg(String(rowIdx));\n    }\n\n    const updateChecklist = (RowIdx, click, msg) => {\n        let check = [...checkedRows]\n        let headerCheckFlag = false\n        let focusIdx = null;\n        let loc = check.indexOf(RowIdx);\n        if (loc>=0) {\n            if (click===\"check\") check.splice(loc, 1)\n            else focusIdx = RowIdx\n        }\n        else {\n            check.push(RowIdx)\n            focusIdx = RowIdx;\n        }\n        if (check.length === testCaseData.length) headerCheckFlag = true;\n        if (msg === \"noFocus\") focusIdx = null;\n        // checkArray = check;\n        setHeaderCheck(headerCheckFlag);\n        setFocusedRow(focusIdx); \n        setCheckedRows(check);\n        headerCheckRef.current.indeterminate = check.length!==0 && check.length !== testCaseData.length;\n    }\n\n    const onAction = (operation) => {\n        switch(operation){\n            case \"submit\": props.setShowConfirmPop({'title':'Submit Task', 'content': 'Are you sure you want to submit the task ?', 'onClick': ()=>submitTask(operation)});\n                           break;\n            case \"reassign\": props.setShowConfirmPop({'title':'Reassign Task', 'content': 'Are you sure you want to reassign the task ?', 'onClick': ()=>submitTask(operation)});\n                             break;\n            case \"approve\": props.setShowConfirmPop({'title':'Approve Task', 'content': 'Are you sure you want to approve the task ?', 'onClick': ()=>submitTask(operation)});\n                            break;\n            default: break;\n        }                       \n    }\n\n    const onCheckAll = (event) => {\n        let checkList = [...checkedRows]\n        if (event.target.checked) {\n            checkList = new Array(testCaseData.length);\n            for (let i=0; i<checkList.length; i++ ) checkList[i] = i;\n        }\n        else {\n            checkList = []\n        }\n        setFocusedRow(null); \n        setHeaderCheck(event.target.checked);\n        setCheckedRows(checkList);\n        headerCheckRef.current.indeterminate = false;\n    }\n\n    const getKeywords = useCallback(objectName => getKeywordList(objectName, keywordList, props.current_task.appType, testScriptData), [keywordList, props.current_task, testScriptData]);\n\n    const getRowPlaceholders = useCallback((obType, keywordName) => keywordList[obType][keywordName], [keywordList])\n    let key = 0;\n    return (\n        <>\n        { showSM && <SelectMultipleDialog data-test=\"d__selectMultiple\" setShow={setShowSM} selectSteps={selectSteps} upperLimit={testCaseData.length} /> }\n        { showPS && <PasteStepDialog setShow={setShowPS} pasteSteps={pasteSteps} upperLimit={testCaseData.length}/> }\n        { showRemarkDlg && <RemarkDialog remarks={testCaseData[parseInt(showRemarkDlg)].remarks} setShow={setShowRemarkDlg} onSetRowData={setRowData} idx={showRemarkDlg} firstname={userInfo.firstname} lastname={userInfo.lastname}/> }\n        { showDetailDlg && <DetailsDialog TCDetails={testCaseData[showDetailDlg].addTestCaseDetailsInfo && JSON.parse(testCaseData[showDetailDlg].addTestCaseDetailsInfo)} setShow={setShowDetailDlg} onSetRowData={setRowData} idx={showDetailDlg} /> }\n        { overlay && <ScreenOverlay content={overlay} /> }\n        { showConfPaste && <ConfPasteStep />}\n        <div className=\"d__content\">\n            <div className=\"d__content_wrap\">\n            { /* Task Name */ }\n            <div className=\"d__task_title\">\n                <div className=\"d__task_name\" data-test=\"d__taskName\">{props.current_task.taskName}</div>\n            </div>\n\n            { /* Button Group */ }\n            <div className=\"d__btngroup\">\n                <div className=\"d__table_ac_btn_grp\">\n                {\n                    tableActionBtnGroup.map((btn, i) => \n                        <button data-test=\"d__tblActionBtns\" key={i} className=\"d__tblBtn\" onClick={()=>btn.onClick()}><img className=\"d__tblBtn_ic\" src={btn.img} alt={btn.alt} title={btn.title}/> </button>\n                    )\n                }\n                </div>\n\n                <div className=\"d__taskBtns\">\n                    <button className=\"d__taskBtn d__btn\" data-test=\"d__saveBtn\" onClick={saveTestCases} disabled={!changed}>Save</button>\n                    <button className=\"d__taskBtn d__btn\" data-test=\"d__deleteBtn\" onClick={deleteTestcase} disabled={!checkedRows.length}>Delete</button>\n                </div>\n\n                <div className=\"d__submit\" data-test=\"d__actionBtn\">\n                    { isUnderReview && \n                        <>\n                        <button className=\"d__reassignBtn d__btn\" \n                                onClick={()=>onAction(\"reassign\")}>\n                            Reassign\n                        </button>\n                        <button className=\"d__approveBtn d__btn\" onClick={()=>onAction(\"approve\")}>\n                            Approve\n                        </button>\n                        </>\n                    }\n                    { !hideSubmit && !isUnderReview &&\n                        <button className=\"d__submitBtn d__btn\" onClick={()=>onAction(\"submit\")}>\n                            Submit\n                        </button>\n                    }\n                </div>\n\n            </div>\n            </div>\n\n            { /* Table */ }\n            <div className=\"d__table\">\n                <div className=\"d__table_header\">\n                    <span className=\"step_col d__step_head\" ></span>\n                    <span className=\"sel_col d__sel_head\"><input className=\"sel_obj\" type=\"checkbox\" checked={headerCheck} onChange={onCheckAll} ref={headerCheckRef} /></span>\n                    <span className=\"objname_col d__obj_head\" >Object Name</span>\n                    <span className=\"keyword_col d__key_head\" >Keyword</span>\n                    <span className=\"input_col d__inp_head\" >Input</span>\n                    <span className=\"output_col d__out_head\" >Output</span>\n                    <span className=\"remark_col d__rem_head\" >Remarks</span>\n                    <span className=\"details_col d__det_head\" >Details</span>\n                </div>\n                <div style={{height: \"100%\"}}>\n                {testCaseData.length>0 && <div className=\"d__table_contents\" >\n                <div className=\"ab\">\n                    <div className=\"min\">\n                        <div className=\"con\" id=\"d__tcListId\">\n                            <ScrollBar scrollId=\"d__tcListId\" verticalbarWidth=\"8px\" thumbColor=\"#321e4f\" trackColor=\"rgb(211, 211, 211)\">\n                            <ClickAwayListener onClickAway={()=>{ runClickAway ? setFocusedRow(null) : runClickAway=true}} style={{height: \"100%\"}}>\n                            <ReactSortable disabled={!draggable} key={draggable.toString()} list={testCaseData} setList={setTestCaseData} animation={200} ghostClass=\"d__ghost_row\" onEnd={()=>{ if (!changed)setChanged(true)}}>\n                                {\n                                testCaseData.map((testCase, i) => <TableRow data-test=\"d__tc_row\"\n                                    key={key++} idx={i} objList={objNameList} testCase={testCase} edit={edit} \n                                    getKeywords={getKeywords} getRowPlaceholders={getRowPlaceholders} checkedRows={checkedRows}\n                                    updateChecklist={updateChecklist} focusedRow={focusedRow} setFocusedRow={setFocusedRow}\n                                    setRowData={setRowData} showRemarkDialog={showRemarkDialog} showDetailDialog={showDetailDialog}\n                                    rowChange={rowChange}\n                                                        />)\n                                }\n                            </ReactSortable>\n                            </ClickAwayListener>\n                            </ScrollBar>\n                        </div>\n                    </div>\n                </div>\n                </div>}\n                </div>\n            </div>\n        </div>\n        </>\n    );\n\n}\n\nexport default DesignContent;","import React, { Fragment, useRef, useState, useEffect } from 'react';\nimport { useSelector, useDispatch }  from  \"react-redux\";\nimport { useHistory } from 'react-router-dom';\nimport { Thumbnail, ResetSession, RedirectPage } from '../../global';\nimport * as DesignApi from \"../api\";\nimport * as DesignActions from '../state/action';\nimport \"../styles/ActionBarItems.scss\"\n\n/*\n    Component: UpperContent , Bottom Content for rendering items on Action Bar\n    Uses: Provides Content for Action Bar\n    Props: \n    ----------- upperContent ------\n        setDTcFlag -> flips the Dependent Test Case Flag\n        isMac -> Bool value to check if client is running on Mac\n        setOverlay -> overlay msg\n        disable -> flag to check if action bar is required to disable\n        setShowPop -> showPopup state\n        setShowDlg -> Show Dependent TestCase Dialog State\n        dTcFlag -> Dependent TestCase checked/unchecked Flag\n        checkedTc -> list of checked test case IDs'\n        showDlg -> flag to check if dependenet test Case dialog is visible or not\n\n    ---------- bottomContent ---------\n        setShowPop -> showPopup state\n        setImported -> state to switch import status flag\n        setShowConfirmPop -> confirmation dialog popup\n        disable -> flag to check if action bar is required to disable\n*/\n\nconst UpperContent = ({setCheckedTc, setDTcFlag, isMac, setOverlay, disable, setShowPop, setShowDlg, dTcFlag, checkedTc, showDlg}) => {\n\n    const userInfo = useSelector(state=>state.login.userinfo);\n    const current_task = useSelector(state=>state.plugin.CT);\n    const mainTestCases = useSelector(state=>state.design.testCases);\n    const saveEnable = useSelector(state=>state.design.saveEnable);\n\n    let appType = current_task.appType;\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const [dependCheck, setDependCheck] = useState(false);\n\n    useEffect(()=>{\n        if (!showDlg) setDependCheck(dTcFlag);\n        //eslint-disable-next-line\n    }, [showDlg]);\n\n    useEffect(()=>{\n        setDependCheck(false);\n        setCheckedTc({});\n        //eslint-disable-next-line\n    }, [current_task])\n\n    const WebList = [\n        {'title': \"Internet Explorer\", 'img': \"static/imgs/ic-ie.png\", action: ()=>debugTestCases('3'), 'disable': disable}, \n        {'title': \"Google Chrome\", 'img': \"static/imgs/ic-chrome.png\", action: ()=>debugTestCases('1'), 'disable': disable},\n        {'title': \"Mozilla Firefox\", 'img': \"static/imgs/ic-mozilla.png\", action: ()=>debugTestCases('2'), 'disable': disable},\n        {'title': \"Microsoft Edge\", 'svg': \"static/imgs/ic-edge.svg\", action: ()=>debugTestCases('7'), 'disable': disable},\n        {'title': \"Edge Chromium\", 'svg': \"static/imgs/ic-edge-chromium.svg\", action: ()=>debugTestCases('8'), 'disable': disable}\n        ]\n    \n    const oebsList = [{'title': \"OEBS Apps\" , 'img': 'static/imgs/ic-desktop.png', action: ()=>debugTestCases('1'), 'disable': disable}]\n    \n    const desktopList = [{'title': \"Desktop Apps\" , 'img': 'static/imgs/ic-desktop.png', action: ()=>debugTestCases('1'), 'disable': disable}]\n    \n    const systemList = [{'title': \"System Apps\" , 'img': 'static/imgs/ic-desktop.png', action: ()=>debugTestCases('1'), 'disable': disable}]\n    \n    const sapList = [{'title': \"SAP Apps\" , 'img': 'static/imgs/ic-desktop.png', action: ()=>debugTestCases('1'), 'disable': disable}]\n    \n    const webserviceList = [{'title': \"Web Services\" , 'img': 'static/imgs/ic-webservice.png', action: ()=>debugTestCases('1'), 'disable': disable}]\n    \n    const mobileAppList = [{'title': \"Mobile Apps\" , 'img': 'static/imgs/ic-mobility.png', action: ()=>debugTestCases('1'), 'disable': disable}]\n    \n    const mobileWebList = [{'title': \"Mobile Web\" , 'img': 'static/imgs/ic-mobility.png', action: ()=>debugTestCases(), 'disable': disable}]\n    \n    const mainframeList = [{'title': \"Mainframe\", 'img': \"static/imgs/ic-mainframe-o.png\", action: ()=>debugTestCases(), 'disable': disable}]\n\n    const addDependentTestCase = event => {\n        if (!event.target.checked) {\n            setDependCheck(false);\n            setDTcFlag(false);\n            setCheckedTc({});\n        }\n        else setShowDlg(true);\n    }\n\n    let renderComp = [\n                    <div key={1} className={'d__debugOn' + (disable ? \" disable-thumbnail\" : \"\")}>Debug On</div>, \n                    <div key={3} className={\"d__thumbnail\" + (disable ? \" disable-thumbnail\" : \"\")}>\n                        <input id=\"add_depend\" type=\"checkbox\" onChange={addDependentTestCase} checked={dependCheck}/>\n                        <span className=\"d__thumbnail_title\">Add Dependent Test Cases</span>\n                    </div>\n                    ];\n\n    const debugTestCases = selectedBrowserType => {\n        let testcaseID = [];\n        let browserType = [];\n        \n        if (appType !== \"MobileWeb\" && appType !== \"Mainframe\") browserType.push(selectedBrowserType);\n        \n        // globalSelectedBrowserType = selectedBrowserType;\n\n        if (dTcFlag) testcaseID = Object.values(checkedTc);\n        else testcaseID.push(current_task.testCaseId);\n        setOverlay('Debug in Progress. Please Wait...');\n        ResetSession.start();\n        DesignApi.debugTestCase_ICE(browserType, testcaseID, userInfo, appType)\n            .then(data => {\n                setOverlay(\"\");\n                ResetSession.end();\n                if (data === \"Invalid Session\") return RedirectPage(history);\n                else if (data === \"unavailableLocalServer\")  setShowPop({'title': \"Debug Testcase\", 'content': \"No Intelligent Core Engine (ICE) connection found with the Avo Assure logged in username. Please run the ICE batch file once again and connect to Server.\"})\n                else if (data === \"success\") setShowPop({'title': \"Debug Testcase\", 'content': \"Debug completed successfully.\"})\n                else if (data === \"fail\") setShowPop({'title': \"Debug Testcase\", 'content': \"Failed to debug.\"})\n                else if (data === \"Terminate\") setShowPop({'title': \"Debug Testcase\", 'content': \"Debug Terminated\"})\n                else if (data === \"browserUnavailable\") setShowPop({'title': \"Debug Testcase\", 'content': \"Browser is not available\"})\n                else if (data === \"scheduleModeOn\") setShowPop({'title': \"Debug Testcase\", 'content': \"Schedule mode is Enabled, Please uncheck 'Schedule' option in ICE Engine to proceed.\"})\n                else if (data === \"ExecutionOnlyAllowed\") setShowPop({'title': \"Debug Testcase\", 'content': \"Execution Only Allowed\"})\n                else if (data.status === \"success\"){\n                    let rows={}\n                    mainTestCases.forEach((testCase, index) => {\n                        if(index+1 in data){\n                            rows[testCase.custname]=data[index+1].xpath;\n                        }\n                    });\n                    dispatch({type: DesignActions.SET_MODIFIED, payload: rows});\n                    dispatch({type: DesignActions.SET_SAVEENABLE, payload: !saveEnable})\n                    setShowPop({'title': \"Debug Testcase\", 'content': \"Debug completed successfully.\"});\n                } else {\n                    console.log(data);\n                }\t\t\t\t\t\t\t\t\t\t\n            })\n            .catch(error => {\n                setOverlay(\"\");\n                ResetSession.end();\n                setOverlay({'title': \"Debug Testcase\", 'content': \"Failed to debug.\"});\n                console.error(\"Error while traversing while executing debugTestcase method! \\r\\n \" + (error.data));\n            });\n    };\n\n    \n    switch(appType) {\n        case \"Web\": renderComp.splice(1, 0, <Fragment key={2}> { WebList.map((icon, i) => <Thumbnail key={i} title={icon.title} img={icon.img} svg={icon.svg} action={icon.action} disable={icon.disable}/>)}\n                                            { isMac && <Thumbnail title=\"Safari\" img=\"static/imgs/ic-safari.png\" action={()=>debugTestCases('6')} disable={disable}/>}</Fragment>);\n                    break;\n        case \"OEBS\": renderComp.splice(1, 0, <Fragment key={2}>{oebsList.map((icon, i) => <Thumbnail key={i} title={icon.title} img={icon.img} action={icon.action} disable={icon.disable} />)}</Fragment>);\n                    break;\n        case \"Desktop\": renderComp.splice(1, 0, <Fragment key={2}>{desktopList.map((icon, i) => <Thumbnail key={i} title={icon.title} img={icon.img} action={icon.action} disable={icon.disable} />)}</Fragment>);\n                        break;\n        case \"System\": renderComp.splice(1, 0, <Fragment key={2}>{systemList.map((icon, i) => <Thumbnail key={i} title={icon.title} img={icon.img} action={icon.action} disable={icon.disable} />)}</Fragment>);\n                        break;\n        case \"SAP\": renderComp.splice(1, 0, <Fragment key={2}>{sapList.map((icon, i) => <Thumbnail key={i} title={icon.title} img={icon.img} action={icon.action} disable={icon.disable} />)}</Fragment>);\n                    break;\n        case \"Webservice\": renderComp.splice(1, 0, <Fragment key={2}>{webserviceList.map((icon, i) => <Thumbnail key={i} title={icon.title} img={icon.img} action={icon.action} disable={icon.disable}/>)}</Fragment>);\n                            break;\n        case \"MobileApp\": renderComp.splice(1, 0, <Fragment key={2}>{mobileAppList.map((icon, i) => <Thumbnail key={i} title={icon.title} img={icon.img} action={icon.action} disable={icon.disable} />)}</Fragment>);\n                            break;\n        case \"MobileWeb\": renderComp.splice(1, 0, <Fragment key={2}>{mobileWebList.map((icon, i) => <Thumbnail key={i} title={icon.title} img={icon.img} action={icon.action} disable={icon.disable}/>)}</Fragment>);\n                            break;\n        case \"Mainframe\": renderComp.splice(1, 0, <Fragment key={2}>{mainframeList.map((icon, i) => <Thumbnail key={i} title={icon.title} img={icon.img} action={icon.action} disable={icon.disable} />)}</Fragment>);\n                            break;\n        default: break;\n    }\n    \n    return renderComp;\n};\n\nconst BottomContent = ({setShowPop, setImported, setShowConfirmPop, disable}) => {\n\n    const current_task = useSelector(state=>state.plugin.CT);\n    const userInfo = useSelector(state=>state.login.userinfo);\n    const history = useHistory();\n    const hiddenInput = useRef(null);\n\n    const exportTestCase =  () => {\n\t\tlet testCaseId = current_task.testCaseId;\n\t\tlet testCaseName = current_task.testCaseName;\n        let versionnumber = current_task.versionnumber;\n        \n\t\tDesignApi.readTestCase_ICE(userInfo, testCaseId, testCaseName, versionnumber)\n\t\t.then(response => {\n\t\t\t\tif (response === \"Invalid Session\") return RedirectPage(history);\n                \n                let responseData;\n                if (typeof response === 'object') responseData = JSON.stringify(response.testcase, null, 2);\n                let filename = testCaseName + \".json\";\n\n                let testCaseBlob = new Blob([responseData], {\n                    type: \"text/json\"\n                })\n\n\t\t\t\tif (window.navigator && window.navigator.msSaveOrOpenBlob) {\n                    window.navigator.msSaveOrOpenBlob(new Blob([responseData], {\n                        type: \"text/json;charset=utf-8\"\n                    }), filename);\n                }\n                else {\n                    let a = document.createElement('a');\n                    a.download = filename;\n                    a.href = window.URL.createObjectURL(testCaseBlob);\n                    a.target = '_blank';\n                    document.body.appendChild(a);\n                    a.click();\n                    document.body.removeChild(a);\n                  } \n            })\n            .catch(error => console.error(\"ERROR::::\", error));\n    }\n    \n    const onInputChange = (event) => {\n        let testCaseId = current_task.testCaseId;\n\t\tlet testCaseName = current_task.testCaseName;\n        let versionnumber = current_task.versionnumber;\n        let appType = current_task.appType;\n\t\tlet import_status = true;\n        let flag = false;\n\n        let file = event.target.files[0];\n        let reader = new FileReader();\n        reader.onload = function (e) {\n            hiddenInput.current.value = '';\n            if ((file.name.split('.')[file.name.split('.').length - 1]).toLowerCase() === \"json\") {\n                let resultString = JSON.parse(reader.result);\n                for (let i = 0; i < resultString.length; i++) {\n                    if (resultString[i].appType.toLowerCase() === \"generic\" || resultString[i].appType.toLowerCase() === \"pdf\") {\n                        flag = true;\n                    } else if (resultString[i].appType === appType) {\n                        flag = true;\n                        break;\n                    } else {\n                        flag = false;\n                        break;\n                    }\n                }\n                if (flag === false) setShowPop({'title': \"App Type Error\", 'content': \"Project application type and Imported JSON application type doesn't match, please check!\"})\n                else {\n                    DesignApi.updateTestCase_ICE(testCaseId, testCaseName, resultString, userInfo, versionnumber, import_status)\n                        .then(data => {\n                            if (data === \"Invalid Session\") RedirectPage(history);\n                            if (data === \"success\") {\n                                setImported(true);\n                                setShowPop({'title': \"Import Testcase\", 'content': \"TestCase Json imported successfully.\"});\n                            } else setShowPop({'title': \"Import Testcase\",'content': \"Please Check the file format you have uploaded!\"});\n                        })\n                        .catch(error => console.error(\"ERROR::::\", error));\n                }\n            } else setShowPop({'title': \"Import Testcase\", 'content': \"Please Check the file format you have uploaded!\"});\n        }\n        reader.readAsText(file);\n    }\n\n    const importTestCase = (overWrite) => {\n        \n        let testCaseId = current_task.testCaseId;\n\t\tlet testCaseName = current_task.testCaseName;\n        let versionnumber = current_task.versionnumber;\n        if(overWrite) setShowConfirmPop(false);\n        \n        DesignApi.readTestCase_ICE(userInfo, testCaseId, testCaseName, versionnumber)\n\t\t.then(response => {\n\t\t\t\tif (response === \"Invalid Session\") RedirectPage(history);\n                if (response.testcase.length === 0 || overWrite) {\n                    hiddenInput.current.click();\n                    // document.getElementById(\"importTestCaseField\").click();\n                }\n                else{\n                    setShowConfirmPop({'title': 'Table Consists of Data', 'content': 'Import will erase your old data. Do you want to continue?', 'onClick': ()=>importTestCase(true)});\n                }\n            })\n        .catch(error => console.error(\"ERROR::::\", error));\n    }\n\n    const lowerList = [\n                        {'title': 'Import Test Case', 'img': 'static/imgs/ic-import-script.png', 'action': ()=>importTestCase()},\n                        {'title': 'Export Test Case', 'img': 'static/imgs/ic-export-script.png', 'action': ()=>exportTestCase(), 'disable': disable}\n                    ]\n                    // <input style=\"visibility: hidden;\" type=\"file\" id=\"importTestCaseFile\" accept=\".json\"></li>\n                    // <li style=\"visibility: hidden; display: none;\"><a href='#' ng-click=\"importTestCase1($event)\"></a><input style=\"visibility: hidden;\" type=\"file\" id=\"overWriteJson\" accept=\".json\"></li>\n    return (\n        <>\n            {lowerList.map((icon, i) => <Thumbnail key={i} title={icon.title} img={icon.img} action={icon.action} disable={icon.disable}/>)}\n            <input id=\"importTestCaseField\" type=\"file\" style={{display: \"none\"}} ref={hiddenInput} onChange={onInputChange} accept=\".json\"/>\n        </>\n    );\n};\n\nexport { UpperContent, BottomContent };","import React, { useState, useEffect } from 'react';\nimport Handlebars from 'handlebars';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\nimport { ModalContainer, ScrollBar, Report, RedirectPage } from '../../global';\nimport { readTestCase_ICE, getTestcasesByScenarioId_ICE } from '../api';\nimport \"../styles/DependentTestCaseDialog.scss\";\n\n/*\n    Component: Dependent Test Case Dialog Box\n    Uses: Renders dialog for selecting Dependent Testcases\n    Props: \n        scenarioId -> current selected task's scenarioID\n        setShowDlg -> switch flag to display dependent Testcases dialog\n        checkedTc -> array of dependent testcase IDs' \n        setCheckedTc -> setState for dependent TC array\n        setDTcFlag -> flag status for dependent test cases / enabled means dependent TC is present\n        taskName -> current task's name\n        taskId= -> current task's ID\n        setShowPop -> state to display popup msgs\n*/\n\nconst DependentTestCaseDialog = props => {\n\n    const history = useHistory();\n    const [tcList, setTcList] = useState([]);\n    const [error, setError] = useState(\"\");\n\n    useEffect(()=>{\n\n        let dependentTestCases = [];\n        getTestcasesByScenarioId_ICE(props.scenarioId)\n        .then(data => {\n            if (data === \"Invalid Session\") return RedirectPage(history);\n            else{\n                for (let i = 0; i < data.length; i++) {\n                    dependentTestCases.push({'testCaseID': data[i].testcaseId, 'testCaseName': data[i].testcaseName, 'checked': false, 'tempId': i})\n                }\n                \n                let testCases = [];\n                let disableAndBlock = true;\n\n                let dtcLength = dependentTestCases.length;\n                for (let i=dtcLength-1; i>=0; i--) {\n                    let tc = dependentTestCases[i];\n                    tc.disableAndBlock = disableAndBlock;\n                    if (Object.keys(props.checkedTc).length <= 0 && !disableAndBlock) {\n                        tc.checked = true;\n                    }\n                    if ((i in props.checkedTc) && !disableAndBlock) tc.checked = true;\n                    \n                    if (tc.testCaseName === props.taskName) disableAndBlock = false;\n        \n                    testCases.push(tc);\n                }\n                \n                testCases.reverse();\n                setTcList(testCases);\n            }\n        })\n        .catch(error => console.error(\"ERROR::::\", error));\n        //eslint-disable-next-line\n    }, []);\n\n    const onSave = () => {\n        \n        let checkedTestcases = {};\n        tcList.forEach(testCase => {\n            if(testCase.checked) checkedTestcases[testCase.tempId] = testCase.testCaseID;\n        })\n        if (checkedTestcases.length === 0) {\n            setError(\"Please Select Dependent Test Case\");\n        } else {\n            setError(\"\");\n            checkedTestcases['current'] = props.taskId;\n            props.setShowDlg(false);\n            props.setShowPop({'title': 'Dependent Test Cases', 'content': 'Dependent Test Cases saved successfully'});\n            props.setDTcFlag(true);\n            props.setCheckedTc(checkedTestcases);\n        }\n    }\n\n    const updateChecklist = (index, state) => {\n        let updatedTCList = [...tcList];\n        updatedTCList[index].checked = state;\n        setTcList(updatedTCList);\n    }\n\n    return (\n        <div className=\"dependentTestCaseContainer\" data-test=\"d__dtc\">\n        <ModalContainer \n            title=\"Select Dependent Test Cases\"\n            content={\n                <div className=\"testCasesList\">\n                    { error && <div className=\"dtc_error\" >{error}</div>}\n                    <div className=\"testCasesScrollContainer\">    \n                        <ScrollBar>\n                            <div className=\"testCaseOverflow_div\">\n                                {\n                                tcList.map((testCase, idx)=> <TestCaseItem key={idx} index={idx} testCase={testCase} updateChecklist={updateChecklist}/> )\n                                }\n                            </div>\n                        </ScrollBar>\n                    </div>\n                </div>\n            }\n            footer={ <button onClick={onSave} data-test=\"d__dtc_save\">Save Dependent Test Cases</button> }\n            close={()=>{\n                setError(\"\");\n                props.setShowDlg(false)\n            }}\n        />\n        </div>\n    );\n}\n\nconst TestCaseItem = ({index, testCase, updateChecklist}) => {\n\n    const history =  useHistory();\n    const userInfo = useSelector(state=>state.login.userinfo);\n    const [check, setCheck] = useState(false);\n\n    useEffect(()=>{\n        setCheck(testCase.disableAndBlock ? false : testCase.checked);\n    }, [testCase]);\n\n    const handleCheck = event => {\n        setCheck(event.target.checked);\n        updateChecklist(index, event.target.checked);\n    }\n\n    const onView = () => {\n        readTestCase_ICE(userInfo, testCase.testCaseID, testCase.testCaseName, 0)\n            .then(response => {\n                if (response === \"Invalid Session\") RedirectPage(history);\n\n                let template = Handlebars.compile(Report);\n                let data = template({ name: [{ testcasename: response.testcasename }], rows: response.testcase });\n                let newWindow = window.open();\n                newWindow.document.write(data);\n            })\n            .catch(error => console.error(\"ERROR::::\", error));\n    }\n    \n    return (\n        <div className=\"testCaseItem\" data-test=\"d__dtc_item\">\n            <input className=\"tcCheck\" type=\"checkbox\" onChange={handleCheck} disabled={testCase.disableAndBlock} checked={check}/>\n            <label className=\"tcName\" >{testCase.testCaseName}</label>\n            <Link className=\"tcView\" to=\"#\" onClick={onView}>View</Link>\n        </div>\n    );\n}\n\nexport default DependentTestCaseDialog;","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport ClickAwayListener from 'react-click-away-listener';\nimport { ReferenceBar, ScrollBar } from '../../global';\n\n/*\n    Component: ReferenceBar Content\n    Uses: Provides content to populate on reference bar, includes Popups\n    Props: \n        mirror -> base64 screenshot\n*/\n\nconst ReferenceContent = ({mirror}) => {\n\n    const { appType } = useSelector(state=>state.plugin.CT);\n    const [showScreenPop, setShowScreenPop] = useState(false);\n    const [screenshotY, setScreenshotY] = useState(null);\n\tconst [mirrorHeight, setMirrorHeight] = useState(\"0px\");\n\n    useEffect(()=>{\n\t\tlet mirrorImg = new Image();\n\n\t\tmirrorImg.onload = function(){\n\t\t\tlet aspect_ratio = mirrorImg.height / mirrorImg.width;\n\t\t\tlet ds_width = 500;\n\t\t\tlet ds_height = ds_width * aspect_ratio;\n\t\t\tif (ds_height > 300) ds_height = 300;\n\t\t\tds_height += 45; // popup header size included\n\t\t\tsetMirrorHeight(ds_height);\n\t\t}\n\n\t\tmirrorImg.src = `data:image/PNG;base64,${mirror}`;\n\t}, [mirror])\n\n    const closeAllPopups = () => setShowScreenPop(false);\n\n    const ScreenPopup = () => (\n        <>\n        {\n            showScreenPop && \n            <ClickAwayListener onClickAway={closeAllPopups}>\n            <div className=\"ref_pop screenshot_pop\" style={{marginTop: `calc(${screenshotY}px - 15vh)`, height: `${mirrorHeight}px`}}>\n                <h4 className=\"pop__header\" onClick={()=>setShowScreenPop(false)}><span className=\"pop__title\">Screenshot</span><img className=\"task_close_arrow\" alt=\"task_close\" src=\"static/imgs/ic-arrow.png\"/></h4>\n                <div className=\"screenshot_pop__content\" >\n\t\t\t\t<div className=\"scrsht_outerContainer\" id=\"ss_ssId\">\n\t\t\t\t<ScrollBar scrollId=\"ss_ssId\" thumbColor= \"#321e4f\" trackColor= \"rgb(211, 211, 211)\" verticalbarWidth='8px' hideXbar={true}>\n\t\t\t\t\t<div className=\"ss_scrsht_insideScroll\">\n\t\t\t\t\t{ mirror ? <img id=\"ss_screenshot\" className=\"screenshot_img\" alt=\"screenshot\" src={`data:image/PNG;base64,${mirror}`} /> : \"No Screenshot Available\"}\n\t\t\t\t\t</div>\n\t\t\t\t</ScrollBar>\n\t\t\t\t</div>\n\t\t\t\t</div>\n            </div>\n            </ClickAwayListener>\n        }\n        </>\n    );\n\n    const togglePop = event => {\n        closeAllPopups();\n        setScreenshotY(event.clientY)\n        setShowScreenPop(!showScreenPop)\n    }\n\n    return (\n    <>\n    <ReferenceBar popups={<ScreenPopup/>} closeAllPopups={closeAllPopups}>\n    { appType!==\"Webservice\" && appType!==\"Mainframe\" && <div className=\"ic_box\" onClick={togglePop}><img className={\"rb__ic-task thumb__ic \"} alt=\"screenshot-ic\" src=\"static/imgs/ic-screenshot.png\"/><span className=\"rb_box_title\">Screenshot</span></div>}\n    </ReferenceBar>\n    </>\n    );\n};\n\n\n\nexport { ReferenceContent };","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport DesignContent from './DesignContent';\nimport { UpperContent, BottomContent } from \"../components/ActionBarItems\";\nimport DependentTestCaseDialog from '../components/DependentTestCaseDialog';\nimport { ReferenceContent } from \"../components/RefBarItems\";\nimport { Header, FooterTwo as Footer, ActionBar, ScreenOverlay, PopupMsg, ModalContainer } from '../../global';\nimport \"../styles/DesignHome.scss\";\n\n/*\n    Container: Design Home Container\n    Uses: Renders entire design screen\n    Props: None\n*/\n\nconst DesignHome = () => {\n    \n    const current_task = useSelector(state=>state.plugin.CT)\n    const filter_data = useSelector(state=>state.plugin.FD)\n\n    const [isMac, setIsMac] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [overlay, setOverlay] = useState(\"\");\n    const [showPop, setShowPop] = useState(\"\");\n    const [mirror, setMirror] = useState(null);\n    const [disableActionBar, setDisableActionBar ] = useState(false);\n    const [imported, setImported] = useState(false);\n    const [showConfirmPop, setShowConfirmPop] = useState(false);\n    const [showDpndntTcDlg, setShowDpndntTcDlg] = useState(false);\n    const [dTcFlag, setDTcFlag] = useState(false);\n    const [checkedTc, setCheckedTc] = useState({});\n    \n    useEffect(()=>{\n        setIsMac(navigator.appVersion.indexOf(\"Mac\") !== -1);\n        setLoading(false);\n        setImported(false);\n    }, [current_task, filter_data]);\n\n    const PopupDialog = () => (\n        <PopupMsg \n            data-test=\"d__popup\"\n            title={showPop.title}\n            close={()=>setShowPop(\"\")}\n            content={showPop.content}\n            submitText=\"OK\"\n            submit={showPop.onClick ? showPop.onClick : ()=>setShowPop(\"\")}\n        />\n    );\n\n    const ConfirmPopup = () => (\n        <ModalContainer \n            title={showConfirmPop.title}\n            content={showConfirmPop.content}\n            close={()=>setShowConfirmPop(false)}\n            footer={\n                <>\n                <button onClick={showConfirmPop.onClick}>Yes</button>\n                <button onClick={()=>setShowConfirmPop(false)}>No</button>\n                </>\n            }\n        />\n    )\n\n    return (\n        <>\n        {\n        !loading &&\n        <>\n        { overlay && <ScreenOverlay content={overlay} />}\n        { showPop && <PopupDialog />}\n        { showConfirmPop && <ConfirmPopup /> }\n        { showDpndntTcDlg && <DependentTestCaseDialog \n                                scenarioId = {current_task.scenarioId}\n                                setShowDlg={setShowDpndntTcDlg} \n                                checkedTc={checkedTc}\n                                setCheckedTc={setCheckedTc} \n                                setDTcFlag={setDTcFlag}\n                                taskName={current_task.testCaseName}\n                                taskId={current_task.testCaseId}\n                                setShowPop={setShowPop}\n                                />\n        }\n        <div className=\"d__body\">\n            <Header data-test=\"d__header\" />\n            <div className=\"d__mid_section\">\n                \n                <ActionBar data-test=\"d__actionBar\" \n                            upperContent={\n                                <UpperContent key={777} \n                                    showDlg={showDpndntTcDlg} \n                                    setShowDlg={setShowDpndntTcDlg}\n                                    dTcFlag={dTcFlag} \n                                    setDTcFlag={setDTcFlag} \n                                    setCheckedTc={setCheckedTc}\n                                    checkedTc={checkedTc} \n                                    isMac={isMac}\n                                    disable={disableActionBar} \n                                    setOverlay={setOverlay} \n                                    setShowPop={setShowPop}\n                                />\n                            } \n                            bottomContent={\n                                <BottomContent \n                                    setShowPop={setShowPop} \n                                    disable={disableActionBar}\n                                    setImported={setImported} \n                                    setShowConfirmPop={setShowConfirmPop}\n                                />\n                            }\n                />\n                <DesignContent data-test=\"d__contents\" \n                                current_task={current_task} \n                                imported={imported} \n                                setImported={setImported} \n                                setMirror={setMirror} \n                                setShowPop={setShowPop} \n                                setShowConfirmPop={setShowConfirmPop}\n                                setDisableActionBar={setDisableActionBar}\n                                />\n                \n                <ReferenceContent data-test=\"d__refBar\" mirror={mirror}/>\n                \n            </div>\n            <div data-test=\"d__footer\" className='d__footer'><Footer/></div>\n        </div>\n        </>}\n        </>\n    );\n}\n\n\nexport default DesignHome;","import React, { useEffect } from 'react';\nimport {useHistory} from 'react-router-dom';\nimport { RedirectPage } from '../global';\nimport DesignHome from './containers/DesignHome';\n\nconst Design = () => {\n    \n    const history = useHistory();\n\n    useEffect(()=>{\n        if(window.localStorage['navigateScreen'] !== \"TestCase\"){\n            RedirectPage(history);\n        }\n        //eslint-disable-next-line\n    }, []);\n\n    return (\n        <DesignHome />\n    );\n};\n\nexport default Design;","import React ,{useState} from 'react';\nimport { ActionBar } from '../../global';\nimport  \"../styles/Leftbar.scss\";\n\nconst Leftbar=(props)=>{\n    const [focus,setFocus] = useState(\"encryption\") //state to manage css on Icon click\n    const upperContent=()=>{\n        return(\n            <div className=\"letfnav\">\n                <h4>Utilities</h4>\n                <span onClick={()=>{props.setScreenType(\"encryption\") ; setFocus(\"encryption\")}}>\n                    <img src='static/imgs/ic-encryption-utility.png' alt=\"EncryptIcon\" id={(focus===\"encryption\")? \"selected\":null}/>\n                    <div>Encryption</div>\n                </span>\n                {/* <span onClick={()=>{props.setScreenType(\"optimization\");  setFocus(\"optimization\") ; props.setPairwiseClicked(false)}}>\n                    <img src='static/imgs/ic-optimization.png' alt=\"optimizationIcon\" id={(focus===\"optimization\")? \"selected\":null}/>\n                    <div>Optimization</div>\n                </span> */}\n                <span onClick={()=>{props.setScreenType(\"execution\");  setFocus(\"execution\"); }}>\n                    <div className=\"fa fa-database fa-2x util__execution_ic\" id={(focus===\"execution\")? \"selected\":\"\"}/>\n                    <div>Execution Metrics</div>\n                </span>\n                <span onClick={()=>{props.setScreenType(\"datatable-Create\");  setFocus(\"datatable\"); }}>\n                    <div className=\"fa fa-table fa-2x util__execution_ic\" id={(focus===\"datatable\")? \"selected\":\"\"}/>\n                    <div>Data Table</div>\n                </span>\n            </div>\n        )\n    }\n    const bottomContent=()=>{\n        return null;\n    }\n    return (\n            <ActionBar \n            upperContent={upperContent()} \n            bottomContent={bottomContent()}\n            />\n    )\n}\n\nexport default Leftbar\n","import React from 'react';\r\nimport {ReferenceBar } from '../../global';\r\n\r\nconst Rightbar=()=>{\r\n    const hideInfo = true ;\r\n    return (\r\n            <ReferenceBar \r\n                hideInfo={hideInfo} \r\n            />\r\n           \r\n            )\r\n}\r\n\r\nexport default Rightbar;\r\n","import React ,{ Fragment } from 'react';\r\n\r\nconst Encrypt=(props)=>{\r\nreturn(\r\n    <Fragment>\r\n        <div className=\"page-taskName\" >\r\n            <span className=\"taskname\">\r\n                Encryption\r\n            </span>\r\n        </div>\r\n        <div>\r\n            <select data-test=\"utility_screen_selection_sel\" \r\n                value={props.encyptMethod ? props.encyptMethod : 'SelectMethod'} \r\n                onChange={(e)=>props.onDropChange(e)} \r\n                id = \"dropdown\"\r\n            >\r\n                <option className=\"options\" selected disabled  value=\"SelectMethod\">Select Method</option>\r\n                <option className=\"options\" value=\"AES\">AES</option>\r\n                <option className=\"options\" value=\"MD5\">MD5</option>\r\n                <option className=\"options\" value=\"Base64\">Base64</option>\r\n            </select>\r\n        </div>\r\n        \r\n        <div className=\"ult_content_conatiner\">\r\n            <div data-test=\"utility_encryption_data_div\" className={ props.emptyCall? \"encryptionData-body emptycall\" :\"encryptionData-body\"}>\r\n                <textarea data-test=\"utility_encryption_data_inp\" value={props.encyptValue ? props.encyptValue : ''} id= \"encryptData\" placeholder=\"Enter Data For Encryption\" onChange={(e)=>props.ontextchange(e)}/>\r\n            </div>\r\n\r\n        {props.encyptBtn && \r\n        <div id=\"encryption_btns\">\r\n            <button className=\"btn-utl\" data-test=\"encryption_options_btn\" onClick={()=>props.callEncrypt(props.encryptionType ,props.encryptionValue)}>\r\n                {props.btnName}\r\n            </button>\r\n            <button data-test=\"encryption_reset_btn\" onClick={()=>props.callReset()} className=\"btn-reset\">Reset</button>\r\n        </div>}\r\n        <div data-test=\"utility_encrypted_data_div\" className=\"encryptionData-body\">\r\n            <textarea data-test=\"utility_encrypted_data_inp\" id=\"encryptedData\" readOnly={true} placeholder=\"Encrypted Data\" value={props.encryptedData}/>\r\n        </div>\r\n        </div>\r\n        \r\n    </Fragment>)\r\n}\r\n\r\nexport default Encrypt","import React ,{Fragment,useEffect,useState } from 'react';\r\nimport {ScrollBar ,PopupMsg} from '../../global';\r\nimport ValidationExpression from '../../global/components/ValidationExpression';\r\n\r\nconst Pairwise=(props)=>{\r\n    const [optimizationType , SetOptimizationType]=useState(null);   \r\n    \r\n    useEffect(()=>{\r\n        if (!props.pairwiseClicked) {\r\n            SetOptimizationType(null);\r\n            props.setLevel(0)\r\n            props.setFactor(0)\r\n        }\r\n    }, [props.pairwiseClicked])\r\n\r\n    useEffect(()=>{\r\n        props.setLevel(0)\r\n        props.setFactor(0)\r\n       // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    const callKeyDown=(type)=>{   \r\n        type ===\"factor\"?\r\n        props.factref.current.value = ValidationExpression(props.factref.current.value,\"optimazationInput\"):\r\n        props.levelref.current.value = ValidationExpression(props.levelref.current.value,\"optimazationInput\")\r\n\r\n    }\r\nreturn(\r\n    <Fragment>\r\n        {(optimizationType===\"pairwise\")?\r\n                    <Fragment>\r\n                        <div className=\"page-taskName\" >\r\n                            <span data-test=\"utl_pairwise_scr_name\" className=\"taskname\">\r\n                                Pairwise\r\n                            </span>\r\n                        </div> \r\n                        <div className=\"pairwise_scr\">\r\n                            <span>Factor</span>\r\n                            <input \r\n                                data-test=\"utl_pairwise_factor_inp\"\r\n                                placeholder=\"Enter Factor\" \r\n                                ref={props.factref}\r\n                                id={props.emptyCreateCall===\"factor\"?\"EmptyCall\":\"\"}  \r\n                                onChange={()=>{callKeyDown('factor')}}  \r\n                                //value={props.factor}\r\n                            />                            \r\n                            <span>Level</span>\r\n                            <input \r\n                                data-test=\"utl_pairwise_level_inp\"\r\n                                placeholder=\"Enter Level\" \r\n                                ref={props.levelref}\r\n                                id={props.emptyCreateCall===\"level\"?\"EmptyCall\":\"\"}\r\n                                onChange={()=>{callKeyDown(\"level\")}}  \r\n\r\n                            />\r\n                            <button \r\n                                    className=\"btn-create\"\r\n                                    onClick={()=>props.callCreate()}\r\n                                    data-test=\"utl_pairwise_create_btn\"\r\n                            >\r\n                                Create\r\n                            </button>\r\n                            <button \r\n                                    className=\"btn-utl\" \r\n                                    onClick={()=>props.callGenerate()}\r\n                                    data-test=\"utl_pairwise_generate_btn\"\r\n                            >\r\n                                Generate\r\n                            </button>\r\n                        \r\n                        <br/>\r\n                            {props.gererateClick && <PopupMsg \r\n                                                content={\"Table values cannot be empty\"} \r\n                                                title={\"Pairwise\"} \r\n                                                submit={()=>props.setGenerateClick(false) } \r\n                                                submitText={\"Ok\"} \r\n                                                close={()=>props.setGenerateClick(false)}\r\n                                                />}                        \r\n                        </div>\r\n                    <div className=\"pairsie_array_container\">\r\n                    <div className=\"pw__ab\">\r\n                    <div className=\"pw__min\">\r\n                    <div className=\"pw__con\" id=\"scrapeObjCon\">\r\n                        <ScrollBar thumbColor ={\"#311d4e\"} trackColor ={\"rgb(211, 211, 211);\"}>                        \r\n                            <div className=\"pairwise_array\">\r\n                            {/* <ScrollBar thumbColor ={\"#311d4e\"} trackColor ={\"rgb(211, 211, 211);\"}> */}\r\n                                {Array.from(Array(props.factor)).map((e,i)=>(\r\n                                        <div className='factor__row' key={i} >\r\n                                            <input  key={i} onChange={(e)=>props.updateInputFactorTable(e,i)} type=\"text\"/>\r\n                                            {Array.from(Array(props.level)).map((e,i)=>\r\n                                                <input onChange={(e)=>props.updateInputLevelTable(e,i)} key={i} type=\"text\"/>\r\n                                            )}\r\n                                        </div>\r\n                                ))}\r\n                                \r\n                            {/* </ScrollBar> */}\r\n                            </div>\r\n                        </ScrollBar>\r\n                        </div></div></div></div>\r\n                    </Fragment> :\r\n                    <Fragment>\r\n                        <div className=\"page-taskName\">\r\n                            <span data-test=\"utl_optimization_scr_name\" className=\"taskname\">\r\n                                Optimization\r\n                            </span>\r\n                        </div>\r\n                        <div id=\"optimization-fn\">\r\n                            <div>\r\n                                <div data-test=\"utl_optimization_pairwise_div\" onClick={()=>{SetOptimizationType(\"pairwise\"); props.setPairwiseClicked(true);}} className=\"pairwise\">\r\n                                    <img data-test=\"utl_optimization_pairwise_logo\" src='static/imgs/ic-pairwise.png' alt=\"Pairwise_img\"/>\r\n                                    <div>Pairwise</div>\r\n                                </div>\r\n                                <div data-test=\"utl_optimization_orthogonal_div\" className=\"pairwise\">\r\n                                    <img data-test=\"utl_optimization_orthogonal_logo\" src='static/imgs/ic-orthogonal-array.png' alt=\"Orthogonal_img\"/>\r\n                                    <div>Orthogonal Array</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>}\r\n                    </Fragment>\r\n)\r\n}\r\n\r\nexport default Pairwise;","import axios from 'axios';\r\nimport {RedirectPage} from '../global'\r\nimport {history} from './index'\r\nimport {url} from '../../App';\r\n\r\n/*Component Encrypt_ICE\r\n  use: gets the Encrypted Value of the users Input based on encryption type also given by user only\r\n  api returns : value\r\n*/\r\nexport const Encrypt_ICE = async(encryptionType ,encryptionValue) => {\r\n    try{\r\n        const res = await axios(url+'/Encrypt_ICE', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-type': 'application/json',\r\n            },\r\n           data: {\r\n            encryptionType: encryptionType,\r\n            encryptionValue: encryptionValue,\r\n            param : 'Encrypt_ICE'\r\n           }\r\n        });\r\n        if(res.status === 401 || res.data === \"Invalid Session\"){\r\n            RedirectPage(history)\r\n            return {error:'invalid session'};\r\n        }\r\n        if(res.status===200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return {error:'Failed to Encrypt'}\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'Failed to Encrypt'}\r\n    }\r\n}\r\n\r\n\r\nexport const fetchMetrics = async(arg) => {\r\n    try{\r\n        const res = await axios(url+'/getExecution_metrics', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            data: {\r\n                metrics_data : arg\r\n            }\r\n        });\r\n        if(res.status === 401 || res.data === \"Invalid Session\"){\r\n            RedirectPage(history)\r\n            return {error:'invalid session'};\r\n        }\r\n        if(res.status===200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return {error:'Failed to Fetch'}\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'Failed to Fetch'}\r\n    }\r\n}\r\n\r\nexport const createDataTable = async(arg) => {\r\n    try{\r\n        const res = await axios(url+'/manageDataTable', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            data: {\r\n                action: \"create\",\r\n                datatablename: arg.tableName,\r\n                dtheaders: arg.headers,\r\n                datatable: arg.data,\r\n            }\r\n        });\r\n        if(res.status === 401){\r\n            RedirectPage(history)\r\n            return { error: 'invalid session' };\r\n        }\r\n        if(res.status === 200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return { error:'Failed to create DataTable' }\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'Failed to create DataTable'}\r\n    }\r\n}\r\n\r\nexport const editDataTable = async(arg) => {\r\n    try{\r\n        const res = await axios(url+'/manageDataTable', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            data: {\r\n                action: \"edit\",\r\n                datatablename: arg.tableName,\r\n                dtheaders: arg.headers,\r\n                datatable: arg.data,\r\n            }\r\n        });\r\n        if(res.status === 401){\r\n            RedirectPage(history)\r\n            return { error: 'invalid session' };\r\n        }\r\n        if(res.status === 200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return { error:'Failed to edit DataTable' }\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'Failed to edit DataTable'}\r\n    }\r\n}\r\n\r\nexport const confirmDeleteDataTable = async(arg) => {\r\n    try{\r\n        const res = await axios(url+'/manageDataTable', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            data: {\r\n                action: \"deleteConfirm\",\r\n                datatablename: arg.tableName\r\n            }\r\n        });\r\n        if(res.status === 401){\r\n            RedirectPage(history)\r\n            return { error: 'invalid session' };\r\n        }\r\n        if(res.status === 200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return { error:'Failed to confirm delete DataTable' }\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'Failed to confirm delete DataTable'}\r\n    }\r\n}\r\n\r\nexport const deleteDataTable = async(arg) => {\r\n    try{\r\n        const res = await axios(url+'/manageDataTable', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            data: {\r\n                action: \"delete\",\r\n                datatablename: arg.tableName\r\n            }\r\n        });\r\n        if(res.status === 401){\r\n            RedirectPage(history)\r\n            return { error: 'invalid session' };\r\n        }\r\n        if(res.status === 200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return { error:'Failed to delete DataTable' }\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'Failed to delete DataTable'}\r\n    }\r\n}\r\n\r\nexport const fetchDataTables = async() => {\r\n    try{\r\n        const res = await axios(url+'/getDatatableDetails', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            data: {\r\n                action: \"datatablenames\"\r\n            }\r\n        });\r\n        if(res.status === 401){\r\n            RedirectPage(history)\r\n            return { error: 'invalid session' };\r\n        }\r\n        if(res.status === 200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return { error:'Failed to Fetch DataTables' }\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'Failed to Fetch DataTables'}\r\n    }\r\n}\r\n\r\nexport const fetchDataTable = async(arg) => {\r\n    try{\r\n        const res = await axios(url+'/getDatatableDetails', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            data: {\r\n                action: \"datatable\",\r\n                datatablename: arg.tableName,\r\n            }\r\n        });\r\n        if(res.status === 401){\r\n            RedirectPage(history)\r\n            return { error: 'invalid session' };\r\n        }\r\n        if(res.status === 200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return { error:'Failed to Fetch DataTables' }\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'Failed to Fetch DataTables'}\r\n    }\r\n}","import React, { useState } from  'react';\nimport { useHistory } from 'react-router-dom';\nimport { RedirectPage, CalendarComp } from '../../global';\nimport { fetchMetrics } from '../api';\nimport \"../styles/ExecutionMetrics.scss\";\n\nconst ExecutionMetrics = props => {\n\n    const history = useHistory();\n\n    const [error, setErrors] = useState({});\n    const [fromDate, setFromDate] = useState(\"\");\n    const [toDate, setToDate] = useState(\"\");\n    const [lob, setLob] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n    const [executionId, setExecutionId] = useState(\"\");\n\n    const handleReset = () => {\n        setFromDate(\"\");\n        setToDate(\"\");\n        setLob(\"\");\n        setStatus(\"\");\n        setExecutionId(\"\");\n    }\n\n    const handleSubmit = () => {\n        let arg;\n        let err;\n\n        if (!fromDate || !toDate || !lob){\n            err = {fromDate: !fromDate, toDate: !toDate, lob: !lob};\n        } else {\n            arg = {\n                ui: true,\n                fromDate: fromDate,\n                toDate: toDate,\n                LOB: lob,\n            }\n            if (executionId) arg['executionId'] = executionId;\n            if (status) arg['status'] = status\n        }\n\n        if (err) setErrors(err);\n        else {\n            let sd = fromDate.split('-');\n            let ed = toDate.split('-');\n            let start_date = new Date(sd[2] + '-' + sd[1] + '-' + sd[0]);\n            let end_date = new Date(ed[2] + '-' + ed[1] + '-' + ed[0]);\n\n            if (end_date < start_date) setErrors({ fromDate: true, toDate: true });\n            else {\n                props.setBlockui({show: true, content: 'Fetching Metrics...'})\n                fetchMetrics(arg)\n                .then(result => {\n                    props.setBlockui({ show: false })\n                    if (result === \"Invalid Session\") return RedirectPage(history);\n                    else if (result === \"fail\") props.setPopup({title: \"Fail\", content: \"Error while exporting Execution Metrics\", submitText: \"OK\", show: true });\n                    else if (result === \"NoRecords\") props.setPopup({title: \"Fail\", content: \"No records found\", show: true, submitText: \"OK\"});\n                    else if (result.error) props.setPopup({title: \"Fail\", content: result.error, show: true, submitText: \"OK\"});\n                    else {\n                        let isIE = false || !!document.documentMode;\n                        let file = new Blob([result], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n                        if (isIE) {\n                            navigator.msSaveOrOpenBlob(file);\n                        } else {\n                            let fileURL = URL.createObjectURL(file);\n                            let a = document.createElement('a');\n                            a.href = fileURL;\n                            a.download = 'metrics.csv';\n                            document.body.appendChild(a);\n                            a.click();\n                            document.body.removeChild(a);\n                            URL.revokeObjectURL(fileURL);\n                        }\n                        props.setPopup({\n                            title: \"Success\", \n                            content: \"Successfully exported Execution Metrics to CSV\",\n                            submitText: \"OK\",\n                            show: true\n                        });\n                    }\n                })\n                .catch(error => {\n                    props.setPopup({\n                        title: \"ERROR\", \n                        content: \"Failed!\",\n                        submitText: \"OK\",\n                        show: true\n                    });\n                    console.error(error);\n                });\n            }\n        }\n    }\n \n    return ( <>\n        <div className=\"page-taskName\" >\n            <span className=\"taskname\" data-test=\"util__pageTitle\">\n                Execution Metrics\n            </span>\n        </div>\n        <div className=\"execM__btnGroup\">\n            <button onClick={handleSubmit} data-test=\"util__fetch\">Fetch</button>\n            <button onClick={handleReset} data-test=\"util__reset\">Reset</button>\n        </div>\n        <div className=\"execM__inputGroup\">\n            <span className=\"execM__inputLabel\" data-test=\"util__inputLabel\">From Date<span className=\"execM__mandate\">*</span></span>\n            <CalendarComp execMetrics={true} date={fromDate} setDate={(val)=>setFromDate(val)} error={error.fromDate} />\n\n            <span className=\"execM__inputLabel\" data-test=\"util__inputLabel\">To Date<span className=\"execM__mandate\">*</span></span>\n            <CalendarComp execMetrics={true} date={toDate} setDate={(val)=>setToDate(val)} error={error.toDate} />\n\n            <span className=\"execM__inputLabel\" data-test=\"util__inputLabel\">LOB<span className=\"execM__mandate\">*</span></span>\n            <input data-test=\"util__input\" className={\"execM__input\" + (error.lob ? \" execM__inputError\":\"\")} placeholder=\"Enter LOB\" value={lob} onChange={(e)=>setLob(e.target.value)} />\n\n            <span className=\"execM__inputLabel\" data-test=\"util__inputLabel\">Status</span>\n            <input data-test=\"util__input\" className={\"execM__input\" + (error.status ? \" execM__inputError\":\"\")} placeholder=\"Enter Status\" value={status} onChange={(e)=>setStatus(e.target.value)} />\n\n            <span className=\"execM__inputLabel\" data-test=\"util__inputLabel\">ExecutionID</span>\n            <input data-test=\"util__input\" className={\"execM__input\" + (error.status ? \" execM__inputError\":\"\")} placeholder=\"Enter Execution ID\" value={executionId} onChange={(e)=>setExecutionId(e.target.value)} />\n        </div>\n    </> );\n}\n\nexport default ExecutionMetrics;","import React, { useState, useEffect, useRef } from 'react';\nimport { ScrollBar } from '../../global';\nimport { ReactSortable } from 'react-sortablejs';\nimport \"../styles/Table.scss\";\n\n/* \n    data\n    setData\n    checkList\n    setCheckList\n    dnd\n*/\n\nconst Table = props => {\n\n    const headerRef = useRef();\n    const rowRef = useRef();\n\n    const updateHeaders = (newHeader, headerId) => {\n        let newHeaders = [...props.headers];\n        let oldHeaderName;\n        newHeaders.forEach(header => {\n            if (header.id === headerId) {\n                oldHeaderName = header.name\n                header.name = newHeader;\n            }\n        })\n        let newData = [...props.data];\n        newData.forEach(row => {\n            let columnValue = row[oldHeaderName];\n            delete row[oldHeaderName]\n            row[newHeader] = columnValue;\n        })\n        props.setHeaders(newHeaders);\n        props.setData(newData);\n    }\n\n    const updateTableData = (value, rowId, columnName, headerId) => {\n        let newData = [...props.data];\n        \n        for (let row of newData) {\n            if (row.id === rowId) {\n                props.undoStack.push({ rowId: row.id, colId: headerId, value: row[columnName]});\n                row[columnName] = value;\n                break;\n            }\n        }\n        \n        if (props.undoStack.length>5)\n            props.undoStack.splice(0, 1);\n        \n        props.setData(newData);\n    }\n\n    // loc => id for header, index for row\n    const updateCheckList = (e, type, loc) =>{\n        let newCheckList = props.checkList.type === type ? { ...props.checkList} : { type: type, list: [] }\n\n        if (e.ctrlKey) {\n            let itemIndex = newCheckList.list.indexOf(`sel||${type}||${loc}`);\n            if (itemIndex<0) \n                newCheckList.list.push(`sel||${type}||${loc}`);\n            else \n                newCheckList.list.splice(itemIndex, 1);\n            \n        }\n        else {\n            newCheckList.list = [`sel||${type}||${loc}`]\n        }\n\n        props.setCheckList(newCheckList);\n    }\n\n    const onScrollY = e =>{\n        rowRef.current.style.top = `-${e.scrollTop}px`\n    }\n\n    const onScrollX = e => {\n        headerRef.current.style.left = `-${e.scrollLeft}px`;\n    }\n\n    return (\n        <>\n        { <div className=\"dt__table full__dt\">\n            <RowNumColumn\n                { ...props }\n                rowRef={rowRef}\n                updateCheckList={updateCheckList}\n                onAdd={props.onAdd}\n            />\n            {/* <ScrollBar scrollId=\"dt__outer\" hideYbar={true}> */}\n            <div className=\"dt__headersMainContainer full__dt\">\n                <div className=\"dt__headersScrollContainer\">\n                    <div ref={headerRef} className=\"dt__Scroller\">\n                        <Headers\n                            headers={props.headers} \n                            setHeaders={props.setHeaders}\n                            onAdd={props.onAdd}\n                            updateCheckList={updateCheckList}\n                        />\n                    </div>\n                </div>\n                \n                <div className=\"full__dt\" style={{ display: 'flex' }}>\n                    <Rows \n                        { ...props }\n                        onScrollY={onScrollY}\n                        onScrollX={onScrollX}\n                        updateHeaders={updateHeaders} \n                        updateCheckList={updateCheckList}\n                        updateTableData={updateTableData}\n                    />\n                </div>\n            </div>                        \n            {/* </ScrollBar> */}\n        </div> }\n        </>\n    );\n}\n\nexport default Table;\n\nconst Headers = ({headers, setHeaders, updateCheckList, onAdd}) => {\n    return(\n        <div className=\"dt__table_header\" >\n        {/* <div className=\"dt__table_numbered_column_header\" /> */}\n        <ReactSortable \n            list={headers} \n            setList={setHeaders}\n            className=\"dt__table_header_cells\"\n            ghostClass=\"dt__ghost_header\"\n        >\n            { headers.map((header, headerIndex) => {\n                return (\n                    <HeaderCell  \n                        key={`header-${header.id}`}\n                        headerIndex={headerIndex}\n                        headerName={header.name}\n                        headerId={header.id}\n                        headers={headers}\n                        updateCheckList={updateCheckList}\n                    />\n                )\n            }) }\n        </ReactSortable>\n        <div className=\"dt__table_new_column_header\" onClick={()=>onAdd('col')}>\n            +\n        </div>\n        </div>\n    );\n}\n\n/*\n    headerName => header's name\n    headerIndex => for header's index in header array\n    headers => header list to check when renaming header\n    updateHeaders => updates Header State and all headers in data\n*/\nconst HeaderCell = props => {\n    const [value, setValue] = useState(props.headerIndex || '')\n\n    useEffect(() => {\n        setValue(props.headerIndex)\n    }, [props.headerIndex]);\n\n    return (\n        <div className=\"dt__cell dt__table_header_cell\" data-test=\"dt__header_cell\">\n            <div onClick={(e)=>props.updateCheckList(e, \"col\", props.headerId)}>{`C${value+1}`}</div> \n        </div>\n    );\n}\n\n\nconst Rows = props => {\n\n    return(\n        <div className=\"dt__table_rows_container full__dt\">\n        <div className=\"dt__ab\">\n        <div className=\"dt__min\">\n        <div className=\"dt__con\" id=\"dt__tcListId\">\n        <ScrollBar scrollId=\"dt__tcListId\" horizontalbarWidth=\"8px\" verticalbarWidth=\"8px\" thumbColor=\"#321e4f\" trackColor=\"rgb(211, 211, 211)\" onScrollX={props.onScrollX} onScrollY={props.onScrollY}>\n            {/* <ReactSortable list={props.data} setList={props.setData} disabled={!props.dnd} key={props.dnd.toString()}> */}\n            <SubHeaderRow \n                headers={props.headers}\n                updateHeaders={props.updateHeaders} \n                checkList={props.checkList}\n            />\n            { props.data.map((row, rowIndex)=>{\n                return (\n                    <Row \n                        key={`row-${row.id}`}\n                        checkList={props.checkList}\n                        setCheckList={props.setCheckList}\n                        updateTableData={props.updateTableData}\n                        headers={props.headers}\n                        row={row}\n                        rowIndex={rowIndex}\n                        updateCheckList={props.updateCheckList}\n                    />\n                )\n            }) }\n            <AddRow />\n            {/* </ReactSortable> */}\n            </ScrollBar>\n            </div>\n            </div>\n            </div>\n        </div>\n    );\n}\n\nconst RowNumColumn = props => {\n    return (\n        <div className=\"dt__numberColumnContainer\">\n            <div className=\"dt__table_numbered_column_header\"/>\n            <div className=\"dt__numberColScrollContainer\">\n                <div ref={props.rowRef} className=\"dt__Scroller\">\n                <div \n                    key={`rownum-header`}\n                    className=\"dt__table_numbered_column \" \n                    data-test=\"dt__number_cell\"\n                >\n                    1\n                </div>\n                <ReactSortable list={props.data} setList={props.setData} disabled={!props.dnd} key={props.dnd.toString()} ghostClass=\"dt__ghost_header\">\n                { props.data.map((row, rowIndex)=>{\n                    return (\n                        <div \n                            key={`rownum-${row.id}`}\n                            className=\"dt__table_numbered_column \" \n                            onClick={(e)=>props.updateCheckList(e, \"row\", row.id)}\n                            data-test=\"dt__number_cell\"\n                        >\n                            {rowIndex+2}\n                        </div>\n                    )\n                }) }\n                </ReactSortable>\n                <div \n                    key={`rownum-addRow`}\n                    className=\"dt__table_numbered_column dt__addRow\"\n                    data-test=\"dt__number_cell\"\n                    onClick={()=>props.onAdd('row')}\n                >\n                    +\n                </div>\n                </div>\n            </div>   \n        </div>\n    );\n}\n\nconst SubHeaderRow = props => {\n\n    return (\n        <div className=\"dt__table_row header_row\" data-test=\"dt__row\">\n            { props.headers.map(header => {\n                return (\n                    <SubHeaderCell \n                        key={`cell-header-${header.id}`}\n                        columnName={header.name}\n                        initialValue={header.name}\n                        updateHeaders={props.updateHeaders}\n                        headers={props.headers}\n                        headerId={header.id}\n                        selected={props.checkList.list.includes(`sel||col||${header.id}`)}\n                    />\n                )\n            }) }\n            <div className=\"dt__table_add_column \" />\n        </div>\n    )\n}\n\nconst AddRow = props => {\n    return (\n        <div className=\"dt__table_AddRow dt__table_row\" data-test=\"dt__row\">\n            \n        </div>\n    );\n}\n\n\nconst SubHeaderCell  = props => {\n    const [value, setValue] = useState(props.initialValue || '');\n\n    useEffect(() => {\n        setValue(props.initialValue || '')\n    }, [props.initialValue]);\n\n    const onBlur = e => {\n        let invalidHeader = false;\n        props.headers.forEach(header => {\n            if (!value.trim() || (header.name === value && header.id!==props.headerId)) invalidHeader = true;\n        })\n\n        if (invalidHeader){\n           console.log(\"ERROR\")\n            return false;\n        }\n        else {\n            props.updateHeaders(value, props.headerId)\n        }\n        return true;\n    };\n\n    const onChange = e => setValue(e.target.value);\n\n    const checkKeyPress = event => {\n        if (event.keyCode === 13) onBlur();\n    }\n\n    return (\n        <div className={\"dt__cell dt__subHeaderCell \"+(props.selected?\"dt__selected_cell\":'')} data-test=\"dt__body_cell\">\n            <input value={value || ''} onChange={onChange} onBlur={onBlur} onKeyDown={checkKeyPress}/>\n        </div>\n    );\n}\n\n\n\nconst Row = props => {\n\n    return (\n        <div className=\"dt__table_row\" data-test=\"dt__row\">\n            { props.headers.map(header => {\n                return (\n                    <DataCell \n                        key={`cell-${props.row.id}-${header.id}`}\n                        rowId={props.row.id}\n                        columnName={header.name}\n                        headerId = {header.id}\n                        initialValue={props.row[header.name]}\n                        updateTableData={props.updateTableData}\n                        selected={\n                            props.checkList.list.includes(`sel||row||${props.row.id}`) ||\n                            props.checkList.list.includes(`sel||col||${header.id}`)\n                        }\n                    />\n                )\n            }) }\n            <div className={\"dt__table_add_column \"+ (props.checkList.list.includes(`sel||row||${props.row.id}`)?\"dt__selected_cell\":\"\")} />\n        </div>\n    )\n}\n\n/* \n    value => cell's name\n    updateTableData => To Update Table Data\n*/\n\nconst DataCell  = props => {\n    const [value, setValue] = useState(props.initialValue || '');\n\n    useEffect(() => {\n        setValue(props.initialValue || '')\n    }, [props.initialValue]);\n\n    const onChange = e => setValue(e.target.value);\n\n    const checkKeyPress = event => {\n        if (event.keyCode === 13) onBlur();\n    }\n\n    const onBlur = e => props.updateTableData(value, props.rowId, props.columnName, props.headerId)\n\n    return (\n        <div className={\"dt__cell \"+(props.selected?\"dt__selected_cell\":'')} data-test=\"dt__body_cell\">\n            <input value={value || ''} onChange={onChange} onBlur={onBlur} onKeyDown={checkKeyPress}/>\n        </div>\n    );\n}","import React, { useState, useEffect, useRef }  from 'react';\nimport { v4 as uuid } from 'uuid';\n// import { tableData, datatables } from './dummydata';\nimport ClickAwayListener from 'react-click-away-listener';\nimport { PopupMsg, ScrollBar } from '../../global';\nimport Table from './Table';\nimport * as utilApi from '../api';\nimport \"../styles/DataTable.scss\";\n\n\nlet undoStack = [];\n\nconst DataTable = props => {\n\n    const [currScreen, setCurrScreen] = useState(props.currScreen);\n    const [data, setData] = useState([{id: uuid()}]);\n\n    const [headers, setHeaders] = useState([{id: uuid(), name: 'C1'}, {id: uuid(), name: 'C2'}]);\n    const [checkList, setCheckList] = useState({type: 'row', list: []});\n    const [dnd, setDnd] = useState(false);\n    const [headerCounter, setHeaderCounter] = useState(3);\n    const [dataTables, setDataTables] = useState([]);\n    const [showPop, setShowPop] = useState(false);\n    const [tableName, setTableName] = useState('');\n    /*\n        undoStack: [\n            { row: <row-id>, col: <col-id>, value: old-value }\n        ]\n    */\n\n    useEffect(()=>{\n        // GET DATA FROM API\n        // let newData = JSON.parse(JSON.stringify([...tableData]));\n        // newData.forEach((row, index) => {\n        //     row['id'] = uuid();\n        // })\n        // setData(newData);\n        // // SETTING UP COLUMN HEADERS\n        // let colHeaders = Object.keys(tableData[0]);\n        // let newHeaders = [];\n        // for(let i=0; i<colHeaders.length; i++) {\n        //     newHeaders.push({\n        //         id: uuid(),\n        //         name: colHeaders[i],\n        //     })\n        // }\n        // setHeaders(newHeaders);\n    }, [])\n\n    useEffect(()=>{\n        setCurrScreen(props.currScreen)\n        resetStates();\n    }, [props.currScreen])\n\n\n    const onUndo = () => {\n        if (undoStack.length) {\n            const lastEntry = undoStack.pop();\n            const [newData, found] = undoData(data, headers, lastEntry);\n            if (found) setData(newData);\n            else console.log(\"Cell Not Found!\")\n        }\n        else console.log(\"Nothing to Undo\")\n    }\n\n    const resetStates = () => {\n        if (props.currScreen === \"Create\") {\n            setData([{id: uuid()}]);\n            setDataTables([]);\n        }\n        else setData([]);\n        undoStack=[];\n        setHeaders([{id: uuid(), name: 'C1'}, {id: uuid(), name: 'C2'}]);\n        setCheckList({type: 'row', list: []});\n        setDnd(false);\n        setHeaderCounter(3);\n        setShowPop(false);\n    }\n\n\n    const displayData = () => {\n        console.log(\"Headers:\", headers)\n        console.log(\"Data:\", data);\n    }\n\n    const onAdd = type => {\n        if (type===\"col\") {\n            let newHeaders = [...headers];\n            \n            newHeaders.push({\n                id: uuid(),\n                name: `C${headerCounter}`\n            })\n\n            setHeaders(newHeaders);\n            setHeaderCounter(count => count + 1);\n        }\n        else if (type === \"row\") {\n            let newData = [...data];\n            \n            newData.push({id: uuid()})\n\n            setData(newData);\n        }\n        else if (checkList.list.length===1){\n            if (checkList.type===\"row\"){\n                let newData = [...data];\n                let locToAdd = null;\n                let rowId = checkList.list[0].split('||').pop();\n\n                newData.forEach((row, rowIndex) => {\n                    if (rowId === row.id) locToAdd = rowIndex;\n                })\n                \n                newData.splice(locToAdd+1, 0, {id: uuid()});\n\n                setData(newData);\n            }\n            else{\n                let newHeaders = [...headers];\n                let locToAdd = null;\n                let headerId = checkList.list[0].split('||').pop();\n                \n                headers.forEach((header, headerIndex)=>{\n                    if (header.id === headerId) locToAdd = headerIndex;\n                })\n                \n                newHeaders.splice(locToAdd+1, 0, {\n                    id: uuid(),\n                    name: `C${headerCounter}`\n                })\n\n                setHeaders(newHeaders);\n                setHeaderCounter(count => count + 1);\n            }\n        }\n    }\n\n    const onDelete = () => {\n        // HANDLE CHECKLIST\n        if (checkList.list.length){\n            if (checkList.type===\"row\"){\n                let newData = [...data];\n                \n                for (let listItem of checkList.list){\n                    let rowId = listItem.split('||').pop();\n                    \n                    for (let i=0; i<newData.length; i++){\n                        if (rowId === newData[i].id) {\n                            newData.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n\n                setData(newData);\n            }\n            else{\n                let newHeaders = [...headers];\n                let newData = [...data];\n\n                for (let listItem of checkList.list){\n                    let headerId = listItem.split('||').pop();\n                    \n                    for (let i=0; i<newHeaders.length; i++){\n                        if (newHeaders[i].id === headerId){\n                            newData.forEach(row => {\n                                delete row[newHeaders[i].name]\n                            })\n                            newHeaders.splice(i, 1);\n                        }\n                    }\n                }\n\n                setHeaders(newHeaders);\n                setData(newData);\n            }\n        }\n    }\n\n    const goToEditScreen = async() => {\n        // FETCHING DATATABLES VIA API\n        try{\n            // const datatables = await utilApi.fetchDataTables();\n\n            // if (datatables.error) throw datatables.error;\n            \n            // setDataTables(datatables);\n            props.setScreenType('datatable-Edit');\n        }\n        catch(error) {\n\n        }\n    }\n\n    const Popup = () => (\n        <PopupMsg \n            title={showPop.title}\n            content={showPop.content}\n            close={()=>setShowPop(false)}\n            submitText=\"OK\"\n            submit={()=>setShowPop(false)}\n        />\n    )\n\n    return <>\n        { showPop && <Popup /> }\n        <div className=\"page-taskName\" >\n            <span className=\"taskname\" data-test=\"dt__pageTitle\">\n                {currScreen} Data Table\n            </span>\n        </div>\n        \n        <TableName currScreen={currScreen} tableName={tableName} setTableName={setTableName}  />\n        <div className=\"dt__btngroup\">\n            <TableActionButtons \n                onAdd={onAdd} \n                setDnd={setDnd} \n                onDelete={onDelete} \n                onUndo={onUndo}\n            />\n            { currScreen === \"Create\" \n                ? <CreateScreenActionButtons goToEditScreen={goToEditScreen} displayData={displayData} />\n                : <EditScreenActionButtons />\n            }\n        </div>\n\n        { currScreen===\"Edit\" && <SearchDataTable dataTables={dataTables} setData={setData} setHeaders={setHeaders} /> }\n\n        <div className=\"dt__table_container full__dt\">\n            {data.length>0 && \n            <Table \n                data={data}\n                setData={setData}\n                headers={headers}\n                setHeaders={setHeaders}\n                checkList={checkList}\n                setCheckList={setCheckList}\n                onAdd={onAdd}\n                dnd={dnd} \n                undoStack={undoStack}\n            />}\n        </div>\n    </>;\n}\n\nconst TableName = ({currScreen, tableName, setTableName}) => {\n    const [value, setValue] = useState(tableName || '');\n\n    useEffect(()=>{\n        setValue(tableName)\n    }, [tableName]);\n\n    const onChange = e => setValue(e.target.value);\n    const onBlur = () => setTableName(value);\n\n    return (\n        <div className=\"dt__tableName\">\n            DataTable Name:\n            {\n                currScreen === 'Create'\n                ? <input onBlur={onBlur} onChange={onChange} />\n                : <div>{value}</div>\n            }\n        </div>\n    );\n}\n\nconst TableActionButtons = ({ onAdd, setDnd, onDelete, onUndo }) => {\n\n    const tableActionBtnGroup = [\n        {'title': 'Add Selected Row/Column', 'img': 'static/imgs/ic-jq-addstep.png', 'alt': 'Add', onClick: ()=>onAdd()},\n        {'title': 'Drag & Drop Row', 'img': 'static/imgs/ic-jq-dragstep.png', 'alt': 'Drag Row', onClick:  ()=>setDnd(dnd => !dnd)},\n        {'title': 'Remove Selected Row/Column', 'img': 'static/imgs/ic-delete.png', 'alt': 'Remove', onClick:  ()=>onDelete()},\n        {'title': 'Undo Last Changes', 'img': 'static/imgs/ic-cycle.png', 'alt': 'Remove', onClick:  ()=>onUndo()}\n    ]\n\n    return (\n        <div className=\"dt__table_ac_btn_grp\">\n            {\n                tableActionBtnGroup.map((btn, i) => \n                    <button data-test=\"dt__tblActionBtns\" key={i} className=\"dt__tblBtn\" onClick={()=>btn.onClick()}><img className=\"dt__tblBtn_ic\" src={btn.img} alt={btn.alt} title={btn.title}/> </button>\n                )\n            }\n        </div>\n    );\n}\n\nconst CreateScreenActionButtons = props => {\n    return (\n        <div className=\"dt__taskBtns\">\n            <button className=\"dt__taskBtn dt__btn\" data-test=\"dt__tblActionBtns\" >Import</button>\n            <button className=\"dt__taskBtn dt__btn\" data-test=\"dt__tblActionBtns\" onClick={props.goToEditScreen}>Edit</button>\n            <button className=\"dt__taskBtn dt__btn\" data-test=\"dt__tblActionBtns\" onClick={props.displayData}>Create</button>\n        </div>\n    );\n}\n\nconst EditScreenActionButtons = props => {\n    return (\n        <div className=\"dt__taskBtns\">\n            <button className=\"dt__taskBtn dt__btn\" data-test=\"dt__tblActionBtns\" >Export</button>\n            <button className=\"dt__taskBtn dt__btn\">Delete</button>\n            <button className=\"dt__taskBtn dt__btn\">Update</button>\n        </div>\n    );\n}\n\nconst SearchDataTable = props => {\n    const searchRef = useRef('');\n    const [list, setList] =  useState([]);\n    const [filteredList, setFilteredList] = useState([]);\n    const [dropdown, setDropdown] = useState(false);\n\n    useEffect(()=>{\n        setList(props.dataTables);\n    }, [props.dataTables])\n\n    const onTableSelect = event => {\n        // const [newData, newHeaders] = parseTableData(tableData)\n        // props.setData(newData);\n        // props.setHeaders(newHeaders);\n        // searchRef.current.value = event.target.value;\n        // setDropdown(false);\n    }\n\n    const inputFilter = () =>{\n        const searchInput = searchRef.current.value;\n        let newFilteredList=[];\n        if (searchInput) \n            newFilteredList = list.filter(item => item.datatablename === searchInput);\n        setFilteredList(newFilteredList);\n    }\n    const resetField = () => {\n        searchRef.current.value = \"\";\n        setFilteredList([]);\n        setDropdown(true);\n    }\n\n    return(\n        <>\n        {/* <div>Enter Table Name:</div> */}\n        <ClickAwayListener onClickAway={()=>setDropdown(false)}>\n        <div className=\"dt__searchDataTable\">\n            <input ref={searchRef} type='text' autoComplete=\"off\" className=\"btn-users edit-user-dropdown-edit\" onChange={inputFilter} onClick={resetField} placeholder=\"Search Data Table...\"/>\n            <div className=\"dt__form_dropdown\" role=\"menu\" style={{display: (dropdown?\"block\":\"none\")}}>\n                <ScrollBar thumbColor=\"#929397\" >\n                {(filteredList.length ? filteredList : list)\n                    .map((e, i) => (  \n                        <option key={e._id} value={e.datatablename} onClick={onTableSelect}>{e.datatablename}</option> \n                    ))}\n                </ScrollBar>\n            </div>\n        </div>\n        </ClickAwayListener>\n        </>\n    )\n}\n\nconst parseTableData = table => {\n    let newData = JSON.parse(JSON.stringify([...table.datatable]));\n    newData.forEach(row => {\n        row['id'] = uuid();\n    })\n    \n    // SETTING UP COLUMN HEADERS\n    let colHeaders = [...table.dtheaders];\n    let newHeaders = [];\n    for(let i=0; i<colHeaders.length; i++) {\n        newHeaders.push({\n            id: uuid(),\n            name: colHeaders[i],\n        })\n    }\n    \n    return [newData, newHeaders]\n}\n\nconst undoData = (data, headers, lastEntry) => {\n    let columnName = null;\n    let newData = [...data];\n    let found = false;\n    for (let header of headers) {\n        if (header.id === lastEntry.colId) {\n            columnName = header.name;\n            found = true;\n            break;\n        }\n    }\n\n    for (let row of newData) {\n        if (row.id === lastEntry.rowId && columnName in row) {\n            row[columnName] = lastEntry.value;\n            found = true;\n            break;\n        }\n    }\n\n    return [newData, found];\n}\n\nexport default DataTable;","import React, { useState ,useEffect ,Fragment, useRef } from 'react';\nimport Encryption from '../components/Encryption.js';\nimport Pairwise from '../components/Optimization.js'\nimport ExecutionMetrics from '../components/ExecutionMetrics.js';\nimport DataTable from '../components/DataTable';\nimport {PopupMsg ,ScreenOverlay} from '../../global';\nimport '../styles/UtilityCenter.scss'\nimport {Encrypt_ICE } from '../api';\n\nconst UtilityCenter=(props)=>{\n    const factref = useRef() //ref for input in factor in optimization screen\n    const levelref = useRef() //ref for input in level in optimization screen\n    const [encyptMethod , setEncyptMethod]= useState(null); //state to manage the vaue of method selection dropdown\n    const [encyptValue , setEncyptValue]= useState(null);//state to manage user's value in encrypttion value input\n    const [encyptBtn , setEncyptBtn] = useState(false) //to show encrypt button on selection of any encrypt method\n    const [encryptedData , setEncryptedData] = useState(\"\");\n    const [btnName , setBtnName] = useState(\"\");\n    const [factor , setFactor] = useState(0);\n    const [level , setLevel] = useState(0);\n    const [emptyCall , setEmptyCall] = useState(false);\n    const [gererateClick , setGenerateClick] = useState(false);\n    const [blockui,setBlockui] = useState({show:false});\n    const [popup ,setPopup]= useState({show:false});\n    const FactorTable = [];\n    const LevelTable = [];\n    const[emptyCreateCall , setEmptyCreateCall]=useState('')\n    const encryptionType = encyptMethod;\n    const encryptionValue = encyptValue;\n    useEffect(()=>{\n        props.setScreenType(\"encryption\")\n        setLevel(0)\n        setFactor(0)\n       // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    const onDropChange =(e)=>{ //function to manage dropdown change set values to show encryption buttons , select method\n        if(e.target.value===\"SelectMethod\"){\n            setEncyptBtn(false)\n            setEncyptMethod(e.target.value)\n            setEncryptedData(\"\");\n            setEncyptValue(\"\");\n        }\n        else{\n            setEncyptMethod(e.target.value);\n            setEncyptBtn(true);\n            if(e.target.value===\"AES\"){\n                setBtnName(\"Encrypt\")\n                setEncryptedData(\"\");\n                setEncyptValue(\"\");\n                setEmptyCall(false);\n            }\n            else if(e.target.value===\"MD5\"){\n                setBtnName(\"Generate\")\n                setEncryptedData(\"\");\n                setEncyptValue(\"\");\n                setEmptyCall(false);\n            }\n            else{\n                setBtnName(\"Encode\")\n                setEncryptedData(\"\");\n                setEncyptValue(\"\");\n                setEmptyCall(false);\n            }\n        }\n    }\n    const ontextchange =(e)=>{ //set encrytion query data raised from user \n        setEncyptValue(e.target.value);\n    }\n    const callEncrypt = async(encryptionType ,encryptionValue)=>{ //API call and fetch and render encrypted data by changing state \n        setBlockui({show:true,content:'Encrypting...'})\n        if(encyptValue ===\"\"){\n            setEmptyCall(true);\n            setBlockui({show:false})\n        }\n        else{\n            const items = await Encrypt_ICE(encryptionType ,encryptionValue);\n            if(items.error){displayError(items.error);return;}\n            setEmptyCall(false);\n            setEncryptedData(items);\n            setBlockui({show:false});\n        }\n    }\n    const displayError = (error) =>{\n        setPopup({\n          title:'ERROR',\n          content:error,\n          submitText:'Ok',\n          show:true\n        })\n      }\n    const callReset =()=>{ // Reset button , resets states\n        setEncryptedData(\"\");\n        setEncyptValue(\"\");\n        setEmptyCall(false);\n    }\n    const callPairwise =()=>{ //pairwise icon clicked changes states\n        props.setPairwiseClicked(true);\n    }\n    const updateInputFactorTable=(e,i)=>{ //updates user input in Factor in the table\n        FactorTable.splice(i , 1 , e.target.value)\n    }\n    const updateInputLevelTable =(e,i)=>{ //updates user input in level in the table\n        LevelTable.splice(i,1,e.target.value)\n    }\n    const callCreate=()=>{\n        let fact = factref.current.value || 0;\n        let lev = levelref.current.value || 0;\n        if(!fact){\n            setEmptyCreateCall(\"factor\")\n        }\n        else if(!lev){\n            setEmptyCreateCall(\"level\")\n        }\n        else {\n            setLevel(parseInt(levelref.current.value));\n            setFactor(parseInt(factref.current.value));\n            setEmptyCreateCall('')\n    }}\n    const callGenerate =()=>{ // Genrate API will be called here rightnow Dummy\n        if(FactorTable.length && LevelTable.length){\n            console.log(\"APi will be called\");\n        }\n        else{\n            setGenerateClick(true);\n        }\n    }\n    return (\n        <Fragment>\n        {(blockui.show)?<ScreenOverlay content={blockui.content}/>:null}\n        {(popup.show)?<PopupMsg submit={()=>setPopup({show:false})} close={()=>setPopup({show:false})} title={popup.title} content={popup.content} submitText={popup.submitText}/>:null}\n        <div className=\"UtlmiddleContent\">\n            <div data-test=\"utility_middle_screen\" className=\"middle_holder\">\n            {(props.screenType ===\"encryption\")?\n            <Encryption onDropChange={onDropChange}\n                        encyptMethod={encyptMethod}\n                        emptyCall={emptyCall}\n                        encyptValue={encyptValue}\n                        ontextchange={ontextchange}\n                        encyptBtn={encyptBtn}\n                        callEncrypt={callEncrypt}\n                        btnName={btnName}\n                        callReset={callReset}\n                        encryptedData={encryptedData}\n                        encryptionType={encryptionType}\n                        encryptionValue={encryptionValue}\n            />: null}\n\n            {(props.screenType===\"optimization\")?\n                <Pairwise \n                    factref={factref}\n                    levelref={levelref}\n                    setLevel={setLevel}\n                    setFactor={setFactor}\n                    callGenerate={callGenerate}\n                    setGenerateClick={setGenerateClick}\n                    updateInputFactorTable={updateInputFactorTable}\n                    updateInputLevelTable={updateInputLevelTable}\n                    setPairwiseClicked={props.setPairwiseClicked}\n                    pairwiseClicked={props.pairwiseClicked}\n                    factor={factor}\n                    level={level}\n                    gererateClick={gererateClick}\n                    callCreate={callCreate}\n                    emptyCreateCall={emptyCreateCall}\n                />\n            : null}\n\n            { props.screenType === \"execution\" \n                && <ExecutionMetrics \n                        setBlockui={setBlockui} \n                        setPopup={setPopup}\n                    /> }\n                \n            { props.screenType.split('-')[0] === \"datatable\"\n                && <DataTable \n                        currScreen={props.screenType.split('-').pop()}\n                        setBlockui={setBlockui} \n                        setPopup={setPopup}\n                        setScreenType={props.setScreenType}\n                    /> }\n                \n        </div>\n        </div>\n        </Fragment>\n    )\n}\n\nexport default UtilityCenter;\n","import React ,{useState} from 'react';\r\nimport Header from '../../global/components/Header';\r\nimport Footer from '../../global/components/FooterTwo';\r\nimport Leftbar from '../components/Leftbar';\r\nimport Rightbar from '../components/Rightbar';\r\nimport UtilityCenter from './UtilityCenter'\r\nimport '../styles/UtilityHome.scss';\r\n//Utility Screen main Home Renders--> Header, LefbarScreen , CenterScreen, RIghtbarScreen and Main FooterBar // \r\n\r\nconst  Utilities=()=>{\r\n    const [screenType , setScreenType] = useState(''); //State for Utility screen type selection on icon click in leftbar\r\n    const [pairwiseClicked , setPairwiseClicked] = useState(false); \r\n    return(\r\n        <div className=\"parent\">\r\n            <Header/>\r\n            <div id=\"holder\">\r\n                <Leftbar setScreenType={setScreenType} setPairwiseClicked={setPairwiseClicked} />\r\n                <UtilityCenter pairwiseClicked={pairwiseClicked} setPairwiseClicked={setPairwiseClicked} screenType={screenType} setScreenType={setScreenType}/>\r\n                <Rightbar />\r\n            </div>    \r\n            <div className=\"utlFooter\"><Footer/></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Utilities;\r\n","import axios from 'axios';\nimport {RedirectPage} from '../global'\nimport {history} from './index'\nimport {url} from '../../App';\n\n/*Component getAllSuites_ICE\n  use:  { userId: userID, readme: 'projects', projectId: projiD ????}\n*/\n\nexport const getAllSuites_ICE = async(data) => {\n    try{\n        const res = await axios(url+'/getAllSuites_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: data,\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Failed to fetch suite list'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to fetch suite list'}\n    }\n}\n\n//component getReportsData_ICE\n//data :{\"param\":\"getReportsData_ICE\",\"reportsInputData\":{\"projectId\":\"5de4e4aed9cdd57f4061bca8\",\"releaseName\":\"r1\",\"cycleId\":\"5de4e4aed9cdd57f4061c368\",\"type\":\"allmodules\"}}\n\nexport const getReportsData_ICE = async(data) => {\n    try{\n        const res = await axios(url+'/getReportsData_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: data,\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Failed to fetch report data'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to fetch report data'}\n    }\n}\n//\n\n//component getSuiteDetailsInExecution_ICE\n//data :  {\"param\":\"getSuiteDetailsInExecution_ICE\",\"testsuiteid\":\"5df71837d9be728cf8e7ff81\"}\nexport const getSuiteDetailsInExecution_ICE = async(data) => {\n    try{\n        const res = await axios(url+'/getSuiteDetailsInExecution_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: data,\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Failed to fetch suite details'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to fetch suite details'}\n    }\n}\n//reportStatusScenarios_ICE\n// data {\"param\":\"reportStatusScenarios_ICE\",\"executionId\":\"5e1411b89b0f1c95c23b2401\",\"testsuiteId\":\"5df71837d9be728cf8e7fe5f\"}\n//[{\"executedtime\":\"07-01-2020 10:37:11\",\"browser\":\"chrome\",\"status\":\"Fail\",\"reportid\":\"5e1411ff9b0f1c95c23b2402\",\"testscenarioid\":\"5de4e572d9cdd57f40624a35\",\"testscenarioname\":\"Scenario_Generic1\"},{\"executedtime\":\"07-01-2020 10:38:40\",\"browser\":\"chrome\",\"status\":\"Fail\",\"reportid\":\"5e1412589b0f1c95c23b2403\",\"testscenarioid\":\"5de4e572d9cdd57f40624a36\",\"testscenarioname\":\"Scenario_Generic2\"}]\nexport const reportStatusScenarios_ICE = async(data) => {\n    try{\n        const res = await axios(url+'/reportStatusScenarios_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: data,\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Failed to fetch suite details'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to fetch suite details'}\n    }\n}\n\n//reportStatusScenarios_ICE\n// data {\"param\":\"reportStatusScenarios_ICE\",\"executionId\":\"5e1411b89b0f1c95c23b2401\",\"testsuiteId\":\"5df71837d9be728cf8e7fe5f\"}\n//[{\"executedtime\":\"07-01-2020 10:37:11\",\"browser\":\"chrome\",\"status\":\"Fail\",\"reportid\":\"5e1411ff9b0f1c95c23b2402\",\"testscenarioid\":\"5de4e572d9cdd57f40624a35\",\"testscenarioname\":\"Scenario_Generic1\"},{\"executedtime\":\"07-01-2020 10:38:40\",\"browser\":\"chrome\",\"status\":\"Fail\",\"reportid\":\"5e1412589b0f1c95c23b2403\",\"testscenarioid\":\"5de4e572d9cdd57f40624a36\",\"testscenarioname\":\"Scenario_Generic2\"}]\nexport const viewReport = async(reportId, reportType) => {\n    try{\n        var targetURL = '/viewreport/'+reportId+'.'+reportType+((reportType==='pdf')?'?images=true':'');\n        const res = await axios(url+targetURL, {\n            method: 'GET',\n            responseType:(reportType === 'pdf')? 'arraybuffer':'application/json',\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Failed to fetch suite details'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to fetch suite details'}\n    }\n}\n\n\nexport const getAccessibilityData = async(data) =>{\n    try{\n        const res = await axios(url+'/getAccessibilityData_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: data,\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status === 200 && Object.keys(res.data).length < 1){\n            return {error:'No accessibility screen is created yet!'}\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Failed to fetch suite details'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to fetch suite details'}\n    }\n}","\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { ScrollBar } from '../../global';\nimport { getSuiteDetailsInExecution_ICE , getAccessibilityData} from '../api';\nimport * as actionTypes from '../state/action';\nimport { CLEAR_REPORTDATA } from '../../plugin/state/action';\nimport '../styles/ModuleList.scss'\n\n/*Component ModuleList\n  use: renders list of module in the dropdown in report landing page\n*/\n\nconst ModuleList = ({FnReport,displayError,setBlockui,setModDrop,modDrop}) =>{\n    const dispatch = useDispatch()\n    const moduleList = useSelector(state=>state.report.moduleList)\n    const suiteSelected = useSelector(state=>state.report.suiteSelected)\n    const reportData = useSelector(state=>state.plugin.RD);\n    const moduleClick = async(e)=> {\n        var suiteID = e.currentTarget.getAttribute('value')\n        var suiteName = e.currentTarget.getAttribute('name')\n        var arg,res;\n        setBlockui({show:true,content:'Loading...'})\n        if(!FnReport){\n            arg = {\"type\":\"reportdata_names_only\",\"screendata\":suiteName}\n            res = await getAccessibilityData(arg)\n        }else{\n            arg = {\"param\":\"getSuiteDetailsInExecution_ICE\",\"testsuiteid\":suiteID}\n            res = await getSuiteDetailsInExecution_ICE(arg)            \n        }\n        if(res.error){displayError(res.error);return;}\n        dispatch({type:actionTypes.UPDATE_SUITEDETAILS,payload:{suiteDetails:res,suiteID:{_id:suiteID,name:suiteName}}})\n        setModDrop('semi')\n        setBlockui({show:false})\n    }\n    useEffect(()=>{\n        if(reportData && reportData.projectid && moduleList.length >0){\n            (async()=>{\n                var suiteID = reportData.testsuiteid\n                var suiteName = reportData.testsuitename\n                setBlockui({show:true,content:'Loading...'})\n                var arg = {\"param\":\"getSuiteDetailsInExecution_ICE\",\"testsuiteid\":suiteID}\n                var res = await getSuiteDetailsInExecution_ICE(arg)\n                if(res.error){displayError(res.error);return;}\n                dispatch({type:actionTypes.UPDATE_SUITEDETAILS,payload:{suiteDetails:res,suiteID:{_id:suiteID,name:suiteName}}})\n                setBlockui({show:false})\n                dispatch({type:CLEAR_REPORTDATA,payload:{}})\n                setModDrop('semi')\n            })()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[reportData,moduleList])\n    const modImage = {\n        endtoend : \"static/imgs/node-endtoend.png\",\n        screens : \"static/imgs/node-screens.png\",\n        basic :  \"static/imgs/node-modules.png\"\n    }\n    return(\n        <div id='rp_module-list' style={{height:modDrop}} className='rp_moduleList'>\n            <ScrollBar scrollId='rp_module-list' trackColor={'transperent'} thumbColor={'grey'}>\n                {moduleList.map((e,i)=>{\n                    return(\n                        <div  name={e.name} onClick={moduleClick} value={e._id} key={i} className={'toolbar__module-box'}>\n                            <img style={{opacity:suiteSelected._id===e._id?0.5:1}} src={modImage[e.type?e.type:'basic']} alt='module'></img>\n                            <span value={e._id} >{e.name}</span>\n                        </div>\n                    )\n                })}\n            </ScrollBar>\n        </div>\n    )\n}\n\nexport default ModuleList;","import React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {getAllSuites_ICE , getReportsData_ICE ,getAccessibilityData} from '../api';\nimport * as actionTypes from '../state/action';\nimport PropTypes from 'prop-types';\nimport '../styles/ToolbarMenu.scss';\n\n\n/*Component ToolbarMenu\n  use: renders ToolbarMenu to set project, cycle, releases.\n*/\n\nconst ToolbarMenu = ({displayError,setBlockui,setModDrop,FnReport}) =>{\n    const dispatch = useDispatch()\n    const [autoReport,setAutoReport] = useState(false)\n    const [modlist,setModList] = useState([])\n    const [projData,setProjData] = useState([])\n    const [initProjData,setInitProjData] = useState([])\n    const [relList,setRelList] = useState([])\n    const [cycList,setCycList] = useState([])\n    const reportData = useSelector(state=>state.plugin.RD);\n    const cycRef = useRef()\n    const relRef = useRef()\n    const projRef = useRef()\n    const searchRef = useRef()\n    useEffect(()=>{\n        (async()=>{\n            setBlockui({show:true,content:'Loading...'})\n            var res = await getAllSuites_ICE({readme:\"projects\"})\n            if(res.error){displayError(res.error);return;}\n            setInitProjData(res)\n            setProjData(res)\n            setRelList(res[0].releases)\n            setBlockui({show:false})\n        })()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    useEffect(()=>{\n        if(reportData && reportData.projectid && projData.length >0){\n            try{\n                var data = {}\n                var cyclData = {}\n                projData.some((e)=>{if(e._id===reportData.projectid){\n                    data = e\n                    }\n                    return e._id===reportData.projectid;\n                })\n                data.releases.some((e)=>{if(e.name===reportData.releaseid){\n                    cyclData = e\n                    }\n                    return e.name===reportData.releaseid\n                })\n                setRelList(data.releases)\n                setCycList(cyclData.cycles)\n                setAutoReport(true)            \n            }catch(err){\n                displayError('Failed to load Reports!')\n                console.error(err)\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[reportData,projData])\n    useEffect(()=>{\n        if(autoReport){\n            projRef.current.value = reportData.projectid;\n            relRef.current.disabled = false;\n            relRef.current.value = reportData.releaseid\n            cycRef.current.disabled = false;\n            cycRef.current.value = reportData.cycleid\n            CycChange()\n            setAutoReport(false)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[autoReport])\n    useEffect(()=>{\n        setBlockui({show:true,content:'Loading...'})\n        setModDrop('close')\n        dispatch({type:actionTypes.UPDATE_MODULELIST,payload:[]})\n        if(!FnReport){\n            (async()=>{\n                var arr = [...projData].filter(e=>e.type==='5db0022cf87fdec084ae49b6')//seperate web project for accessibility\n                setProjData(arr)\n                setRelList(arr[0].releases)\n                relRef.current.value = 'def-val'\n                projRef.current.value = arr[0].name\n                setCycList([])\n            })()\n        }else{\n            if(initProjData.length>0){\n                setProjData(initProjData)\n                setRelList(initProjData[0].releases)\n                setCycList([])\n                relRef.current.value = 'def-val'\n                projRef.current.value = initProjData[0].name\n            }\n        }\n        setBlockui({show:false})\n    },[FnReport])\n    const projChange = (e) =>{\n        relRef.current.value = 'def-val'\n        setRelList(projData[e.target.selectedIndex].releases)\n        setCycList([])\n        dispatch({type:actionTypes.UPDATE_MODULELIST,payload:[]})\n        searchRef.current.value = \"\"\n        searchRef.current.disabled = true;\n        setModDrop('close')\n    }\n    const RelChange = (e) =>{\n        cycRef.current.value = 'def-val'\n        setCycList(relList[e.target.selectedIndex-1].cycles)\n        dispatch({type:actionTypes.UPDATE_MODULELIST,payload:[]})\n        searchRef.current.value = \"\"\n        searchRef.current.disabled = true;\n        setModDrop('close')\n    }\n    const CycChange = async() =>{\n        var res, arg;\n        if(!FnReport){\n            arg ={\n                'cycleId': cycRef.current.value,\n                'projectId': projRef.current.value,\n                'releaseName': relRef.current.value,\n                'type': \"screendata\"\n            }\n            var data = await getAccessibilityData(arg)\n            if(data.error){displayError(data.error);return;}\n            res = []\n            Object.entries(data).forEach(e=>res.push({_id:e[0],name:e[1],type:'screens'}))\n        }else{\n            arg = {\n                \"param\":\"getReportsData_ICE\",\n                \"reportsInputData\":{\n                    \"projectId\":projRef.current.value,\n                    \"releaseName\":relRef.current.value,\n                    \"cycleId\":cycRef.current.value,\n                    \"type\":\"allmodules\"\n                }\n            }\n            res = await getReportsData_ICE(arg)\n            if(res.error){displayError(res.error);return;}\n            res = res.rows\n        }\n        setModList(res)\n        dispatch({type:actionTypes.UPDATE_MODULELIST,payload:res})\n        searchRef.current.value = \"\"\n        searchRef.current.disabled = false;\n        setModDrop('semi')\n    }\n    const searchModule = (val) =>{\n        var filter = modlist.filter((e)=>e.name.toUpperCase().indexOf(val.toUpperCase())!==-1)\n        dispatch({type:actionTypes.UPDATE_MODULELIST,payload:filter})\n    }\n    return(\n        <div className='rp__toolbar'>\n            <label>Project:</label>\n            <select data-test='rp_toolbar-proj' ref={projRef} onChange={projChange}>\n                {\n                    projData.map((e)=><option key={e._id} value={e._id}>{e.name}</option>)\n                }\n            </select>\n            <label>Release:</label>\n            <select data-test='rp_toolbar-rel' ref={relRef} onChange={RelChange} defaultValue={'def-val'} disabled={relList.length<1}>\n                <option disabled value='def-val'>Select Release</option>\n                {\n                    relList.map((e)=><option key={e.name} value={e.name}>{e.name}</option>)\n                }\n            </select>\n            <label>Cycle:</label>\n            <select data-test='rp_toolbar-cycl' ref={cycRef} onChange={CycChange} defaultValue={'def-val'} disabled={cycList.length<1}>\n                <option disabled value='def-val'>Select Cycle</option>\n                {\n                    cycList.map((e)=><option key={e._id} value={e._id}>{e.name}</option>)\n                }\n            </select>\n            <span className='toolbar__header-searchbox'>\n                <input data-test='rp_toolbar-search' ref={searchRef} placeholder=\"Search Modules\" disabled={true} onChange={(e)=>searchModule(e.target.value)}></input>\n                <img src={\"static/imgs/ic-search-icon.png\"} alt={'search'}/>\n            </span>\n        </div>\n    )\n}\n\nToolbarMenu.propTypes={\n    displayError:PropTypes.func.isRequired,\n    setBlockui:PropTypes.func.isRequired,\n    setModDrop:PropTypes.func.isRequired,\n    FnReport:PropTypes.bool\n}\n\nexport default ToolbarMenu;","import React, { useState , useEffect } from 'react';\nimport { useSelector } from 'react-redux'\nimport { ScrollBar } from '../../global';\nimport '../styles/ExecPanel.scss';\nimport { reportStatusScenarios_ICE } from '../api';\n\n\n/*Component ExecutionPanel\n  use: renders ExecutionPanel in report landing page\n*/\n\nconst ExecPanel = ({displayError,setBlockui,setScDetails,setSelectedDetails,selectedScDetails}) =>{\n    const suDetails = useSelector(state=>state.report.suiteDetails)\n    const dateFormat = useSelector(state=>state.login.dateformat);\n    const suiteSelected = useSelector(state=>state.report.suiteSelected)\n    const [suiteDetails,setSuiteDetails] =  useState([])\n    const [sortUp,setSortUp] = useState(false)\n    useEffect(()=>{\n        if(suDetails.length>0 && suDetails[0].start_time !== undefined){\n            var arr = dateASC([...suDetails]).reverse()\n            setSuiteDetails(arr)         \n        }else{\n            setSuiteDetails([])\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[suDetails])\n    useEffect(()=>{\n        setSelectedDetails({_id:undefined,name:''})\n        setScDetails([])\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[suiteSelected._id,suDetails])\n    const onClickRow = async(e) =>{\n        const val = e.currentTarget.getAttribute('value')\n        const name = e.currentTarget.getAttribute('name')\n        var arg = {\n            \"param\":\"reportStatusScenarios_ICE\",\n            \"executionId\":val,\n            \"testsuiteId\":suiteSelected._id\n        }\n        setBlockui({show:true,content:'Loading Scenarios...'})\n        var res = await reportStatusScenarios_ICE(arg)\n        if(res.error){displayError(res.error);return;}\n        setSelectedDetails({_id:val,name:name})\n        setScDetails(res)\n        setBlockui({show:false})\n    }\n    const sortTable = () =>{\n        var arr = [...suiteDetails].reverse()\n        setSuiteDetails(arr)\n        setSortUp(!sortUp)\n    }\n\n    const formatDate = (date) => {\n        let dateTime = date.replace(\" \", \"-\").split(\"-\");\n        let time = dateTime[dateTime.length - 1].split(\":\");\n        let day = dateTime[0]\n        let month = dateTime[1]\n        let year = dateTime[2]\n        let hour = time[0]\n        let minute = time[1]\n        let map = {\"MM\":month,\"YYYY\": year, \"DD\": day};\n        let def = [day,month,year];\n        let format = dateFormat.split(\"-\");\n        let arr = []\n        let used = {}\n        for (let index in format){\n            if (!(format[index] in map) || format[index] in used){\n                return def.join('-') + \" \" + [hour,minute].join(':');\n            }\n            arr.push(map[format[index]]) \n            used[format[index]] = 1\n        }\n\n        return arr.join('-') + \" \" + [hour,minute].join(':');\n    }\n\n    if(!suiteSelected._id){\n        return null;\n    }\n    return(\n        <div id='rp__execution-panel' className='panel rp__executions'>\n            <div className='rp__panel-head'>{suiteSelected.name} - Executions</div>\n                <div className='rp__execution-table'>\n                    <div className='rp__row'>\n                        <div className='rp__col'>Execution No</div>\n                        <div className='rp__col'>\n                            <span>Start Date & Time</span>                                   \n                            <i onClick={sortTable} className={(sortUp)?\"fa fa-caret-up\":\"fa fa-caret-down\"} title=\"Drop down button\"></i>\n                        </div>\n                        <div className='rp__col'>\n                            <span>End Date & Time</span> \n                            <i onClick={sortTable} className={(!sortUp)?\"fa fa-caret-up\":\"fa fa-caret-down\"} title=\"Drop down button\"></i>\n                        </div>\n                    </div>\n                    <div id='rp__row_content'>\n                        <ScrollBar scrollId='rp__row_content' trackColor='transparent'>\n                        {(suiteDetails.length>0)?\n                            suiteDetails.map((e,i)=>\n                            <div key={e.execution_id} onClick={onClickRow} name={(sortUp)?i+1:suiteDetails.length-i} value={e.execution_id} className={'rp__row'+(selectedScDetails._id===e.execution_id?\" selected-row\":\"\")}>\n                                <div className='rp__col'>E<sub>{(sortUp)?i+1:suiteDetails.length-i}</sub></div>\n                                <div data-test=\"start_date\" className='rp__col'>{formatDate(e.start_time)}</div>\n                                <div data-test=\"end_date\" className='rp__col'>{(e.end_time!==\"- \")?formatDate(e.end_time):formatDate(e.start_time)}</div>\n                            </div>):\n                            <div style={{textAlign:'center',padding:'30px',height:'100%'}} className='rp__row'>\n                                No record(s) found\n                            </div>\n                        }\n                        </ScrollBar>\n                    </div>\n                </div>\n        </div>\n    )\n}\n\nconst dateASC = (dateArray)=> {\n    dateArray.sort((a, b)=> {\n        var aA, timeA, bB, timeB;\n        var dateTimeA = a.start_time.split(\" \");\n        aA = dateTimeA[0];\n        timeA = dateTimeA[1];\n        var dateTimeB = b.start_time.split(\" \");\n        bB = dateTimeB[0];\n        timeB = dateTimeB[1];\n        var fDate = aA.split(\"-\");\n        var lDate = bB.split(\"-\");\n        var gDate = fDate[2] + \"-\" + fDate[1] + \"-\" + fDate[0];\n        var mDate = lDate[2] + \"-\" + lDate[1] + \"-\" + lDate[0];\n        if (new Date(gDate + \" \" + timeA) >= new Date(mDate + \" \" + timeB)) return 1;\n        return -1;\n    })\n    var a = [...dateArray]\n    a.forEach((e,i)=>{\n        var eD , eT;\n        var startDat = (e.start_time.split(' ')[0]).split(\"-\")\n        var startTym = (e.start_time.split(' ')[1]).split(\":\")\n        var sD = (\"0\" + startDat[0]).slice(-2) + \"-\" + (\"0\" + startDat[1]).slice(-2) + \"-\" + startDat[2];\n        var sT = (\"0\" + startTym[0]).slice(-2) + \":\" + (\"0\" + startTym[1]).slice(-2);\n        if (e.end_time === '-') {\n            eD = '-';\n            eT = '';\n        } else {\n            var endDat = (e.end_time.split(' ')[0]).split(\"-\")\n            var endTym = (e.end_time.split(' ')[1]).split(\":\")\n            eD = (\"0\" + endDat[0]).slice(-2) + \"-\" + (\"0\" + endDat[1]).slice(-2) + \"-\" + endDat[2];\n            eT = (\"0\" + endTym[0]).slice(-2) + \":\" + (\"0\" + endTym[1]).slice(-2);\n        }\n        dateArray[i].start_time =  sD + \" \" + sT \n        dateArray[i].end_time =  eD + \" \" + eT \n    })\n    return dateArray\n}\n\nexport default ExecPanel;","import React, { useState, useEffect } from 'react';\nimport '../styles/ScStatusPanel.scss';\n\n/*Component ScStatusPanel\n  use: renders status panel on the right of the report layout.\n*/\n\nconst ScStatusPanel = ({arr,selectedScDetails}) =>{\n    const [data,setData] = useState({P:0,F:0,T:0,I:0})\n    useEffect(()=>{\n        if(Object.keys(arr).length>0 && arr.total !== 0){\n            var P = parseFloat((arr.pass / arr.total) * 100).toFixed();\n            var F = parseFloat((arr.fail / arr.total) * 100).toFixed();\n            var T = parseFloat((arr.terminate / arr.total) * 100).toFixed();\n            var I = parseFloat((arr.incomplete / arr.total) * 100).toFixed();\n            setData({P,F,T,I})\n        }else{\n            setData({P:0,F:0,T:0,I:0})\n        }\n    },[arr])\n    if(Object.keys(arr).length<1){\n        return null;\n    }\n    return(\n        <div id='rp__execution-panel' className='panel rp__executions'>\n            <div className='rp__panel-head'>E<sub>{selectedScDetails.name}</sub> - Scenario Status</div>\n            <div className='rp__execution-table status-panel'>\n                <div className='status-row' style={{color:'#28a745'}}>\n                    <span className='label'>Pass</span>\n                    <span className='perc'>{data.P+'%'}</span>\n                    <div className='progress'>\n                        <div className='progress-bar' style={{width:data.P+'%',background:'#28a745'}}></div>\n                    </div>\n                </div>\n                <div className='status-row' style={{color:'#dc3545'}}>\n                    <span className='label'>Fail</span>\n                    <span className='perc'>{data.F+'%'}</span>\n                    <div className='progress'>\n                        <div className='progress-bar' style={{width:data.F+'%',background:'#dc3545'}}></div>\n                    </div>\n                </div>\n                <div className='status-row' style={{color:'#ffc107'}}>\n                    <span className='label'>Terminate</span>\n                    <span className='perc'>{data.T+'%'}</span>\n                    <div className='progress'>\n                        <div className='progress-bar' style={{width:data.T+'%',background:'#ffc107'}}></div>\n                    </div>\n                </div>\n                <div className='status-row' style={{color:'#343a40'}}>\n                    <span className='label'>Incomplete</span>\n                    <span className='perc'>{data.I+'%'}</span>\n                    <div className='progress'>\n                        <div className='progress-bar' style={{width:data.I+'%',background:'#343a40'}}></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ScStatusPanel;","import React, { useState, useEffect } from 'react';\nimport { ScrollBar } from '../../global';\nimport { useSelector } from 'react-redux';\nimport { viewReport } from '../api'\nimport '../styles/ScDetailPanel.scss';\n\n/*Component ModuleList\n  use: renders list of scenarios in the bottom panel of the report landing page\n*/\n\nconst ScDetailPanel = ({scDetails,setBlockui,displayError,selectedScDetails}) =>{\n    const [sortUp,setSortUp] = useState(true);\n    const dateFormat = useSelector(state=>state.login.dateformat);\n    const [arr,setArr] = useState([])\n    useEffect(()=>{\n        var data = dateASC([...scDetails])\n        setArr(data)\n    },[scDetails])\n    const getReport = (e) => {\n        Report(e, setBlockui, displayError, dateFormat, formatDate)\n    }\n    const sortTable = () => {\n        var data = [...arr].reverse()\n        setArr(data)\n        setSortUp(!sortUp)\n    }\n\n    const formatDate = (date) => {\n        let dateTime = date.replace(\" \", \"-\").split(\"-\");\n        let time = dateTime[dateTime.length - 1].split(\":\");\n        \n        var day = dateTime[0];\n        var month = dateTime[1];\n        var year = dateTime[2];\n    \n        let hour = time[0]\n        let minute = time[1]\n        let seconds = time[2]\n        let map = {\"MM\":month,\"YYYY\": year, \"DD\": day};\n            let def = [day,month,year];\n            let format = dateFormat.split(\"-\");\n            let arr = []\n            let used = {}\n            for (let index in format){\n                if (!(format[index] in map) || format[index] in used){\n                    return def.join('-') + \" \" + [hour,minute,seconds].join(':');\n                }\n                arr.push(map[format[index]]) \n                used[format[index]] = 1\n            }\n    \n            return arr.join('-') + \" \" + [hour,minute,seconds].join(':');\n    }\n\n    if(!selectedScDetails._id){\n        return null;\n    }\n    \n    return(\n        <div id='rp__detail-panel' className='panel rp__detail'>\n            <div className='rp__panel-head'>E<sub>{selectedScDetails.name}</sub> -   Scenario Details</div>\n            <div className='rp__detail-table'>\n                    <div className='rp__row'>\n                        <div className='rp__col'>Scenario Name</div>\n                        <div className='rp__col browser'>Browser</div>\n                        <div className='rp__col'>\n                            <span>End Date & Time</span>                                   \n                            <i onClick={sortTable} className={(sortUp)?\"fa fa-caret-up\":\"fa fa-caret-down\"} title=\"Drop down button\"></i>\n                        </div>\n                        <div className='rp__col status'>Status</div>\n                        <div className='rp__col export'>View Report</div>\n                    </div>\n                <div id='pr_detail-scroll-box'>\n                    <ScrollBar scrollId='pr_detail-scroll-box'>\n                    {(arr.length>0)?\n                        arr.map((e,i)=>   \n                        <div key={e.reportid} className='rp__row cont-body'>\n                            <div className='rp__col'>{e.testscenarioname}</div>\n                            <div className='rp__col browser'>\n                                {e.browser.toLowerCase() in imgs?\n                                <img src={\"static/imgs/\"+imgs[e.browser.toLowerCase()]} alt={e.browser}/>:\n                                <div style={{lineHeight:0.3,fontSize:'50px'}}>-</div>\n                                }\n                            </div>\n                            <div data-test=\"executed_time\" className='rp__col'>{formatDate(e.executedtime)}</div>\n                            <div className={'rp__col status '+e.status.toLowerCase()}>{e.status}</div>\n                            <div className='rp__col export' scname={e.testscenarioname}>\n                                <img type={'pdf'} value={e.reportid} onClick={getReport} src={\"static/imgs/ic-pdf.png\"} alt={e.browser}/>\n                                <img type={'html'} value={e.reportid} onClick={getReport} src={\"static/imgs/ic-web.png\"} alt={e.browser}/>\n                                <img type={'json'} value={e.reportid} onClick={getReport} src={\"static/imgs/ic-export-to-json.png\"} alt={e.browser}/>\n                            </div>\n                        </div>\n                        )\n                        :\n                        <div style={{textAlign:'center',padding:'30px'}} className='rp__row'>\n                            No record(s) found\n                        </div>\n                    }\n                    </ScrollBar>\n                </div>\n            </div>\n        </div>\n    )\n}\nconst imgs = {\n    chrome : \"ic-reports-chrome.png\",\n    firefox : \"ic-reports-firefox.png\",\n    \"internet explorer\" : \"ic-reports-ie.png\",\n    safari : \"ic-reports-safari.png\",\n    \"edge chromium\" : \"ic-reports-edge-chromium.svg\",\n    \"edge legacy\": \"ic-reports-edge.svg\"\n} \n\nconst Report = async(e,setBlockui,displayError)=>{\n    setBlockui({show:true,content:'Loading Report...'})\n    var reportType = e.currentTarget.getAttribute('type')\n    var reportID = e.currentTarget.getAttribute('value')\n    var scName = e.currentTarget.parentElement.getAttribute('scname')\n    if(reportType==='html'){\n        const reportURL = window.location.origin + \"/viewReport/\" + reportID;\n        setBlockui({show:false})\n        return window.open(reportURL, '_blank');\n    }\n    var data =  await viewReport(reportID, reportType)\n    if(data.error){displayError(data.error);return;}\n    if (reportType === \"json\") data = JSON.stringify(data, undefined, 2);\n    var filedata = new Blob([data], {\n        type: \"application/\"+reportType+\";charset=utf-8\"\n    });\n    if (window.navigator.msSaveOrOpenBlob) {\n        window.navigator.msSaveOrOpenBlob(filedata, scName);\n    } else {\n        var a = document.createElement('a');\n        a.href = URL.createObjectURL(filedata);\n        a.download = scName;\n        document.body.appendChild(a);\n        a.click();\n        URL.revokeObjectURL(a.href);\n        document.body.removeChild(a);\n    }\n    setBlockui({show:false})\n}\n\nconst dateASC = (dateArray)=> {\n    dateArray.sort((a, b)=> {\n        var aA, timeA, bB, timeB;\n        var dateTimeA = a.executedtime.split(\" \");\n        aA = dateTimeA[0];\n        timeA = dateTimeA[1];\n        var dateTimeB = b.executedtime.split(\" \");\n        bB = dateTimeB[0];\n        timeB = dateTimeB[1];\n        var fDate = aA.split(\"-\");\n        var lDate = bB.split(\"-\");\n        var gDate = fDate[2] + \"-\" + fDate[1] + \"-\" + fDate[0];\n        var mDate = lDate[2] + \"-\" + lDate[1] + \"-\" + lDate[0];\n        if (new Date(gDate + \" \" + timeA) >= new Date(mDate + \" \" + timeB)) return 1;\n        else return -1;\n    })\n    return dateArray\n}\n\nexport default ScDetailPanel;","import React, { useState, Fragment, useEffect } from 'react';\nimport ModuleList from '../components/ModuleList';\nimport ToolbarMenu from '../components/ToolbarMenu';\nimport { ScreenOverlay ,PopupMsg, ScrollBar} from '../../global';\nimport { useDispatch } from 'react-redux';\nimport ExecPanel from '../components/ExecPanel';\nimport ScStatusPanel from '../components/ScStatusPanel';\nimport ScDetailPanel from '../components/ScDetailPanel';\nimport * as actionTypes from '../state/action';\nimport '../styles/TestingReport.scss';\n\n/*Component TestingReport\n  use: renders TestingReport is a container for report layout\n*/\n\nconst TestingReport = ({setBlockui,displayError}) =>{\n    const dispatch = useDispatch()\n    const [scDetails,setScDetails] = useState([])\n    const [selectedScDetails,setSelectedDetails] = useState({_id:undefined,name:\"\"})\n    const [scStatus,setScStatus] = useState({})\n    useEffect(()=>{\n        return ()=>{\n            // dispatch({type:actionTypes.UPDATE_MODULELIST,payload:[]})\n            dispatch({type:actionTypes.RESET_DETAILS})\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    useEffect(()=>{\n        if(selectedScDetails._id){\n            var arr = {\n                total : scDetails.length,\n                pass : 0,\n                fail : 0,\n                terminate : 0,\n                incomplete : 0,\n                skipped : 0\n            }\n            scDetails.forEach((e,i)=>{\n                var status = e.status.toLowerCase()\n                if(status in arr){\n                    arr[status]=++arr[status]\n                }\n            })\n            setScStatus(arr)   \n        }else{\n            setScStatus({})\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[scDetails])\n    return(\n        <Fragment>\n            <div className='tr__body rp__content'>\n                <div className='left-content'>\n                    <ExecPanel selectedScDetails={selectedScDetails} setSelectedDetails={setSelectedDetails} setScDetails={setScDetails} setBlockui={setBlockui} displayError={displayError}/>\n                </div>\n                <div className='right-content'>\n                    <ScStatusPanel selectedScDetails={selectedScDetails} arr={scStatus} setBlockui={setBlockui} displayError={displayError}/>\n                </div>\n            </div>\n            <div className=' tr__body bottom-content'>\n                <ScDetailPanel selectedScDetails={selectedScDetails} scDetails={scDetails} setBlockui={setBlockui} displayError={displayError}/>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default TestingReport;","import React, { useState , useEffect } from 'react';\nimport { useSelector } from 'react-redux'\nimport { ScrollBar } from '../../global';\nimport '../styles/AccExecPanel.scss';\nimport {  getAccessibilityData} from '../api';\nimport { Fragment } from 'react';\n\n\n/*Component AccExecPanel\n  use: renders ExecutionPanel in report landing page\n*/\n\nconst AccExecPanel = ({displayError,setBlockui,setScDetails,setSelectedDetails}) =>{\n    const dateFormat = useSelector(state=>state.login.dateformat);\n    const suDetails = useSelector(state=>state.report.suiteDetails)\n    const suiteSelected = useSelector(state=>state.report.suiteSelected)\n    const [suiteDetails,setSuiteDetails] =  useState([])\n    const [sortUp,setSortUp] = useState(false)\n    const sortTable = () =>{\n        var arr = [...suiteDetails].reverse()\n        setSuiteDetails(arr)\n        setSortUp(!sortUp)\n    }\n    const onClickRow = async(e)=> {\n        const val = e.currentTarget.getAttribute('value')\n        const name = e.currentTarget.getAttribute('name')\n        var arg = {\n            \"type\":\"reportdata\",\n            \"executionid\":val\n        }\n        setBlockui({show:true,content:'Loading Scenarios...'})\n        var res = await getAccessibilityData(arg)\n        if(res.error){displayError(res.error);return;}\n        setSelectedDetails({_id:val,name:name})\n        setScDetails(res)\n        setBlockui({show:false})\n    }\n    useEffect(()=>{\n        if(suDetails!==undefined && suDetails.length>0){\n            var arr=[...suDetails].reverse()\n            setSuiteDetails(arr)           \n        }else{\n            setSuiteDetails([])\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[suDetails])\n    useEffect(()=>{\n        setSelectedDetails({_id:undefined,name:''})\n        setScDetails([])\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[suiteSelected._id,suDetails])\n\n    const formatDate = (date) => {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear(),\n            hour = '' + d.getHours(),\n            minute = '' + d.getMinutes();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n        if (hour.length < 2)\n            hour = '0' + hour\n        if (minute.length < 2)\n            minute = '0' + minute \n\n        let map = {\"MM\":month,\"YYYY\": year, \"DD\": day};\n        let def = [day,month,year];\n        let format = dateFormat.split(\"-\");\n        let arr = []\n        let used = {}\n        for (let index in format){\n            if (!(format[index] in map) || format[index] in used){\n                return def.join('-') + \" \" + [hour,minute].join(':');\n            }\n            arr.push(map[format[index]]) \n            used[format[index]] = 1\n        }\n\n        return arr.join('-') + \" \" + [hour,minute].join(':');\n    }\n    return(\n        <Fragment>\n        { suiteSelected.name &&\n        <div id='ac__execution-panel' className='panel ac__executions'>\n            <div className='ac__panel-head'>{suiteSelected.name} - Executions</div>\n            <div className='ac__execution-table'>\n                <div data-test=\"ac_head\" className='ac__row'>\n                    <div className='ac__col'>Execution No</div>\n                    <div className='ac__col'>Title</div>\n                    <div className='ac__col'>\n                        <span>Executed Time</span>                                   \n                        <i onClick={sortTable} className={(sortUp)?\"fa fa-caret-up\":\"fa fa-caret-down\"} title=\"Drop down button\"></i>\n                    </div>\n                </div>\n                <div id='ac__row_content'>\n                    <ScrollBar scrollId='ac__row_content' trackColor='transparent'>\n                    {(suiteDetails.length>0)?\n                        suiteDetails.map((e,i)=>\n                        <div key={`ac-${i}`} onClick={onClickRow} name={(sortUp)?i+1:suiteDetails.length-i} value={e._id} className={'ac__row'+(false?\" selected-row\":\"\")}>\n                            <div className='ac__col'>E<sub>{(sortUp)?i+1:suiteDetails.length-i}</sub></div>\n                            <div data-test=\"ac_title\" className='ac__col'>{e.title}</div>\n                            <div data-test=\"ac_executedtime\" className='ac__col'>{formatDate(e.executedtime)}</div>\n                        </div>):\n                        <div style={{textAlign:'center',padding:'30px',height:'100%'}} className='ac__row'>\n                            No record(s) found\n                        </div>\n                    }\n                    </ScrollBar>\n                </div>\n            </div>\n        </div>\n        }\n        </Fragment>\n    )\n}\n\nexport default AccExecPanel;","import React, { useState, useEffect } from 'react';\nimport { Fragment } from 'react';\nimport '../styles/AccStandardDesc.scss';\n\nconst AccStandardDesc = ({scDetails, standardTypeDetails}) => {\n    const [descData,setDescData] = useState(standardTypeDetails.rowData)\n    useEffect(()=>{\n        var sNo = 0;\n        var data =[...standardTypeDetails.rowData]\n        for(var i=0 ; i< data.length;i++){    \n            data[i].push(sNo);\n            sNo+=data[i][1].length;\n        }\n        setDescData(data);\n    },[standardTypeDetails.rowData])\n    if (scDetails.length < 1){\n        return null;\n    }\n    return(\n        <Fragment>\n            <div id='ar__StDesc-panel'>\n                <div className=\"ar__Desc-head\">Selected Standard: {standardTypeDetails.name}</div>\n                <div className='ar__stDesc-table panel'>\n                    <div data-test=\"ar_desc-head\" className=\"ar__stDesc-head\">\n                        <div className=\"ar__stDesc-sn\" >S.No.</div>\n                        <div className=\"ar__stDesc-status\" >Status</div>\n                        <div className=\"ar__stDesc-desc\" >Description </div>\n                        <div className=\"ar__stDesc-help\" >Help</div>\n                        <div className=\"ar__stDesc-impact\" >Impact</div>\n                    </div>\n                    {descData.map((status,i)=>(\n                        status[2]!==undefined ?\n                        status[1].map((data,index)=>(\n                            <div key={`as-${index}`} className=\"ar__stDesc-row\">\n                                <div data-test=\"ar_sn\" className=\"ar__stDesc-sn\" >{status[2]+index+1}</div>\n                                <div data-test=\"ar_status\" className=\"ar__stDesc-status\" >{status[0] || \"N/A\"}</div>\n                                <div data-test=\"ar_desc\" className=\"ar__stDesc-desc\" >{data.description || \"N/A\"} </div>\n                                <div data-test=\"ar_help\" className=\"ar__stDesc-help\" >{data.help || \"N/A\"}</div>\n                                <div data-test=\"ar_impact\" className=\"ar__stDesc-impact\" >{data.impact || \"N/A\"}</div>\n                            </div>\n                        )):<Fragment key={`as-${i}`}></Fragment>\n                    ))} \n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default AccStandardDesc;","import React, { useState , useEffect } from 'react';\nimport { Fragment } from 'react';\nimport AccStandardDesc from './AccStandardDesc';\nimport '../styles/AccDetailPanel.scss';\n\nconst AccDetailPanel = ({scDetails}) => {\n\n    const [showStandardDescTable,setShowStandardDescTable] = useState(false);\n    const [tableData,setTableData] = useState([]);\n    \n    useEffect(()=>{\n        var details = [];\n        setShowStandardDescTable(false);\n        if (scDetails.length < 1)return ;\n        for(var i=0;i<scDetails[0][\"access-rules\"].length;i++){\n            if(scDetails[0][\"access-rules\"][i][\"selected\"]) details.push(scDetails[0][\"access-rules\"][i]);\n        }\n        setTableData(details);\n    },[scDetails])\n\n    if (scDetails.length < 1){\n        return null;\n    }\n    \n    return(\n        <Fragment>\n            <div id='ar__detail-panel' className='panel rp__detail'>\n                <div className=\"ac__panel-head\">Accessibility Reports by Standards</div>\n                <div className='ar__standard-table'>\n                    <div data-test=\"ar_detail-head\" className=\"ar__standard-head\">\n                        <div className=\"ar__sn\" >S.No.</div>\n                        <div className=\"ar__standard\" >Standard </div>\n                        <div className=\"ar__status\" >Status</div>\n                        <div className=\"ar__report\" >View Standard Report</div>\n                    </div>\n                    {tableData.map((data,i)=>(\n                        <div key={`a-${i}`} className=\"ar__standard-row\">\n                            <div data-test=\"ar_detail-sn\" className=\"ar__sn\" >{i+1}</div>\n                            <div data-test=\"ar_detail-stname\" className=\"ar__standard\" >{data[\"name\"]} </div>\n                            <div data-test=\"ar_detail-status\" className={\"ar__status \"+(data[\"pass\"]?\"pass\":\"fail\")} >{data[\"pass\"]?\"Pass\":\"Fail\"}</div>\n                            <div data-test=\"ar_detail-report\" className=\"ar__report\" ><label className=\"ar__report-generate\" onClick={()=>{setShowStandardDescTable({rowData:Object.entries(scDetails[0].rulemap[data['tag'].replace(\".\",\"_\")]),name:data[\"name\"]});}}>Report</label></div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            {showStandardDescTable!==false? <AccStandardDesc scDetails={scDetails} standardTypeDetails={showStandardDescTable} />:null}\n        </Fragment>\n    )\n}\n\nexport default AccDetailPanel;","import React, { useState ,useEffect } from 'react';\nimport { Fragment } from 'react';\nimport '../styles/AccStatusPanel.scss';\n\n\n/*Component AccStatusPanel\n  use: renders AccStatusPanel in report landing page\n*/\n\nconst AccStatusPanel = ({arr,selectedScDetails,scDetails}) =>{\n    const [data,setData] = useState({P:0,F:0,T:0,I:0})\n    useEffect(()=>{\n        if(Object.keys(arr).length>0 && arr.total !== 0){\n            var inapplicable = parseFloat((arr.inapplicable / arr.total) * 100).toFixed();\n            var passes = parseFloat((arr.passes / arr.total) * 100).toFixed();\n            var violations = parseFloat((arr.violations / arr.total) * 100).toFixed();\n            setData({inapplicable,passes,violations})\n        }else{\n            setData({inapplicable:0,passes:0,violations:0})\n        }\n    },[arr])\n    if(Object.keys(arr).length<1 || scDetails.length < 1){\n        return null;\n    }\n    return(\n        <Fragment>\n            <div className ='ar__status_panel'>\n                <div  className='panel top-tile'>\n                    <div className='ac__panel-head'>Report Data</div>\n                    <div className='ac__panel-body'>\n                        <div className='left-float'>\n                            <div><span className='title'>Crawl Name</span><span className='content'>{scDetails[0].screenname}</span></div>\n                            <div><span className='title'>URL</span><span className='content'>{scDetails[0].url}</span></div>\n                            <div><span className='title'>Agent</span><span className='content ac__panel_title'>{scDetails[0].agent}</span></div>\n                        </div>\n                    </div>\n                </div>\n                <div className='panel'>\n                    <div className='ac__panel-head'>Executions</div>\n                    <div className='status-panel'>\n                        <div className='status-row' style={{color:'#28a745'}}>\n                            <span className='label'>Passes</span>\n                            <span data-test=\"passes\" className='perc'>{data.passes+'%'}</span>\n                            <div className='progress'>\n                                <div className='progress-bar' style={{width:data.passes+'%',background:'#28a745'}}></div>\n                            </div>\n                        </div>\n                        <div className='status-row' style={{color:'#dc3545'}}>\n                            <span className='label'>Violations</span>\n                            <span data-test=\"violation\" className='perc'>{data.violations+'%'}</span>\n                            <div className='progress'>\n                                <div className='progress-bar' style={{width:data.violations+'%',background:'#dc3545'}}></div>\n                            </div>\n                        </div>\n                        <div className='status-row' style={{color:'#ffc107'}}>\n                            <span className='label'>Inapplicable</span>\n                            <span data-test=\"inapplicable\" className='perc'>{data.inapplicable+'%'}</span>\n                            <div className='progress'>\n                                <div className='progress-bar' style={{width:data.inapplicable+'%',background:'#ffc107'}}></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default AccStatusPanel","import React, { useState, Fragment, useEffect } from 'react';\nimport ModuleList from '../components/ModuleList';\nimport ToolbarMenu from '../components/ToolbarMenu';\nimport { ScreenOverlay ,PopupMsg, ScrollBar} from '../../global';\nimport { useDispatch } from 'react-redux';\nimport AccExecPanel from '../components/AccExecPanel';\nimport ScStatusPanel from '../components/ScStatusPanel';\nimport AccDetailPanel from '../components/AccDetailPanel';\nimport * as actionTypes from '../state/action';\nimport '../styles/AccessibilityReport.scss';\nimport AccStatusPanel from '../components/AccStatusPanel';\n\n/*Component AccessibilityReport\n  use: renders AccessibilityReport is a container for report layout\n*/\n\nconst AccessibilityReport = ({setBlockui,displayError}) =>{\n\tconst dispatch = useDispatch()\n    const [scDetails,setScDetails] = useState([])\n    const [selectedScDetails,setSelectedDetails] = useState({_id:undefined,name:\"\"})\n    const [scStatus,setScStatus] = useState({})\n    useEffect(()=>{\n        return ()=>{\n            dispatch({type:actionTypes.RESET_DETAILS})\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    useEffect(()=>{\n        if(selectedScDetails._id){\n            var arr = {\n                total : 0,\n                inapplicable : 0,\n                passes : 0,\n                violations : 0\n            }\n            scDetails[0][\"access-rules\"].forEach(data => {\n                if(data[\"selected\"]) {\n                    var statusData = scDetails[0].rulemap[data['tag'].replace(\".\",\"_\")];\n                    if(statusData.inapplicable!==undefined) arr.inapplicable +=  statusData.inapplicable.length;\n                    if(statusData.passes!==undefined) arr.passes +=  statusData.passes.length;\n                    if(statusData.violations!==undefined) arr.violations +=  statusData.violations.length;\n                }\n            })\n            arr.total = arr.inapplicable + arr.passes + arr.violations;\n            setScStatus(arr)   \n        }else{\n            setScStatus({})\n        }\n    },[scDetails])\n    return(\n        <Fragment>\n            <div className='ar__body'>\n                <div className='rp__content'>\n                    <div className='left-content'>\n                        <AccExecPanel selectedScDetails={selectedScDetails} setSelectedDetails={setSelectedDetails} setScDetails={setScDetails} setBlockui={setBlockui} displayError={displayError}/>\n                    </div>\n                    <div className='right-content'>\n                        <AccStatusPanel selectedScDetails={selectedScDetails} scDetails={scDetails} arr={scStatus} setBlockui={setBlockui} displayError={displayError}/>\n                    </div>\n                </div>\n                <div>\n                    <AccDetailPanel selectedScDetails={selectedScDetails} scDetails={scDetails} setBlockui={setBlockui} displayError={displayError}/>\n\t\t\t\t</div>\n            </div>\n\t\t</Fragment>\n    )\n}\n\nexport default AccessibilityReport;","import React, { useState, Fragment, useEffect } from 'react';\nimport ModuleList from '../components/ModuleList';\nimport ToolbarMenu from '../components/ToolbarMenu';\nimport { ScreenOverlay ,PopupMsg, ScrollBar} from '../../global';\nimport { useDispatch } from 'react-redux';\nimport ExecutionPanel from '../components/ExecPanel';\nimport ScStatusPanel from '../components/ScStatusPanel';\nimport ScDetailPanel from '../components/ScDetailPanel';\nimport TestingReport from './TestingReport';\nimport AccessibilityReport from './AccessibilityReport';\nimport * as actionTypes from '../state/action';\nimport '../styles/ReportContainer.scss';\n\n/*Component ReportContainer\n  use: renders ReportContainer is a container for report layout\n*/\n\nconst dropSize = {\n    close : 55,\n    semi: 150,\n    full: 230\n}\nconst ReportContainer = () =>{\n    const [modDrop,setModDrop] = useState('close')\n    const [popup,setPopup] = useState({show:false})\n    const [blockui,setBlockui] = useState({show:false})\n    const [FnReport,setFnReport] =  useState(true)\n    const displayError = (error) =>{\n        setBlockui(false)\n        setPopup({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n    return(\n        <Fragment>\n            {(blockui.show)?<ScreenOverlay content={blockui.content}/>:null}\n            {(popup.show)?<PopupMsg submit={()=>setPopup({show:false})} close={()=>setPopup({show:false})} title={popup.title} content={popup.content} submitText={popup.submitText}/>:null}\n            <div id='rp-body-scroll' className='rp__main_container'>\n                <ScrollBar scrollId={'rp-body-scroll'}>\n                <div className='container-padding'>\n                    <div className='rp__title'>\n                        <span>Reports</span>\n                    </div>\n                    <div className='rp__title-btn'>\n                        <span className={FnReport ? 'active-btn' : ''} onClick={()=>setFnReport(true)}>Functional Testing</span>\n                        <span className={!FnReport ? 'active-btn' : ''} onClick={()=>setFnReport(false)}>Accessibility Testing</span>\n                    </div>\n                    <div className='rp__body'>\n                        <div className='rp__header-select' style={{height:dropSize[modDrop]+'px'}}>\n                            <ToolbarMenu FnReport={FnReport} setModDrop={setModDrop} setBlockui={setBlockui} displayError={displayError}/>\n                            <ModuleList modDrop={dropSize[modDrop]-50+'px'} FnReport={FnReport} setModDrop={setModDrop} setBlockui={setBlockui} displayError={displayError}/>\n                            <div className='rp__footer'>\n                                <span onClick={()=>{\n                                    if(modDrop==='semi')setModDrop('full');\n                                    else if(modDrop==='close')return;\n                                    else setModDrop('semi')}}>\n                                    <i className={(modDrop === 'full')?\"fa fa-caret-up\":\"fa fa-caret-down\"} title=\"Drop down button\"></i>\n                                </span>\n                            </div>\n                        </div>\n                        {FnReport ? \n                            <TestingReport setBlockui={setBlockui} displayError={displayError}/>:\n                            <AccessibilityReport setBlockui={setBlockui} displayError={displayError}/>\n                        }\n                    </div>\n                </div>\n                </ScrollBar>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ReportContainer;","import React from 'react';\nimport { Header, FooterTwo as Footer,ActionBar,ReferenceBar} from '../../global';\nimport ReportContainer from './ReportContainer';\nimport '../styles/ReportHome.scss';\n\n/*Component ReportHome\n  use: renders ReportHome is a entry point for report layout\n  can be used here to create multiple childrent entries ex: accessibility\n*/\n\nconst ReportHome = () =>{\n    return(\n        <div className='rp__container'>\n            <Header/>\n            <div className='rp__body-main'>\n                <ActionBar collapsible={true} collapse={true} collapsible={false}/>\n                <div className='rp__middle_container'>\n                    <ReportContainer/>\n                </div>\n                <ReferenceBar taskTop={true} collapsible={true}  collapse={true}/>\n            </div>\n            <div className='rp__footer'><Footer/></div>\n        </div>\n    )\n}\n\nexport default ReportHome;","import React, { Fragment} from 'react';\r\nimport { ActionBar } from '../../global';\r\nimport  \"../styles/Leftbar.scss\";\r\nimport { useDispatch ,useSelector } from 'react-redux';\r\nimport * as actionTypes from '../state/action.js';\r\n\r\nconst Leftbar = () => {\r\n    const dispatch = useDispatch();\r\n    const viewMappedFiles = useSelector(state=>state.integration.mappedScreenType);\r\n    const screenType = useSelector(state=>state.integration.screenType);\r\n\r\n    const callIconClick = iconType => {\r\n        let clickedScreen = null;\r\n\r\n        if(iconType === \"qTest\" ) clickedScreen = \"qTest\";\r\n        else if (iconType === \"ALM\") clickedScreen = \"ALM\";\r\n        else if(iconType === \"Zephyr\") clickedScreen = \"Zephyr\";\r\n\r\n        window.localStorage['integrationScreenType'] = clickedScreen;\r\n        dispatch({ type: actionTypes.INTEGRATION_SCREEN_TYPE, payload: clickedScreen });\r\n        dispatch({ type: actionTypes.VIEW_MAPPED_SCREEN_TYPE, payload: null });\r\n    }\r\n\r\n    const barRender=()=>{\r\n        let icon = viewMappedFiles || screenType;\r\n        switch(icon){\r\n            case \"qTest\": \r\n            return(\r\n                <Fragment>\r\n                    <h4>Integration</h4>\r\n                <span onClick={()=>callIconClick(\"qTest\") }>\r\n                    <img alt=\"qTestIcon\" \r\n                        id={(screenType === \"qTest\")? \"selectedIcon\" : null}  \r\n                        src='static/imgs/qTest.png'\r\n                    /> \r\n                    <div>qTest</div>\r\n                </span>\r\n                </Fragment>\r\n                )\r\n            case \"ALM\":\r\n                return(\r\n                <Fragment>\r\n                    <h4>Integration</h4>\r\n                    <span onClick={()=>callIconClick(\"ALM\")}>\r\n                        <img alt=\"ALMIcon\" \r\n                            src='static/imgs/ALM.png'\r\n                        />\r\n                        <div>ALM</div>\r\n                    </span>\r\n                </Fragment>)\r\n            case \"Zephyr\":\r\n                return(\r\n                <Fragment>\r\n                    <h4>Integration</h4>\r\n                   <span onClick={()=>callIconClick(\"Zephyr\")}>\r\n                        <img alt=\"ZephyrIcon\"  \r\n                            id={(screenType === \"Zephyr\")? \"selectedIcon\" : null} \r\n                            src='static/imgs/Zephyr.png'\r\n                        />\r\n                        <div>Zephyr</div>\r\n                    </span> \r\n                </Fragment> ) \r\n            default :\r\n            return(\r\n            <Fragment>\r\n                <h4>Integration</h4>\r\n                    <span onClick={()=>callIconClick(\"qTest\") }>\r\n                        <img alt=\"qTestIcon\"  \r\n                             id={(screenType === \"qTest\")? \"selectedIcon\" : null}  \r\n                             src='static/imgs/qTest.png'\r\n                             data-test=\"intg_leftbar_qTestIcon\"\r\n                        /> \r\n                        <div>qTest</div>\r\n                    </span>\r\n                    <span onClick={()=>callIconClick(\"ALM\")}>\r\n                        <img alt=\"AlmIcon\" \r\n                            src='static/imgs/ALM.png'\r\n                        />\r\n                        <div>ALM</div>\r\n                    </span>\r\n                    <span onClick={()=>callIconClick(\"Zephyr\")}>\r\n                        <img alt=\"ZephyrIcon\" \r\n                            id={(screenType === \"Zephyr\")? \"selectedIcon\" : null} \r\n                            src='static/imgs/Zephyr.png'\r\n                        />\r\n                        <div>Zephyr</div>\r\n                    </span>\r\n            </Fragment>    )\r\n        }\r\n    }\r\n    const upperContent=()=>{\r\n        return(\r\n            <div className=\"letfnavi\">\r\n                {screenType === \"ALM\" ? \r\n                <Fragment>\r\n                    <h4>ALM Integration</h4>\r\n                    <span onClick={()=>callIconClick(\"ALM\")}>\r\n                        <img alt=\"tstPlanIcon\" \r\n                            id=\"selectedIcon\" \r\n                            src='static/imgs/testplan.png'\r\n                        />\r\n                        <div>Test Lab</div>\r\n                    </span>\r\n                    <span \r\n                        onClick={()=>callIconClick(\"ALM\")}\r\n                        style={{opacity:\"0.5\"}}\r\n                    >\r\n                        <img alt=\"testlabIcon\"\r\n                            src='static/imgs/testlab.png'\r\n                        /> \r\n                        <div>Test Plan</div>    \r\n                    </span>\r\n                </Fragment>\r\n                : \r\n                barRender()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return <ActionBar upperContent={upperContent()} />;\r\n}\r\n\r\nexport default Leftbar\r\n","import React from 'react';\r\nimport {ReferenceBar } from '../../global';\r\n\r\nconst Rightbar=()=>{\r\n    return (\r\n            <ReferenceBar \r\n                hideTask={true} hideInfo = {true}\r\n            />     \r\n    )\r\n}\r\n\r\nexport default Rightbar;\r\n","import axios from 'axios';\r\nimport {RedirectPage} from '../global';\r\nimport {history} from './index';\r\nimport {url} from '../../App';\r\n\r\n/*Component loginToQTest_ICE\r\n  use: logins to qTets Environment  \r\n  api returns [{id:\"\",name:\"\"}]\r\n*/\r\n\r\n\r\nexport const loginToQTest_ICE = async(qcPassword ,qcURL , qcUsername) => {\r\n    try{\r\n        const res = await axios(url+'/loginToQTest_ICE', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-type': 'application/json',\r\n            },\r\n           data: {\r\n            qcPassword: qcPassword,\r\n            qcURL: qcURL,\r\n            qcUsername : qcUsername, \r\n            action : 'loginToQTest_ICE',\r\n            qcaction : \"domain\"\r\n           }\r\n        });\r\n        if(res.status === 401 || res.data === \"Invalid Session\"){\r\n            RedirectPage(history)\r\n            return {error:'invalid session'};\r\n        }\r\n        if(res.status===200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return {error:'Failed to Login'}\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'Failed to Login'}\r\n    }\r\n}\r\n/*Component qtestProjectDetails_ICE\r\n  use: get Project List i.e. list of all scenario  of Particular project \r\n  api returns [avoassure_projects:[]]\r\n*/\r\n\r\nexport const qtestProjectDetails_ICE = async(domain , userid) => {\r\n    try{\r\n        const res = await axios(url+'/qtestProjectDetails_ICE', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-type': 'application/json',\r\n            },\r\n           data: {\r\n            user_id: userid,\r\n            domain : domain, \r\n            action : 'qtestProjectDetails_ICE',\r\n            qcaction : \"project\"\r\n           }\r\n        });\r\n        if(res.status === 401 || res.data === \"Invalid Session\"){\r\n            RedirectPage(history)\r\n            return {error:'invalid session'};\r\n        }\r\n        if(res.status===200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return {error:'Failed to Project Details'}\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'Failed to Project Details'}\r\n    }\r\n}\r\n/*Component qtestFolderDetails_ICE\r\n  use: get Cycle and TestSuite Details of a Particular Release \r\n  api returns [Cycle:\"Cycle Name\",testsuites:[0:{id: ,name: , testruns:[0:{id: , name:}]}]]\r\n*/\r\nexport const qtestFolderDetails_ICE = async(releaseId, foldername, projectId, qcaction, testCasename) => {\r\n    try{\r\n        const res = await axios(url+'/qtestFolderDetails_ICE', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            data: {\r\n                project: releaseId,\r\n                foldername : foldername,\r\n                domain : projectId, \r\n                action : 'qtestFolderDetails_ICE',\r\n                qcaction : qcaction,\r\n                testset: testCasename\r\n            }\r\n        });\r\n        if(res.status === 401 || res.data === \"Invalid Session\"){\r\n            RedirectPage(history)\r\n            return {error:'invalid session'};\r\n        }\r\n        if(res.status===200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return {error:'Failed to TestSuite Details'}\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'Failed to TestSuite Details'}\r\n    }\r\n}\r\n/*Component saveQtestDetails_ICE\r\n  use: Saves the Synced TestCzses and Scenario pair\r\n  api returns: sucess/ Fail \r\n*/\r\nexport const saveQtestDetails_ICE = async(mappedDetails) => {\r\n    try{\r\n        const res = await axios(url+'/saveQtestDetails_ICE', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            data: {\r\n                mappedDetails : mappedDetails,\r\n                action : 'saveQtestDetails_ICE'\r\n            }\r\n        });\r\n        if(res.status === 401 || res.data === \"Invalid Session\"){\r\n            RedirectPage(history)\r\n            return {error:'invalid session'};\r\n        }\r\n        if(res.status===200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return {error:'Map Testcases Before Save'}\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'Failed to Save Mapped TestCases'}\r\n    }\r\n}\r\n/*Component viewQtestMappedList_ICE\r\n  use: Gets the Values of the mapped files \r\n  api returns: [] \r\n*/\r\nexport const viewQtestMappedList_ICE = async(userID) => {\r\n    try{\r\n        const res = await axios(url+'/viewQtestMappedList_ICE', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-type': 'application/json',\r\n            },\r\n           data: {\r\n            user_id : userID,\r\n            action : 'viewQtestMappedList_ICE'\r\n            \r\n           }\r\n        });\r\n        if(res.status === 401 || res.data === \"Invalid Session\"){\r\n            RedirectPage(history)\r\n            return {error:'invalid session'};\r\n        }\r\n        if(res.status===200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return {error:'No Mapped Dataa Found'}\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'No Mapped Data Found'}\r\n    }\r\n}\r\n\r\nexport const loginQCServer_ICE = async(qcPassword , qcURL , qcUsername ) => {\r\n    try{\r\n        const res = await axios(url+'/loginQCServer_ICE', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-type': 'application/json',\r\n            },\r\n           data: {\r\n            qcPassword: qcPassword,\r\n            qcURL: qcURL,\r\n            qcUsername: qcUsername,   \r\n            action : 'loginQCServer_ICE',\r\n            qcaction : \"domain\"\r\n        }\r\n        });\r\n        if(res.status === 401 || res.data === \"Invalid Session\"){\r\n            RedirectPage(history)\r\n            return {error:'invalid session'};\r\n        }\r\n        if(res.status===200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return {error:'No User Details Found ,Please Login Again'}\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'No User Details Found ,Please Login Again'}\r\n    }\r\n}\r\n\r\nexport const qcProjectDetails_ICE = async(domain ,user_id ) => {\r\n    try{\r\n        const res = await axios(url+'/qcProjectDetails_ICE', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-type': 'application/json',\r\n            },\r\n           data: {\r\n            action : 'qcProjectDetails_ICE',\r\n            domain: domain,\r\n            user_id: user_id,\r\n            qcaction : \"project\"\r\n        }\r\n        });\r\n        if(res.status === 401 || res.data === \"Invalid Session\"){\r\n            RedirectPage(history)\r\n            return {error:'invalid session'};\r\n        }\r\n        if(res.status===200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return {error:'No Projects Found ,Please add Projects'}\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'No Projects Found ,Please add Projects'}\r\n    }\r\n}\r\n\r\nexport const qcFolderDetails_ICE = async(domain ,foldername ,project,qcaction,testset) => {\r\n    try{\r\n        const res = await axios(url+'/qcFolderDetails_ICE', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-type': 'application/json',\r\n            },\r\n           data: {\r\n            action : 'qcFolderDetails_ICE',\r\n            domain: domain,\r\n            foldername: foldername,\r\n            project : project,\r\n            qcaction : qcaction,\r\n            testset : testset\r\n        }\r\n        });\r\n        if(res.status === 401 || res.data === \"Invalid Session\"){\r\n            RedirectPage(history)\r\n            return {error:'invalid session'};\r\n        }\r\n        if(res.status===200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return {error:'No Projects Found ,Please add Projects'}\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'No Projects Found ,Please add Projects'}\r\n    }\r\n}\r\n\r\n/*Component saveQtestDetails_ICE\r\n  use: Saves the Synced TestCzses and Scenario pair\r\n  api returns: sucess/ Fail \r\n*/\r\nexport const saveQcDetails_ICE = async(mappedDetails) => {\r\n    try{\r\n        const res = await axios(url+'/saveQcDetails_ICE', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-type': 'application/json',\r\n            },\r\n           data: {\r\n            mappedDetails : mappedDetails,\r\n            action : 'saveQcDetails_ICE'\r\n            \r\n           }\r\n        });\r\n        if(res.status === 401 || res.data === \"Invalid Session\"){\r\n            RedirectPage(history)\r\n            return {error:'invalid session'};\r\n        }\r\n        if(res.status===200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return {error:'Map Testcases Before Save'}\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'Failed to Save Mapped Testcases'}\r\n    }\r\n}\r\n/*Component viewQtestMappedList_ICE\r\n  use: Gets the Values of the mapped files \r\n  api returns: [] \r\n*/\r\nexport const viewQcMappedList_ICE = async(userID) => {\r\n    try{\r\n        const res = await axios(url+'/viewQcMappedList_ICE', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-type': 'application/json',\r\n            },\r\n           data: {\r\n            user_id : userID,\r\n            action : 'viewQcMappedList_ICE'\r\n            \r\n           }\r\n        });\r\n        if(res.status === 401 || res.data === \"Invalid Session\"){\r\n            RedirectPage(history)\r\n            return {error:'invalid session'};\r\n        }\r\n        if(res.status===200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return {error:'No Mapped Data Found'}\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'No Mapped Data Found'}\r\n    }\r\n}\r\nexport const loginToZephyr_ICE = async(zephyrurl, username, password) => {\r\n    try{\r\n        const res = await axios(url+'/loginToZephyr_ICE', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            data: {\r\n                action: \"loginToZephyr_ICE\",\r\n\t\t\t\tzephyrURL: zephyrurl,\r\n\t\t\t\tzephyrUserName:\tusername,\r\n\t\t\t\tzephyrPassword: password,\r\n\t\t\t\tzephyraction: \"project\"\r\n            }\r\n        });\r\n        if(res.status === 401 || res.data === \"Invalid Session\"){\r\n            RedirectPage(history)\r\n            return {error:'invalid session'};\r\n        }\r\n        if(res.status===200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return {error:'Failed to get list.'}\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'Failed to get list.'}\r\n    }\r\n}\r\n\r\nexport const zephyrProjectDetails_ICE = async(projectId, user_id) => {\r\n    try{\r\n        const res = await axios(url+'/zephyrProjectDetails_ICE', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-type': 'application/json',\r\n            },\r\n           data: {\r\n                action : 'zephyrProjectDetails_ICE',\r\n                projectId:\tprojectId,\r\n                zephyraction: \"release\",\r\n                user_id : user_id \r\n            }\r\n        });\r\n        if(res.status === 401 || res.data === \"Invalid Session\"){\r\n            RedirectPage(history)\r\n            return {error:'invalid session'};\r\n        }\r\n        if(res.status===200){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return {error:'No Projects Found, Please add Projects'}\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'No Projects Found, Please add Projects'}\r\n    }\r\n}\r\n\r\n\r\nexport const zephyrCyclePhase_ICE = async(releaseId, user_id) => {\r\n    try{\r\n        const res = await axios(url+'/zephyrCyclePhase_ICE', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            data: {\r\n                action: 'zephyrCyclePhase_ICE',\r\n                releaseId:\treleaseId,\r\n                zephyraction: \"cyclephase\",\r\n                user_id : user_id\r\n           }\r\n        });\r\n        if(res.status === 401 || res.data === \"Invalid Session\"){\r\n            RedirectPage(history)\r\n            return {error:'invalid session'};\r\n        }\r\n        if(res.status===200 && res.data !== \"fail\"){\r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return {error:'Failed to get list.'}\r\n    } catch(err){\r\n        console.error(err)\r\n        return {error:'Failed to get list.'}\r\n    }\r\n}\r\n\r\nexport const viewZephyrMappedList_ICE = async(userID) => {\r\n    try{\r\n        const res = await axios(url+'/viewZephyrMappedList_ICE', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-type': 'application/json',\r\n            },\r\n            data: {\r\n                user_id : userID,\r\n                action : 'viewZephyrMappedList_ICE'\r\n           }\r\n        });\r\n        if(res.status === 401 || res.data === \"Invalid Session\"){\r\n            RedirectPage(history)\r\n            return {error:'invalid session'};\r\n        }\r\n        if(res.status===200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return {error:'No Mapped Data Found'}\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'No Mapped Data Found'}\r\n    }\r\n}\r\n\r\nexport const saveZephyrDetails_ICE = async(mappedDetails) => {\r\n    try{\r\n        const res = await axios(url+'/saveZephyrDetails_ICE', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-type': 'application/json',\r\n            },\r\n           data: {\r\n            mappedDetails : mappedDetails,\r\n            action : 'saveZephyrDetails_ICE'\r\n            \r\n           }\r\n        });\r\n        if(res.status === 401 || res.data === \"Invalid Session\"){\r\n            RedirectPage(history)\r\n            return {error:'invalid session'};\r\n        }\r\n        if(res.status===200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return {error:'Map Testcases Before Save'}\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'Failed to Save Mapped Testcases'}\r\n    }\r\n}\r\n\r\nexport const zephyrTestcaseDetails_ICE = async(zephyraction, treeId) => {\r\n    try{\r\n        const res = await axios(url+'/zephyrTestcaseDetails_ICE', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-type': 'application/json',\r\n            },\r\n            data: {\r\n                action : 'zephyrTestcaseDetails_ICE',\r\n                treeId: treeId,\r\n                zephyraction: zephyraction,\r\n           }\r\n        });\r\n        if(res.status === 401 || res.data === \"Invalid Session\"){\r\n            RedirectPage(history)\r\n            return {error:'invalid session'};\r\n        }\r\n        if(res.status===200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return {error:'Failed to fetch testcases'}\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'Failed to fetch testcases'}\r\n    }\r\n}\r\n\r\nexport const saveUnsyncDetails = async(undoMapList) => {\r\n    try{\r\n        const res = await axios(url+'/saveUnsyncDetails', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-type': 'application/json',\r\n            },\r\n            data: {\r\n                action: \"saveUnsyncDetails\",\r\n                undoMapList : undoMapList, \r\n           }\r\n        });\r\n        if(res.status === 401 || res.data === \"Invalid Session\"){\r\n            RedirectPage(history)\r\n            return {error:'invalid session'};\r\n        }\r\n        if(res.status===200 && res.data !== \"fail\"){            \r\n            return res.data;\r\n        }\r\n        console.error(res.data)\r\n        return {error:'Failed to Unsync Mapped Files.'}\r\n    }catch(err){\r\n        console.error(err)\r\n        return {error:'Failed to Unsync Mapped Files.'}\r\n    }\r\n}","import React  from 'react';\nimport { ScrollBar } from '../../global';\nimport \"../styles/MappingPage.scss\";\n\n\n/*\n    pageTitle - Top-Left Title Label (ex. ALM Integration)\n    onSave - Operation to perform when pressed \"Save\" Button\n    onViewMap - Operation to Perform when pressed \"View Mapped Files\" Button\n    onExit - Operation to perform when pressed \"Exit\" Button\n    leftBoxTitle - Title of the Left Positioned Container\n    rightBoxTItle - Title of the Right Positioned Container\n    selectTestDomain - Dropdown to Select Domain\n    selectTestRelease - Dropdown to Select Release\n    selectTestProject - Dropdown to Select Project of Left Box\n    selectScenarioProject - Dropdown to Select Project of Right Box\n    testList - List Contents of Left Box\n    scenarioList - List of Contents of Right Box\n*/\n\nconst MappingPage = props =>{\n    \n    return(\n        <>\n        <div className=\"page-taskName\" >\n            <span data-test=\"intg_main_title_name\" className=\"taskname\">\n                {props.pageTitle}\n            </span>\n        </div>\n        <div className=\"mappingPage__action_row\">\n            <button onClick={props.onSave}>Save</button> \n            <button onClick={props.onViewMap}>View Mapped Files</button> \n            <button onClick={props.onExit}>Exit</button>\n        </div>\n        <div className=\"mappingPage__tree_containers\">\n            <div className=\"mappingPage__tree_container\">\n                <span className=\"mappingPage__title_row\"><label>{props.leftBoxTitle}</label></span>\n                <div className=\"mappingPage__left_tree_container\">\n                    <div className=\"mappingPage_tree_selection_box\">\n                        {props.selectTestDomain}\n                        {props.selectTestProject}\n                        {props.selectTestRelease}\n                    </div>\n                    <div className=\"mappingPage__left_tree\" >\n                        <div className=\"mappingPage_tree_canvas\">\n                            <div className=\"mappingPage_tree_inner\">\n                                <div className=\"mappingPage_tree_contents\" id=\"mappingPage_left_tree\">\n                                <ScrollBar scrollId=\"mappingPage_left_tree\" thumbColor= \"#321e4f\" trackColor= \"rgb(211, 211, 211)\" verticalbarWidth='8px'>\n                                    {props.testList}\n                                </ScrollBar>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div> \n            <div className=\"mappingPage__tree_container\">\n                <span className=\"mappingPage__title_row\"><label>{props.rightBoxTitle}</label></span>\n                <div className=\"mappingPage__right_tree_container\">\n                    <div className=\"mappingPage_tree_selection_box\">\n                        {props.selectScenarioProject}\n                        {props.searchScenario} { /* Can be implemented here itself */ }\n                    </div>\n                \n                    <div className=\"mappingPage__right_tree\">\n                    <div className=\"mappingPage_tree_canvas\">\n                        <div className=\"mappingPage_tree_inner\">\n                            <div data-test=\"intg_scenarios_list_div\" className=\"mappingPage_tree_contents\" id=\"mappingPage_right_tree\">\n                            <ScrollBar scrollId=\"mappingPage_right_tree\" hideXbar={true} thumbColor= \"#321e4f\" trackColor= \"rgb(211, 211, 211)\" verticalbarWidth='8px'>\n                                {props.scenarioList}\n                            </ScrollBar>\n                            </div>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </>)\n}\n    \nexport default MappingPage;","import React, { useState, useCallback } from 'react';\nimport { qcFolderDetails_ICE } from '../api.js';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actionTypes from '../state/action';\n\n/* \n    props:\n        folders - array of subfolders\n        projectName - selected Project\n        releaseName - selected Domain\n*/\nconst FolderNode = props => {\n\n    const dispatch = useDispatch();\n    const [collapse, setCollapse] = useState(true);\n    const [subFolders, setSubFolders] = useState([]);\n    const [subTestSets, setSubTestSets] = useState([]);\n    const [testCases, setTestCases] = useState([]);\n\n    const handleClick = useCallback(async()=>{\n        if (collapse) {\n            dispatch({type: actionTypes.SHOW_OVERLAY, payload: 'Loading Testcases...'});\n            \n            const path = props.type === \"folder\" ? props.folderObject.folderpath : props.testSetObject.testsetpath;\n            const testCaseName = props.type === \"folder\" ? null : props.testSetObject.testset;\n\n            const data = await qcFolderDetails_ICE(props.projectName, path, props.releaseName, props.type, testCaseName);\n            if (data.error){\n                dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Error\", content: data.error}});\n            } else if (typeof(data) !== \"object\") {\n                dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Error\", content: \"Error in getting list.\"}});\n            } else if (props.type === \"folder\") {\n                setSubFolders(data[0].testfolder);\n                setSubTestSets(data[0].TestSet);\n                setCollapse(false);\n            } else if (props.type === \"testcase\") {\n                setTestCases(data[0].testcase);\n                setCollapse(false);\n            }\n            dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n        } \n        else setCollapse(true);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [collapse, setCollapse])\n\n    return <div className=\"int__folderNode\" style={{paddingLeft: 17}}>\n        { <div className=\"test_tree_branches\">\n            <img alt=\"ce-ic\"\n                className=\"test_tree_toggle\" \n                src={ props.type === \"folder\" \n                        ? `static/imgs/ic-qc${collapse ? \"Expand\" : \"Collapse\"}.png` \n                        : `static/imgs/ic-taskType-blue-${collapse ? \"plus\" : \"minus\"}.png` }\n                onClick={handleClick}\n            />\n            <label>{ props.type === \"folder\" ? props.folderObject.foldername : props.testSetObject.testset}</label>\n        </div> }\n        { !collapse && subFolders.length > 0 \n            ? <div> {\n                subFolders\n                    .map((folder, idx) => <FolderNode \n                                            key={`folder-${idx}`}\n                                            folderObject={folder}\n                                            type=\"folder\"\n                                            projectName={props.projectName}\n                                            releaseName={props.releaseName}\n                                        />)\n            } </div>\n            : !collapse && subTestSets.length > 0 \n            ? <div> {\n                subTestSets\n                    .map((testSet, idx) => <FolderNode \n                                            key={`testSet-${idx}`}\n                                            testSetObject={testSet}\n                                            type=\"testcase\"\n                                            projectName={props.projectName}\n                                            releaseName={props.releaseName}\n                                        />)\n            } </div>\n            : !collapse && testCases.length > 0 \n            ? <div> {\n                testCases\n                    .map((testCase, idx) => <TestCaseNode \n                                            key={`testCase-${idx}`}\n                                            testCaseName={testCase.slice(0, testCase.indexOf(\"/\"))}\n                                            testCaseId={testCase.substring(testCase.indexOf(\"/\")+1)}\n                                            testSetObject={props.testSetObject}\n                                            projectName={props.projectName}\n                                            releaseName={props.releaseName}\n                                        />)\n            } </div>\n            : null\n        }\n    </div>;\n}\n\n\n\nconst TestCaseNode = props => {\n\n    const dispatch = useDispatch();\n    const selectedTCDetails = useSelector(state=>state.integration.selectedTCDetails);\n    const syncedTestCases = useSelector(state=>state.integration.syncedTestCases);\n    const selectedTC = useSelector(state=>state.integration.selectedTestCase);\n    const selectedScIds = useSelector(state=>state.integration.selectedScenarioIds);\n\n    let uniqueTCpath = `${props.testSetObject.testsetpath}\\\\${props.testSetObject.testset}\\\\${props.testCaseName}`;\n\n    const handleClick = e => {\n        let newSelectedTCDetails = { ...selectedTCDetails };\n        let newSelectedTC = [...selectedTC];\n\n        if (!e.ctrlKey) {\n            newSelectedTCDetails.selectedTCNames = [props.testCaseName];\n            newSelectedTCDetails.selectedTSNames = [props.testSetObject.testset];\n            newSelectedTCDetails.selectedFolderPath = [props.testSetObject.testsetpath];\n            newSelectedTC = [uniqueTCpath];\n\t\t} else if (e.ctrlKey) { \n            const index = newSelectedTC.indexOf(uniqueTCpath);\n            if (index !== -1) {\n                newSelectedTCDetails.selectedTCNames.splice(index, 1);\n                newSelectedTCDetails.selectedTSNames.splice(index, 1);\n                newSelectedTCDetails.selectedFolderPath.splice(index, 1);\n                newSelectedTC.splice(index, 1);\n            } else {\n                newSelectedTCDetails.selectedTCNames.push(props.testCaseName);\n                newSelectedTCDetails.selectedTSNames.push(props.testSetObject.testset);\n                newSelectedTCDetails.selectedFolderPath.push(props.testSetObject.testsetpath);\n                newSelectedTC.push(uniqueTCpath)\n            } \n        }\n        dispatch({type: actionTypes.SEL_TC_DETAILS, payload: newSelectedTCDetails});\n        dispatch({type: actionTypes.SYNCED_TC, payload: []});\n        dispatch({type: actionTypes.SEL_TC, payload: newSelectedTC});\n    };\n\n    const handleSync = () => {\n        let popupMsg = false;\n        if(selectedScIds.length===0){\n            popupMsg = {\n                title:'Save Mapped Testcase ',\n                content:\"Please Select a Scenario\"\n            };\n        }\n        else if(selectedTCDetails.selectedTCNames.length===0){\n            popupMsg = {\n                title:'Save Mapped Testcase ',\n                content:\"Please select Testcase\"\n            };\n        }\n        else if(selectedTCDetails.selectedTCNames.length>1 && selectedScIds.length>1) {\n\t\t\tpopupMsg = {\n                title:'Save Mapped Testcase ',\n                content:\"Cannot map multiple test cases with multiple scenarios\"\n            };\n        }\n\n        if (popupMsg) dispatch({type: actionTypes.SHOW_POPUP, payload: popupMsg});\n        else{\n            const mappedPair=[\n                {\n                    domain: props.projectName,\n                    folderpath: selectedTCDetails.selectedFolderPath,\n                    project: props.releaseName,\n                    scenarioId: selectedScIds,\n                    testcase: selectedTCDetails.selectedTCNames,\n                    testset:  selectedTCDetails.selectedTSNames\n                }\n            ]\n            dispatch({type: actionTypes.MAPPED_PAIR, payload: mappedPair});\n            dispatch({type: actionTypes.SYNCED_TC, payload: selectedTCDetails.selectedTCNames});\n        }\n    }\n\n    const handleUnSync = () => {\n        dispatch({type: actionTypes.MAPPED_PAIR, payload: []});\n        dispatch({type: actionTypes.SYNCED_TC, payload: []});\n    }\n\n    return <div className={\"test_tree_leaves\"+ ( selectedTC.includes(uniqueTCpath) ? \" test__selectedTC\" : \"\") + (selectedTC.includes(uniqueTCpath) && syncedTestCases.includes(props.testCaseName) ? \" test__syncedTC\" : \"\")}>\n                <label className=\"test__leaf\" title={props.testCaseName} onClick={handleClick}>\n                    <span className=\"leafId\">{props.testCaseId}</span>\n                    <span className=\"test__tcName\">{props.testCaseName}</span>\n                </label>\n                { selectedTC.includes(uniqueTCpath)\n                        && <><div className=\"test__syncBtns\"> \n                        { !syncedTestCases.includes(props.testCaseName) && <img className=\"test__syncBtn\" alt=\"s-ic\" onClick={handleSync} src=\"static/imgs/ic-qcSyncronise.png\" />}\n                        <img className=\"test__syncBtn\" alt=\"s-ic\" onClick={handleUnSync} src=\"static/imgs/ic-qcUndoSyncronise.png\" />\n                        </div></> \n                    }\n            </div>\n}\n\nexport default FolderNode;","import React,{ useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { RedirectPage } from '../../global';\nimport {qcProjectDetails_ICE,qcFolderDetails_ICE,saveQcDetails_ICE} from '../api.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MappingPage from '../containers/MappingPage';\nimport FolderNode from './ALMTree';\nimport * as actionTypes from '../state/action';\nimport '../styles/ALM.scss';\nimport \"../styles/TestList.scss\"\n\nconst ALMContent = props => {\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const user_id = useSelector(state=> state.login.userinfo.user_id);\n    const selectedScenarioIds = useSelector(state=>state.integration.selectedScenarioIds);\n    const mappedPair = useSelector(state=>state.integration.mappedPair);\n\n    const [projectDetails , setProjectDetails]=useState(null);\n    const [folderDetails , setFolderDetails ] = useState([]);\n    const [selectedDomain, setSelectedDomain] = useState(null);\n    const [scenarioArr , setScenarioArr] = useState(false);\n    const [scenario_ID , setScenario_ID] = useState(null) ;\n    const [projectDropdn1 , setProjectDropdn1]= useState(null);\n    const [projectDropdn2 , setProjectDropdn2]= useState(null);\n    const [releaseDropdn, setReleaseDropdn]=useState(null);\n    const [SearchIconClicked , setSearchIconClicked] =useState(false);\n    const [filteredNames , setFilteredName]= useState(null);\n    \n\n    const callProjectDetails_ICE=async(e)=>{\n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: 'Loading...'});\n        const domain = e.target.value;\n        const userid = user_id;\n        setSelectedDomain(domain)\n        const projectDetails = await qcProjectDetails_ICE(domain , userid )\n        if (projectDetails.error){\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Error\", content: projectDetails.error}});\n        }\n        else if(projectDetails === \"unavailableLocalServer\")\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"ALM Connection\", content: \"ICE Engine is not available, Please run the batch file and connect to the Server.\"}});\n        else if(projectDetails === \"scheduleModeOn\")\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"ALM Connection\", content: \"Schedule mode is Enabled, Please uncheck 'Schedule' option in ICE Engine to proceed.\"}});\n        else if(projectDetails === \"Invalid Session\"){\n            dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n            return RedirectPage(history);\n        } else {\n            setProjectDetails(projectDetails)\n            setFolderDetails([]);\n            setReleaseDropdn(\"Select Release\")\n            setProjectDropdn1(domain);\n            clearSelections();\n        }\n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n    }\n    const callFolderDetails_ICE = async(e)=>{\n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: 'Loading Testcases...'});\n        const domain = selectedDomain;\n        const project_Name = e.target.value;\n        const folderDetails = await qcFolderDetails_ICE(domain,\"root\",project_Name,\"folder\",null)\n        if (folderDetails.error){\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Error\", content: folderDetails.error}});\n        }\n        else if (folderDetails){\n            setReleaseDropdn(project_Name);\n            setFolderDetails(folderDetails);\n            clearSelections();\n            dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n        }\n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n    }\n    \n    const callScenarios =(e)=>{\n        const scenarioID = (e.target.childNodes[e.target.selectedIndex]).getAttribute(\"id\");\n        const project_Name= e.target.value\n        setScenarioArr(true);\n        setScenario_ID(scenarioID);\n        setFilteredName(null);\n        setProjectDropdn2(project_Name)\n        setSearchIconClicked(false);\n        dispatch({type: actionTypes.SEL_SCN_IDS, payload: []});\n    }\n    \n    const callSaveButton =async()=>{ \n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: 'Saving...'});\n        const response = await saveQcDetails_ICE(mappedPair);\n        if(response.error){\n            dispatch({type: actionTypes.SHOW_POPUP, payload:{title: \"Error\", content: response.error}});\n        }\n        else if(response === \"unavailableLocalServer\")\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Save Mapped Testcase\", content: \"ICE Engine is not available, Please run the batch file and connect to the Server.\"}});\n        else if(response === \"scheduleModeOn\")\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Save Mapped Testcase\", content: \"Schedule mode is Enabled, Please uncheck 'Schedule' option in ICE Engine to proceed.\"}});\n        else if ( response === \"success\"){\n            dispatch({type: actionTypes.SHOW_POPUP, payload:{title: \"Save Mapped Testcase\", content: \"Saved Succesfully\"}});\n            dispatch({type: actionTypes.MAPPED_PAIR, payload: []});\n            clearSelections();\n        }\n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n    }\n    const callExit=()=>{\n        setFolderDetails(null);\n        setScenarioArr(null);\n        setReleaseDropdn(\"Select Release\");\n        setProjectDropdn1(\"Select Project\");\n        setProjectDropdn2(\"Select Project\");\n        dispatch({ type: actionTypes.INTEGRATION_SCREEN_TYPE, payload: null });\n    }\n\n    const clearSelections = () => {\n        dispatch({type: actionTypes.SEL_SCN_IDS, payload: []});\n        dispatch({\n            type: actionTypes.SEL_TC_DETAILS, \n            payload: {\n                selectedTCNames: [],\n                selectedTSNames: [],\n                selectedFolderPaths: []\n            }\n        });\n        dispatch({type: actionTypes.SYNCED_TC, payload: []});\n        dispatch({type: actionTypes.SEL_TC, payload: []});\n    }\n    \n    const onSearch=(e)=>{\n        var val = e.target.value;\n        var filter = []\n        if(scenarioArr){\n            (projectDetails.avoassure_projects[parseInt(scenario_ID)].scenario_details.length?\n                projectDetails.avoassure_projects[parseInt(scenario_ID)].scenario_details : [])\n                .forEach(e=>{\n                    if (e.name.toUpperCase().indexOf(val.toUpperCase())!==-1)\n                        filter.push(e);\n                })\n        }\n        setFilteredName(filter)\n    }\n\n    const selectScenarioMultiple = (e,id) => {\n        let newScenarioIds = [...selectedScenarioIds];\n        if(!e.ctrlKey) {\n\t\t\tnewScenarioIds = [id];\n\t\t} else if (e.ctrlKey) { \n            const index = newScenarioIds.indexOf(id);\n            if (index !== -1) {\n                newScenarioIds.splice(index, 1);\n            }\n            else newScenarioIds.push(id);\n        }\n        dispatch({type: actionTypes.SEL_SCN_IDS, payload: newScenarioIds});\t\n    }\n\n    return ( \n        <MappingPage \n            pageTitle=\"ALM Integration\"\n            onSave={()=>callSaveButton()}\n            onViewMap={()=>props.callViewMappedFiles()}\n            onExit={()=>{ callExit(); props.callExitcenter() }}\n            leftBoxTitle=\"ALM Tests\"            \n            rightBoxTitle=\"Avo Assure Scenarios\"\n            selectTestDomain = {\n                <select data-test='intg_alm_domain_drpdwn'value={projectDropdn1} onChange={(e)=>callProjectDetails_ICE(e)} style={{marginRight : \"5px\"}}>\n                    <option value=\"Select Project\" selected disabled >Select Domain</option>\n                    { props.domainDetails && \n                        props.domainDetails.domain.map((e, i) => (\n                            <option id={e.id} key={i} value={e.name}>{e}</option>\n                        )) }\n                </select>\n            }\n            selectTestRelease = {\n                <select data-test='intg_alm_release_drpdwn' value={releaseDropdn} onChange={(e)=>callFolderDetails_ICE(e)}>\n                    <option value=\"Select Release\" selected disabled >Select Release</option>\n                    { projectDetails &&\n                        projectDetails.qc_projects.map((e, i) => (\n                            <option key={i} value={e}>{e}</option>\n                        )) }\n                </select>\n            }\n            selectScenarioProject = {\n                <select data-test='intg_alm_project_dropdwn'value={projectDropdn2} onChange={(e)=>callScenarios(e)}>\n                    <option value=\"Select Project\" selected disabled >Select Project</option>\n                    { projectDetails && \n                        projectDetails.avoassure_projects.map((e,i)=>(\n                            <option id={i} value={e.project_name} >{e.project_name}</option>\n                        )) }\n                </select>\n            }\n            searchScenario = { scenarioArr &&\n                <> { SearchIconClicked && \n                    <input onChange={(e)=>onSearch(e)} type=\"text\" placeholder=\"Scenario Name\"/> }\n                    <span className=\"mapping__searchIcon\" style={{display:\"inline\" , float:\"right\"}}> \n                        <img alt=\"searchIcon\" \n                            onClick={()=>{setSearchIconClicked(!SearchIconClicked);setFilteredName(null)}} \n                            style={{cursor: \"pointer\" , display:\"inline\",float:\"right\"}} \n                            src=\"static/imgs/ic-searchIcon-black.png\" \n                        />\n                    </span> </> \n            }\n            testList = {folderDetails.length && (\"testfolder\" in folderDetails[0]) ?\n                <>    \n                <div data-test='intg_alm_test_list' className=\"test__rootDiv\">\n                    <div className=\"test_tree_branches\">\n                        <img alt=\"collapse\"\n                            className=\"test_tree_toggle\" \n                            src=\"static/imgs/ic-qcCollapse.png\"\n                        />\n                        <label>Root</label>\n                    </div>\n                    {folderDetails[0].testfolder.map(folder =>\n                        <FolderNode \n                            folderObject={folder}\n                            type=\"folder\"\n                            projectName={projectDropdn1}\n                            releaseName={releaseDropdn}\n                        />\n                    )} \n                </div>\n                </> : <div></div>\n            }\n            scenarioList = { scenarioArr && \n                (filteredNames ? filteredNames : \n                    projectDetails.avoassure_projects[parseInt(scenario_ID)].scenario_details.length ?\n                    projectDetails.avoassure_projects[parseInt(scenario_ID)].scenario_details :[] )\n                    .map(e => (\n                        <div \n                            className={\"scenario__listItem \"+(selectedScenarioIds.indexOf(e._id)!==-1 ? \" scenario__selectedTC\" : \"\")} \n                            onClick={(event)=>{selectScenarioMultiple(event, e._id);}}\n                        >\n                            {e.name}\n                        </div> ))\n            }\n        />\n    ); \n}\n    \nexport default ALMContent;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as actionTypes from '../state/action';\nimport { ModalContainer } from \"../../global\";\nimport \"../styles/LoginModal.scss\";\n\n/* \n    props:\n    urlRef: handles URL\n    usernameRef: handles Username\n    passwordRef: handles Password\n    screenType: Checks ScreenType ALM/qTest/Zephyr\n    login: Function to call LoginAPI\n    error: Error Message to display\n*/\nconst LoginModal = props => {\n\n    const dispatch = useDispatch();\n    const [error, setError] = useState({});\n\n    const onSubmit = () => {\n        let error = {};\n        if (!props.urlRef.current.value) error={ url: true, msg: \"Please Enter URL\"};\n        else if (!props.usernameRef.current.value) error={username: true, msg: \"Please Enter User Name.\"};\n        else if (!props.passwordRef.current.value) error={password: true, msg: \"Please Enter Password.\"};\n        else props.login();\n        setError(error);\n    }\n\n    return (\n        <div className=\"ilm__container\">\n            <ModalContainer \n                title={`${props.screenType} Login`}\n                content={\n                    <div className=\"ilm__inputs\">\n                        <input\n                            className={\"ilm__input\"+(error.url ? \" ilm_input_error\" : \"\")}\n                            ref={props.urlRef}\n                            placeholder={inpPlaceHolder[props.screenType].url}\n                            data-test=\"intg_url_inp\"\n                        />\n                        <input\n                            className={\"ilm__input\"+(error.username ? \" ilm_input_error\" : \"\")}\n                            ref={props.usernameRef}\n                            placeholder={inpPlaceHolder[props.screenType].username}\n                            data-test=\"intg_username_inp\"\n                        />\n                        <input\n                            className={\"ilm__input\"+(error.password ? \" ilm_input_error\" : \"\")}\n                            ref={props.passwordRef}\n                            type=\"password\"\n                            placeholder={inpPlaceHolder[props.screenType].password}\n                            data-test=\"intg_password_inp\"\n                        />\n                    </div>\n                }\n                footer={<>\n                    <span data-test=\"intg_log_error_span\" className=\"ilm__error_msg\">{props.error || error.msg}</span>\n                    <button data-test=\"intg_log_submit_btn\" onClick={onSubmit}>Submit</button>\n                </>}\n                close={()=>dispatch({ type: actionTypes.INTEGRATION_SCREEN_TYPE, payload: null })}\n            />\n        </div>\n    );\n}\n\nconst inpPlaceHolder = {\n    ALM : {\n        url : \"Enter ALM URL\",\n        username : \"Enter ALM Username / Client ID\",\n        password : \"Enter ALM Password / Client Secret Key\"\n    },\n    Zephyr : {\n        url : \"Enter Zephyr URL (Ex. http(s)://SERVER[:PORT])\",\n        username : \"Enter Zephyr Username\",\n        password : \"Enter Zephyr Password\"\n    },\n    qTest : {\n        url : \"Enter qTest URL\",\n        username : \"Enter qTest Username\",\n        password : \"Enter qTest Password\"\n    }\n}\n\nexport default LoginModal;","import React, { useEffect, useState } from 'react';\nimport { ModalContainer, ScrollBar} from '../../global';\nimport PropTypes from 'prop-types';\nimport '../styles/InfoPopup.scss'\n\n/*  component InfoPopup\n    props:\n        reqDetails - list of dict having details\n        setInfo - fn to close popup\n        displayError - fn to show display popup\n*/\nconst InfoPopup = ({reqDetails,setInfo,displayError,screenType}) => {\n    const [err,setErr] = useState(true)\n    useEffect(()=> {\n        if(!reqDetails || reqDetails.length === 0){\n            displayError(reqDetails ? \"No requirement details found\" : `Please re-map the ${screenType} Test Cases and the AvoAssure scenarios to fetch the requirements`)\n            setInfo(false)\n        }else{\n            setErr(false)\n        }\n    },[])\n    if(err)return null\n    return(\n        <ModalContainer \n        modalClass = 'modal-md'\n        title='Test Details'\n        close={()=>setInfo(false)}\n        footer={<Footer setInfo={setInfo}/>}\n        content={<Container reqDetails={reqDetails}/>} \n      />\n    )\n}\n\nconst Container = ({reqDetails}) =>{\n    return(\n        <div data-test='zphyre-info-box' className='zphyre-info-box'>\n            <ScrollBar>\n            {reqDetails.map((e,i)=>\n                <div className='zphyre-info-step' key={'info__'+i}>\n                    <div>\n                        <label className='title'>ID </label>\n                        <label><span>:</span> {e.reqid}</label>\n                    </div>\n                    <div>\n                        <label className='title'>Name </label>\n                        <label><span>:</span> {e.reqname}</label>\n                    </div>\n                    <div>\n                        <label className='title'>Create Date </label>\n                        <label><span>:</span> {e.reqcreationdate}</label>\n                    </div>\n                    <div>\n                        <label className='title'>Description </label>\n                        <label><span>:</span> {e.reqdescription}</label>\n                    </div>\n                </div>\n            )}\n            </ScrollBar>\n        </div>\n    )\n}\n\nconst Footer = ({setInfo}) => <div><button onClick={()=>setInfo(false)}>Ok</button></div>\n\nInfoPopup.propTypes={\n    reqDetails:PropTypes.arrayOf(PropTypes.object),\n    setInfo:PropTypes.func,\n    displayError:PropTypes.func\n}\n\nexport default InfoPopup;","import React, { useState, Fragment} from 'react';\nimport \"../styles/MappedLabel.scss\";\nimport InfoPopup from './InfoPopup';\n\nconst MappedLabel = props => {\n    const [info, setInfo] = useState(false);\n    const [show, setShow] = useState(false);\n    const type = props.type\n    const screenType = props.screenType\n    const reqDetails = props.reqDetails\n    const displayError = props.displayError\n\n    return (\n        <Fragment>\n            {info?<InfoPopup reqDetails={reqDetails} displayError={displayError} screenType={screenType} setInfo={setInfo}/>:null}\n            <div className=\"mlalm__container\" data-type={props.type}>\n                <div className=\"mlalm_topLabel\" data-selected={props.selected.includes(`${props.mapIdx}-0`)}>\n                    <div className=\"mlalm_label\" \n                        onClick={props.handleClick ? (e)=>props.handleClick(e, props.type, `${props.mapIdx}-0`) : null}\n                    >\n                        {typeof(props.list) === \"object\" ? props.list[0] : props.list}\n                    </div>\n                    {(type==='testcase' && screenType==='Zephyr')?\n                        <i onClick={()=>setInfo(true)} className=\"fa fa-info\" aria-hidden=\"true\" style={{fontSize:'15px',margin:'3px',color:'#633691',cursor:'pointer'}}/>:null\n                    }\n                    { props.selected.includes(`${props.mapIdx}-0`) && !props.unSynced &&\n                        <button><img className=\"mlalm__syncBtn\" alt=\"s-ic\" onClick={props.handleUnSync ? ()=>props.handleUnSync(props.type) : null} src=\"static/imgs/ic-qcUndoSyncronise.png\" /></button>\n                    }\n                    { typeof(props.list) === \"object\" && props.list.length>1 && <button onClick={()=>setShow(!show)}>\n                        <img alt=\"mappedScrArrow\" src={`static/imgs/alm_arrow_${show?\"up\":\"down\"}.svg`}/>\n                    </button> }\n                </div>\n                { show &&\n                    props.list.slice(1).map((item, idx) => \n                        <div className=\"mlalm_topLabel\" key={idx} data-selected={props.selected.includes(`${props.mapIdx}-${idx+1}`)}>\n                            <div className=\"mlalm_label\" \n                                onClick={props.handleClick ? (e)=>props.handleClick(e, props.type, `${props.mapIdx}-${idx+1}`) : null}\n                            >\n                                {item}\n                            </div>\n                            { props.selected.includes(`${props.mapIdx}-${idx+1}`) && !props.unSynced &&\n                                <button><img className=\"mlalm__syncBtn\" alt=\"s-ic\" onClick={props.handleUnSync ? ()=>props.handleUnSync(props.type) : null} src=\"static/imgs/ic-qcUndoSyncronise.png\" /></button>\n                            }\n                        </div>\n                    )\n                }\n            </div>\n        </Fragment>\n    );\n}\n\nexport default MappedLabel;","import React, { useState, useEffect, Fragment } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {ScrollBar, PopupMsg} from '../../global';\nimport MappedLabel from '../components/MappedLabel';\nimport { saveUnsyncDetails } from '../api';\nimport * as actionTypes from '../state/action';\nimport '../styles/MappedPage.scss';\n\n/* \n    screenType - ALM/qTest/Zephyr\n    leftBoxTitle - Title of Left Section\n    rightBoxTitle - Title of Right Section\n    mappedfilesRes - Array of Objects of mapped Files\n*/\n\nconst MappedPage = props =>{\n    \n    const dispatch = useDispatch();\n    const [selectedSc, setSelectedSc] = useState([]);\n    const [popup,setPopup] = useState({show:false})\n    const [selectedTc, setSelectedTc] = useState([]);\n    const [unSynced, setUnSynced] = useState(false);\n    const [unSyncMaps, setUnSyncMaps] = useState({\n        type: '',\n        maps: {}\n    });\n    const [rows, setRows] = useState([]);\n    const [counts, setCounts] = useState({\n        totalCounts: 0,\n        mappedScenarios: 0,\n        mappedTests: 0\n    })\n\n    useEffect(()=>{\n        if (props.mappedfilesRes.length){\n            let tempRow = [];\n            if (props.screenType === \"ALM\") {\n                let totalCounts = 0;\n                let mappedScenarios = 0;\n                let mappedTests = 0;\n\n                props.mappedfilesRes.forEach(object => {\n                    totalCounts = totalCounts + 1;\n                    mappedScenarios = mappedScenarios + object.testscenarioname.length;\n                    mappedTests = mappedTests + object.qctestcase.length;\n                    tempRow.push({\n                        'scenarioNames': object.testscenarioname,\n                        'testCaseNames': object.qctestcase,\n                        'mapId': object._id,\n                        'scenarioId': object.testscenarioid,\n                        'folderPath': object.qcfolderpath,\n                        'testCaseSet': object.qctestset,\n                    });\n                });\n\n                setCounts({\n                    totalCounts: totalCounts,\n                    mappedScenarios: mappedScenarios,\n                    mappedTests: mappedTests\n                });\n            } \n            else if (props.screenType === \"qTest\") {\n                props.mappedfilesRes.forEach(object => {\n                    tempRow.push({\n                        \"testCaseNames\": object.qtestsuite, \n                        \"scenarioNames\": object.testscenarioname\n                    });\n                })\n            }\n            else if (props.screenType === \"Zephyr\") {\n                props.mappedfilesRes.forEach(object => {\n                    tempRow.push({\n                        'testCaseNames': object.testname, \n                        'scenarioNames': object.testscenarioname,\n                        \"reqDetails\": object.reqdetails\n                    })\n                })\n            }\n            setRows(tempRow);\n            setUnSyncMaps({\n                type: '',\n                maps: {}\n            });\n        } \n        else {\n            setSelectedSc([]);\n            setSelectedTc([]);\n            setUnSynced(false);\n            setUnSyncMaps({\n                type: '',\n                maps: {}\n            });\n            setRows([]);\n            setCounts({\n                totalCounts: 0,\n                mappedScenarios: 0,\n                mappedTests: 0\n            })\n        }\n    }, [props.mappedfilesRes, props.screenType])\n\n    const handleClick = (e, type, mapIdx) => {\n        let newSelectedList = [];\n\n        if (type===\"scenario\") newSelectedList = [...selectedSc];\n        if (type===\"testcase\") newSelectedList = [...selectedTc];\n\n        let itemIdx = newSelectedList.indexOf(mapIdx);\n        if (itemIdx > -1) newSelectedList.splice(itemIdx, 1);\n        else if (!e.ctrlKey) newSelectedList = [mapIdx];\n        else if (e.ctrlKey) newSelectedList = [...newSelectedList, mapIdx];\n\n        if (type===\"scenario\") {\n            setSelectedSc(newSelectedList);\n            setSelectedTc([]);\n        }\n        if (type===\"testcase\") {\n            setSelectedTc(newSelectedList);\n            setSelectedSc([]);\n        }\n        if (unSynced) setUnSynced(false);\n    }\n\n    const onUnSync = type => {\n        let tempUnSyncMaps = unSyncMaps.type === type ? { ...unSyncMaps } : {type: type, maps: {}} ;\n\n        let selectedMaps = [...selectedSc, ...selectedTc]; // One Array will always be empty\n\n        for (let itemAddress of selectedMaps) {\n            let [rowIdx, labelIdx] = itemAddress.split(\"-\");\n\n            if (type === \"scenario\") {\n                if (tempUnSyncMaps.maps[rowIdx]) {\n                    tempUnSyncMaps.maps[rowIdx].testscenarioid.push(rows[rowIdx].scenarioId[labelIdx]);\n                }\n                else {\n                    tempUnSyncMaps.maps[rowIdx] = {\n                        'mapid': rows[rowIdx].mapId,\n                        'testscenarioid': [rows[rowIdx].scenarioId[labelIdx]]\n                    }\n                }\n            }\n            else if (type === \"testcase\") {\n                if (tempUnSyncMaps.maps[rowIdx]) {\n                    tempUnSyncMaps.maps[rowIdx].qctestcase.push(rows[rowIdx].testCaseNames[labelIdx]);\n                    tempUnSyncMaps.maps[rowIdx].qcfolderpath.push(rows[rowIdx].folderPath[labelIdx]);\n                    tempUnSyncMaps.maps[rowIdx].qctestset.push(rows[rowIdx].testCaseSet[labelIdx]);\n                }\n                else {\n                    tempUnSyncMaps.maps[rowIdx] = {\n\t\t\t\t\t\t'mapid': rows[rowIdx].mapId,\n\t\t\t\t\t\t'qctestcase': [rows[rowIdx].testCaseNames[labelIdx]],\n\t\t\t\t\t\t'qcfolderpath': [rows[rowIdx].folderPath[labelIdx]],\n\t\t\t\t\t\t'qctestset': [rows[rowIdx].testCaseSet[labelIdx]]\n\t\t\t\t\t}\n                }\n            }\n        }\n\n        setUnSynced(true);\n        setUnSyncMaps(tempUnSyncMaps);\n    }\n\n    const onSave = () => {\n        if(Object.values(unSyncMaps.maps).length > 0){\n            let args = Object.values(unSyncMaps.maps);\n\t\t\tsaveUnsyncDetails(args)\n\t\t\t.then(data => {\n                if (data.error) \n                    dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Error\", content: data.error}});\n\t\t\t\telse if(data === \"unavailableLocalServer\")\n                    dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Save Mapped Testcase\", content: \"ICE Engine is not available, Please run the batch file and connect to the Server.\"}});\n\t\t\t\telse if(data === \"scheduleModeOn\")\n                    dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Save Mapped Testcase\", content: \"Schedule mode is Enabled, Please uncheck 'Schedule' option in ICE Engine to proceed.\"}});\n\t\t\t\telse if(data === \"fail\")\n                    dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Save Mapped Testcase\", content: \"Failed to Save.\"}});\n\t\t\t\telse if(data == \"success\")\n                    props.fetchMappedFiles(true);        \n\t\t\t})\n\t\t\t.catch (error => dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Save Mapped Testcase\", content: \"Failed to Save.\"}}))\n\t\t}\n\t\telse dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Save Mapped Testcase\", content: \"Unmap testcase/scenario before Save\"}})\n    }\n    const displayError = (error) =>{\n        setPopup({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n    return(\n        <Fragment>\n            {(popup.show)?<PopupMsg submit={()=>setPopup({show:false})} close={()=>setPopup({show:false})} title={popup.title} content={popup.content} submitText={popup.submitText}/>:null}\n            <div  className=\"integration_middleContent\">\n                <div className=\"viewMap__task_title\" >\n                    <span className=\"viewMap__task_name\">\n                        Mapped files\n                    </span>\n                    { props.screenType === \"ALM\" && \n                    <> \n                        <div className=\"viewMap__counterContainer\">\n                            <div className=\"viewMap__totalCount\">\n                                <div>Total Mappings</div>\n                                <div>{counts.totalCounts}</div>\n                            </div>\n                            <div className=\"viewMap__scenarioCount\">\n                                <div>Mapped Scenarios</div>\n                                <div>{counts.mappedScenarios}</div>\n                            </div>\n                            <div className=\"viewMap__testCount\">\n                                <div>Mapped ALM Tests</div>\n                                <div>{counts.mappedTests}</div>\n                            </div>\n                        </div>\n                        <button onClick={onSave}>Save</button> \n                    </> }\n                </div>\n                <div className=\"viewMap__mappingsContainer\">\n                    <div className=\"viewMap__tileRow\">\n                        <span className=\"viewMap_actionRow\"><label>{props.leftBoxTitle}</label></span>\n                        <span className=\"viewMap_actionRow\"><label>{props.rightBoxTitle}</label></span>\n                    </div>\n                    <div className=\"viewMap__labelContainer\">\n                    <div className=\"viewMap__canvas\">\n                        <div className=\"viewMap__inner\">\n                            <div className=\"viewMap__contents\" id=\"viewMapScrollId\">\n                            <ScrollBar scrollId=\"viewMapScrollId\" thumbColor= \"#321e4f\" trackColor= \"rgb(211, 211, 211)\" verticalbarWidth='8px'>\n                                { rows.map(({scenarioNames, testCaseNames, reqDetails}, index) => <div key={index} className=\"viewMap__labelRow\">\n                                    <MappedLabel \n                                        list={testCaseNames} \n                                        type=\"testcase\" \n                                        mapIdx={index} \n                                        screenType = {props.screenType}\n                                        reqDetails = {reqDetails}\n                                        handleClick={props.screenType === \"ALM\" ? handleClick : null} \n                                        selected={selectedTc} \n                                        unSynced={unSynced}\n                                        handleUnSync={props.screenType === \"ALM\" ? onUnSync : null}\n                                        displayError={displayError}\n                                    />\n                                    { props.screenType!==\"ALM\" && \n                                        <div className=\"viewMap__ropeContainer\">\n                                            <div className=\"viewMap__rope\"></div>\n                                        </div>\n                                    }\n                                    <MappedLabel \n                                        list={scenarioNames} \n                                        type=\"scenario\" \n                                        mapIdx={index} \n                                        handleClick={props.screenType === \"ALM\" ? handleClick : null} \n                                        selected={selectedSc} \n                                        unSynced={unSynced}\n                                        displayError={displayError}\n                                        handleUnSync={props.screenType === \"ALM\" ? onUnSync : null}\n                                    />\n                                </div>) }\n                            </ScrollBar>\n                            </div>   \n                        </div>\n                    </div>\n                </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\nexport default MappedPage;","import React, {useRef, useEffect, useState } from 'react';\nimport { RedirectPage} from '../../global';\nimport { useHistory } from 'react-router-dom';\nimport * as actionTypes from '../state/action.js';\nimport ALMContent from '../components/ALMContent.js';\nimport LoginModal from '../components/LoginModal';\nimport {viewQcMappedList_ICE,loginQCServer_ICE} from '../api.js';\nimport MappedPage from '../containers/MappedPage';\nimport { useSelector ,useDispatch} from 'react-redux';\n\n\nconst ALM = props => {\n    const history = useHistory();\n    const user_id = useSelector(state=> state.login.userinfo.user_id); \n    const screenType = useSelector(state=>state.integration.screenType);\n    const viewMappedFiles = useSelector(state=>state.integration.mappedScreenType);\n    const dispatch = useDispatch();\n    const urlRef = useRef();\n    const usernameRef = useRef();\n    const passwordRef = useRef();\n    const [domainDetails , setDomainDetails] = useState(null);\n    const [loginSuccess , setLoginSuccess]=useState(false);\n    const [loginError , setLoginError]= useState(null);\n    const [mappedfilesRes,setMappedFilesRes]=useState([]);\n\n    useEffect(()=>{\n        dispatch({type: actionTypes.VIEW_MAPPED_SCREEN_TYPE, payload: null});\n        setMappedFilesRes([]);\n\n        return ()=>{\n            dispatch({type: actionTypes.MAPPED_PAIR, payload: []});\n            dispatch({type: actionTypes.SEL_SCN_IDS, payload: []});\n            dispatch({\n                type: actionTypes.SEL_TC_DETAILS, \n                payload: {\n                    selectedTCNames: [],\n                    selectedTSNames: [],\n                    selectedFolderPaths: []\n                }\n            });\n            dispatch({type: actionTypes.SYNCED_TC, payload: []});\n            dispatch({type: actionTypes.SEL_TC, payload: []});\n        }\n       // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    \n\n    const callLogin_ALM = async()=>{\n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: 'Logging...'});\n        const qcPassword = passwordRef.current.value;\n        const qcURL = urlRef.current.value;\n        const qcUsername = usernameRef.current.value;\n        const domainDetails = await loginQCServer_ICE(qcPassword ,qcURL ,qcUsername);\n\n        if (domainDetails.error) dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Error\", content: domainDetails.error} });\n        else if (domainDetails === \"unavailableLocalServer\") setLoginError(\"ICE Engine is not available,Please run the batch file and connect to the Server.\");\n        else if (domainDetails === \"scheduleModeOn\") setLoginError(\"Schedule mode is Enabled, Please uncheck 'Schedule' option in ICE Engine to proceed.\");\n        else if (domainDetails === \"Invalid Session\"){\n            dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n            return RedirectPage(history);\n        }\n        else if (domainDetails === \"invalidcredentials\") setLoginError(\"Invalid Credentials\");\n        else if (domainDetails === \"invalidurl\") setLoginError(\"Invalid URL\");\n        else if (domainDetails === \"fail\") setLoginError(\"Fail to Login\");\n        else if (domainDetails === \"Error:Failed in running Qc\") setLoginError(\"Unable to run Qc\");\n        else if (domainDetails === \"Error:Qc Operations\") setLoginError(\"Failed during execution\");\n        else{\n            setDomainDetails(domainDetails);\n            setLoginSuccess(true);\n        }\n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n    }\n    const callViewMappedFiles = async(saveFlag)=>{\n        try{\n            dispatch({type: actionTypes.SHOW_OVERLAY, payload: saveFlag?'Updating...':'Fetching...'});\n            //props.setViewMappedFiles(true)\n            const userid = user_id;\n            const response = await viewQcMappedList_ICE(userid);\n            if (response.error){\n                dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Error\", content: response.error}});\n            } \n            else if (response.length){\n                dispatch({ type: actionTypes.VIEW_MAPPED_SCREEN_TYPE, payload: \"ALM\" });\n                if (saveFlag) \n                    dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Save Mapped Testcase\", content: \"Saved successfully\"}});\n                setMappedFilesRes(response);\n            }\n            else {\n                if (saveFlag) {\n                    dispatch({type: actionTypes.VIEW_MAPPED_SCREEN_TYPE, payload: null});\n                    dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Save Mapped Testcase\", content: \"Saved successfully\"}});\n                }\n                else {\n                    dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Mapped Testcase\", content: \"No mapped details\"}});\n                }\n            }\n            dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n\n            return response;\n        }\n        catch(err) {\n            dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Error\", content: \"Failed to Fetch Data.\"}});\n        }\n    }\n    const callExitcenter=()=>{\n        dispatch({ type: actionTypes.INTEGRATION_SCREEN_TYPE, payload: null });;\n    }\n    return(\n        <>\n        { viewMappedFiles === \"ALM\" ?\n            <MappedPage \n                screenType=\"ALM\"\n                leftBoxTitle=\"ALM Testcases\"\n                rightBoxTitle=\"Avo Assure Scenarios\"\n                mappedfilesRes={mappedfilesRes}\n                fetchMappedFiles={callViewMappedFiles}\n            /> :\n        <>\n        { !loginSuccess &&\n            <LoginModal \n                urlRef={urlRef}\n                usernameRef={usernameRef}\n                passwordRef={passwordRef}\n                login={callLogin_ALM}\n                error={loginError}\n                screenType={screenType}\n            />\n        }\n        { screenType === \"ALM\" &&\n            <ALMContent\n                domainDetails={domainDetails}\n                callViewMappedFiles={callViewMappedFiles}\n                callExitcenter={callExitcenter}\n            /> }\n        </>}\n        </> \n    )\n}\n\nexport default ALM;","import React, { useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actionTypes from '../state/action';\n\nconst CycleNode = props => {\n\n    const [collapse, setCollapse] = useState(true);\n\n    const handleClick = useCallback(()=>{\n        setCollapse(!collapse);\n    }, [collapse, setCollapse])\n\n    return (\n        Object.keys(props.cycleNode).length ?\n        <div className=\"int__cycleNode\" style={{paddingLeft: 17}}>\n             <div className=\"test_tree_branches\">\n                <img alt=\"ce-ic\"\n                    className=\"test_tree_toggle\" \n                    src={ `static/imgs/ic-qc${collapse ? \"Expand\" : \"Collapse\"}.png` }\n                    onClick={handleClick}\n                />\n                <label>{ props.cycleNode.cycle }</label>\n            </div> \n            { !collapse && props.cycleNode.testsuites.length > 0 \n                ? <div> {\n                    props.cycleNode.testsuites\n                        .map((testSuite, idx) => <TestSuiteNode \n                                                key={`TestSuite-${idx}`}\n                                                testSuite={testSuite}\n                                                projectId={props.projectId}\n                                                projectName={props.projectName}\n                                            />)\n                } </div>\n                : null\n            }\n        </div> : null);\n}\n\nconst TestSuiteNode = props => {\n\n    const [collapse, setCollapse] = useState(true);\n\n    const handleClick = useCallback(()=>{\n        setCollapse(!collapse);\n    }, [collapse, setCollapse])\n    \n\n    return <div className=\"int__phaseNode\" style={{paddingLeft: 17}}>\n                { <div className=\"test_tree_branches\">\n                    <img alt=\"ce-ic\"\n                        className=\"test_tree_toggle\" \n                        src={ `static/imgs/ic-taskType-blue-${collapse ? \"plus\" : \"minus\"}.png` }\n                        onClick={handleClick}\n                    />\n                    <label>{ props.testSuite.name }</label>\n                </div> }\n                { !collapse && props.testSuite.testruns.length > 0 \n                    ? <div> {\n                        props.testSuite.testruns\n                            .map(testRun => <TestRunNode \n                                                key={`testRun-${testRun.id}`}       \n                                                testSuiteId={props.testSuite.id}\n                                                testRun={testRun}\n                                                projectId={props.projectId}\n                                                projectName={props.projectName}\n                                            />)\n                    } </div>\n                    : null\n                }\n            </div>;\n}\n\n\nconst TestRunNode = props => {\n\n    const dispatch = useDispatch();\n    const selectedTC = useSelector(state=>state.integration.selectedTestCase);\n    const syncedTestCases = useSelector(state=>state.integration.syncedTestCases);\n    const selectedScIds = useSelector(state=>state.integration.selectedScenarioIds);\n\n    let uniqueTCpath = `|${props.testSuiteId}\\\\${props.testRun.id}|`;\n\n    const handleClick = () => {\n        dispatch({type: actionTypes.SEL_TC, payload: uniqueTCpath});\n        dispatch({type: actionTypes.SYNCED_TC, payload: []});\n    }\n\n    const handleSync = () => {\n        let popupMsg = false;\n        if(selectedScIds.length===0){\n            popupMsg = {\n                title:'Save Mapped Testcase ',\n                content:\"Please Select a Scenario\"\n            };\n        }\n        if (popupMsg) dispatch({type: actionTypes.SHOW_POPUP, payload: popupMsg});\n        else{\n            const mappedPair=[\n                {\n                    project: props.projectName,\n                    projectid: props.projectId,\t\t\t\n                    testsuite: props.testRun.name,\n                    testsuiteid: props.testRun.id,\n                    scenarioId: selectedScIds\n                }\n            ]\n            dispatch({type: actionTypes.MAPPED_PAIR, payload: mappedPair});\n            dispatch({type: actionTypes.SYNCED_TC, payload: uniqueTCpath});\n        }\n    }\n\n    const handleUnSync = () => {\n        dispatch({type: actionTypes.MAPPED_PAIR, payload: []});\n        dispatch({type: actionTypes.SYNCED_TC, payload: []});\n    }\n\n    return <div className={\"test_tree_leaves\"+ ( selectedTC.includes(uniqueTCpath) ? \" test__selectedTC\" : \"\") + (selectedTC.includes(uniqueTCpath) && syncedTestCases.includes(uniqueTCpath) ? \" test__syncedTC\" : \"\")}>\n                <label className=\"test__leaf\" title={props.testRun.name} onClick={handleClick}>\n                    <span className=\"test__tcName\">{props.testRun.name}</span>\n                </label>\n                { selectedTC.includes(uniqueTCpath)\n                        && <><div className=\"test__syncBtns\"> \n                        { !syncedTestCases.includes(uniqueTCpath) && <img className=\"test__syncBtn\" alt=\"s-ic\" onClick={handleSync} src=\"static/imgs/ic-qcSyncronise.png\" />}\n                        <img className=\"test__syncBtn\" alt=\"s-ic\" onClick={handleUnSync} src=\"static/imgs/ic-qcUndoSyncronise.png\" />\n                        </div></> \n                    }\n            </div>\n}\n\nexport default CycleNode;","import React,{Fragment, useState} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { RedirectPage } from '../../global';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MappingPage from '../containers/MappingPage';\nimport CycleNode from './QTestTree';\nimport { qtestProjectDetails_ICE, qtestFolderDetails_ICE, saveQtestDetails_ICE } from '../api.js';\nimport * as actionTypes from '../state/action.js';\nimport \"../styles/TestList.scss\"\n\nconst QTestContent = props => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const user_id = useSelector(state=> state.login.userinfo.user_id);\n    const mappedPair = useSelector(state=>state.integration.mappedPair);\n    const selectedScIds = useSelector(state=>state.integration.selectedScenarioIds);\n    const [projectDetails , setProjectDetails] = useState(null);\n    const [folderDetails , setFolderDetails ] = useState([]);\n    const [scenarioArr , setScenarioArr] = useState(false);\n    const [selectedAvoProj, setSelectedAvoProj] = useState([]);\n    const [testProject, setTestProject]= useState(\"Select Project\");\n    const [avoProject, setAvoProject]= useState(\"Select Project\");\n    const [release, setRelease]=useState(\"Select Release\");\n    const [SearchIconClicked , setSearchIconClicked] =useState(false);\n    const [filteredNames , setFilteredName]= useState(null);\n\n    const onProjectChange = async(e) => {\n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: 'Loading...'});\n       \n        const [projectId, projectName] = e.target.value.split('||');\n    \n        const projectDetails = await qtestProjectDetails_ICE(projectId, user_id);\n\n        if (projectDetails.error)\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Error\", content: projectDetails.error}});\n        else if(projectDetails === \"unavailableLocalServer\")\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"ALM Connection\", content: \"ICE Engine is not available, Please run the batch file and connect to the Server.\"}});\n        else if(projectDetails === \"scheduleModeOn\")\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"ALM Connection\", content: \"Schedule mode is Enabled, Please uncheck 'Schedule' option in ICE Engine to proceed.\"}});\n        else if(projectDetails === \"Invalid Session\"){\n            dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n            return RedirectPage(history);\n        }\n        else if (projectDetails){\n            setProjectDetails(projectDetails)\n            setFolderDetails([]);\n            setRelease(\"Select Release\")\n            setTestProject(`${projectId}||${projectName}`);\n            clearSelections();\n        }\n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n    }\n\n    const onReleaseChange = async(e) => { \n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: 'Loading TestCases...'});\n       \n        const [releaseId, releaseName] = e.target.value.split('||');\n        const projectId = testProject.split('||')[0];\n        \n        const folderDetails = await qtestFolderDetails_ICE(releaseId, \"root\", projectId, \"folder\");\n        if (folderDetails.error){\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title:\"Error\", content: folderDetails.error}});\n        } else if (folderDetails) {            \n            setFolderDetails(folderDetails);\n            clearSelections();\n            setRelease(`${releaseId}||${releaseName}`);\n        }\n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n    }\n\n    const onScenarioChange = e => {\n        const scenarioIndex = e.target.value;\n        setScenarioArr(true);\n        setSelectedAvoProj(projectDetails.avoassure_projects[parseInt(scenarioIndex)].scenario_details);\n        setFilteredName(null);\n        setAvoProject(scenarioIndex)\n        setSearchIconClicked(false);\n        clearSelections();\n    }\n\n    const onSave = async() => { \n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: 'Saving...'});\n        const response = await saveQtestDetails_ICE(mappedPair);\n        if (response.error)\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Error\", content: response.error}});\n        else if(response === \"unavailableLocalServer\")\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Save Mapped Testcase\", content: \"ICE Engine is not available, Please run the batch file and connect to the Server.\"}});\n        else if(response === \"scheduleModeOn\")\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Save Mapped Testcase\", content: \"Schedule mode is Enabled, Please uncheck 'Schedule' option in ICE Engine to proceed.\"}});\n        else if(response === \"fail\")\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Save Mapped Testcase\", content: \"failed to save\"}});\n        else if(response === \"success\"){\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Saved Mapped Testcases\", content: \"Saved Successfully.\"}});\n            dispatch({type: actionTypes.MAPPED_PAIR, payload: []});\n            clearSelections();\n        }\n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n    }\n\n    const clearSelections = () => {\n        dispatch({type: actionTypes.SEL_SCN_IDS, payload: []});\n        dispatch({type: actionTypes.SYNCED_TC, payload: []});\n        dispatch({type: actionTypes.SEL_TC, payload: []});\n    }\n\n    const onSearch=(e)=>{\n        var val = e.target.value;\n        var filter = []; \n        if(scenarioArr){\n            (selectedAvoProj.length ? \n            selectedAvoProj : [])\n                .forEach((e,i)=>{\n                    if (e.name.toUpperCase().indexOf(val.toUpperCase())!==-1)\n                        filter.push(e);\n                })\n            }\n        setFilteredName(filter)\n    }\n\n    \n    const onExit = () => {\n        setFolderDetails([]);\n        setScenarioArr(null);\n        setRelease(\"Select Release\");\n        setTestProject(\"Select Project\");\n        setAvoProject(\"Select Project\");\n        setSelectedAvoProj([]);\n        dispatch({ type: actionTypes.INTEGRATION_SCREEN_TYPE, payload: null });\n    }\n   \n    return (\n        <MappingPage \n            pageTitle=\"qTest Integration\"\n            onSave={onSave}\n            onViewMap={props.onViewMappedFiles}\n            onExit={onExit}\n            leftBoxTitle=\"qTest Tests\"            \n            rightBoxTitle=\"Avo Assure Scenarios\"\n            selectTestDomain = {\n                <select data-test=\"intg_qTest_project_dropdwn\" value={testProject} onChange={onProjectChange} style={{marginRight : \"5px\"}}>\n                    <option value=\"Select Project\" disabled >Select Project</option>\n                    { props.domainDetails.length &&\n                        props.domainDetails.map(e => (\n                            <option key={e.id} value={`${e.id}||${e.name}`}>{e.name}</option>\n                        ))}\n                </select>\n            }\n            selectTestRelease = {\n                <select data-test=\"intg_qTest_release_drpdwn\" value={release} onChange={onReleaseChange}>\n                    <option value=\"Select Release\" disabled >Select Release</option>\n                    { projectDetails &&\n                        projectDetails.qc_projects.map(e => (\n                            <option key={e.id} value={`${e.id}||${e.name}`}>{e.name}</option>\n                        ))}\n                </select>\n            }\n            selectScenarioProject = {\n                <select data-test=\"intg_qTest_Project_scenarios_drpdwn\" value={avoProject} onChange={onScenarioChange} >\n                    <option value=\"Select Project\" disabled >Select Project</option>\n                    { projectDetails &&\n                        projectDetails.avoassure_projects.map((e,i)=>(\n                            <option key={i} value={i}>{e.project_name}</option>\n                        ))}\n                </select>\n            }\n            searchScenario = {\n                scenarioArr ?\n                <> { SearchIconClicked ?\n                        <input onChange={onSearch} type=\"text\" placeholder=\"Scenario Name\"/> : null}\n                    <span className=\"mapping__searchIcon\" style={{display:\"inline\" , float:\"right\"}}> \n                        <img alt=\"searchIcon\"\n                            onClick={()=>{setSearchIconClicked(!SearchIconClicked);setFilteredName(null)}} \n                            style={{cursor: \"pointer\" , display:\"inline\",float:\"right\"}} \n                            src=\"static/imgs/ic-searchIcon-black.png\"\n                        />\n                    </span>\n                </> : null }\n            testList = { folderDetails.length ? \n                <Fragment>    \n                    <div data-test=\"intg_zephyr_test_list\" className=\"test__rootDiv\">\n                        <div className=\"test_tree_branches\">\n                            <img alt=\"collapse\"\n                                className=\"test_tree_toggle\" \n                                src=\"static/imgs/ic-qcCollapse.png\"\n                            />\n                            <label>Root</label>\n                        </div>\n                        { folderDetails\n                            .map( (cycleNode, idx) => <CycleNode \n                                    key={`cycle-${idx}`}\n                                    cycleNode={cycleNode}\n                                    projectId={testProject.split('||')[0]}\n                                    projectName={testProject.split('||')[1]}\n                            />) }\n                    </div>   \n                </Fragment>\n                    : <div></div>\n            }\n            scenarioList = {\n                scenarioArr ? \n                (filteredNames ? filteredNames : \n                    selectedAvoProj.length ? \n                    selectedAvoProj : [])\n                    .map((e,i)=>(\n                                <div \n                                    key={i}\n                                    className={\"scenario__listItem \" +(selectedScIds == e._id ? \"scenario__selectedTC\" : \"\")} \n                                    onClick={()=>{dispatch({type: actionTypes.SEL_SCN_IDS, payload: e._id})}}\n                                    style={{cursor: \"pointer\"}}\n                                >\n                                { e.name }\n                                </div>\n                        ))\n                    : <div></div> \n            }\n        />\n    );\n}\nexport default QTestContent;        ","import React ,{useState, useRef, useEffect} from 'react';\nimport { RedirectPage } from '../../global';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { loginToQTest_ICE, viewQtestMappedList_ICE } from '../api.js';\nimport LoginModal from '../components/LoginModal';\nimport MappedPage from '../containers/MappedPage';\nimport QTestContent from '../components/QTestContent.js';\nimport * as actionTypes from '../state/action.js';\n\nconst  QTest = props => {\n\n    const history = useHistory();\n    const dispatch = useDispatch()\n    const user_id = useSelector(state=> state.login.userinfo.user_id); \n    const screenType = useSelector(state=>state.integration.screenType);\n    const viewMappedFiles = useSelector(state=>state.integration.mappedScreenType);\n    const urlRef = useRef();\n    const usernameRef = useRef();\n    const passwordRef = useRef();\n    const [domainDetails , setDomainDetails] = useState([]);\n    const [mappedFilesICERes , setMappedFIlesICERes]= useState([]);\n    const [loginSuccess , setLoginSuccess] = useState(false);\n    const [loginError, setLoginError]= useState(null);\n\n    useEffect(() => {\n        return ()=>{\n            dispatch({type: actionTypes.MAPPED_PAIR, payload: []});\n            dispatch({type: actionTypes.SEL_SCN_IDS, payload: []});\n            dispatch({\n                type: actionTypes.SEL_TC_DETAILS, \n                payload: {\n                    selectedTCNames: [],\n                    selectedTSNames: [],\n                    selectedFolderPaths: []\n                }\n            });\n            dispatch({type: actionTypes.SYNCED_TC, payload: []});\n            dispatch({type: actionTypes.SEL_TC, payload: []});\n        }\n    }, [])\n\n    const loginQtest = async() => {\n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: 'Logging...'});\n        const qcPassword = passwordRef.current.value;\n        const qcURL = urlRef.current.value;\n        const qcUsername = usernameRef.current.value;\n        const domainDetails = await loginToQTest_ICE(qcPassword, qcURL, qcUsername);\n        \n        if(domainDetails.error) dispatch({type: actionTypes.SHOW_POPUP, payload:{title: \"Error\", content: domainDetails.error}});\n        else if(domainDetails === \"unavailableLocalServer\") setLoginError(\"ICE Engine is not available, Please run the batch file and connect to the Server.\");\n        else if (domainDetails === \"invalidcredentials\") setLoginError(\"Invalid Credentials , Retry Login\")\n        else if (domainDetails === \"scheduleModeOn\") setLoginError(\"Schedule mode is Enabled, Please uncheck 'Schedule' option in ICE Engine to proceed.\");\n        else if (domainDetails === \"Invalid Session\"){\n            dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n            return RedirectPage(history);\n        }\n        else if(domainDetails === \"invalidcredentials\") setLoginError(\"Invalid Credentials\");\n        else if (domainDetails === \"invalidurl\") setLoginError(\"Invalid URL\");\n        else if (domainDetails === \"fail\") setLoginError(\"Fail to Login\");\n        else if (domainDetails === \"Error:Failed in running Qc\") setLoginError(\"Unable to run Qc\");\n        else if(domainDetails === \"Error:Qc Operations\") setLoginError(\"Failed during execution\");\n        else{\n            setDomainDetails(domainDetails);\n            setLoginSuccess(true);\n        }\n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n    }\n\n    const onViewMappedFiles = async() => {\n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: 'Loading...'});\n        const mappedResponse = await viewQtestMappedList_ICE(user_id)\n        if(mappedResponse.length === 0){\n            let popupMsg = {\n                title:'Mapped Testcase',\n                content:\"No mapped details\"\n            };\n            dispatch({type: actionTypes.SHOW_POPUP, payload: popupMsg});\n        }\n        else{\n            dispatch({ type: actionTypes.VIEW_MAPPED_SCREEN_TYPE, payload: \"qTest\" });\n            setMappedFIlesICERes(mappedResponse);\n        }\n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n    }\n    \n    return (<>\n        {viewMappedFiles === \"qTest\" ? \n            <MappedPage\n                screenType=\"qTest\"\n                leftBoxTitle=\"qTest Tests\"\n                rightBoxTitle=\"Avo Assure Scenarios\"\n                mappedfilesRes={mappedFilesICERes}\n            /> : \n        <>\n        { !loginSuccess &&\n            <LoginModal \n                urlRef={urlRef}\n                usernameRef={usernameRef}\n                passwordRef={passwordRef}\n                error={loginError}\n                screenType={screenType}\n                login={loginQtest}\n            />\n        }\n        { screenType === \"qTest\" &&\n            <QTestContent\n                onViewMappedFiles={onViewMappedFiles}\n                domainDetails={domainDetails}\n            />   \n        }\n        </>\n        }\n        </>\n    \n    )\n}\n\nexport default QTest;\n\n\n","import React, { useState, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RedirectPage } from '../../global';\nimport * as actionTypes from '../state/action';\nimport * as api from '../api.js';\n\nconst CycleNode = props => {\n\n    const [collapse, setCollapse] = useState(true);\n\n    const handleClick = useCallback(()=>{\n        setCollapse(!collapse);\n    }, [collapse, setCollapse])\n\n    return <div className=\"int__cycleNode\" style={{paddingLeft: 17}}>\n            { <div className=\"test_tree_branches\">\n                <img alt=\"ce-ic\"\n                    className=\"test_tree_toggle\" \n                    src={ `static/imgs/ic-qc${collapse ? \"Expand\" : \"Collapse\"}.png` }\n                    onClick={handleClick}\n                />\n                <label>{ props.cycleName }</label>\n            </div> }\n            { !collapse && props.phaseList.length > 0 \n                ? <div> {\n                    props.phaseList\n                        .map((phase, idx) => <PhaseNode \n                                                key={`phase-${idx}`}\n                                                phase={phase}\n                                                projectId={props.projectId}\n                                                releaseId={props.releaseId}\n                                            />)\n                } </div>\n                : null\n            }\n        </div>;\n}\n\nconst PhaseNode = props => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [collapse, setCollapse] = useState(true);\n    const [testCases, setTestCases] = useState([]);\n\n    let phaseid = Object.keys(props.phase)[0];\n    let phasename = props.phase[phaseid];\n\n    const handleClick = useCallback(async()=>{\n        if (collapse) {\n            dispatch({type: actionTypes.SHOW_OVERLAY, payload: 'Loading Testcases...'});\n\n            const data = await api.zephyrTestcaseDetails_ICE(\"testcase\", phaseid);\n            \n            if (data.error)\n                dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Error\", content: data.error}});\n            else if (data === \"unavailableLocalServer\")\n                dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Zephyr Connection\", content: \"ICE Engine is not available,Please run the batch file and connect to the Server.\"}});\n            else if (data === \"scheduleModeOn\")\n                dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Zephyr Connection\", content: \"Schedule mode is Enabled, Please uncheck 'Schedule' option in ICE Engine to proceed.\"}});\n            else if (data === \"Invalid Session\"){\n                dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n                return RedirectPage(history);\n            }\n            else {\n                setTestCases(data);\n                setCollapse(false);\n            }\n            dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n        }\n        else setCollapse(true);\n        // eslint-disable-next-line react-hooks/exhaustive-deps        \n    }, [collapse, setCollapse])\n    \n\n    return <div className=\"int__phaseNode\" style={{paddingLeft: 17}}>\n                { <div className=\"test_tree_branches\">\n                    <img alt=\"ce-ic\"\n                        className=\"test_tree_toggle\" \n                        src={ `static/imgs/ic-taskType-blue-${collapse ? \"plus\" : \"minus\"}.png` }\n                        onClick={handleClick}\n                    />\n                    <label>{ phasename }</label>\n                </div> }\n                { !collapse && testCases.length > 0 \n                    ? <div> {\n                        testCases\n                            .map(testCase => <TestCaseNode \n                                                key={`testCase-${testCase.id}`}       \n                                                testCase={testCase}\n                                                phaseId={phaseid}\n                                                projectId={props.projectId}\n                                                releaseId={props.releaseId}\n                                            />)\n                    } </div>\n                    : null\n                }\n            </div>;\n}\n\n\nconst TestCaseNode = props => {\n\n    const dispatch = useDispatch();\n    const selectedTC = useSelector(state=>state.integration.selectedTestCase);\n    const syncedTestCases = useSelector(state=>state.integration.syncedTestCases);\n    const selectedScIds = useSelector(state=>state.integration.selectedScenarioIds);\n\n    let uniqueTCpath = `|${props.phaseId}\\\\${props.testCase.id}|`;\n\n    const handleClick = () => {\n        dispatch({type: actionTypes.SEL_TC, payload: uniqueTCpath});\n        dispatch({type: actionTypes.SYNCED_TC, payload: []});\n    }\n\n    const handleSync = () => {\n        let popupMsg = false;\n        if(selectedScIds.length===0){\n            popupMsg = {\n                title:'Save Mapped Testcase ',\n                content:\"Please Select a Scenario\"\n            };\n        }\n        if (popupMsg) dispatch({type: actionTypes.SHOW_POPUP, payload: popupMsg});\n        else{\n            const mappedPair=[\n                {\n                    projectid: parseInt(props.projectId),\t\t\t\n                    releaseid: parseInt(props.releaseId),\n                    treeid: String(props.testCase.cyclePhaseId),\n                    testid: String(props.testCase.id),\n                    testname: props.testCase.name,\n                    reqdetails: props.testCase.reqdetails, \n                    scenarioId: selectedScIds\n                }\n            ]\n            dispatch({type: actionTypes.MAPPED_PAIR, payload: mappedPair});\n            dispatch({type: actionTypes.SYNCED_TC, payload: uniqueTCpath});\n        }\n    }\n\n    const handleUnSync = () => {\n        dispatch({type: actionTypes.MAPPED_PAIR, payload: []});\n        dispatch({type: actionTypes.SYNCED_TC, payload: []});\n    }\n\n    return <div className={\"test_tree_leaves\"+ ( selectedTC.includes(uniqueTCpath) ? \" test__selectedTC\" : \"\") + (selectedTC.includes(uniqueTCpath) && syncedTestCases.includes(uniqueTCpath) ? \" test__syncedTC\" : \"\")}>\n                <label className=\"test__leaf\" title={props.testCase.name} onClick={handleClick}>\n                    <span className=\"leafId\">{props.testCase.id}</span>\n                    <span className=\"test__tcName\">{props.testCase.name}</span>\n                </label>\n                { selectedTC.includes(uniqueTCpath)\n                        && <><div className=\"test__syncBtns\"> \n                        { !syncedTestCases.includes(uniqueTCpath) && <img className=\"test__syncBtn\" alt=\"s-ic\" onClick={handleSync} src=\"static/imgs/ic-qcSyncronise.png\" />}\n                        <img className=\"test__syncBtn\" alt=\"s-ic\" onClick={handleUnSync} src=\"static/imgs/ic-qcUndoSyncronise.png\" />\n                        </div></> \n                    }\n            </div>\n}\n\nexport default CycleNode;","import React,{Fragment, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport * as api from '../api.js';\nimport MappingPage from '../containers/MappingPage';\nimport { RedirectPage } from '../../global/index.js';\nimport CycleNode from './ZephyrTree';\nimport * as actionTypes from '../state/action';\n\n\nconst ZephyrContent = props => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const user_id = useSelector(state=> state.login.userinfo.user_id); \n    const mappedPair = useSelector(state=>state.integration.mappedPair);\n    const selectedScIds = useSelector(state=>state.integration.selectedScenarioIds);\n\n    const [projectDetails , setProjectDetails]=useState({});\n    const [avoProjects , setAvoProjects]= useState(null);\n    const [scenarioArr , setScenarioArr] = useState(false);\n    const [scenario_ID , setScenario_ID] = useState(\"Select Project\") ;\n    const [projectDropdn1 , setProjectDropdn1]= useState(\"Select Project\");\n    const [SearchIconClicked , setSearchIconClicked] =useState(false);\n    const [filteredNames , setFilteredName]= useState(null);\n    const [screenexit , setScreenExit]= useState(false);\n    const [releaseArr, setReleaseArr] = useState([]);\n    const [selectedRel, setSelectedRel] = useState(\"Select Release\");\n    \n\n    const callProjectDetails_ICE=async(e)=>{\n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: 'Loading...'});\n        const projectId = e.target.value;\n        const releaseData = await api.zephyrProjectDetails_ICE(projectId, user_id);\n        if (releaseData.error)\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Error\", content: releaseData.error}});\n        else if (releaseData === \"unavailableLocalServer\")\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"ICE not available\", content: \"ICE Engine is not available,Please run the batch file and connect to the Server.\"}});\n        else if (releaseData === \"scheduleModeOn\")\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Error\", content: \"Schedule mode is Enabled, Please uncheck 'Schedule' option in ICE Engine to proceed.\"}});\n        else if (releaseData === \"Invalid Session\"){\n            dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n            return RedirectPage(history);\n        }\n        else if (releaseData === \"invalidcredentials\")\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Error\", content: \"Invalid Credentials\"}});\n        else if (releaseData) {\n            setReleaseArr(releaseData);\n            setProjectDropdn1(projectId);\n            clearSelections();\n        }\n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n    }\n\n    const onReleaseSelect = async(event) => {\n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: 'Loading...'});\n        const releaseId = event.target.value;\n        const testAndScenarioData = await api.zephyrCyclePhase_ICE(releaseId, user_id);\n        if (testAndScenarioData.error)\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Error\", content: testAndScenarioData.error}});\n        else if (testAndScenarioData === \"unavailableLocalServer\")\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"ICE not available\", content: \"ICE Engine is not available,Please run the batch file and connect to the Server.\"}});\n        else if (testAndScenarioData === \"scheduleModeOn\")\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Error\", content: \"Schedule mode is Enabled, Please uncheck 'Schedule' option in ICE Engine to proceed.\"}});\n        else if (testAndScenarioData === \"Invalid Session\"){\n            dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n            return RedirectPage(history);\n        }\n        else if (testAndScenarioData) {\n            setProjectDetails(testAndScenarioData.project_dets);\n            setAvoProjects(testAndScenarioData.avoassure_projects);  \n            setSelectedRel(releaseId);  \n            clearSelections();\n        }\n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n    }\n\n    const callScenarios =(e)=>{\n        const scenarioID = e.target.value;\n        setScenarioArr(true);\n        setScenario_ID(scenarioID);\n        setFilteredName(null);\n        setSearchIconClicked(false);\n        clearSelections();\n    }\n\n    const callSaveButton =async()=>{ \n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: 'Saving...'});\n        const response = await api.saveZephyrDetails_ICE(mappedPair);\n        if (response.error){\n            dispatch({type: actionTypes.SHOW_POPUP , payload: {title: \"Error\", content: response.error}});\n        } \n        else if(response === \"unavailableLocalServer\")\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Save Mapped Testcase\", content: \"ICE Engine is not available,Please run the batch file and connect to the Server.\"}});\n        else if(response === \"scheduleModeOn\")\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Error\", content: \"Schedule mode is Enabled, Please uncheck 'Schedule' option in ICE Engine to proceed.\"}});\n        else if ( response === \"success\"){\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Zephyr\", content: \"Saved Successfully.\"}});\n            dispatch({type: actionTypes.MAPPED_PAIR, payload: []});\n            clearSelections();\n        }\n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n    }\n    const callExit=()=>{\n        setScreenExit(true);\n        setScenarioArr(null);\n        setProjectDropdn1(\"Select Project\");\n        setScenario_ID(\"Select Project\");\n        dispatch({ type: actionTypes.INTEGRATION_SCREEN_TYPE, payload: null });\n    }\n    \n    const clearSelections = () => {\n        dispatch({type: actionTypes.SEL_SCN_IDS, payload: []});\n        dispatch({type: actionTypes.SYNCED_TC, payload: []});\n        dispatch({type: actionTypes.SEL_TC, payload: []});\n    }\n    \n    const onSearch=(e)=>{\n        var val = e.target.value;\n        var filter = [];\n        if(scenarioArr){\n            (avoProjects[parseInt(scenario_ID)].scenario_details.length ? \n            avoProjects[parseInt(scenario_ID)].scenario_details : [])\n                .forEach((e,i)=>{\n                    if (e.name.toUpperCase().indexOf(val.toUpperCase())!==-1) \n                        filter.push(e);\n                    }\n                )\n            }\n        setFilteredName(filter)\n    }\n\n    return(\n         !screenexit?\n        <Fragment>\n            <MappingPage \n                pageTitle=\"Zephyr Integration\"\n                onSave={()=>callSaveButton()}\n                onViewMap={()=>props.callViewMappedFiles()}\n                onExit={()=>callExit()}\n                leftBoxTitle=\"Zephyr Tests\"\n                rightBoxTitle=\"Avo Assure Scenarios\"\n                selectTestProject={\n                    <select data-test=\"intg_Zephyr_project_drpdwn\"value={projectDropdn1} onChange={(e)=>callProjectDetails_ICE(e)} className=\"qcSelectDomain\" style={{marginRight : \"5px\"}}>\n                        <option value=\"Select Project\" disabled >Select Project</option>\n\n                        {   props.domainDetails ? \n                            props.domainDetails.map(e => (\n                                <option key={e.id} value={e.id}>{e.name}</option>\n                            )) : null\n                        }\n                    </select>\n                }\n                selectTestRelease={\n                    <select data-test=\"intg_zephyr_release_drpdwn\" value={selectedRel} onChange={onReleaseSelect} className=\"qcSelectDomain\" style={{marginRight : \"5px\"}}>\n                        <option value=\"Select Release\" disabled >Select Release</option>\n                        {   releaseArr.length &&\n                            releaseArr.map(e => (\n                                <option key={e.id} value={e.id}>{e.name}</option>\n                            ))\n                        }\n                    </select>\n                }\n                selectScenarioProject={\n                    <select data-test=\"intg_zephyr_scenario_dwpdwn\" value={scenario_ID} onChange={(e)=>callScenarios(e)} className=\"qtestAvoAssureSelectProject\">\n                        <option value=\"Select Project\" disabled >Select Project</option>\n                        {\n                            avoProjects? \n                            avoProjects.map((e,i)=>(\n                                <option value={i} key={i+'_proj'} >{e.project_name}</option>))\n                                : null \n                        }\n                    </select>\n                }\n                searchScenario={scenarioArr ?\n                    <>\n                        {SearchIconClicked ?\n                            <input onChange={(e)=>onSearch(e)} type=\"text\" placeholder=\"Scenario Name\"/> : null}\n                        <span className=\"mapping__searchIcon\" style={{display:\"inline\" , float:\"right\"}}> \n                            <img alt=\"searchIcon\" \n                                onClick={()=>{setSearchIconClicked(!SearchIconClicked);setFilteredName(null)}} \n                                style={{cursor: \"pointer\" , display:\"inline\",float:\"right\"}} \n                                src=\"static/imgs/ic-searchIcon-black.png\"\n                            />\n                        </span>\n                    </> : null    \n                }\n                testList={ Object.keys(projectDetails).length ? \n                    <Fragment>    \n                        <div data-test=\"intg_zephyr_test_list\" className=\"test__rootDiv\">\n                            <div className=\"test_tree_branches\">\n                                <img alt=\"collapse\"\n                                    className=\"test_tree_toggle\" \n                                    src=\"static/imgs/ic-qcCollapse.png\"\n                                />\n                                <label>Root</label>\n                            </div>\n                            { Object.keys(projectDetails)\n                                .map( cycleName => <CycleNode \n                                        key={cycleName}\n                                        phaseList={projectDetails[cycleName]} \n                                        cycleName={cycleName}\n                                        projectId={projectDropdn1}\n                                        releaseId={selectedRel}\n                                />) }\n                        </div>   \n                    </Fragment>\n                        : <div></div>\n                }\n                scenarioList={\n                    scenarioArr ? \n                    (filteredNames ? filteredNames : \n                        avoProjects[parseInt(scenario_ID)].scenario_details.length ? \n                        avoProjects[parseInt(scenario_ID)].scenario_details : [])\n                        .map((scenario, i)=>(\n                                <div \n                                    key={i}\n                                    className={\"scenario__listItem\" + (selectedScIds == scenario._id ? \" scenario__selectedTC\" : \"\")} \n                                    onClick={()=>{dispatch({type: actionTypes.SEL_SCN_IDS, payload: scenario._id})}}\n                                >\n                                    {scenario.name}\n                                </div>\n                        ))\n                        : <div></div>\n                }\n            />\n    </Fragment>\n    :null)\n}\n    \nexport default ZephyrContent;","import React, { useRef, useState, useEffect } from 'react';\nimport { RedirectPage } from '../../global';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport ZephyrContent from '../components/ZephyrContent';\nimport MappedPage from '../containers/MappedPage';\nimport LoginModal from '../components/LoginModal';\nimport {loginToZephyr_ICE,viewZephyrMappedList_ICE} from '../api.js';\nimport * as actionTypes from '../state/action.js';\n\nconst Zephyr = () => {\n    const history = useHistory();\n    const dispatch= useDispatch();\n    const user_id = useSelector(state=> state.login.userinfo.user_id);\n    const screenType = useSelector(state=>state.integration.screenType); \n    const viewMappedFlies = useSelector(state=>state.integration.mappedScreenType);\n    const zephyrUrlRef = useRef();\n    const zephyrUsernameRef = useRef();\n    const zephyrPasswordRef = useRef();\n    const [domainDetails , setDomainDetails] = useState(null);\n    const [loginSuccess , setLoginSuccess]=useState(false);\n    const [loginError , setLoginError]= useState(null);\n    const [mappedfilesRes,setMappedFilesRes]=useState([]);\n\n    useEffect(() => {\n        return ()=>{\n            dispatch({type: actionTypes.MAPPED_PAIR, payload: []});\n            dispatch({type: actionTypes.SEL_SCN_IDS, payload: []});\n            dispatch({\n                type: actionTypes.SEL_TC_DETAILS, \n                payload: {\n                    selectedTCNames: [],\n                    selectedTSNames: [],\n                    selectedFolderPaths: []\n                }\n            });\n            dispatch({type: actionTypes.SYNCED_TC, payload: []});\n            dispatch({type: actionTypes.SEL_TC, payload: []});\n        }\n    }, [])\n\n    const callLogin_zephyr = async()=>{\n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: 'Logging...'});\n\n        const zephyrURL = zephyrUrlRef.current.value;\n        const zephyrUsername = zephyrUsernameRef.current.value;\n        const zephyrPassword = zephyrPasswordRef.current.value;\n\n        const domainDetails = await loginToZephyr_ICE(zephyrURL, zephyrUsername, zephyrPassword);\n\n        if (domainDetails.error) dispatch({ type: actionTypes.SHOW_POPUP, payload: {title: \"Error\", content: domainDetails.error}});\n        else if (domainDetails === \"unavailableLocalServer\") setLoginError(\"ICE Engine is not available, Please run the batch file and connect to the Server.\");\n        else if (domainDetails === \"scheduleModeOn\") setLoginError(\"Schedule mode is Enabled, Please uncheck 'Schedule' option in ICE Engine to proceed.\");\n        else if (domainDetails === \"Invalid Session\"){\n            dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n            return RedirectPage(history);\n        }\n        else if (domainDetails === \"invalidcredentials\") setLoginError(\"Invalid Credentials\");\n        // else if (domainDetails === \"noprojectfound\") setLoginError(\"Invalid credentials or no project found\");\n        // else if (domainDetails === \"invalidurl\") setLoginError(\"Invalid URL\");\n        else if (domainDetails === \"fail\") setLoginError(\"Fail to Login\");\n        // else if (domainDetails === \"Error:Failed in running Zephyr\") setLoginError(\"Unable to run Zephyr\");\n        // else if (domainDetails === \"Error:Zephyr Operations\") setLoginError(\"Failed during execution\");\n        else if (domainDetails) {\n            setDomainDetails(domainDetails);\n            setLoginSuccess(true);\n        }\n        dispatch({type: actionTypes.SHOW_OVERLAY, payload: \"\"});\n    }\n\n    const callViewMappedFiles=async()=>{\n        try{\n            dispatch({type: actionTypes.SHOW_OVERLAY, payload: 'Loading...'});\n        \n            const response = await viewZephyrMappedList_ICE(user_id);\n            \n            if (response.error){\n                dispatch({type: actionTypes.SHOW_POPUP, payload: { title: \"Error\", content: response.error }});\n                dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n            } \n            else if (response.length){\n                dispatch({ type: actionTypes.VIEW_MAPPED_SCREEN_TYPE, payload: \"Zephyr\" });\n                setMappedFilesRes(response);\n            }\n            else dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Mapped Testcase\", content: \"No mapped details\"}});\n            dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n        }\n        catch(err) {\n            dispatch({type: actionTypes.SHOW_OVERLAY, payload: ''});\n            dispatch({type: actionTypes.SHOW_POPUP, payload: {title: \"Error\", content: \"Failed to Fetch Data.\"}});\n        }\n    }\n\n    return(\n        <>\n        {viewMappedFlies === \"Zephyr\" ? \n            <MappedPage\n                screenType=\"Zephyr\"\n                leftBoxTitle=\"Zephyr Tests\"\n                rightBoxTitle=\"Avo Assure Scenarios\"\n                mappedfilesRes={mappedfilesRes}\n            /> :\n        <>\n        { !loginSuccess && \n            <LoginModal \n                urlRef={zephyrUrlRef}\n                usernameRef={zephyrUsernameRef}\n                passwordRef={zephyrPasswordRef}\n                screenType={screenType}\n                error={loginError}\n                login={callLogin_zephyr}\n            /> }\n        { screenType=== \"Zephyr\" &&\n            <ZephyrContent\n                domainDetails={domainDetails}\n                callViewMappedFiles={callViewMappedFiles}\n            /> }\n        </>\n        }\n        </> \n    )\n}\n\nexport default Zephyr;","import React, { useEffect } from 'react';\r\nimport { useDispatch ,useSelector } from 'react-redux';\r\nimport {Header, FooterTwo as Footer, ScreenOverlay, PopupMsg } from '../../global';\r\nimport Leftbar from '../components/Leftbar';\r\nimport Rightbar from '../components/Rightbar';\r\nimport ALM from './ALM';\r\nimport QTest from './QTest';\r\nimport Zephyr from './Zephyr';\r\nimport * as actionTypes from '../state/action';\r\nimport '../styles/IntegrationHome.scss'\r\n\r\n//Integration Screen main Home Renders--> Header, LefbarScreen , CenterScreen, RIghtbarScreen and Main FooterBar // \r\n\r\nconst Integrations = () => {\r\n    const dispatch = useDispatch();\r\n    const screenType = useSelector(state=>state.integration.screenType);\r\n    const showPop = useSelector(state => state.integration.showPop);\r\n    const showOverlay = useSelector(state => state.integration.showOverlay);\r\n\r\n    useEffect(()=>{//persist the screentype of integration (implementation for bug#18796)\r\n        let currScreenType = window.localStorage['integrationScreenType'];\r\n        if (currScreenType)\r\n            dispatch({type: actionTypes.INTEGRATION_SCREEN_TYPE, payload: currScreenType});\r\n        else \r\n            dispatch({type: actionTypes.INTEGRATION_SCREEN_TYPE, payload: null});\r\n        dispatch({ type: actionTypes.VIEW_MAPPED_SCREEN_TYPE, payload: null });\r\n    }, [dispatch])\r\n\r\n    const PopupDialog = () => (\r\n        <PopupMsg \r\n            title={showPop.title}\r\n            close={()=>dispatch({type: actionTypes.SHOW_POPUP, payload: false})}\r\n            content={showPop.content}\r\n            submitText={showPop.submitText || \"OK\" }\r\n            submit={ showPop.onClick \r\n                        ? showPop.onClick \r\n                        : ()=>dispatch({type: actionTypes.SHOW_POPUP, payload: false})\r\n                    }\r\n        />\r\n    );\r\n\r\n    return(\r\n        <>\r\n        { showPop && <PopupDialog /> }\r\n        { showOverlay && <ScreenOverlay content={showOverlay} /> }\r\n        <div className=\"parent\">\r\n            <Header/>\r\n            <div id=\"holder\">\r\n                <Leftbar />\r\n\r\n                <div className=\"integration_middleContent\">\r\n                    { screenType === 'ALM' && <ALM /> }\r\n                    { screenType === \"Zephyr\" && <Zephyr /> }\r\n                    { screenType === \"qTest\" && <QTest /> }\r\n                </div>\r\n\r\n                <Rightbar />\r\n            </div>    \r\n            <div className=\"integration_Footer\"><Footer/></div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Integrations;\r\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route ,Switch} from \"react-router-dom\";\nimport {v4 as uuid} from 'uuid';\nimport {Provider, useSelector, useDispatch} from 'react-redux';\nimport {store} from './reducer';\nimport {ProgressBar, ErrorPage, PopupMsg} from './pages/global'\nimport { SWITCHED } from './pages/global/state/action';\nimport Login, {Base} from './pages/login';\nimport Admin from './pages/admin';\nimport Plugin from './pages/plugin';\nimport Execute from './pages/execute';\nimport Schedule from './pages/schedule';\nimport Mindmap from './pages/mindmap';\nimport Scrape from './pages/scrape';\nimport Design from './pages/design';\nimport Utility from './pages/utility';\nimport Report from './pages/report';\nimport Integration from './pages/integration';\nimport {ScreenOverlay} from './pages/global';\nimport SocketFactory from './SocketFactory';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'react-datetime/css/react-datetime.css';\nconst { REACT_APP_DEV } = process.env\n/*Component App\n  use: defines components for each url\n*/\n\nexport const url =  REACT_APP_DEV  ? \"https://\"+window.location.hostname+\":8443\" : window.location.origin;\n\nconst App = () => {\n  const [blockui,setBlockui] = useState({show:false})\n  useEffect(()=>{\n    TabCheck(setBlockui);\n  },[])\n  return (\n    <Provider store={store}>\n      {(blockui.show)?<ScreenOverlay content={blockui.content}/>:null}\n      <ProgressBar />\n      <RouteApp/>\n    </Provider>\n  );\n}\n\nconst RouteApp = () => {\n  const dispatch = useDispatch();\n  const selectedRole = useSelector(state=>state.login.SR);\n  const roleSwitched = useSelector(state=>state.progressbar.roleSwitched);\n  const [role, setRole] = useState(false);\n  useEffect(()=>{\n    if(roleSwitched){\n        dispatch({type: SWITCHED, payload: false});\n        setRole(true);\n    }\n}, [roleSwitched])\n  return(\n    <Router>\n      { role && <PopupMsg title='Switch Role' content={`Your role is changed to ${selectedRole}`} submitText=\"OK\" close={()=>setRole(\"\")} submit={()=>setRole(\"\")} /> }\n    <SocketFactory/>\n    <Switch>\n      <Route exact path=\"/\" component={Base} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/admin\" component={Admin} />\n      <Route path=\"/mindmap\" component={Mindmap} />\n      <Route path=\"/plugin\" component={Plugin} />\n      <Route path =\"/scrape\" component={Scrape}/>\n      <Route path =\"/design\" component={Design}/>\n      <Route path =\"/utility\" component={Utility}/>\n      <Route path = \"/integration\" component={Integration}/>\n      <Route path = \"/reports\" component={Report}/>\n      <Route path =\"/execute\" component={Execute}/>\n      <Route path =\"/scheduling\" component={Schedule}/>\n      <Route component={ErrorPage} />\n    </Switch>\n  </Router>\n  )\n}\n\n//disable duplicate tabs\nconst TabCheck = (setBlockui) => {\n  const storage_Handler = (e) => {\n    if (window.location.pathname.includes('/viewreport/')) return false;\n      // if tabGUID does not match then more than one tab and GUID\n      if (e.key === 'tabUUID' && e.oldValue !== '') {\n          if (e.oldValue !== e.newValue) {\n            window.localStorage.clear();\n            localStorage[\"tabValidity\"] = \"invalid\";\n            setBlockui({show:true,content:'Duplicate Tabs not allowed, Please Close this Tab and refresh.'})\n            window.sessionStorage.clear();\n          }\n      }else if(e.key === \"tabValidity\"){\n        window.sessionStorage.clear();\n      // history.pushState(null, null, document.URL);\n      setBlockui({show:true,content:\"Duplicate Tabs not allowed, Please Close this Tab and refresh.\"})\n    }\n  } \n  // detect local storage available\n  if (typeof (Storage) === \"undefined\") return;\n  // get (set if not) tab uuid and store in tab session\n  if (window.name === \"\") window.name = uuid();\n  // add eventlistener to session storage\n  window.addEventListener(\"storage\", storage_Handler, false);\n  // set tab UUID in session storage\n  localStorage[\"tabUUID\"] = window.name;\n}\n\nexport default App;","export const SET_TASKSJSON = \"PLUGIN_SET_TASKSJSON\"\nexport const SET_FD = \"PLUGIN_SET_FD\"\nexport const SET_CT = \"PLUGIN_SET_CT\"\nexport const UPDATE_REPORTDATA = \"PLUGIN_UPDATE_REPORTDATA\"\nexport const CLEAR_REPORTDATA = \"PLUGIN_CLEAR_REPORTDATA\"","export const SET_USERINFO = \"LOGIN_SET_USERINFO\"\nexport const SET_SR = \"LOGIN_SET_SR\"\nexport const SET_SOCKET = \"LOGIN_SET_SOCKET\"\nexport const UPDATE_NOTIFY = \"LOGIN_UPDATE_NOTIFY\"\nexport const CLEAR_NOTIFY = \"LOGIN_CLEAR_NOTIFY\"\nexport const UPDATE_NOTIFY_COUNT = \"LOGIN_UPDATE_NOTIFY_COUNT\"\nexport const SET_DATEFORMAT = \"LOGIN_SET_DATEFORMAT\"","export const UPDATE_MODULESELECTED = 'REPORT_UPDATE_MODULESELECTED';\n\nexport const UPDATE_MODULELIST = 'REPORT_UPDATE_PROJECTLIST';\n\nexport const UPDATE_SUITEDETAILS =  'REPORT_UPDATE_SUITEDETAILS';\n\nexport const RESET_DETAILS = 'REPORT_RESET_DETAILS'","import axios from 'axios';\nimport {url} from '../../App';\n\n/*Component RedirectPage\n*/\nexport const logoutUser = () => {\n    return new Promise((resolve, reject) => {\n        axios(url+\"/logoutUser\", {\n            method : 'POST',\n            headers : {\n                'Content-type' : \"application/json\"\n            },\n            data: {'param': 'logoutUser'},\n            credentials : 'include'\n        })\n        .then(res => {\n            if (res.status === 200) {\n                resolve(res.data);\n            }\n            else{\n                reject(res.status);\n            }\n        })\n        .catch(err => {\n            reject(err)\n        })\n    });\n}\n\n/*Component ResetSession\n*/\nexport const keepSessionAlive = () => {\n    return new Promise((resolve, reject)=>{\n        axios(url+\"/keepSessionAlive\", {\n            method : 'POST',\n            credentials : 'include'\n        })\n        .then(res=>{\n            if (res.status === 200) {\n                resolve(res.data);\n            }\n            else{\n                reject(res.status);\n            }\n        })\n        .catch(err => {\n            reject(err)\n        })\n    });\n}\n\n/*Component TaskContents\n  api returns fail/inprogress\n*/\nexport const updateTaskStatus = obj => {\n    return new Promise((resolve, reject) => {\n        axios(url+\"/updateTaskstatus_mindmaps\", {\n            method: 'POST',\n            headers : {\n                'Content-type' : 'application/json'\n            },\n            data : {'obj': obj},\n            credentials : 'include',\n        })\n        .then(res=>{\n            if (res.status === 200){\n                resolve(res.data);\n            }\n            else{\n                reject(res.status)\n            }\n        })\n        .catch(err => {\n            reject(err);\n        })\n    });\n}\n\n/*Component ChangePassword\n  api returns \"Invalid Session\"/\"success\"/\"same\"/\"incorrect\"/\"fail\"\n*/\nexport const resetPassword = (newpassword, currpassword) => {\n    return new Promise((resolve, reject) => {\n        axios(url+\"/resetPassword\", {\n            method: \"POST\",\n            headers: {\n                \"Content-type\": \"application/json\"\n            },\n            data: {'newpassword': newpassword, 'currpassword': currpassword},\n            credentials : 'include'\n        })\n        .then(res => {\n            if (res.status === 200){\n                resolve(res.data);\n            }\n            else{\n                reject(res.status);\n            }\n        })\n        .catch(err => {\n            reject(err);\n        })\n    })\n}\n\n/*Component Header\n  api returns {\"\": \"\"}\n*/\nexport const getRoleNameByRoleId = async(roleasarray) => {\n    return new Promise((resolve, reject)=>{\n        axios(url+\"/getRoleNameByRoleId\", {\n            method: \"POST\",\n            headers: {\n                \"Content-type\": \"application/json\"\n            },\n            data: {'action': \"getRoleNameByRoleId\", 'role': roleasarray},\n            credentials : 'include'\n        })\n        .then(res => {\n            if (res.status === 200){\n                resolve(res.data);\n            }\n            else{\n                reject(res.status);\n            }\n        })\n        .catch(err => {\n            reject(err);\n        })\n    })\n}\n\n/*Component ChangeDefaultIce\n  api returns ice_list: [\"\"] or string mssg ex. \"fail\"\n*/\nexport const getUserICE = async() => {\n    return new Promise((resolve, reject)=>{\n        axios(url+\"/getUserICE\", {\n            method: \"POST\",\n            headers: {\n                \"Content-type\": \"application/json\"\n            },\n            credentials : 'include'\n        })\n        .then(res => {\n            if (res.status === 200){\n                resolve(res.data);\n            }\n            else{\n                reject(res.status);\n            }\n        })\n        .catch(err => {\n            reject(err);\n        })\n    })\n}\n\n/*Component DesignContent\n  api returns fail/inprogress\n*/ \nexport const reviewTask = (projectId, taskid, taskstatus, version, batchTaskIDs) => {\n    return new Promise((resolve, reject)=>{\n        axios(url+\"/reviewTask\", {\n            method : 'POST',\n            headers : {\n                'Content-type' : \"application/json\"\n            },\n            data: { action: 'reviewTask', \n                    prjId: projectId,\n                    taskId: taskid,\n                    status: taskstatus,\n                    versionnumber: version,\n                    batchIds: batchTaskIDs\n                },\n            credentials : 'include'\n        })\n        .then(res => {\n            if (res.status === 200){\n                resolve(res.data);\n            }\n            else{\n                reject(res.status);\n            }\n        })\n        .catch(err => {\n            reject(err);\n        })\n    })\n}\n\n/*Component ChangeDefaultIce\n  api returns string mssg ex. \"success\"\n*/\nexport const setDefaultUserICE = async(defaultICE) => {\n    return new Promise((resolve, reject)=>{\n        axios(url+\"/setDefaultUserICE\", {\n            method: \"POST\",\n            headers: {\n                \"Content-type\": \"application/json\"\n            },\n            data: { defaultICE : defaultICE},\n            credentials : 'include'\n        })\n        .then(res => {\n            if (res.status === 200){\n                resolve(res.data);\n            }\n            else{\n                reject(res.status);\n            }\n        })\n        .catch(err => {\n            reject(err);\n        })\n    })\n}","import axios from 'axios';\nimport {RedirectPage} from '../global'\nimport {history} from './index'\nimport {url} from '../../App'\n\n/*Component  \n  api returns { ModuleId:condition: [], dataparam: [], executestatus:[], moduleid: \"\", projectnames:[],scenarioids:[],scenarionames: [],testsuiteid: \"\", testsuitename: \"\", versionnumber: int}\n*/\n\nexport const readTestSuite_ICE = async(readTestSuite) => { \n    try{\n        const res = await axios(url+'/readTestSuite_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {param : 'readTestSuite_ICE', readTestSuite : readTestSuite, fromFlag:\"execution\"},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Failed to fetch test suite data.'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to fetch test suite data.'}\n    }\n}\n\n/*Component  \n  api returns string ex. \"success\"\n*/\n\nexport const updateTestSuite_ICE = async(batchDetails) => { \n    try{\n        const res = await axios(url+'/updateTestSuite_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {param : 'updateTestSuite_ICE', batchDetails: batchDetails},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Failed to update test suit.'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to update test suit.'}\n    }\n}\n\n/*Component  \n  api returns string ex. \"inprogress\"\n*/\n\nexport const reviewTask = async(projectId,taskId,taskstatus,version,batchTaskIDs) => { \n    try{\n        const res = await axios(url+'/reviewTask', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {action: \"reviewTask\",\n\t\t\t\tprjId:projectId,\n\t\t\t\ttaskId:taskId,\n\t\t\t\tstatus:taskstatus,\n\t\t\t\tversionnumber:version,\n\t\t\t\tbatchIds:batchTaskIDs},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Failed to review task.'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to review task.'}\n    }\n}\n\n/*Component  \n  api returns projectids: [\"\"], projectnames: [\"\"], screenids: [\"\"], screennames: [\"\"], testcaseids: [\"\"], testcasenames: [\"\"]\n*/\n\nexport const loadLocationDetails = async(scenarioName, scenarioId) => { \n    try{\n        const res = await axios(url+'/getTestcaseDetailsForScenario_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {param : 'getTestcaseDetailsForScenario_ICE', testScenarioId : scenarioId},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Failed to load location details.'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to load location details.'}\n    }\n}\n\n/*Component  \n  api returns del_flag: true/false,reuse: true/false ,template: \"\",testcase: [], testcasename: \"\"\n*/\n\nexport const readTestCase_ICE = async(userInfo,testCaseId,testCaseName,versionnumber,screenName) => { \n    try{\n        const res = await axios(url+'/readTestCase_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {param : 'readTestCase_ICE',\n            userInfo: userInfo,\n            testcaseid: testCaseId,\n            testcasename: testCaseName,\n            versionnumber: versionnumber,\n            screenName : screenName},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Failed to fetch test case.'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to fetch test case.'}\n    }\n}\n\n/*Component  \n  api returns string ex. \"success\"\n*/\n\nexport const ExecuteTestSuite_ICE = async(executionData) => { \n    try{\n        const res = await axios(url+'/ExecuteTestSuite_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {param : 'ExecuteTestSuite_ICE',\n            executionData: executionData},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {errorapi:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {errorapi:'Failed to execute test suite.'}\n    }catch(err){\n        console.error(err)\n        return {errorapi:'Failed to execute test suite.'}\n    }\n}\n\n/*Component  \n  api returns string ex. \"unavailableLocalServer\"\n*/\n\nexport const loginQCServer_ICE = async(qcURL,qcUserName,qcPassword) => { \n    try{\n        const res = await axios(url+'/loginQCServer_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {action: \"loginQCServer_ICE\",\n                qcURL: qcURL,\n                qcUsername: qcUserName,\n                qcPassword : qcPassword,\n                qcaction: \"domain\"},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Failed to login qc server.'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to login qc server.'}\n    }\n}\n\n/*Component  \n  api returns string ex. \"unavailableLocalServer\"\n*/\n\nexport const loginQTestServer_ICE = async(qcURL,qcUserName,qcPassword, qcType) => { \n    try{\n        const res = await axios(url+'/loginToQTest_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: {action: \"loginToQTest_ICE\",\n            qcURL: qcURL,\n            qcUsername: qcUserName,\n            qcPassword : qcPassword,\n            qcType : qcType,\n            qcaction: \"domain\"},\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:'Failed to login qtest server.'}\n    }catch(err){\n        console.error(err)\n        return {error:'Failed to login qtest server.'}\n    }\n}\n\nexport const getPools = async(data) => { \n    try{\n        const res = await axios(url+'/getPools', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: data,\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){ \n            if(res.data === 'empty') return {error:\"There are no users created yet.\"}           \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to fetch pools!\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to fetch pools!\"}\n    }\n} \n\n/*Component  \n  api returns object=> \n*/\n\nexport const getICE_list = async(data) => { \n    try{\n        const res = await axios(url+'/getICE_list', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: data,\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to fetch ICE.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to fetch ICE.\"}\n    }\n}\n\n/*Component  \n  api returns object=> \n*/\n\nexport const loginZephyrServer_ICE = async(zephyrURL,zephyrUserName,zephyrPassword, integrationType) => { \n    try{\n        const res = await axios(url+'/loginToZephyr_ICE', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: { action: \"loginToZephyr_ICE\",\n                action: \"loginToZephyr_ICE\",\n                zephyrURL: zephyrURL,\n                zephyrUserName: zephyrUserName,\n                zephyrPassword : zephyrPassword,\n                integrationType : integrationType,\n                zephyraction: \"project\"\n            },\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to login Zephyr server.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to login Zephyr server.\"}\n    }\n}\n\n\n\n/*Component  ExecuteContent\n  api returns  string - success/fail\n*/\n\nexport const updateAccessibilitySelection = async(suiteInfo) => { \n    try{\n        const res = await axios(url+'/updateAccessibilitySelection', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json',\n            },\n            data: suiteInfo,\n            credentials: 'include'\n        });\n        if(res.status === 401 || res.data === \"Invalid Session\"){\n            RedirectPage(history)\n            return {error:'invalid session'};\n        }\n        if(res.status===200 && res.data !== \"fail\"){            \n            return res.data;\n        }\n        console.error(res.data)\n        return {error:\"Failed to save selected accessibility standards.\"}\n    }catch(err){\n        console.error(err)\n        return {error:\"Failed to save selected accessibility standards.\"}\n    }\n}","import React, {useEffect} from 'react';\nimport ExecuteHome from './containers/ExecuteHome'\nimport { useHistory } from 'react-router-dom';\nimport {RedirectPage} from '../global'\nexport var history\n\n/*Component App\n  use: defines components for each url\n*/\n\nconst Execute = () => {\n  history = useHistory();\n\n  useEffect(()=>{\n      if(window.localStorage['navigateScreen'] !== \"TestSuite\"){\n          RedirectPage(history);\n      }\n  }, []);\n  \n  return (\n      <ExecuteHome/>\n  );\n}\n\nexport default Execute;","import React from 'react';\nimport \"../styles/ThumbnailExecute.scss\";\n\nconst ThumbnailExecute = (props) => {\n\n    return (\n        <div className=\"ex__thumbnail\" onClick={()=>{props.UpdateBrowserTypeExe(props.id)}}>\n            <img className={\"ex__thumbnail__img \" + (props.svg ? \"svg_ic\" : \"\" ) + (props.browserTypeExe!==undefined && props.browserTypeExe.includes(props.id) ? \" e__selectedBrowser\" : \"\" )} src={props.img || props.svg} alt={props.title}/>\n            <span className=\"ex__thumbnail__title\">{props.title}</span>\n        </div>\n    );\n}\n\nexport default ThumbnailExecute;","import React, { Fragment } from 'react';\nimport ThumbnailExecute from './ThumbnailExecute';\nimport { useHistory } from 'react-router-dom';\nimport \"../styles/ActionBarItems.scss\"\n\nconst UpperContent = ({appType, isMac, UpdateBrowserTypeExe, browserTypeExe}) => {\n    let renderComp = [ <div key={1} className='e__debugOn'>Execute On</div> ];\n\n    if (appType === \"Web\") {renderComp.splice(1, 0, <Fragment key={2}>\n                                {WebList.map((icon, i) => <ThumbnailExecute key={i} title={icon.title} img={icon.img} svg={icon.svg} id={icon.id} UpdateBrowserTypeExe={UpdateBrowserTypeExe} browserTypeExe={browserTypeExe} />)}\n                                { isMac && <ThumbnailExecute title=\"Safari\" img=\"static/imgs/ic-safari.png\" id=\"6\" UpdateBrowserTypeExe={UpdateBrowserTypeExe} browserTypeExe={browserTypeExe} />}</Fragment>)}\n    else if (appType === \"OEBS\") renderComp.splice(1, 0, <Fragment key={2}>{oebsList.map((icon, i) => <ThumbnailExecute key={i} title={icon.title} img={icon.img} id={icon.id} UpdateBrowserTypeExe={UpdateBrowserTypeExe} browserTypeExe={browserTypeExe} />)}</Fragment>)\n    else if (appType === \"Desktop\") renderComp.splice(1, 0, <Fragment key={2}>{desktopList.map((icon, i) => <ThumbnailExecute key={i} title={icon.title} img={icon.img} id={icon.id} UpdateBrowserTypeExe={UpdateBrowserTypeExe} browserTypeExe={browserTypeExe} />)}</Fragment>)\n    else if (appType === \"System\") renderComp.splice(1, 0, <Fragment key={2}>{systemList.map((icon, i) => <ThumbnailExecute key={i} title={icon.title} img={icon.img} id={icon.id} UpdateBrowserTypeExe={UpdateBrowserTypeExe} browserTypeExe={browserTypeExe}/>)}</Fragment>)\n    else if (appType === \"SAP\") renderComp.splice(1, 0, <Fragment key={2}>{sapList.map((icon, i) => <ThumbnailExecute key={i} title={icon.title} img={icon.img} id={icon.id} UpdateBrowserTypeExe={UpdateBrowserTypeExe} browserTypeExe={browserTypeExe}/>)}</Fragment>)\n    else if (appType === \"Webservice\") renderComp.splice(1, 0, <Fragment key={2}>{webserviceList.map((icon, i) => <ThumbnailExecute key={i} title={icon.title} img={icon.img} id={icon.id} UpdateBrowserTypeExe={UpdateBrowserTypeExe} browserTypeExe={browserTypeExe}/>)}</Fragment>)\n    else if (appType === \"MobileApp\") renderComp.splice(1, 0, <Fragment key={2}>{mobileAppList.map((icon, i) => <ThumbnailExecute key={i} title={icon.title} img={icon.img} id={icon.id}  UpdateBrowserTypeExe={UpdateBrowserTypeExe} browserTypeExe={browserTypeExe}/>)}</Fragment>)\n    else if (appType === \"MobileWeb\") renderComp.splice(1, 0, <Fragment key={2}>{mobileWebList.map((icon, i) => <ThumbnailExecute key={i} title={icon.title} img={icon.img} id={icon.id}  UpdateBrowserTypeExe={UpdateBrowserTypeExe} browserTypeExe={browserTypeExe}/>)}</Fragment>)\n    else if (appType === \"Mainframe\") renderComp.splice(1, 0, <Fragment key={2}>{mainframeList.map((icon, i) => <ThumbnailExecute key={i} title={icon.title} img={icon.img} id={icon.id}  UpdateBrowserTypeExe={UpdateBrowserTypeExe} browserTypeExe={browserTypeExe}/>)}</Fragment>)\n    \n    return renderComp;\n};\n\nconst BottomContent = ({appType, updateExecAction, execAction, updateExecEnv, execEnv}) => {\n    const history = useHistory();\n    const scheduleRedirect = () => {\n        window.localStorage['navigateScreen'] = \"scheduling\";\n        history.replace('/scheduling');\n    }\n    \n    return (\n        <>\n            {appType === \"Web\"?\n                <>\n                <div className=\"e__parallel_icon\" onClick={()=>{updateExecAction()}}>\n                    <img className={\"e__parallel_icon__img\"+ (execAction===\"parallel\" ? \" e__selectedBrowser\" : \"\" )}   src='static/imgs/ic-parallel.png' alt=\"Parallel Execution\"/>\n                    <span className=\"thumbnail__title\">Parallel Execution</span>\n                </div>\n                <div className=\"e__parallel_icon\" onClick={()=>{updateExecEnv()}}>\n                    <img className={\"e__parallel_icon__img\"+ (execEnv!==\"default\" ? \" e__selectedBrowser\" : \"\" )}   src='static/imgs/saucelabs.png' alt=\"Parallel Execution\"/>\n                    <span className=\"thumbnail__title\">SauceLabs Execution</span>\n                </div>\n                </>\n            :null}\n            <div className=\"e__parallel_icon\" onClick={()=>{scheduleRedirect()}}>\n                <img className=\"e__parallel_icon__img\"   src='static/imgs/ic-scheduling.png' alt=\"Schedule\"/>\n                <span className=\"thumbnail__title\">Schedule</span>\n            </div>    \n        </>\n    );\n};\n\nconst WebList = [\n    {'title': \"Internet Explorer\", 'img': \"static/imgs/ic-ie.png\",'id':\"3\"}, \n    {'title': \"Google Chrome\", 'img': \"static/imgs/ic-chrome.png\",'id':\"1\"},\n    {'title': \"Mozilla Firefox\", 'img': \"static/imgs/ic-mozilla.png\",'id':\"2\"},\n    {'title': \"Microsoft Edge\", 'svg': \"static/imgs/ic-edge.svg\",'id':\"7\"},\n    {'title': \"Edge Chromium\", 'svg': \"static/imgs/ic-edge-chromium.svg\",'id':\"8\"}\n    ]\n\nconst oebsList = [{'title': \"OEBS Apps\" , 'img': 'static/imgs/ic-desktop.png','id':\"1\"}]\n\nconst desktopList = [{'title': \"Desktop Apps\" , 'img': 'static/imgs/ic-desktop.png','id':\"1\"}]\n\nconst systemList = [{'title': \"System Apps\" , 'img': 'static/imgs/ic-desktop.png','id':\"1\"}]\n\nconst sapList = [{'title': \"SAP Apps\" , 'img': 'static/imgs/ic-desktop.png','id':\"1\"}]\n\nconst webserviceList = [{'title': \"Web Services\" , 'img': 'static/imgs/ic-webservice.png','id':\"1\"}]\n\nconst mobileAppList = [{'title': \"Mobile Apps\" , 'img': 'static/imgs/ic-mobility.png','id':\"1\"},\n                        {'title': \"\" , 'img': 'static/imgs/aws.png','id':\"2\"}]\n\nconst mobileWebList = [{'title': \"Mobile Web\" , 'img': 'static/imgs/ic-mobility.png','id':\"1\"}]\n\nconst mainframeList = [{'title': \"Mainframe\", 'img': \"static/imgs/ic-mainframe-o.png\",'id':\"1\"}]\n\n\nexport { UpperContent, BottomContent };","import React ,  { Fragment, useEffect, useState, useRef} from 'react';\nimport ClickAwayListener from 'react-click-away-listener';\nimport { ScrollBar } from '../../global';\nimport '../styles/MultiSelectDropDown.scss'\n\n/*Component MultiSelectDropDown \n  use: select multiple options \n*/\n\nconst MultiSelectDropDown = ({accessibilityParameters,setAccessibilityParameters}) => {\n    const inputRef = useRef()\n    const [dropDown,setDropDown] = useState(false)\n    useEffect(()=>{\n        inputRef.current.value = (accessibilityParameters.length!==0?accessibilityParameters.length:\"\") +\" Standards Selected\";\n    },[accessibilityParameters])\n    const selectOption = (value, event) =>{\n        let acc_param = [...accessibilityParameters];\n        if(acc_param.includes(value)){\n            var index = acc_param.indexOf(value);\n\t\t\tacc_param.splice(index, 1);\n        }\n        else {\n            acc_param.push(value);\n        }\n        inputRef.current.value = ((acc_param.length!==0)?acc_param.length:\"\") + \" Standards Selected\"\n        event.currentTarget.getElementsByTagName('input')[0].checked = !event.currentTarget.getElementsByTagName('input')[0].checked\n        setAccessibilityParameters(acc_param);\n    }\n\n    const selectOptionCheckBox = (value) => document.getElementById(value).checked = !document.getElementById(value).checked\n\t\t\t\n    return(\n        <Fragment>\n            <ClickAwayListener className=\"exe__table-multiDropDown-pad\" onClickAway={()=>setDropDown(false)}>\n            <input ref={inputRef} readOnly={true} className=\"ms__input\" onClick={()=>{setDropDown(true)}} id=\"userIdName\" />\n                <div className=\"ms__dropDown\" role=\"menu\" id=\"multiSelectDropDown\" style={{display: (dropDown?\"block\":\"none\")}}>\n                    <ScrollBar thumbColor=\"#321e4f\" scrollId=\"multiSelectDropDown\" >\n                    {paradigmDropdown.map((data,index) => (  \n                        <ul key={index} role=\"presentation\" >\n                            <li value={data.value} onClick={(event)=>{selectOption(data.value,event)}} title={data.title} >\n                                <input id={data.value} defaultChecked checked={accessibilityParameters.includes(data.value)} type=\"checkbox\" style={{ width:\"auto\"}} onClick={()=>{selectOptionCheckBox(data.value)}} />\n                                {\"  \"}{data.text}\n                            </li>\n                        </ul>\n                    ))}\n                    </ScrollBar>\n                </div>\n            </ClickAwayListener>\n        </Fragment>\n    )\n}\n\nconst paradigmDropdown = [{title:\"method A\", value:\"A\", text:\"A\"},\n                          {title:\"method AA\", value:\"AA\", text:\"AA\"},\n                          {title:\"method AAA\", value:\"AAA\", text:\"AAA\"},\n                          {title:\"Aria\", value:\"aria\", text:\"Aria\"},\n                          {title:\"method 508\", value:\"508\", text:\"Section 508\"},\n                          {title:\"method Best Practice\", value:\"Best Practice\",text:\"Best Practice\"}\n                        ]\n\n\nexport default MultiSelectDropDown;","import React, {useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { PopupMsg, ModalContainer ,ScrollBar, Report} from '../../global' \nimport {readTestSuite_ICE, loadLocationDetails, readTestCase_ICE} from '../api';\nimport Handlebars from \"handlebars\"\nimport \"../styles/ExecuteTable.scss\";\nimport MultiSelectDropDown from './MultiSelectDropDown';\n\n//use : Renders Execution Table\n\nconst ExecuteTable = ({scenarioTaskType,accessibilityParameters,current_task,readTestSuite,setAccessibilityParameters,selectAllBatch,eachData,setEachData,updateScreen,update,setLoading,updateAfterSave}) => {\n\n    const userInfo = useSelector(state=>state.login.userinfo);\n    const [scenarioDetails,setScenarioDetails] = useState({})\n    const [showModal,setshowModal] = useState(false)\n    const [initialTableList,setInitialTableList] = useState([])\n    const [popup,setPopup] = useState({show:false})\n    const [arr,setArr] = useState([])\n    \n    useEffect(()=>{\n        if(readTestSuite !== \"\")  readTestSuiteFunct();\n        // eslint-disable-next-line\n    }, [readTestSuite, updateAfterSave]);\n    \n    useEffect(()=>{\n        setArr(eachData)\n        // eslint-disable-next-line\n    },[eachData])\n\n    useEffect(()=>{\n        updateSelectAllBatch();\n        // eslint-disable-next-line\n    }, [selectAllBatch]);\n\n    const displayError = (error) =>{\n        setLoading(false)\n        setPopup({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n        return\n    }\n\n    const updateSelectAllBatch = () => {\n        // eslint-disable-next-line\n        eachData.map((rowData,m)=>{\n            document.getElementById('parentExecute_\"' + m).checked = selectAllBatch;\n            changeSelectALL(m,'parentExecute_\"' + m,eachData,setEachData,batchStatusCheckbox);\n        })\n        return\n    }\n\n    const updateScenarioStatus = (eachData1) => {\n        // eslint-disable-next-line\n        eachData1.map((rowData,m)=>{\n            // eslint-disable-next-line\n            rowData.scenarioids.map((sid,count)=>{\n                changeExecutestatusInitial(eachData1,m,count);\n            })\n        })\n        if(eachData1.length>1) batchStatusCheckbox(eachData, eachData1);\n        else return\n    }\n\n    //make a seperate component after resolving ref bar issue\n    const readTestSuiteFunct = async () => {\n\t\tsetLoading(\"Loading in Progress. Please Wait\");\n        try{\n            const data = await readTestSuite_ICE(readTestSuite, \"execute\")\n            if(data.error){displayError(data.error);return;}\n            setLoading(false);\n            if (data !== \"\") {\n\t\t\t\t// cfpLoadingBar.complete();\n                var keys = Object.keys(data);\n\t\t\t\tvar dataLen = keys.length;\n                var eachData2 = [];\n                keys.map(itm => eachData2.push({...data[itm]}));\n                var eachData1 = [];\n                var initialTableData = [];\n                var m, rowData;\n                //state management for single scenario\n                if (current_task.scenarioFlag === 'True') {\n                    for ( m = 0; m < dataLen; m++) {\n                        rowData = eachData2[m];\n                        for (var k = 0; k < eachData2[m].scenarioids.length; k++) {\n                            if (eachData2[m].scenarioids[k] === current_task.assignedTestScenarioIds || eachData2[m].scenarioids[k] === current_task.assignedTestScenarioIds[0]) {\n                                eachData1.push({\n                                    \"condition\": [rowData.condition[k]],\n                                    \"dataparam\": [(rowData.dataparam[k]).trim()],\n                                    \"executestatus\": [rowData.executestatus[k]],\n                                    \"scenarioids\": [rowData.scenarioids[k]],\n                                    \"scenarionames\": [rowData.scenarionames[k]],\n                                    \"projectnames\": [rowData.projectnames[k]],\n                                    \"testsuiteid\": rowData.testsuiteid,\n                                    \"testsuitename\":rowData.testsuitename,\n                                    \"apptypes\": [rowData.apptypes[k]],\n                                });\n                                initialTableData.push({\n                                    \"executestatus\": [rowData.executestatus[k]]\n                                })\n                            } \n                        }\n                    }\n                } else {\n                    eachData2.forEach(itm =>{\n                        initialTableData.push({...itm});\n                        eachData1.push({...itm})\n                    })\n                    for ( m = 0; m < dataLen; m++) {\n                        let exeStatus = [];\n                        for(var i =0;i<eachData2[m].scenarioids.length;i++) exeStatus.push(eachData2[m].executestatus[i]);\n                        initialTableData[m].executestatus=exeStatus;\n                    }\n                }\n                setInitialTableList(initialTableData);\n                setEachData(eachData1);\n                updateScreen(!update);\n                updateScenarioStatus(eachData1);\n            }\n        }catch(error){\n            console.log(error);\n            setPopup({title:'ERROR',content:\"Error while fetching Test Suite Data.\",submitText:'Ok',show:true})\n        }\n    }\n    const changeParamPath = (m,count,value) => {\n        let data = [...eachData];\n        data[m].dataparam[count]=value;\n        setEachData(data);\n    }\n\n    const closeModal = () => {\n        setshowModal(false);\n    }\n\n    const loadLocationDetailsScenario = async (scenarioName, scenarioId) => {\n\t\tlet data = await loadLocationDetails(scenarioName, scenarioId);\n        if(data.error){displayError(data.error);return;}\n        data[\"modalHeader\"] = scenarioName;\n        setScenarioDetails(data);\n    } \n\n    const conditionUpdate = (m,count,value) => {\n        let data = [...eachData];\n        data[m].condition[count]=JSON.parse(value);\n        setEachData(data);\n    }\n\n    return (\n        <>\n            {(popup.show)?<PopupMsg submit={()=>setPopup({show:false})} close={()=>setPopup({show:false})} title={popup.title} content={popup.content} submitText={popup.submitText}/>:null}\n            \n            <div id=\"middle-content-section\">\n                <div className=\"e__abs-div\">\n                    <div className=\"e__min-h\">\n                        <div className='e__container-wrap'>\n                            <ScrollBar thumbColor=\"#321e4f\">\n                                <div className=\"e__batchSuites\">\n                                <ScrollBar  thumbColor=\"rgb(51,51,51)\" trackColor=\"rgb(211, 211, 211)\" >\n                                    {arr.map((rowData,m)=>(\n                                        <div key={m} className={arr.length>1?\" executionTableDnd\":\" executionTableDnd-single\"} id={\"batch_'\"+m} >\n                                            <div className='suiteNameTxt' id={\"page-taskName_'\" + m}><span title={rowData.testsuitename}  className='taskname'> {rowData.testsuitename} </span></div>\n                                            <div id={'exeData_\"' + m} className='exeDataTable testSuiteBatch'>\n                                                <div id={'executionDataTable_\"' + m} className='executionDataTable' cellSpacing='0' cellPadding='0'>\n                                                    <div className=\"e__table-head\">\n                                                        <div className=\"e__table-head-row\">\n                                                            <div className='e__contextmenu' id='contextmenu'></div>\n                                                            <div className='e__selectAll' ><i title='Do Not Execute' aria-hidden='true' className='e__selectAll-exe'></i>\n                                                                <input onChange={(event)=>{changeSelectALL(m,'parentExecute_\"' + m,eachData,setEachData,batchStatusCheckbox)}} id={'parentExecute_\"' + m} className='e-execute' type='checkbox' /></div>\t\n                                                            <div className='e__scenario'>Scenario Name</div>\n                                                            <div className='e__param'>Data Parameterization</div>\n                                                            <div className='e__condition'>Condition</div>\n                                                            <div className='e__projectName'>Project Name</div>\n                                                            <div className='e__apptype' >App Type</div>\n                                                            {(!(!scenarioTaskType || scenarioTaskType == \"\" || scenarioTaskType == \"disable\"))?<div className='e__accessibilityTesting' >Accessibility Testing</div>:null}\n                                                        </div>\n                                                    </div>\n                                                    <div className={eachData.length>1?'e__testScenarioScroll e__table-bodyContainer':\" e__table-bodyContainer\"}>\n                                                        <ScrollBar thumbColor=\"#321e4f\" trackColor=\"rgb(211, 211, 211)\" >\n                                                        {rowData.scenarioids.map((sid,count)=>(\n                                                            <div id={count} key={count} className={(initialTableList[m]!==undefined && initialTableList[m].executestatus[count]=== 0) ? \"e__table_row_status e__table_row\" : \" e__table_row\"}>\n                                                                <div title={count} className='e__table-col tabeleCellPadding e__contextmenu' id={count}>{count+1}</div>\n                                                                <div  className='e__table-col tabeleCellPadding exe-ExecuteStatus'>\n                                                                    <input id={\"executestatus_\"+m+\"_\"+count} checked={rowData.executestatus[count]!== undefined && rowData.executestatus[count]!== 0 ? true:false} onChange={()=>{changeExecutestatus(m,count,eachData,batchStatusCheckbox,setEachData)}} type='checkbox' title='Select to execute this scenario' className='doNotExecuteScenario e-execute'/>\n                                                                </div>\n                                                                <div title={rowData.scenarionames[count]} className=\"tabeleCellPadding exe-scenarioIds e__table_scenaio-name\" onClick={()=>{loadLocationDetailsScenario(rowData.scenarionames[count],rowData.scenarioids[count]);setshowModal(true);}}>{rowData.scenarionames[count]}</div>\n                                                                <div className=\"e__table-col tabeleCellPadding exe-dataParam\"><input className=\"e__getParamPath\" type=\"text\" onChange={(event)=>{changeParamPath(m,count,event.target.value)}} value={rowData.dataparam[count].trim()}/></div>\n                                                                <div className=\"e__table-col tabeleCellPadding exe-conditionCheck\"><select onChange={(event)=>{conditionUpdate(m,count,event.target.value)}} value={JSON.parse(rowData.condition[count])} className={\"conditionCheck form-control\"+(((rowData.condition[count]===0 || rowData.condition[count]=== \"0\"))?\" alertRed\":\" alertGreen\")}><option value={1}>True</option><option value={0}>False</option></select> </div>\n                                                                <div title={rowData.projectnames[count]}  className='e__table-col tabeleCellPadding projectName'>{rowData.projectnames[count]}</div>\n                                                                <div title={details[rowData.apptypes[count].toLowerCase()]['data']}  className='e__table-col tabeleCellPadding exe-apptype'>\n                                                                    <img src={\"static/imgs/\"+details[rowData.apptypes[count].toLowerCase()]['img']+\".png\"} alt=\"apptype\" className=\"e__table_webImg\"/>\n                                                                </div>\n                                                                {(!(!scenarioTaskType || scenarioTaskType == \"\" || scenarioTaskType == \"disable\"))?\n                                                                <div className=\"exe__table-multiDropDown\"><MultiSelectDropDown accessibilityParameters={accessibilityParameters} setAccessibilityParameters={setAccessibilityParameters} /></div>:null}\n                                                            </div>    \n                                                        ))}\n                                                        </ScrollBar>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))}\n                                </ScrollBar>\n                                </div>\n                            </ScrollBar>\n                        </div>    \n                    </div>\n                </div> \n            </div>\n            {showModal?\n                <ModalContainer title={scenarioDetails.modalHeader} footer={submitModalButtons(setshowModal)} close={closeModal} content={scenarioDetailsContent(scenarioDetails, userInfo, displayError)} />\n            :null} \n        </>\n    );\n}\n\n\nconst submitModalButtons = (setshowModal) => {\n    return(\n        <button type=\"button\" onClick={()=>{setshowModal(false);}} >Ok</button>\n    )\n}\n\nconst changeExecutestatus = (m,count,eachData,batchStatusCheckbox,setEachData) => {\n    let data = [...eachData];\n    var temp = 0;\n    if(eachData[m].executestatus[count] === 0) temp = 1;\n    data[m].executestatus[count]=temp;\n\n    let zeroExist = data[m].executestatus.includes(0);\n    let oneExist = data[m].executestatus.includes(1);\n\n    if(zeroExist ===true && oneExist === true) document.getElementById('parentExecute_\"' + m).indeterminate = true;\n    else if (zeroExist ===false && oneExist === true) {\n        document.getElementById('parentExecute_\"' + m).indeterminate = false;\n        document.getElementById('parentExecute_\"' + m).checked = true;\n    }\n    else if (zeroExist ===true && oneExist === false) {\n        document.getElementById('parentExecute_\"' + m).indeterminate = false;\n        document.getElementById('parentExecute_\"' + m).checked = false;\n    }\n    if(data.length>1) batchStatusCheckbox(eachData, data);\n    setEachData(data);\n}\n\nconst changeSelectALL = (m,id,eachData,setEachData,batchStatusCheckbox) => {\n    let data = [...eachData];\n    var checkBox = document.getElementById(id);\n    let temp = 1; if(checkBox.checked!==true) temp = 0;\n    let newExecutestatus = [];\n    for(var i =0;i<data[m].scenarioids.length;i++) newExecutestatus.push(temp);\n    data[m].executestatus=newExecutestatus;\n    setEachData(data);\n    document.getElementById('parentExecute_\"' + m).indeterminate = false;\n    if(eachData.length>1) batchStatusCheckbox(eachData);\n    else return;\n}\n\nconst batchStatusCheckbox = (eachData, eachData1) => {\n    if(eachData1===undefined) eachData1 = eachData;\n    let batchStatus = 0;\n    // eslint-disable-next-line\n    eachData1.map((rowData,m)=>{\n        if(document.getElementById('parentExecute_\"' + m).checked === true && document.getElementById('parentExecute_\"' + m).indeterminate === false ) batchStatus = batchStatus + 1;\n    })\n    if(batchStatus === 0){\n        document.getElementById('selectAllBatch').indeterminate = false;\n        document.getElementById('selectAllBatch').checked = false;\n    } \n    else if (batchStatus !==0 && batchStatus!== eachData1.length) {\n        document.getElementById('selectAllBatch').indeterminate = true;\n    }\n    else if (batchStatus !==0 && batchStatus=== eachData1.length) {\n        document.getElementById('selectAllBatch').checked = true;\n        document.getElementById('selectAllBatch').indeterminate = false;\n    }\n}\n\nconst changeExecutestatusInitial = (eachData1,m) => {\n    let zeroExist = eachData1[m].executestatus.includes(0);\n    let oneExist = eachData1[m].executestatus.includes(1);\n\n    if(zeroExist ===true && oneExist === true) document.getElementById('parentExecute_\"' + m).indeterminate = true;\n    else if (zeroExist ===false && oneExist === true) {\n        document.getElementById('parentExecute_\"' + m).indeterminate = false;\n        document.getElementById('parentExecute_\"' + m).checked = true;\n    }\n    else if (zeroExist ===true && oneExist === false) {\n        document.getElementById('parentExecute_\"' + m).indeterminate = false;\n        document.getElementById('parentExecute_\"' + m).checked = false;\n    }\n}\n\nconst scenarioDetailsContent = (scenarioDetails, userInfo, displayError) => {\n    return(\n        <>\n            <div className=\"scenarioDetails scenarioDetailsHeading\">\n                <div className=\"sDInnerContents\">Test Case Name</div>\n                <div className=\"sDInnerContents\">Screen Name</div>\n                <div className=\"sDInnerContents\">Project Name</div>\n            </div>\n            <div id=\"scenarioDetailsContent\" className=\"scenarioDetails scenarioDetailsContent scrollbar-inner\">\n                <ScrollBar thumbColor=\"#321e4f\" >\n                {scenarioDetails.screennames!==undefined?\n                <>\n                    {scenarioDetails.screennames.map((data,i)=>(\n                        <div key={i} className=\"sDInnerContentsWrap\">\n                            <div className=\"sDInnerContents viewReadOnlyTC\" onClick={()=>{testCaseDetails(scenarioDetails.testcasenames[i], scenarioDetails.testcaseids[i], userInfo, displayError)}} >{scenarioDetails.testcasenames[i]}</div>\n                            <div className=\"sDInnerContents\">{scenarioDetails.screennames[i]}</div>\n                            <div className=\"sDInnerContents\">{scenarioDetails.projectnames[i]}</div>\n                        </div>\n                    ))}\n                </>\n                :null}\n                </ScrollBar>\n            </div>\n        </>\n    )\n}\n\nconst testCaseDetails = async (testCaseName, testCaseId, userInfo, displayError) => {\n    try{\n        const response = await readTestCase_ICE(userInfo,testCaseId, testCaseName, 0);\n        if(response.error){displayError(response.error);return;}\n        var template = Handlebars.compile(Report);\n        var dat = template({\n                name: [{\n                        testcasename: response.testcasename\n                    }\n                ],\n                rows: response.testcase\n            });\n        var newWindow = window.open();\n        newWindow.document.write(dat);\n    }catch(error) {\n        console.log(error);\n    }\n}\n\nconst details = {\n    \"web\":{\"data\":\"Web\",\"title\":\"Web\",\"img\":\"web\"},\n    \"webservice\":{\"data\":\"Webservice\",\"title\":\"Web Service\",\"img\":\"webservice\"},\n    \"desktop\":{\"data\":\"Desktop\",\"title\":\"Desktop Apps\",\"img\":\"desktop\"},\n    \"oebs\":{\"data\":\"OEBS\",\"title\":\"Oracle Apps\",\"img\":\"oracleApps\"},\n    \"mobileapp\":{\"data\":\"MobileApp\",\"title\":\"Mobile Apps\",\"img\":\"mobileApps\"},\n    \"mobileweb\":{\"data\":\"MobileWeb\",\"title\":\"Mobile Web\",\"img\":\"mobileWeb\"},\n    \"sap\":{\"data\":\"SAP\",\"title\":\"SAP Apps\",\"img\":\"sapApps\"},\n    \"system\":{\"data\":\"System\",\"title\":\"System Apps\",\"img\":\"desktop\"},\n    \"mainframe\":{\"data\":\"Mainframe\",\"title\":\"Mainframe\",\"img\":\"mainframe\"}\n};\n\nexport default ExecuteTable;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport {ScreenOverlay, PopupMsg, ResetSession, ModalContainer , IntegrationDropDown} from '../../global' \nimport {updateTestSuite_ICE, updateAccessibilitySelection, reviewTask, ExecuteTestSuite_ICE} from '../api';\nimport \"../styles/ExecuteContent.scss\";\nimport * as actionTypes from \"../../plugin/state/action\";\nimport ExecuteTable from '../components/ExecuteTable';\nimport AllocateICEPopup from '../../global/components/AllocateICEPopup'\n\n\nconst ExecuteContent = ({execEnv, setExecAction, taskName, status, readTestSuite, setSyncScenario, setBrowserTypeExe, current_task, syncScenario, appType, browserTypeExe, projectdata, execAction}) => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const tasksJson = useSelector(state=>state.plugin.tasksJson)\n    const [loading,setLoading] = useState(false)\n    const [popupState,setPopupState] = useState({show:false,title:\"\",content:\"\"})\n    const [eachData,setEachData] = useState([])\n    const [update,updateScreen] = useState(true)\n    const [updateAfterSave,setupdateAfterSave] = useState(false)\n    const [showDeleteModal,setshowDeleteModal] = useState(false)\n    const [showIntegrationModal,setShowIntegrationModal] = useState(false)\n    const [modalDetails,setModalDetails] = useState({title:\"\",task:\"\"})\n    const [moduleInfo,setModuleInfo] = useState([])\n    const [integration,setIntegration] = useState({\n        alm: {url:\"\",username:\"\",password:\"\"}, \n        qtest: {url:\"\",username:\"\",password:\"\",qteststeps:\"\"}, \n        zephyr: {url:\"\",username:\"\",password:\"\"}\n    });\n    const [selectAllBatch,setSelectAllBatch] = useState(0)\n    const [proceedExecution, setProceedExecution] = useState(false);\n    const [dataExecution, setDataExecution] = useState({});\n    const [allocateICE,setAllocateICE] = useState(false)\n    const [accessibilityParameters,setAccessibilityParameters] = useState(current_task.accessibilityParameters)\n    const [scenarioTaskType,setScenarioTaskType] = useState(current_task.scenarioTaskType);\n    var batch_name= taskName ===\"Batch Execution\"?\": \"+current_task.taskName.slice(13):\"\"\n\n    useEffect(()=>{\n        if (Object.keys(current_task).length!==0){\n            setAccessibilityParameters(current_task.accessibilityParameters);\n            setScenarioTaskType(current_task.scenarioTaskType);\n        }\n    }, [current_task]);\n\n    const closePopup = () => {\n        setPopupState({show:false,title:\"\",content:\"\"});\n    }\n\n    const displayError = (error) =>{\n        setLoading(false)\n        setPopupState({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n\n    const updateTestSuite = async () => {\n        setLoading(\"Saving in progress. Please Wait...\");\n\t\tconst batchInfo = [];\n        for(var i =0 ; i < eachData.length ; i++) { \n\t\t\tconst suiteDetails = {};\n\t\t\tconst scenarioDescriptionText = [];\n\t\t\tconst scenarioAccNoMap = {};\n            for(var j =0 ; j < eachData[i].scenarioids.length ; j++) { \n                scenarioDescriptionText.push(\"\");\n                scenarioAccNoMap[eachData[i].scenarioids[j]]=\"\";\n            }\n\t\t\tsuiteDetails.testsuiteid = eachData[i].testsuiteid;\n\t\t\tsuiteDetails.testsuitename = eachData[i].testsuitename;\n\t\t\tsuiteDetails.testscenarioids = eachData[i].scenarioids;\n\t\t\tsuiteDetails.getparampaths = eachData[i].dataparam;\n\t\t\tsuiteDetails.conditioncheck = eachData[i].condition;\n\t\t\tsuiteDetails.donotexecute = eachData[i].executestatus;\n\t\t\tsuiteDetails.scenarioAccNoMap = scenarioAccNoMap;\n\t\t\tsuiteDetails.scenarioDescriptions = scenarioDescriptionText;\n\t\t\tbatchInfo.push(suiteDetails);\n        }\n        \n        if(scenarioTaskType !== \"disable\"){\n\t\t\tlet input = {\n\t\t\t\ttaskId : current_task.subTaskId,\n\t\t\t\taccessibilityParameters: accessibilityParameters\n\t\t\t}\n            const status = await updateAccessibilitySelection(input);\n            if(status.error){displayError(status.error);return;}\n            else if(status !== \"success\") setPopupState({show:true,title:\"Save Test Suite\",content:\"Failed to save selected accessibility standards.\"});\n            else{\n                var curr_task = {...current_task};\n                curr_task.accessibilityParameters = accessibilityParameters;\n                dispatch({type: actionTypes.SET_CT, payload: curr_task});\n\n                let tj = [...tasksJson];\n                for(var task in tj){\n                    if(task.uid === curr_task.uid){\n                        task.accessibilityParameters = curr_task.accessibilityParameters;\n                        break;\n                    }\n                }\n                dispatch({type: actionTypes.SET_TASKSJSON, payload: tj});\n            }\n        }      \n\n\n\t\tconst data = await updateTestSuite_ICE(batchInfo);\n        if(data.error){displayError(data.error);return;}\n        setLoading(false);\n        if (data !== \"fail\") {\n            setPopupState({show:true,title:\"Save Test Suite\",content:\"Test suite saved successfully.\"});\n        }\n        setupdateAfterSave(!updateAfterSave);\n    }\n\n    const closeModal = () => {\n        setshowDeleteModal(false);\n    }\n    \n    const submit_task = async () => {\n        let action = \"approve\";\n        if(modalDetails.task==='approve') action = \"approve\";\n        else if(modalDetails.task==='submit') action = \"submit\";\n        if(modalDetails.task==='reassign') action = \"reassign\";\n\t\tvar taskid = current_task.subTaskId;\n\t\tvar taskstatus = current_task.status;\n\t\tvar version = current_task.versionnumber;\n\t\tvar batchTaskIDs = current_task.batchTaskIDs;\n\t\tvar projectId = current_task.projectId;\n\t\tif (action !== undefined && action === 'reassign') {\n\t\t\ttaskstatus = action;\n\t\t}\n\n\t\tconst result = await reviewTask(projectId, taskid, taskstatus, version, batchTaskIDs);\n        if(result.error){displayError(result.error);return;}\n        if (result === 'fail') {\n            setPopupState({show:true,title:\"Task Submission Error\",content:\"Reviewer is not assigned !\"});\n        }else if(result ==='NotApproved'){\n            setPopupState({show:true,title:\"Task Submission Error\",content:\"All the dependent tasks (design, scrape) needs to be approved before Submission\"});\n        } \n        else if (taskstatus === 'reassign') {\n            setPopupState({show:true,title:\"Task Reassignment Success\",content:\"Task Reassigned successfully!\"});\n            window.localStorage['navigateScreen'] = \"plugin\";\n            history.replace('/plugin');\n        } else if (taskstatus === 'underReview') {\n            setPopupState({show:true,title:\"Task Completion Success\",content:\"Task Approved successfully!\"});\n            window.localStorage['navigateScreen'] = \"plugin\";\n            history.replace('/plugin');\n        } else {\n            setPopupState({show:true,title:\"Task Submission Success\",content:\"Task Submitted successfully!\"});\n            window.localStorage['navigateScreen'] = \"plugin\";\n            history.replace('/plugin');\n        }\n    }\n    \n    const ExecuteTestSuitePopup = () => {\n        const check = SelectBrowserCheck(appType,browserTypeExe,setPopupState,execAction)\n        const valid = checkSelectedModules(eachData, setPopupState);\n        if(scenarioTaskType === \"exclusive\" && accessibilityParameters.length === 0){\n            setPopupState({show:true,title:\"Accessibility Standards\",content:\"Please select one or more accessibility testing standard to proceed.\"});\n            return ;\n        }\n        else if(check && valid) setAllocateICE(true);\n    }    \n\n    const CheckStatusAndExecute = (executionData, iceNameIdMap) => {\n        if(Array.isArray(executionData.targetUser)){\n\t\t\tfor(let icename in executionData.targetUser){\n\t\t\t\tlet ice_id = iceNameIdMap[executionData.targetUser[icename]];\n\t\t\t\tif(ice_id && ice_id.status){\n                    setDataExecution(executionData);\n\t\t\t\t\tsetAllocateICE(false);\n                    setProceedExecution(true);\n                    return\n\t\t\t\t} \n\t\t\t}\n\t\t}else{\n\t\t\tlet ice_id = iceNameIdMap[executionData.targetUser];\n\t\t\tif(ice_id && ice_id.status){\n                setDataExecution(executionData);\n\t\t\t\tsetAllocateICE(false);\n                setProceedExecution(true);\n                return\n\t\t\t} \n\t\t}\n        ExecuteTestSuite(executionData);\n    }\n\n    const ExecuteTestSuite = async (executionData) => {\n       \n        if(executionData === undefined) executionData = dataExecution;\n        setAllocateICE(false);\n        const modul_Info = parseLogicExecute(eachData, current_task, appType, projectdata, moduleInfo, accessibilityParameters, scenarioTaskType, setPopupState);\n        if(modul_Info === false) return;\n        setLoading(\"Sending Execution Request\");\n        executionData[\"source\"]=\"task\";\n        executionData[\"exectionMode\"]=execAction;\n        executionData[\"executionEnv\"]=execEnv;\n        executionData[\"browserType\"]=browserTypeExe;\n        executionData[\"integration\"]=integration;\n        executionData[\"batchInfo\"]=modul_Info;\n        ResetSession.start();\n        try{\n            setLoading(false);\n            const data = await ExecuteTestSuite_ICE(executionData);\n            if (data.errorapi){displayError(data.errorapi);return;}\n            if (data === \"begin\"){\n                return false;\n            }\n            ResetSession.end();\n            if(data.status) {\n                if(data.status === \"fail\") {\n                    setPopupState({show:true,title:\"Queue Test Suite\",content:data[\"error\"]});\n                } else {\n                    setPopupState({show:true,title:\"Queue Test Suite\",content:data[\"message\"]});\n                }\n            }\n            setBrowserTypeExe([]);\n            setModuleInfo([]);\n            setExecAction(\"serial\");\n            setupdateAfterSave(!updateAfterSave);\n            setSyncScenario(false);\n        }catch(error) {\n            setLoading(false);\n            ResetSession.end();\n            setPopupState({show:true,title:\"Execute Failed\",content:\"Failed to execute.\"});\n            setBrowserTypeExe([]);\n            setModuleInfo([]);\n            setExecAction(\"serial\");\n            setupdateAfterSave(!updateAfterSave);\n            setSyncScenario(false);\n        }\n    }\n\n    const syncScenarioChange = (value) => {\n        if (value === \"1\") {\n            setShowIntegrationModal(\"ALM\")\n\t\t}\n\t\telse if (value === \"0\") {\n            setShowIntegrationModal(\"qTest\")\n\t\t}\n        else if (value === \"2\") {\n            setShowIntegrationModal(\"Zephyr\")\n\t\t}\n    }\n\n    const setSelectAllBatchClick = () => {\n        var checkBox = document.getElementById(\"selectAllBatch\");\n        let temp = true; if(checkBox.checked!==true) temp = false;\n        setSelectAllBatch(temp);\n    }\n\n    return (\n        <>\n            {popupState.show?<PopupMsg content={popupState.content} title={popupState.title} submit={closePopup} close={closePopup} submitText={\"Ok\"} />:null}\n            {loading?<ScreenOverlay content={loading}/>:null}\n            {allocateICE?\n            <AllocateICEPopup \n                SubmitButton={CheckStatusAndExecute} \n                setAllocateICE={setAllocateICE}\n                modalButton={\"Execute\"} \n                allocateICE={allocateICE} \n                modalTitle={\"Select ICE to Execute\"} \n                icePlaceholder={'Search ICE to execute'}\n                exeTypeLabel={\"Select Execution type\"}\n                exeIceLabel={\"Execute on ICE\"}\n                ExeScreen={true}\n            />:null}\n            \n            <div className=\"e__content\">\n                <div className=\"e__task_title\"> <div className=\"e__task_name\">{taskName || \"Execute\"}{batch_name}</div></div>\n                <div id=\"tableActionButtons\">\n                    {taskName===\"Batch Execution\"?<div><span className='parentBatchContainer'><input id=\"selectAllBatch\" onClick={()=>{setSelectAllBatchClick()}} title='Select Batch' type='checkbox' className='checkParentBatch' /><span className='parentObject'>Select All</span></span></div>:null}\n                    <button id=\"excSaveBtn\" onClick={()=>{updateTestSuite()}} title=\"Save\" className={\"e__taskBtn e__btn \"+ ((taskName===\"Batch Execution\") ? \"e__btnLeft\" : \"\")}>Save</button>\n                    <button disabled={true} title=\"Configure\" className={\"e__taskBtn e__btn\"+ ((taskName===\"Batch Execution\") ? \" e__btnLeft\" : \"\")}>Configure</button>\n                    <select defaultValue={\"\"} id='syncScenario' onChange={(event)=>{syncScenarioChange(event.target.value)}} disabled={!syncScenario?true:false} className={\"e__taskBtn e__btn\"+ ((taskName===\"Batch Execution\") ? \" e__btnLeft\" : \"\")}>\n                        <option value=\"\" disabled className=\"e__disableOption\">Select Integration</option>\n                        <option value=\"1\">ALM</option>\n                        <option value=\"0\">qTest</option>\n                        <option value=\"2\">Zephyr</option>\n                    </select>\n                    <button className=\"e__btn-md submitTaskBtn\" onClick={()=>{setModalDetails({title:(status!=='underReview'?'Submit Task':'Approve Task'),task:(status!=='underReview'?\"submit\":\"approve\")});setshowDeleteModal(true)}} title=\"Submit Task\">{status!=='underReview'?\"Submit\":\"Approve\"}</button>\n                    <button className={\"e__btn-md reassignTaskBtn\"+ ((status==='underReview') ? \"\" : \" e__btn_display-hide\")} onClick={()=>{setModalDetails({title:'Reassign Task',task:\"reassign\"});setshowDeleteModal(true)}} title=\"Reassign Task\">Reassign</button>\n                    <button className=\"e__btn-md executeBtn\" onClick={()=>{ExecuteTestSuitePopup()}} title=\"Execute\">Execute</button>\n                </div>\n\n                <ExecuteTable setAccessibilityParameters={setAccessibilityParameters} scenarioTaskType={scenarioTaskType} accessibilityParameters={accessibilityParameters} current_task={current_task} setLoading={setLoading} selectAllBatch={selectAllBatch} updateScreen={updateScreen} updateAfterSave={updateAfterSave} readTestSuite={readTestSuite} eachData={eachData} setEachData={setEachData} update={update} />\n                </div>\n\n            {proceedExecution?\n                <ModalContainer\n                    title={\"ICE Busy\"} \n                    footer={\n                        <>\n                        <button onClick={()=>{ExecuteTestSuite();setProceedExecution(false);}}>Proceed</button>\n                        <button onClick={()=>{setAllocateICE(true);setProceedExecution(false);}}>No</button>\n                        </>\n                    }\n                    close={()=>{setProceedExecution(false)}} \n                    content={\"Selected ICE is already executing a Test Suite. Press Proceed to queue this execution on selected ICE, press No to select any other ICE.\"} \n                    modalClass=\" modal-sm\" \n                />\n            :null} \n            {showDeleteModal?<ModalContainer title={modalDetails.title} footer={submitModalButtons(setshowDeleteModal, submit_task)} close={closeModal} content={\"Are you sure you want to \"+ modalDetails.task+\" the task ?\"} modalClass=\" modal-sm\" />:null} \n            { showIntegrationModal ? \n                <IntegrationDropDown\n                    setshowModal={setShowIntegrationModal} \n                    type={showIntegrationModal} \n                    showIntegrationModal={showIntegrationModal} \n                    appType={appType} \n                    setPopupState={setPopupState} \n                    setCredentialsExecution={setIntegration}\n                    integrationCred={integration}\n                    displayError={displayError}\n                    browserTypeExe={browserTypeExe}\n                />\n            :null}   \n        </>\n    );\n}\n\nconst checkSelectedModules = (data, setPopupState) => {\n    let pass = false;\n    // eslint-disable-next-line\n    data.map((rowData,m)=>{\n        const indeterminate = document.getElementById('parentExecute_\"' + m).indeterminate;\n        const checked = document.getElementById('parentExecute_\"' + m).checked;\n        if(indeterminate || checked){\n            pass = true;\n            return null\n        } \n    })\n    if (pass===false) setPopupState({show:true,title:\"Execute Test Suite\",content:\"Please select atleast one scenario(s) to execute\"});\n    return pass\n} \n\nconst SelectBrowserCheck = (appType,browserTypeExe,setPopupState,execAction)=>{\n    if ((appType === \"Web\") && browserTypeExe.length === 0) setPopupState({show:true,title:\"Execute Test Suite\",content:\"Please select a browser\"});\n    else if (appType === \"Webservice\" && browserTypeExe.length === 0) setPopupState({show:true,title:\"Execute Test Suite\",content:\"Please select Web Services option\"});\n    else if (appType === \"MobileApp\" && browserTypeExe.length === 0) setPopupState({show:true,title:\"Execute Test Suite\",content:\"Please select Mobile Apps option\"});\n    else if (appType === \"Desktop\" && browserTypeExe.length === 0) setPopupState({show:true,title:\"Execute Test Suite\",content:\"Please select Desktop Apps option\"});\n    else if (appType === \"Mainframe\" && browserTypeExe.length === 0) setPopupState({show:true,title:\"Execute Test Suite\",content:\"Please select Mainframe option\"});\n    else if (appType === \"OEBS\" && browserTypeExe.length === 0) setPopupState({show:true,title:\"Execute Test Suite\",content:\"Please select OEBS Apps option\"});\n    else if (appType === \"SAP\" && browserTypeExe.length === 0) setPopupState({show:true,title:\"Execute Test Suite\",content:\"Please select SAP Apps option\"});\n    else if (appType === \"MobileWeb\" && browserTypeExe.length === 0) setPopupState({show:true,title:\"Execute Test Suite\",content: \"Please select Mobile Web option\"});\n    else if (browserTypeExe.length === 0) setPopupState({show:true,title:\"Execute Test Suite\",content:\"Please select \" + appType + \" option\"});\n    else if ((appType === \"Web\") && browserTypeExe.length === 1 && execAction === \"parallel\") setPopupState({show:true,title:\"Execute Test Suite\",content:\"Please select multiple browsers\"});\n    else return true;\n    return false;\n}\n\nconst submitModalButtons = (setshowDeleteModal, submit_task) => {\n    return(\n        <div>\n            <button onClick={()=>{setshowDeleteModal(false);submit_task()}} type=\"button\" className=\"e__modal_button\" >Yes</button>\n            <button type=\"button\" onClick={()=>{setshowDeleteModal(false);}} >No</button>\n        </div>\n    )\n}\n\nconst parseLogicExecute = (eachData, current_task, appType, projectdata, moduleInfo,accessibilityParameters, scenarioTaskType, setPopupState) => {\n    for(var i =0 ;i<eachData.length;i++){\n        var testsuiteDetails = current_task.testSuiteDetails[i];\n        var suiteInfo = {};\n        var selectedRowData = [];\n        var relid = testsuiteDetails.releaseid;\n        var cycid = testsuiteDetails.cycleid;\n        var projectid = testsuiteDetails.projectidts;\n        \n        for(var j =0 ; j<eachData[i].executestatus.length; j++){\n            if(eachData[i].executestatus[j]===1){\n                selectedRowData.push({\n                    condition: eachData[i].condition[j],\n                    dataparam: [eachData[i].dataparam[j].trim()],\n                    scenarioName: eachData[i].scenarionames[j],\n                    scenarioId: eachData[i].scenarioids[j],\n                    scenariodescription: undefined,\n                    accessibilityParameters: accessibilityParameters\n                });\n            }\n        }\n        suiteInfo.scenarioTaskType = scenarioTaskType;\n        suiteInfo.testsuiteName = eachData[i].testsuitename;\n        suiteInfo.testsuiteId = eachData[i].testsuiteid;\n        suiteInfo.versionNumber = testsuiteDetails.versionnumber;\n        suiteInfo.appType = appType;\n        suiteInfo.domainName = projectdata.project[projectid].domain;\n        suiteInfo.projectName = projectdata.projectDict[projectid];\n        suiteInfo.projectId = projectid;\n        suiteInfo.releaseId = relid;\n        suiteInfo.cycleName = projectdata.cycleDict[cycid];\n        suiteInfo.cycleId = cycid;\n        suiteInfo.suiteDetails = selectedRowData;\n        if(selectedRowData.length !== 0) moduleInfo.push(suiteInfo);\n    }\n    return moduleInfo;\n}\n\nexport default ExecuteContent;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { UpperContent, BottomContent } from \"../components/ActionBarItems\";\nimport { Header, FooterTwo as Footer, ActionBar, ReferenceBar } from '../../global';\nimport \"../styles/ExecuteHome.scss\";\nimport ExecuteContent from './ExecuteContent';\n\nconst ExecuteHome = () => {\n    \n    const current_task = useSelector(state=>state.plugin.CT)\n    const filter_data = useSelector(state=>state.plugin.FD)\n\tconst [browserTypeExe,setBrowserTypeExe] = useState([]); // Contains selected browser id for execution\n\tconst [execAction,setExecAction] = useState(\"serial\"); \n\tconst [execEnv,setExecEnv] = useState(\"default\");\n    const [taskName, setTaskName] = useState(null);\n    const [status, setStatus] = useState(null);\n    const [appType, setAppType] = useState(null);\n    const [syncScenario, setSyncScenario] = useState(false);\n    const [readTestSuite,setreadTestSuite] = useState(\"\");\n    const isMac = navigator.appVersion.indexOf(\"Mac\") !== -1;\n    var versionnumber;\n    \n    useEffect(()=>{\n        if (Object.keys(current_task).length!==0 && Object.keys(filter_data).length!==0){\n            if(current_task.taskName.indexOf(\"Execute Batch\") < 0) setTaskName(\"Suite Execution\");\n            else setTaskName(\"Batch Execution\");\n            setStatus(current_task.status);\n            setAppType(current_task.appType);\n            // eslint-disable-next-line\n            versionnumber = current_task.versionnumber;\n            let readTestSuiteData = current_task.testSuiteDetails;\n            if(typeof readTestSuiteData === \"string\") readTestSuiteData = JSON.parse(current_task.testSuiteDetails);\n            for (var rti = 0; rti < readTestSuiteData.length; rti++) {\n                readTestSuiteData[rti].versionnumber = parseFloat(versionnumber);\n            }\n            setreadTestSuite(readTestSuiteData);\n        }\n    }, [current_task, filter_data]);\n\n    const UpdateBrowserTypeExe = (browserId) => {\n        let browserTypeExecute = [...browserTypeExe];\n\t\tif (browserId!==undefined && browserTypeExecute.includes(browserId)) {\n\t\t\tvar getSpliceIndex = browserTypeExecute.indexOf(browserId);\n\t\t\tbrowserTypeExecute.splice(getSpliceIndex, 1);\n\t\t} else browserTypeExecute.push(browserId); \n        setBrowserTypeExe(browserTypeExecute);\n\t\tif (browserTypeExecute.length > 0) setSyncScenario(true);\n\t\telse setSyncScenario(false);\n    }\n\n    const updateExecAction = () => {\n        if (execAction ===\"serial\") setExecAction(\"parallel\");\n\t\telse setExecAction(\"serial\");\n    }\n\n    const updateExecEnv = () => {\n        if (execEnv ===\"default\") setExecEnv(\"Saucelabs\");\n\t\telse setExecEnv(\"default\");\n    }\n\n    return (\n        <div className=\"e__body\">\n            <Header />\n                <div className=\"e__mid_section\">\n                    <ActionBar \n                        upperContent={<UpperContent appType={appType} isMac={isMac} browserTypeExe={browserTypeExe} UpdateBrowserTypeExe={UpdateBrowserTypeExe} />}\n                        bottomContent={<BottomContent execEnv={execEnv} updateExecEnv={updateExecEnv} appType={appType} execAction={execAction} browserTypeExe={browserTypeExe} UpdateBrowserTypeExe={UpdateBrowserTypeExe} updateExecAction={updateExecAction}/>}/> \n                    <ExecuteContent execEnv={execEnv} setBrowserTypeExe={setBrowserTypeExe} setExecAction={setExecAction} setSyncScenario={setSyncScenario} projectdata={filter_data} execAction={execAction} appType={appType} browserTypeExe={browserTypeExe} syncScenario={syncScenario} taskName={taskName} status={status} readTestSuite={readTestSuite} current_task={current_task} />\n                    <ReferenceBar /> \n                </div>\n            <div className='e__footer'><Footer/></div>\n        </div>\n    );\n}\n\nexport default ExecuteHome;","import axios from 'axios';\nimport {url} from '../../App';\n\n/*Component LoginFields\n  api returns String (restart/validCredential/inValidCredential/invalid_username_password/userLogged/inValidLDAPServer/invalidUserConf)\n*/\nexport const authenticateUser = async(username, password) => {\n    try{\n        const res = await axios(url+\"/login\", {\n            method : 'POST',\n            headers : {\n                'Content-type' : \"application/json\"\n            },\n            data: {'username': username, 'password': password},\n            credentials : 'include'\n        });\n        if (res.status === 200 && res.data !== \"fail\") {\n            return res.data;\n        }\n        else{\n            return {error: 'Failed to Authenticate User'}\n        }\n    }\n    catch(err){\n        return {error: 'Failed to Authenticate User'}\n    }\n}\n\n/*Component BasePage\n  api returns {\"user_id\":\"\",\"username\":\"\",\"email_id\":\"\",\"additionalrole\":[],\"firstname\":\"\",\"lastname\":\"\",\"role\":\"\",\"taskwflow\":bool,\"token\":\"\",\"dbuser\":bool,\"ldapuser\":bool,\"samluser\":bool,\"openiduser\":bool,\"rolename\":\"\",\"pluginsInfo\":[{\"pluginName\":\"\",\"pluginValue\":bool}],\"page\":\"plugin\"}\n*/\nexport const loadUserInfo = async(selRole) => {\n    try{\n        const res = await axios(url+\"/loadUserInfo\", {\n            method: \"POST\",\n            headers: {\n                \"Content-type\": \"application/json\"\n            },\n            data: {'action': 'loadUserInfo', selRole: selRole},\n            credentials : 'include'\n        });\n        if (res.status === 200){\n            return res.data;\n        }\n        else{\n            return {error: 'Failed to load User info'}\n        }\n    }\n    catch(err){\n        return {error: 'Failed to load User info'}\n    }\n}\n\n/*Component BasePage\n  api returns String (fail/unauthorized/badrequest/nouser/nouserprofile/userLogged/inValidCredential/noProjectsAssigned/reload/redirect/Invalid Session)\n*/\nexport const validateUserState = async() => {\n    try{\n        const res = await axios(url+\"/validateUserState\", {\n            method: \"POST\",\n            credentials : 'include'\n        });\n        if (res.status === 200){\n            return res.data;\n        }\n        else{\n            return {error: 'Failed to validate User'}\n        }\n    }\n    catch(err){\n        return {error: 'Failed to validate User'}\n    }\n}\n\n/*Component LoginFields\n  api returns {proceed:true} / invalidServerConf\n*/\nexport const checkUser = async(user) => {\n    try{\n        const res = await axios(url+\"/checkUser\", {\n            method: \"POST\",\n            headers: {\n                \"Content-type\": \"application/json\"\n            },\n            data: {'username': user},\n            credentials : 'include'\n        });\n        if (res.status === 200){\n            return res.data;\n        }\n        else{\n            return {error: 'Failed to check user'}\n        }\n    }\n    catch(err){\n        return {error: 'Failed to check user'}\n    }\n}\n\nexport const restartService = async(i) => {\n    try{\n        const res = await axios(url+\"/restartService\", {\n            method : 'POST',\n            headers : {\n                'Content-type' : \"application/json\"\n            },\n            data: {id: i},\n            credentials : 'include'\n        });\n        if (res.status === 200) {\n            return res.data;\n        }\n        else{\n            console.log(res.status);\n        }\n    }\n    catch(err){\n        console.log(err)\n    }\n} \n\nexport const storeUserDetails = async(userData) => {\n    try{\n        const res = await axios(url+\"/storeUserDetails\", {\n            method : 'POST',\n            headers : {\n                'Content-type' : \"application/json\"\n            },\n            data: {\n                action: \"storeUserDetails\",\n                userDetails : userData\n            },\n            credentials : 'include'\n        });\n        if (res.status === 200) {\n            return res.data;\n        }\n        else{\n            console.log(res.status);\n        }\n    }\n    catch(err){\n        console.log(err);\n    }\n}\n\nexport const forgotPasswordEmail = async(username) => {\n    try{\n        const res = await axios(url+\"/forgotPasswordEmail\", {\n            method : 'POST',\n            headers : {\n                'Content-type' : \"application/json\"\n            },\n            data: {\n                username: username\n            },\n            credentials : 'include'\n        });\n        if (res.status === 200) {\n            return res.data;\n        }\n        else{\n            console.log(res.status);\n        }\n    }\n    catch(err){\n        console.log(err);\n    }\n}\n\nexport const unlockAccountEmail = async(username) => {\n    try{\n        const res = await axios(url+\"/unlockAccountEmail\", {\n            method : 'POST',\n            headers : {\n                'Content-type' : \"application/json\"\n            },\n            data: {\n                username: username\n            },\n            credentials : 'include'\n        });\n        if (res.status === 200) {\n            return res.data;\n        }\n        else{\n            console.log(res.status);\n        }\n    }\n    catch(err){\n        console.log(err);\n    }\n}\n\nexport const unlock = async(username, password) => {\n    try{\n        const res = await axios(url+\"/unlock\", {\n            method : 'POST',\n            headers : {\n                'Content-type' : \"application/json\"\n            },\n            data: {\n                username: username,\n\t\t\t\tpassword: password\n            },\n            credentials : 'include'\n        });\n        if (res.status === 200) {\n            return res.data;\n        }\n        else{\n            console.log(res.status);\n        }\n    }\n    catch(err){\n        console.log(err);\n    }\n}","import * as actionTypes from './action.js';\n\nconst initialState = {\n    progress: 0,\n    roleSwitched: false,\n};\n\nconst reducer = (state = initialState , action) => {\n    switch (action.type) {\n        case actionTypes.SET_PROGRESS:\n            return{\n                ...state, progress: action.payload,\n            }\n        case actionTypes.SWITCHED:\n            return{\n                ...state, roleSwitched: action.payload,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from './action';\n\nconst initialState = {\n    SR: \"\",\n    userinfo: {},\n    socket:undefined,\n    notify:{data:[],unread:0},\n    dateformat:\"DD-MM-YYYY\"\n}\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type){\n        case actionTypes.SET_USERINFO:\n            return {\n                ...state, userinfo: action.payload\n            }\n        case actionTypes.SET_SR:\n            return {\n                ...state, SR: action.payload\n            }\n        case actionTypes.SET_SOCKET:\n            return {\n                ...state, socket: action.payload\n            }\n        case actionTypes.UPDATE_NOTIFY:\n            var value = action.payload\n            value.dateTime = new Date().toLocaleString();\n            var arr = [...state.notify.data]\n            var val = state.notify.unread\n            var isDuplicateNotificationMsg = false;\n            arr.forEach(e => {\n                if (value.notifyMsg === e.notifyMsg) {\n\t\t\t\t\tisDuplicateNotificationMsg = true;\n\t\t\t\t}\n            });\n            if (isDuplicateNotificationMsg)return{...state}\n            arr = [value,...arr]\n            val = val + 1\n            return {\n                ...state, notify: {data:arr,unread:val}\n            }\n        case actionTypes.CLEAR_NOTIFY:\n            if(action.payload === 'all'){\n                return {\n                    ...state, notify:{...initialState.notify}\n                }\n            } else return state\n        case actionTypes.UPDATE_NOTIFY_COUNT:\n            return {\n                ...state, notify:{...state.notify,unread:action.payload}\n            }\n        case actionTypes.SET_DATEFORMAT:\n            return{\n                ...state, dateformat: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer;","import * as actionTypes from './action.js';\n\nconst initialState = {\n    userConf : {\n        userId : '',\n\t\tuserName : '',\n\t\tuserIdName : '',\n\t\tfirstname : '',\n\t\tlastname : '',\n\t\tpassWord : '',\n\t\tconfirmPassword : '',\n\t\temail : '',\n\t\trole : '',\n\t\taddRole : {},\n\t\tnocreate : false,\n\t\tconfExpired : false,\n\t\tldapUserFilter : '',\n        allUserFilter : '',\n        type : \"inhouse\",\n        allRoles : [],\n        allAddRoles : [],\n        server : \"\",\n        ldap : {fetch: \"map\", user: ''},\n        confServerList : [],\n        ldapAllUserList : [],\n        allUsersList : [],\n        fType : \"Default\",\n        rolename : \"\"\n    }\n};\n\nconst reducer = (state = initialState , action) => {\n    \n    switch (action.type) {\n        case actionTypes.UPDATE_INPUT_USERNAME:\n            return{\n                ...state,\n                userConf : {...state.userConf,userName :action.payload}\n            }\n        case actionTypes.UPDATE_ROLENAME:\n            return{\n                ...state,\n                userConf : {...state.userConf,rolename :action.payload}\n            }\n        case actionTypes.UPDATE_FTYPE:\n            return{\n                ...state,\n                userConf : {...state.userConf,fType :action.payload}\n            }\n        case actionTypes.UPDATE_ALL_USERS_LIST:\n            return{\n                ...state,\n                userConf : {...state.userConf,allUsersList :action.payload}\n            }\n        case actionTypes.UPDATE_INPUT_FIRSTNAME:\n            return{\n                ...state,\n                userConf : {...state.userConf,firstname :action.payload}\n            }\n        case actionTypes.UPDATE_USERID:\n            return{\n                ...state,\n                userConf : {...state.userConf,userId :action.payload}\n            }    \n        case actionTypes.UPDATE_INPUT_LASTNAME:\n            return{\n                ...state,\n                userConf : {...state.userConf,lastname :action.payload}\n            }\n        case actionTypes.UPDATE_INPUT_PASSWORD:\n            return{\n                ...state,\n                userConf : {...state.userConf,passWord :action.payload}\n            }\n        case actionTypes.UPDATE_INPUT_CONFIRMPASSWORD:\n            return{\n                ...state,\n                userConf : {...state.userConf,confirmPassword :action.payload}\n            }\n        case actionTypes.UPDATE_INPUT_EMAIL:\n            return{\n                ...state,\n                userConf : {...state.userConf,email :action.payload}\n            }\n        case actionTypes.UPDATE_ALLROLES:\n            return{\n                ...state,\n                userConf : {...state.userConf,allRoles :action.payload}\n            }\n        case actionTypes.UPDATE_ALLADDROLES:\n            return{\n                ...state,\n                userConf : {...state.userConf,allAddRoles :action.payload}\n            } \n        case actionTypes.UPDATE_ADDROLES:\n            return{\n                ...state,\n                userConf : {...state.userConf,addRole :action.payload}\n            } \n        case actionTypes.UPDATE_USERROLE:\n            return{\n                ...state,\n                userConf : {...state.userConf,role :action.payload}\n            }   \n        case actionTypes.UPDATE_TYPE:\n            return{\n                ...state,\n                userConf : {...state.userConf,type :action.payload}\n            }     \n        case actionTypes.UPDATE_CONF_SERVER_LIST_PUSH:\n            state.userConf.confServerList.push(action.payload);\n            return{\n                ...state,\n                userConf : {...state.userConf,confServerList :state.userConf.confServerList}\n            } \n        case actionTypes.UPDATE_USERIDNAME:\n            return{\n                ...state,\n                userConf : {...state.userConf,userIdName :action.payload}\n            }    \n        \n        case actionTypes.UPDATE_NO_CREATE:\n            return{\n                ...state,\n                userConf : {...state.userConf,nocreate :action.payload}\n            } \n        case actionTypes.UPDATE_LDAP_USER_FILTER:\n            return{\n                ...state,\n                userConf : {...state.userConf,ldapUserFilter :action.payload}\n            }  \n        case actionTypes.UPDATE_CONF_EXP:\n            return{\n                ...state,\n                userConf : {...state.userConf,confExpired :action.payload}\n            } \n        case actionTypes.UPDATE_ALL_USER_FILTER:\n            return{\n                ...state,\n                userConf : {...state.userConf,allUserFilter :action.payload}\n            }\n        case actionTypes.UPDATE_SERVER:\n            return{\n                ...state,\n                userConf : {...state.userConf,server :action.payload}\n            } \n        case actionTypes.UPDATE_LDAP:\n            return{\n                ...state,\n                userConf : {...state.userConf,ldap :action.payload}\n            } \n        case actionTypes.UPDATE_CONF_SERVER_LIST:\n            return{\n                ...state,\n                userConf : {...state.userConf,confServerList :action.payload}\n            } \n        case actionTypes.UPDATE_LDAP_ALLUSER_LIST:\n            return{\n                ...state,\n                userConf : {...state.userConf,ldapAllUserList :action.payload}\n            } \n        case actionTypes.UPDATE_LDAP_USER:\n            return{\n                ...state,\n                userConf : {...state.userConf,ldap:{...state.userConf.ldap,user:action.payload}}\n            } \n        case actionTypes.UPDATE_LDAP_FETCH:\n            return{\n                ...state,\n                userConf : {...state.userConf,ldap:{...state.userConf.ldap,fetch:action.payload}}\n            }  \n        case actionTypes.ADD_ADDROLE:\n            state.userConf.addRole[action.payload]=true;\n            return{\n                ...state,\n                userConf : {...state.userConf,addRole:state.userConf.addRole}\n            }   \n        case actionTypes.EDIT_ADDROLES:\n            if(state.userConf.addRole[action.payload]===undefined)state.userConf.addRole[action.payload]=true;\n            else state.userConf.addRole[action.payload]=!state.userConf.addRole[action.payload];\n            return{\n                ...state,\n                userConf : {...state.userConf,addRole:state.userConf.addRole}\n            }\n        case actionTypes.RESET_VALUES:\n            return{\n                ...state,\n                userConf : {...state.userConf,\n                    userId:\"\",\n                    userName: \"\",\n                    userIdName: \"\",\n                    firstname: \"\",\n                    lastname: \"\",\n                    passWord: \"\",\n                    confirmPassword: \"\",\n                    email: \"\",\n                    role: \"\",\n                    allRoles: [],\n                    nocreate: false,\n                    confExpired: false,\n                    ldapUserFilter: \"\",\n                    ldapAllUserList: \"\",\n                    allUserFilter: \"\"\n                }\n            } \n            case actionTypes.UPDATE_DATA:\n                return{\n                    ...state,\n                    userConf : {...state.userConf,\n                        userId:action.payload.userid,\n                        userName: action.payload.username,\n                        userIdName: action.payload.userid+\";\"+action.payload.username,\n                        firstname: action.payload.firstname,\n                        lastname: action.payload.lastname,\n                        passWord: \"\",\n                        confirmPassword: \"\",\n                        rolename: action.payload.rolename,\n                        email: action.payload.email,\n                        role: action.payload.role,\n                        type: action.payload.type,\n                        confExpired: false,\n                    }\n                }  \n            case actionTypes.UPDATE_LDAP_DATA:\n                return{\n                    ...state,\n                    userConf : {...state.userConf,\n                        userName: action.payload.username,\n                        firstname: action.payload.firstname,\n                        lastname: action.payload.lastname,\n                        email: action.payload.email,\n                        ldap:{...state.userConf.ldap,user:action.payload.ldapname},\n                        nocreate: false,\n                    }\n                }                                             \n        default: return state     \n    }\n}\n\nexport default reducer;","import * as actionTypes from './action.js';\n\nconst initialState = {\n    tasksJson: {},\n    FD: {},\n    CT: {},\n    RD: {\n        'cycleid': undefined,\n        'releaseid': undefined,\n        'testsuiteid': undefined,\n        'projectid': undefined,\n        'testsuitename': undefined\n    }\n}\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type){\n        case actionTypes.SET_TASKSJSON:\n            return {\n                ...state, tasksJson: action.payload\n            }\n        case actionTypes.SET_FD:\n                return {\n                    ...state, FD: action.payload\n                }\n        case actionTypes.SET_CT:\n            return {\n                ...state, CT: action.payload\n            }\n        case actionTypes.UPDATE_REPORTDATA:\n            var data = action.payload.testSuiteDetails[0]\n            return{\n                ...state, \n                RD: {\n                    'cycleid': data.cycleid,\n                    'releaseid': data.releaseid,\n                    'testsuiteid': data.testsuiteid,\n                    'projectid': data.projectid,\n                    'testsuitename': data.testsuitename\n                }\n            }\n        case actionTypes.CLEAR_REPORTDATA:\n            return{\n                ...state,\n                RD: initialState.RD\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer;","import * as actionTypes from './action.js';\n\nconst initialState = {\n    projectList : {},\n    moduleList: [],\n    screenData: {testCaseList:[],screenList:[]},\n    selectedProj: undefined,\n    searchModule: undefined,\n    initEnEProj: undefined,\n    selectedModule: {},\n    selectBoxState: false,\n    selectNodes: {nodes:[],links:[]},\n    copyNodes: {nodes:[],links:[]},\n    deletedNodes: [],\n    scenarioList:[],\n    importData:{createdby:undefined,data:undefined},\n    unassignTask:[]\n};\n\nconst reducer = (state = initialState , action) => {\n    switch (action.type) {\n        case actionTypes.UPDATE_SCREENDATA:\n            return{\n                ...state,\n                screenData:action.payload\n            }\n        case actionTypes.UPDATE_PROJECTLIST:\n            return{\n                ...state,\n                projectList: action.payload\n            }\n        case actionTypes.SELECT_PROJECT:\n            return{\n                ...state,\n                selectedProj: action.payload\n            }  \n        case actionTypes.INIT_ENEPROJECT:\n            return{\n                ...state,\n                initEnEProj: action.payload\n            }   \n        case actionTypes.UPDATE_MODULELIST:\n            return{\n                ...state,\n                moduleList: action.payload\n            }\n        case actionTypes.SEARCH_MODULELIST:\n            return{\n                ...state,\n                searchModule: action.payload\n            }\n        case actionTypes.SELECT_MODULE:\n            return{\n                ...state,\n                selectedModule: action.payload\n            }\n        case actionTypes.SELECT_SELECTBOX:\n            return{\n                ...state,\n                selectBoxState: action.payload\n            }\n        case actionTypes.UPDATE_SELECTNODES:\n            return{\n                ...state,\n                selectNodes: action.payload\n            }\n        case actionTypes.UPDATE_COPYNODES:\n            return{\n                ...state,\n                copyNodes: action.payload\n            }\n        case actionTypes.UPDATE_DELETENODES:\n            return{\n                ...state,\n                deletedNodes: action.payload\n            }   \n        case actionTypes.UPDATE_SCENARIOLIST:\n            return{\n                ...state,\n                scenarioList: action.payload\n            }\n        case actionTypes.SAVE_MINDMAP :\n            return{\n                ...state,\n                screenData: action.payload.screendata,\n                deletedNodes: [],\n                moduleList: action.payload.moduledata,\n                selectedModule: {},\n                scenarioList:[],\n                unassignTask:[]\n            }\n        case actionTypes.UPDATE_UNASSIGNTASK:\n            return{\n                ...state,\n                unassignTask: action.payload\n            }\n        case actionTypes.IMPORT_MINDMAP:\n            var res = action.payload\n            return{\n                ...state,\n                selectedProj : res.selectProj,\n                selectedModule : res.selectModule,\n                screenData : res.screenData,\n                moduleList : res.moduleList,\n                importData : res.importData\n            }\n        default: \n            return state\n    }\n}\n\nexport default reducer;","import * as actionTypes from './action';\n\nconst initialState = {\n    ScrapeData : [],\n    disableAction: false,\n    disableAppend: false,\n    compareFlag: false,\n    compareData: {},\n    compareObj: {changedObj: [], notChangedObj: [], notFoundObj: []},\n    objValue: { val: null },\n    cert: {},\n    WsData: {\n        endPointURL: \"\",\n        method: \"0\",\n        opInput: \"\",\n        reqHeader: \"\",\n        reqBody: \"\",\n        respHeader: \"\",\n        respBody: \"\",\n        paramHeader: \"\",\n    },\n    wsdlError: [],\n    actionError: []\n}\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type){\n        case actionTypes.SET_SCRAPEDATA:\n            return {\n                ...state, ScrapeData: action.payload\n            }\n        case actionTypes.SET_DISABLEACTION:\n            return {\n                ...state, disableAction: action.payload\n            }\n        case actionTypes.SET_DISABLEAPPEND:\n                return {\n                    ...state, disableAppend: action.payload\n                }\n        case actionTypes.SET_COMPAREFLAG:\n                return {\n                    ...state, compareFlag: action.payload\n                }\n        case actionTypes.SET_COMPAREDATA:\n                return {\n                    ...state, compareData: action.payload\n                }\n        case actionTypes.SET_COMPAREOBJ:\n                return {\n                    ...state, compareObj: action.payload\n                }\n        case actionTypes.SET_OBJVAL:\n            return {\n                ...state, objValue: action.payload\n            }\n        case actionTypes.SET_CERT:\n            return {\n                ...state, cert: action.payload\n            }\n        case actionTypes.SET_WSDATA:\n            return {\n                ...state, WsData: { ...state.WsData, ...action.payload}\n            }\n        case actionTypes.SET_WSDLERROR:\n            return {\n                ...state, wsdlError: action.payload\n            }\n        case actionTypes.SET_ACTIONERROR:\n            return {\n                ...state, actionError: action.payload\n            }\n        case actionTypes.RESET_COMPARE:\n            return {\n                ...state, \n                compareObj: {changedObj: [], notChangedObj: [], notFoundObj: []},\n                compareFlag: false,\n                compareData: {}\n            }\n                \n        default:\n            return state\n    }\n}\n\nexport default reducer;","import * as actionTypes from './action'\n\nconst initialState = {\n    copiedTestCases: {},\n    testCases: [],\n    modified: {},\n    saveEnable: false,\n};\n\nconst reducer = (state = initialState , action) => {\n    switch (action.type) {\n        case actionTypes.SET_COPYTESTCASES:\n            return {\n                ...state, copiedTestCases: action.payload,\n            }\n        case actionTypes.SET_TESTCASES:\n            return {\n                ...state, testCases: action.payload,\n            }\n        case actionTypes.SET_MODIFIED:\n            return {\n                ...state, modified: action.payload,\n            }\n        case actionTypes.SET_SAVEENABLE:\n            return {\n                ...state, saveEnable: action.payload,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from './action.js';\n\nconst initialState = {\n    moduleList : [],\n    suiteDetails : [],\n    suiteSelected : {_id:undefined,name:\"\"}\n}\n\nconst reducer = (state = initialState , action) => {\n    switch (action.type) {\n        case actionTypes.UPDATE_MODULELIST:\n            return{\n                ...state,\n                moduleList:action.payload,\n                suiteSelected:{_id:undefined,name:\"\"}\n            }\n        case actionTypes.UPDATE_SUITEDETAILS:\n            return{\n                ...state,\n                suiteDetails:action.payload.suiteDetails,\n                suiteSelected:action.payload.suiteID\n            }\n        case actionTypes.RESET_DETAILS:\n            return{\n                ...state,\n                suiteDetails:[],\n                moduleList:[],\n                suiteSelected:{_id:undefined,name:\"\"}\n            }\n        default: \n            return state\n    }\n}\n\nexport default reducer;","import * as actionTypes from './action.js';\n\nconst initialState = {\n    mappedScreenType : null,\n    screenType: null,\n    showPop: false,\n    showOverlay: \"\",\n    mappedFiles: [],\n    selectedTCDetails: {\n        selectedTCNames: [],\n        selectedTSNames: [],\n        selectedFolderPaths: []\n    },\n    selectedTestCase: [],\n    selectedScenarioIds: [],\n    syncedTestCases: [],\n    mappedPair: [],\n};\n\nconst reducer = (state = initialState , action) => {\n    switch (action.type) {\n        case actionTypes.VIEW_MAPPED_SCREEN_TYPE:\n            return{\n                ...state,\n                mappedScreenType: action.payload\n            }\n        case actionTypes.INTEGRATION_SCREEN_TYPE:\n            return{\n                ...state,\n                screenType: action.payload\n            }\n        case actionTypes.SHOW_POPUP:\n            return{\n                ...state,\n                showPop: action.payload\n            }\n        case actionTypes.SHOW_OVERLAY:\n            return{\n                ...state,\n                showOverlay: action.payload\n            }\n        case actionTypes.MAPPED_FILES:\n            return{\n                ...state,\n                mappedFiles: action.payload\n            }\n        case actionTypes.SEL_TC_DETAILS:\n            return{\n                ...state,\n                selectedTCDetails: action.payload\n            }\n        case actionTypes.SEL_SCN_IDS:\n            return{\n                ...state,\n                selectedScenarioIds: action.payload\n            }\n        case actionTypes.SYNCED_TC:\n            return{\n                ...state,\n                syncedTestCases: action.payload\n            }\n        case actionTypes.MAPPED_PAIR:\n            return{\n                ...state,\n                mappedPair: action.payload\n            }\n        case actionTypes.SEL_TC:\n            return{\n                ...state,\n                selectedTestCase: action.payload\n            }\n        default: \n            return state\n    }\n}\n\nexport default reducer;","import { createStore, combineReducers } from 'redux';\nimport { persistStore, persistReducer, createTransform} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport progressBarReducer from \"./pages/global/state/reducer.js\";\nimport LoginReducer from './pages/login/state/reducer.js';\nimport adminReducer from './pages/admin/state/reducer.js';\nimport pluginReducer from './pages/plugin/state/reducer.js';\nimport mindmapReducer from './pages/mindmap/state/reducer.js';\nimport scrapeReducer from './pages/scrape/state/reducer.js';\nimport designReducer from './pages/design/state/reducer.js';\nimport reportReducer from './pages/report/state/reducer.js';\nimport integrationReducer from './pages/integration/state/reducer.js';\n\n\nexport const JSOGTransform = createTransform(\n  (inboundState, key) => {\n    if(key === 'login')inboundState.socket = undefined; //presisting socket gets circular json stringify error\n    return inboundState\n  },\n  (outboundState, key) => outboundState,\n)\n\nconst persistConfig = {\n    key: 'login',\n    storage: storage,\n    whitelist: ['login', 'plugin'], //reducer that needs to be saved for refresh\n    transforms: [JSOGTransform]\n  };\n\n/* combining multiple domains reducer */\nexport const rootReducer = combineReducers({\n    mindmap : mindmapReducer,\n    progressbar : progressBarReducer,\n    login : LoginReducer,\n    admin : adminReducer,\n    plugin : pluginReducer,\n    scrape : scrapeReducer,\n    design : designReducer,\n    report: reportReducer,\n    integration: integrationReducer\n});\n  \nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(pReducer)\nexport const persistor = persistStore(store);\n","export const SET_PROGRESS = \"SET_PROGRESS\";\nexport const SWITCHED = \"ROLE_SWITCHED\";","export const SET_COPYTESTCASES = \"D_SET_COPYTESTCASES\"\nexport const SET_TESTCASES = \"D_SET_TESTCASES\"\nexport const SET_MODIFIED = \"D_SET_MODIFIED\"\nexport const SET_SAVEENABLE = \"D_SET_SAVEENABLE\"","import React from 'react';\nimport \"../styles/FooterTwo.scss\"\n\n/*\n    Component: Footer\n    Uses: Provides Footer with text on left and right\n    Props: None\n\n*/\n\nconst Footer = () => {\n    return (\n        <div className=\"main-footer\">\n            <div className=\"main-footer-content\">\n            <span className=\"right-text\">\n                © {new Date().getFullYear()}  Avo Automation. All Rights Reserved\n            </span>\n            <span className=\"left-text\">\n                Powered By\n                <img className=\"footer-logo_two\" alt=\"logo\" src=\"static/imgs/ftr-avo-logo.png\"/>\n            </span>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;","import React, { useState } from 'react';\nimport { ModalContainer } from '../../global';\nimport { resetPassword } from '../api';\nimport '../styles/ChangePassword.scss';\n\n/*\n    Component: Change Password Modal Popup\n    Uses: Renders the modal Popup for changing password\n    Props: setShow -> setState for displaying and hiding modal\n            setSuccessPass -> successPass setState to flip the flag once change pass is success\n            loginPopup -> when user opening changepassword from login not from header\n            loginCurrPassword -> email temporary password (forgot password)\n*/\n\nconst ChangePassword = ({setShow, setSuccessPass,loginPopup,loginCurrPassword}) => {\n\n    const [currpassword, setCurrPassword] = useState(\"\");\n    const [newpassword, setNewPassword] = useState(\"\");\n    const [confpassword, setConfPassword] = useState(\"\");\n    const [currPassError, setCurrPassError] = useState(false);\n    const [newPassError, setNewPassError] = useState(false);\n    const [confPassError, setConfPassError] = useState(false);\n    const [passwordValidation, setPasswordValid] = useState(\"\");\n\n    const handleClose = () => setShow(false);\n    const showSuccessPopup = () => setSuccessPass(true);\n\n    const currPassHandler = event => {\n        let val = event.target.value.replace(/\\s/g, \"\");\n        resetErrorFlags();\n        setCurrPassword(val);\n    }\n\n    const newPassHandler = event => {\n        let val = event.target.value.replace(/\\s/g, \"\");\n        resetErrorFlags();\n        setNewPassword(val);\n    }\n\n    const confPasshandler = event => {\n        let val = event.target.value.replace(/\\s/g, \"\");\n        resetErrorFlags();\n        setConfPassword(val);\n    }\n\n\n     const resetFields = event => {\n        event.preventDefault();\n\t\tsetCurrPassword(\"\");\n\t\tsetNewPassword(\"\");\n\t\tsetConfPassword(\"\");\n\t\tresetErrorFlags();\n    };\n    \n    const resetErrorFlags = () => {\n        setCurrPassError(false);\n        setNewPassError(false);\n        setConfPassError(false);\n        setPasswordValid(\"\");\n    }\n    \n    const resetPass = event => {\n        event.preventDefault();\n        resetErrorFlags();\n        \n        let regexPassword = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]).{8,16}$/;\n\t\tif (loginCurrPassword===undefined && !currpassword) {\n\t\t\tsetCurrPassError(true);\n\t\t\tsetPasswordValid(\"Current Password field is empty.\");\n\t\t} else if (!newpassword) {\n\t\t\tsetNewPassError(true);\n\t\t\tsetPasswordValid(\"New Password field is empty.\");\n\t\t} else if (!regexPassword.test(newpassword)) {\n\t\t\tsetNewPassError(true);\n\t\t\tsetPasswordValid(\"Password must contain atleast 1 special character, 1 numeric, 1 uppercase and lowercase, length should be minimum 8 characters and maximum 16 characters..\");\n\t\t} else if (!confpassword) {\n\t\t\tsetConfPassError(true);\n\t\t\tsetPasswordValid(\"Confirm Password field is empty.\");\n\t\t} else if (newpassword !== confpassword) {\n\t\t\tsetConfPassError(true);\n\t\t\tsetPasswordValid(\"New Password and Confirm Password do not match\");\n\t\t} else {\n            const currentPass = loginCurrPassword!==undefined?loginCurrPassword:currpassword;\n\t\t\tresetPassword(newpassword, currentPass)\n\t\t\t.then(data => {\n                if(data === \"Invalid Session\") setPasswordValid(\"Invalid Session\")\n                else if(data === \"success\") {\n\t\t\t\t\thandleClose();\n\t\t\t\t\tshowSuccessPopup();\n\t\t\t\t} else if(data === \"same\"){\n\t\t\t\t\tsetNewPassError(true);\n\t\t\t\t\tsetConfPassError(true);\n\t\t\t\t\tsetPasswordValid(\"Sorry! You can't use the existing password again\");\n\t\t\t\t} else if(data === \"incorrect\") {\n\t\t\t\t\tsetCurrPassError(true);\n\t\t\t\t\tsetPasswordValid(\"Current Password is incorrect\");\n                } else if(data === \"reusedPass\" || data === \"insuff\" || data === \"same\") {\n\t\t\t\t\tsetNewPassError(true);\n\t\t\t\t\tsetConfPassError(true);\n\t\t\t\t\tif (data === \"same\") setPasswordValid(\"New Password provided is same as old password\");\n\t\t\t\t\telse if (data === \"insuff\") setPasswordValid(\"Password must contain atleast 1 special character, 1 numeric, 1 uppercase and lowercase alphabet, length should be minimum 8 characters and maximum 16 characters.\");\n\t\t\t\t\telse setPasswordValid(\"Password provided does not meet length, complexity or history requirements of application.\");\n\t\t\t\t} else if(data === \"fail\") setPasswordValid(\"Failed to Change Password\")\n\t\t\t\telse if(/^2[0-4]{10}$/.test(data)) setPasswordValid(\"Invalid Request\")\n            })\n            .catch(error => {\n\t\t\t\tsetCurrPassError(true);\n\t\t\t\tsetPasswordValid(\"Failed to Authenticate Current Password.\");\n\t\t\t});\n\t\t}\n    };\n\n    const Content = () => (\n        <div className=\"pass_inputs_container\">\n            {loginPopup===undefined?<input className={\"reset_pass_inputs \" + (currPassError ? \"error_reset_field\" : \"\")} placeholder=\"Current Password\" type=\"password\" onChange={currPassHandler} value={currpassword} />:null}\n            <input className={\"reset_pass_inputs \" + (newPassError ? \"error_reset_field\" : \"\")} placeholder=\"New Password\" type=\"password\" onChange={newPassHandler} value={newpassword} />\n            <input className={\"reset_pass_inputs \" + (confPassError ? \"error_reset_field\" : \"\")} placeholder=\"Confirm Password\" type=\"password\" onChange={confPasshandler} value={confpassword}/>\n            <span className={\"pass_valid_err \" + (passwordValidation ? \"\" : \"hide_pass_valid\")}>{passwordValidation ? passwordValidation : \"none\"}</span>\n        </div>\n    );\n\n    const Footer = () => (\n        <div className=\"reset_dialog_btns\">\n            <button className=\"clear_reset_fields\" onClick={resetFields}>Clear</button>\n            <button className=\"submit_reset\" onClick={resetPass}>Submit</button>\n        </div>\n    );\n\n    return (\n        <ModalContainer\n        close={handleClose}\n        title={\"Change Password\"}\n        content={Content()}\n        footer={Footer()}\n        />\n    );\n}\n\nexport default ChangePassword;","\nimport React, { useRef, useState, useEffect } from 'react';\nimport Datetime from \"react-datetime\";\nimport ClickAwayListener from 'react-click-away-listener';\nimport '../styles/TimeComp.scss'\n\n\n/*Component TimeComp\n  use: returns Time component\n  props : {setTime:state,time:datevalue,disaled:boolean,classTimer:string,error:boolean}\n*/\n\nconst TimeComp = (props) => {\n\n    const [showTime, setShowTime] = useState(false);\n\n    const timeRef = useRef()\n    const setTime = props.setTime\n    const timeVal = props.time\n    const classTimer = props.classTimer\n    const inputProps = props.inputProps\n    const disabled = props.disabled\n    const setCloseCal = props.setCloseCal\n    const closeCal = props.closeCal\n    const inputPropsDefault = {\n\t\tplaceholder: \"Select Time\",\n\t\treadOnly:\"readonly\" ,\n        className:\"fc-timePicker\"\n    };\n\n    useEffect(()=>{\n        if(closeCal)setShowTime(false)\n    },[closeCal])\n\n    const submit = (event) => {\n        var prevTime = event._i.split(\":\");\n        var newTime = event.format(\"HH:mm\").split(\":\");\n        if(prevTime[1] === \"00\" && newTime[1] === \"59\") {\n            if(newTime[0][0]===\"0\"){\n                if(newTime[0][1]===\"0\") setTime(\"23:\"+newTime[1]);\n                else setTime(\"0\"+JSON.stringify(JSON.parse(newTime[0][1])-1)+\":\"+newTime[1]);\n            }\n            else setTime(JSON.stringify(JSON.parse(newTime[0])-1)+\":\"+newTime[1]);\n        } else if(prevTime[1] === \"59\" && newTime[1] === \"00\") {\n            if(newTime[0][0]===\"0\"){\n                if(newTime[0][1]===\"9\") setTime(JSON.stringify(JSON.parse(newTime[0][1])+1)+\":\"+newTime[1]);\n                else setTime(\"0\"+JSON.stringify(JSON.parse(newTime[0][1])+1)+\":\"+newTime[1]);\n            }\n            else if(newTime[0]===\"23\") setTime(\"00:\"+newTime[1]);\n            else setTime(JSON.stringify(JSON.parse(newTime[0])+1)+\":\"+newTime[1]);\n        }\n        else setTime(event.format(\"HH:mm\"))\n    }\n\n    const onOpen = ()=> {\n        if(disabled)return;\n        setShowTime(true);\n        setCloseCal && setCloseCal(false);\n        \n        if (props.screen === \"scheduleSuiteTop\"){\n            let suiteHeader = document.getElementById(`ss-id${props.idx}`);\n            if (suiteHeader) {\n                const picker = suiteHeader.getElementsByClassName(\"rdtPicker\");\n                if (picker.length === 2){\n                    let offset = `${suiteHeader.getBoundingClientRect().y + suiteHeader.getBoundingClientRect().height}px`\n                    picker[0].style.top = offset;\n                }\n            }\n        }\n    }\n\n    return(\n        <ClickAwayListener onClickAway={()=> setShowTime(false)} className={\"time-container \" + (classTimer? \" \"+classTimer:\"\")} as=\"span\">\n            <Datetime\n                value={timeVal} \n                onChange={submit}\n                open={showTime}\n                inputProps={inputProps!==undefined?inputProps:inputPropsDefault} \n                id=\"time-token\"\n                ref={timeRef} \n                dateFormat={false} \n                timeFormat=\"HH:mm\" \n                onOpen={onOpen}\n            />\n            <img onClick={onOpen} className=\"timepickerIconToken\" src={\"static/imgs/ic-timepicker.png\"} alt=\"timepicker\" />\n        </ClickAwayListener>\n    )\n}\n\nexport default TimeComp","import React, { useState, useEffect } from 'react';\nimport { ModalContainer, ScreenOverlay, PopupMsg } from '../../global';\nimport { getUserICE,setDefaultUserICE } from '../api';\nimport '../styles/ChangeDefaultIce.scss';\n\n/*\n    Component: Change Default Ice Modal Popup\n    Uses: Renders the modal Popup for changing default Ice\n    Props: setShowModal -> setState for displaying and hiding modal\n\n*/\n\nconst ChangeDefaultIce = ({}) => {\n\n    const [chooseDefICE, setChooseDefICE] = useState([])\n    const [defICE, setDefICE] = useState(\"\")\n    const [loading,setLoading] = useState(false)\n    const [showPopup,setShowPopup] = useState(false)\n    const [popupState,setPopupState] = useState({show:false,title:\"\",content:\"\"})\n\n    useEffect( ()=>{\n        fetchIce();\n    }, []);\n   \n    const fetchIce = async () => {\n        setLoading(\"Fetching ICE ...\");\n        try{\n            const data = await getUserICE();\n            setLoading(false);\n            if(data == 'fail'){\n                setPopupState({show:true,title:\"Change Default ICE\",content:unavailableLocalServer_msg});\n            }\n            else{\n                if(!data.ice_list || data.ice_list.length<1){\n                    setPopupState({show:true,title:\"Change Default ICE\",content:unavailableLocalServer_msg});\n                    return;\n                } else {\n                    setChooseDefICE(data.ice_list);\n                    setDefICE(data.ice_list[0]);\n                    setShowPopup(true);\n                }\n            }\n        }catch(error){\n            setLoading(false)\n            console.error(error)\n            setPopupState({show:true,title:\"Change Default ICE\",content:unavailableLocalServer_msg});\n        }\n    };\n\n    const Content = () => (\n        <div className=\"defIce_inputs_container\">\n            <span className=\"leftControl defIce-span \" title=\"Token Name\">Select Default ICE :</span>\n            <select id='chooseDefICE'>\n                {chooseDefICE.map((e,index)=>(\n                    <option key={index} value={e} onClick={()=>{setDefICE(e)}} >{e}</option>\n                ))}\n            </select>\n        </div>\n    );\n\n    const Footer = () => (\n        <div >\n            <button onClick={()=>{changeDefICEClick()}}>Submit</button>\n        </div>\n    );\n\n    const changeDefICEClick = async () =>{\n\t\tsetLoading(\"Setting Default ICE ...\")\n        setShowPopup(false);\n\t\tvar ice = defICE;\n\t\ttry{\n            const data = await setDefaultUserICE(ice);\n            setLoading(false);\n\t\t\tif(data == 'success'){\n                setPopupState({show:true,title:\"Change Default ICE\",content:\"Changed default ICE successfully\"});\n\t\t\t}else{\n                setPopupState({show:true,title:\"Change Default ICE\",content:\"Failed to change default ICE\"});\n            }\n\t\t}catch(error){\n            setLoading(false)\n\t\t\tconsole.error(error)\n\t\t\tsetPopupState({show:true,title:\"Change Default ICE\",content:\"Failed to change default ICE\"});\n\t\t}\n\t}\n\n    return (\n        <>\n            {showPopup?\n                <ModalContainer\n                    close={()=>{setShowPopup(false);}}\n                    title={\"Change Default ICE\"}\n                    content={Content()}\n                    footer={Footer()}\n                    modalClass={\" modal-md\"}\n                />\n            :null}\n            {popupState.show?<PopupMsg content={popupState.content} title={popupState.title} submit={()=>{setPopupState({show:false})}} close={()=>{setPopupState({show:false})}} submitText={\"Ok\"} />:null}\n            {loading?<ScreenOverlay content={loading}/>:null}\n        </>   \n    );\n}\n\nconst unavailableLocalServer_msg = \"No Intelligent Core Engine (ICE) connection found with the Avo Assure logged in username. Please run the ICE batch file once again and connect to Server.\";\n\nexport default ChangeDefaultIce;","import React, { Fragment, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actionTypes from '../../login/state/action';\nimport { ScrollBar } from '../../global';\nimport '../styles/NotifyDropDown.scss'\n\n/*Component NotifyDropDown\n  use: renders notification dropdown imported in Header.js\n*/\n\nconst NotifyDropDown = ({show}) =>{\n    const dispatch = useDispatch();\n    const notify = useSelector(state=>state.login.notify.data)\n    useEffect(()=>{\n        if(show){\n            dispatch({type: actionTypes.UPDATE_NOTIFY_COUNT, payload: 0});\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[show])\n    const clearAll = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if(e.nativeEvent){\n            e.nativeEvent.stopImmediatePropagation()\n        }\n        dispatch({type: actionTypes.CLEAR_NOTIFY, payload: 'all'});\n    }\n    return(\n        <div id='notify-dropdown' className={'dropdown-menu'+(show?' show':'')}>\n            <div id='message-box-notify' className='message-box'>\n            <ScrollBar thumbColor={'grey'} verticalbarWidth={'5px'} scrollId='message-box-notify'>\n                {\n                    (notify.length>0)?\n                    <Fragment>\n                        <span onClick={clearAll} className='clear'>Clear</span>\n                        {notify.map((e,i)=>(\n                        <div key={i+'notify'} className='message' style={{borderBottom:(i === notify.length-1)?'none':'1px solid #eee'}}>\n                            <span>Received on: {e.dateTime} </span><br/>\n                            <span> {e.notifyMsg} </span>\n                        </div>\n                        ))}\n                    </Fragment>:\n                    <div key={'notify'} className='message' style={{textAlign:'center'}}>\n                        <span>No new notifications</span>\n                    </div>\n                }\n            </ScrollBar>\n            </div>\n        </div>\n    )\n}\n\nexport default NotifyDropDown;","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory, Link, Redirect } from 'react-router-dom';\nimport { loadUserInfo } from '../../login/api';\nimport { getRoleNameByRoleId } from '../api';\nimport * as actionTypes from '../../login/state/action';\nimport { SWITCHED } from '../state/action';\nimport ClickAwayListener from 'react-click-away-listener';\nimport ChangePassword from './ChangePassword';\nimport ChangeDefaultIce from './ChangeDefaultIce';\nimport { persistor } from '../../../reducer';\nimport NotifyDropDown from './NotifyDropDown';\nimport { RedirectPage, PopupMsg, ModalContainer, ScreenOverlay } from '../../global';\nimport \"../styles/Header.scss\";\n\n/*\n    Component: Header Bar\n    Uses: Provides header functionality to the page\n    Props: None\n\n*/\n\nconst Header = () => {\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [username, setUsername] = useState(null);\n    const [showChangePass, setShowChangePass] = useState(false);\n    const [showChangeDefaultIce, setShowChangeDefaultIce] = useState(false);\n    const [showSuccessPass, setSuccessPass] = useState(false);\n    const [showUD, setShowUD] = useState(false);\n    const [showSR, setShowSR] = useState(false);\n    const [roleList, setRoleList] = useState([]);\n    const [adminDisable, setAdminDisable] = useState(false);\n    const [showConfSR, setShowConfSR] = useState(false);\n    const [showSR_Pop, setShowSR_Pop] = useState(\"\");\n    const [clickedRole, setClickedRole] = useState(null);\n    const [showOverlay, setShowOverlay] = useState(\"\");\n    const [redirectTo, setRedirectTo] = useState(\"\");\n    const [clickNotify,setClickNotify] = useState(false)\n    const userInfo = useSelector(state=>state.login.userinfo);\n    const selectedRole = useSelector(state=>state.login.SR);\n    // const roleSwitched = useSelector(state=>state.progressbar.roleSwitched);\n    const notifyCnt = useSelector(state=>state.login.notify.unread)\n\n    useEffect(()=>{\n        //on Click back button on browser\n        window.addEventListener('popstate', (e)=> {\n            logout(e)\n        })\n    },[])\n    useEffect(()=>{\n        if(Object.keys(userInfo).length!==0){\n            if ([userInfo.rolename, selectedRole].includes(\"Admin\")) setAdminDisable(true); \n            if (userInfo.firstname === userInfo.lastname) setUsername(userInfo.firstname);\n            else setUsername(userInfo.firstname + ' ' + userInfo.lastname);\n        }\n    }, [userInfo, selectedRole]);\n\n    const naviPg = () => {\n        window.localStorage['navigateScreen'] = \"plugin\";\n        history.replace('/plugin');\n    };\n    \n    const logout = event => {\n        event.preventDefault();\n        persistor.purge();\n\t\twindow.sessionStorage.clear();\n\t\twindow.sessionStorage[\"checkLoggedOut\"] = true;\n        RedirectPage(history);\n    };\n    \n    const getIce = async () => {\n\t\ttry {\n\t\t\tconst res = await fetch(\"/AvoAssure_ICE.zip\");\n\t\t\tconst status = await res.text();\n\t\t\tif (status === \"available\") window.location.href = window.location.origin+\"/AvoAssure_ICE.zip?file=getICE\"\n\t\t\telse setShowSR_Pop({'title': 'Download Avo Assure ICE', 'content': 'Package is not available'})\n\t\t} catch (ex) {\n\t\t\tconsole.error(\"Error while downloading ICE package. Error:\", ex);\n\t\t\tsetShowSR_Pop({'title': 'Download Avo Assure ICE', 'content': 'Package is not available'})\n\t\t}\n\t}\n\n    const switchRole = () => {\n\t\tlet roleasarray = userInfo.additionalrole;\n\t\tif (roleasarray.length === 0) {\n\t\t\tsetShowSR(false);\n\t\t\tsetShowSR_Pop({'title': 'Switch Role', 'content': \"There are no roles to switch\"});\n\t\t} else {\n\t\t\tgetRoleNameByRoleId(roleasarray)\n\t\t\t.then(data => {\n\t\t\t\tif (data === \"Invalid Session\") {\n                    RedirectPage(history);\n\t\t\t\t} else {\n                    setRoleList([]);\n                    data[userInfo.role] = userInfo.rolename;\n                    let tempList = [];\n\t\t\t\t\tfor (let rid in data) {\n\t\t\t\t\t\tif (data[rid] !== selectedRole) tempList.push({'rid': rid, 'data': data[rid]})\n                    }\n                    setRoleList(tempList);\n                    setShowSR(true);\n\t\t\t\t}\n            })\n            .catch(error=>{\n                setShowSR(false);\n                console.error(\"Failed to Fetch Role Names. ERROR::\", error)\n                setShowSR_Pop({'title': 'Switch Role', 'content': \"Failed to Fetch Role Names\"});\n            });\n\t\t}\n    };\n    \n    const resetPass = () => {\n        setShowUD(false);\n        setShowChangePass(!showChangePass);\n    };\n\n    const chngDftIce = () => {\n        setShowUD(false);\n        setShowChangeDefaultIce(true);\n    };\n\n    const resetSuccess = () => {\n        setSuccessPass(false);\n\t\twindow.sessionStorage.clear();\n\t\twindow.sessionStorage[\"checkLoggedOut\"] = true;\n        RedirectPage(history);\n    };\n\n    const toggleChangePass = () => setShowChangePass(!showChangePass);\n    const onClickAwayUD = () => setShowUD(false);\n    const onClickAwaySR = () => setShowSR(false);\n\n\n    const switchedRole = event => {\n        setShowConfSR(false);\n        setShowOverlay(`Switching to ${clickedRole.data}`)\n\t\tloadUserInfo(clickedRole.rid)\n\t\t.then(data => {\n            setShowOverlay(\"\");\n\t\t\tif (data !== \"fail\") {\n                dispatch({type: actionTypes.SET_SR, payload: clickedRole.data});\n                dispatch({type: actionTypes.SET_USERINFO, payload: data});\n                dispatch({type: SWITCHED, payload: true});\n\t\t\t\tif (clickedRole.data === \"Admin\") {\n\t\t\t\t\twindow.localStorage['navigateScreen'] = \"admin\";\n                    setRedirectTo('/admin');\n                } else {\n\t\t\t\t\twindow.localStorage['navigateScreen'] = \"plugin\";\n                    setRedirectTo(\"/plugin\");\n                }\n\t\t\t} else {\n                console.error(\"Fail to Switch User\");\n                setShowSR_Pop({'title': 'Switch Role', 'content': \"Fail to Switch User\"});\n\t\t\t}\n        })\n        .catch(error=> {\n            setShowOverlay(\"\");\n            console.error(\"Fail to Switch User. ERROR::\", error);\n            setShowSR_Pop({'title': 'Switch Role', 'content': \"Fail to Switch User\"});\n\t\t});\n\t};\n\n    const PasswordSuccessPopup = () => (\n        <PopupMsg \n            title={\"Change Password\"}\n            close={()=>setSuccessPass(false)}\n            content={\"Password change successfull! Please login again with new password\"}\n            submitText={\"OK\"}\n            submit={resetSuccess}\n        />\n    );\n\n    const SRPopup = () => (\n        <PopupMsg \n            title={showSR_Pop.title}\n            content={showSR_Pop.content}\n            submitText=\"OK\"\n            close={()=>setShowSR_Pop(\"\")}\n            submit={()=>setShowSR_Pop(\"\")}\n        />\n    );\n\n    const showConfPop = (rid, data) =>{\n        setShowSR(false);\n        setClickedRole({'rid':rid, 'data':data});\n        setShowConfSR(true);\n    }\n\n    const ConfSwitchRole = () => (\n        <ModalContainer\n            title=\"Switch Role\"\n            content={`Are you sure you want to switch role to: ${clickedRole.data}`}\n            close={()=>setShowConfSR(false)}\n            footer={\n                <>\n                <button className=\"confirm_sr_yes\" onClick={switchedRole}>Yes</button>\n                <button className=\"confirm_sr_no\" onClick={()=>setShowConfSR(false)}>No</button>\n                </>\n            }\n        />\n    );\n\n    return(\n        <> \n            { redirectTo && <Redirect to={redirectTo} /> }\n            { showChangePass && <ChangePassword setShow={toggleChangePass} setSuccessPass={setSuccessPass} /> }\n            { showChangeDefaultIce && <ChangeDefaultIce /> }\n            { showSuccessPass && <PasswordSuccessPopup /> }\n            { showConfSR && <ConfSwitchRole />  }\n            { showSR_Pop && <SRPopup /> }\n            { showOverlay && <ScreenOverlay content={showOverlay} /> }\n            <div className = \"main-header\">\n                <span className=\"header-logo-span\"><img className={\"header-logo \" + (adminDisable && \"logo-disable\")} alt=\"logo\" src=\"static/imgs/logo.png\" onClick={ !adminDisable ? naviPg : null } /></span>\n                    <div className=\"dropdown user-options\">\n                        { !adminDisable &&\n                        <>\n                        <div className=\"btn-container\">\n                            <ClickAwayListener onClickAway={()=>setClickNotify(false)}>\n                                <button onClick={(e)=>setClickNotify(true)} className=\"fa fa-bell no-border bell-ic notify-btn\">\n                                    {(notifyCnt !== 0) && <span className='notify-cnt'>{notifyCnt}</span>}\n                                </button>\n                                <NotifyDropDown show={clickNotify}/>\n                            </ClickAwayListener>\n                        </div>\n                        <ClickAwayListener onClickAway={onClickAwaySR}>\n                            <div className=\"switch-role-btn no-border\" data-toggle=\"dropdown\" onClick={switchRole} >\n                                <span><img className=\"switch-role-icon\" alt=\"switch-ic\" src=\"static/imgs/ic-switch-user.png\"/></span>\n                                <span>Switch Role</span>\n                            </div>\n                            <div className={ \"switch-role-menu dropdown-menu \" + (showSR && \"show\")}>\n                                {roleList.map(role => \n                                    <div key={role.rid} data-id={role.rid} onClick={()=>showConfPop(role.rid, role.data)} >\n                                        <Link to=\"#\">{role.data}</Link>\n                                    </div>\n                                )}\n                            </div>\n                        </ClickAwayListener>\n                        </>\n                        }\n\n                        <ClickAwayListener onClickAway={onClickAwayUD}>\n                        <div className=\"user-name-btn no-border\" data-toggle=\"dropdown\" onClick={()=>setShowUD(true)}>\n                            <span className=\"user-name\">{username || \"Demo User\"}</span>\n                            <span><img className = \"user-name-icon\" alt=\"user-ic\" src=\"static/imgs/ic-user-nav.png\"/></span>\n                        </div>\n                        <div className={\"user-name-menu dropdown-menu dropdown-menu-right \" + (showUD && \"show\")}>\n                            <div><Link className=\"user-role-item\" to=\"#\">{selectedRole || \"Test Manager\"}</Link></div>\n                            <div className=\"divider\" />\n                            {\n                                !adminDisable &&\n                                <>\n                                <div onClick={getIce} ><Link to=\"#\">Download ICE</Link></div>\n                                <div onClick={chngDftIce} ><Link to=\"#\">Change Default ICE</Link></div>\n                                <div onClick={resetPass}><Link to=\"#\">Change Password</Link></div>\n                                </>\n                            }\n                            <div onClick={logout}><Link to=\"#\">Logout</Link></div>\n                        </div>\n                        </ClickAwayListener>\n                    </div>\n                </div>\n        </>\n    ); \n}\nexport default Header;","import React ,  { Fragment, useEffect, useState, useRef} from 'react';\nimport ClickAwayListener from 'react-click-away-listener';\nimport { ScrollBar } from '../../global';\nimport '../styles/DropDownList.scss'\n\n/*Component DropDownList\n  use: renders searchable available ice dropdown\n*/\n\nconst DropDownList = ({inputErrorBorder, setInputErrorBorder, data,smartMode,selectedICE, setSelectedICE, placeholder, ExeScreen}) => {\n    const inputRef = useRef()\n    const [list,setList] =  useState([])\n    const [dropDown,setDropDown] = useState(false)\n    useEffect(()=>{\n        setList([...data])\n        inputRef.current.value = \"\"\n        if(smartMode==='normal') setSelectedICE(\"\");\n        else setSelectedICE({});\n        // eslint-disable-next-line\n    },[data,smartMode])\n    const inputFilter = () =>{\n        var val = inputRef.current.value\n        var items = [...data].filter((e)=>e.icename.toUpperCase().indexOf(val.toUpperCase())!==-1)\n        setList(items)\n    }\n    const resetField = () => {\n        inputRef.current.value = \"\"\n        setList([...data])\n        setDropDown(true)\n        // if(clickInp)clickInp()\n    }\n\n    const selectOption = (icename, event) =>{\n        if(smartMode!=='normal'){\n            let selectedICEData = {...selectedICE}\n\t\t\tif(selectedICEData[icename]===undefined)selectedICEData[icename]=true;\n            else selectedICEData[icename]=!selectedICEData[icename];\n            inputRef.current.value = \"\"\n            event.currentTarget.getElementsByTagName('input')[0].checked = !event.currentTarget.getElementsByTagName('input')[0].checked\n\t\t\tsetSelectedICE(selectedICEData);\n\t\t}else{\n\t\t\tsetSelectedICE(icename);\n            inputRef.current.value = icename\n            setDropDown(false)\n        }\n        setInputErrorBorder(false);\n    }\n\n    const selectOptionCheckBox = (value) => {\n        document.getElementById(value).checked = !document.getElementById(value).checked\n    }\n\n    return(\n        <Fragment>\n            <ClickAwayListener onClickAway={()=>setDropDown(false)}>\n            <div>\n                <input autoComplete={\"off\"} ref={inputRef} className={ (inputErrorBorder?\" dropdownInputError \":\"\") + \"btn-users edit-user-dropdown-edit\"} onChange={inputFilter} onClick = {resetField} id=\"userIdName\" placeholder={placeholder}/>\n                <div className=\"form-inp-dropdown-popup\" role=\"menu\" aria-labelledby=\"userIdName\" style={{display: (dropDown?\"block\":\"none\")}}>\n                    <ScrollBar thumbColor=\"#929397\" >\n                    {list.map((ice,index) => (  \n                        <ul key={index} role=\"presentation\" style={{ display: (!(smartMode==='normal') && JSON.parse(ice.statusCode !== \"Online\") && (ExeScreen===true) ) ? 'none' : 'block' }} className=\"dropdown-ul\"  onClick={()=>{selectOptionCheckBox(ice.icename)}} >\n                            <li value={ice.icename} onClick={(event)=>{selectOption(ice.icename,event)}} title={ice.statusCode} className={\"dropdown-list-item \"+((selectedICE[ice.icename]!==undefined && selectedICE[ice.icename]===true)?\" selectedCheckBox\":\"\") } >\n                                <input id={ice.icename} checked={selectedICE[ice.icename]} type=\"checkbox\" style={{ width:\"auto\", marginTop:\"3px\", display: (smartMode==='normal') ? 'none' : 'block' }}/>\n                                <span id='status' style={{ backgroundColor: ice.color }}></span>\n                                {ice.icename}\n                            </li>\n                        </ul>\n                    ))}\n                    </ScrollBar>\n                </div>\n            </div>\n            </ClickAwayListener>\n        </Fragment>\n    )\n}\n\nexport default DropDownList;\n\n","import React, {useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { PopupMsg, ModalContainer, ScreenOverlay } from '..' \nimport DropDownList from './DropDownList'\nimport { getPools, getICE_list } from '../../execute/api';\nimport \"../styles/AllocateICEPopup.scss\";\n\n//use : Renders Execution Table \n//todo : remove setEachDataFirst \n\nconst AllocateICEPopup = ( {exeTypeLabel, ExeScreen, scheSmartMode, exeIceLabel, SubmitButton, setAllocateICE, allocateICE, modalTitle, modalButton , icePlaceholder} ) => {\n\n    const current_task = useSelector(state=>state.plugin.CT)\n\n    const [popupState,setPopupState] = useState({show:false})\n    const [inputErrorBorder,setInputErrorBorder] = useState(false)\n    const [loading,setLoading] = useState(false)\n    const [smartMode,setSmartMode] = useState('normal')\n    const [selectedICE,setSelectedICE] = useState(\"\")\n    const [poolList,setPoolList] = useState({})\n    const [iceStatus,setIceStatus] = useState([])\n    const [availableICE,setAvailableICE] = useState([])\n    const [chooseICEPoolOptions,setChooseICEPoolOptions] = useState([])\n    const [selectedPool,setSelectedPool] = useState(\"\")\n    const [iceNameIdMap,setIceNameIdMap] = useState({})\n\n    useEffect(()=>{\n        fetchData();\n        // eslint-disable-next-line\n    }, []);\n\n    const fetchData = async () => {\n        setSmartMode('normal');\n\t\tsetSelectedICE(\"\");\n\t\tvar projId = current_task.testSuiteDetails[0].projectidts\n\t\tvar dataforApi = {poolid:\"\",projectids: [projId]}\n\t\tsetLoading('Fetching ICE ...')\n        const data = await getPools(dataforApi);\n        if(data.error){displayError(data.error);return;}\n        setPoolList(data);\n        var arr = Object.entries(data);\n        arr.sort((a,b) => a[1].poolname.localeCompare(b[1].poolname))\n        setChooseICEPoolOptions(arr);\n        const data1 = await getICE_list({\"projectid\":projId});\n        if(data1.error){displayError(data1.error);return;}\n        setIceStatus(data1)\n        populateICElist(arr,true,data1)\n        setLoading(false);\n    }\n\n    const populateICElist =(arr,unallocated,iceStatusdata)=>{\n\t\tvar ice=[]\n        var iceStatusValue = {};\n        if( iceStatusdata !== undefined) iceStatusValue = iceStatusdata.ice_ids;\n        else if( iceStatusdata === undefined) iceStatusValue= iceStatus.ice_ids;\n\t\tconst statusUpdate = (ice) => {\n\t\t\tvar color = '#fdc010' ;\n\t\t\tvar status = 'Offline';\n\t\t\tif(ice.connected){\n\t\t\t\tcolor = '#95c353';\n\t\t\t\tstatus = 'Online'\n\t\t\t}\n\t\t\tif(ice.mode){\n\t\t\t\tcolor = 'red';\n\t\t\t\tstatus = 'DND mode'\n\t\t\t}\n\t\t\treturn {color,status}\n\t\t}\n\t\tif(unallocated){\n            if(arr===undefined) iceStatusdata = iceStatus;\n\t\t\tarr = Object.entries(iceStatusdata.unallocatedICE)\n\t\t\tarr.forEach((e)=>{\n\t\t\t\tvar res = statusUpdate(e[1])\n\t\t\t\te[1].color = res.color;\n\t\t\t\te[1].statusCode = res.status;\n\t\t\t\tice.push(e[1])\n\t\t\t})\n\t\t}else{\n            var iceNameIdMapData = {...iceNameIdMap};\n\t\t\tarr.forEach((e)=>{\n\t\t\t\tif(e[1].ice_list){\n\t\t\t\t\tObject.entries(e[1].ice_list).forEach((k)=>{\n\t\t\t\t\t\tif(k[0] in iceStatusValue){\n                            var res = statusUpdate(iceStatusValue[k[0]])\n                            iceNameIdMapData[k[1].icename] = {}\n\t\t\t\t\t\t\ticeNameIdMapData[k[1].icename].id = k[0];\n\t\t\t\t\t\t\ticeNameIdMapData[k[1].icename].status = iceStatusValue[k[0]].status;\n\t\t\t\t\t\t\tk[1].color = res.color;\n\t\t\t\t\t\t\tk[1].statusCode = res.status;\n\t\t\t\t\t\t\tice.push(k[1])\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n            })\n            setIceNameIdMap(iceNameIdMapData);\n\t\t}\n\t\tice.sort((a,b) => a.icename.localeCompare(b.icename))\n        setAvailableICE(ice);\n    }\n    \n    const onChangeChooseICEPool = (value) =>{\n\t\tvar unallocated = false\n        var id = value\n        var arr;\n\t\tif(id==='all'){\n\t\t\tarr = Object.entries(poolList)\n\t\t}else if(id==='unallocated'){\n            unallocated =  true;\n            setSelectedPool(\"\");\n\t\t}else{\n            arr = Object.entries({[id]:poolList[id]})\n            setSelectedPool(id);\n\t\t}\n        populateICElist(arr,unallocated)\n    }\n\n    const displayError = (error) =>{\n        setLoading(false)\n        setPopupState({\n            title:'ERROR',\n            content:error,\n            submitText:'Ok',\n            show:true\n        })\n    }\n\n    return (\n        <>\n            {(popupState.show)?<PopupMsg submit={()=>setPopupState({show:false})} close={()=>setPopupState({show:false})} title={popupState.title} content={popupState.content} submitText={popupState.submitText}/>:null}\n            {loading?<ScreenOverlay content={loading}/>:null}\n            {allocateICE?\n                <div className=\"allocate-ice-Modal\">\n                    <ModalContainer \n                        title={modalTitle} \n                        footer={submitModalButton(setInputErrorBorder, iceNameIdMap, SubmitButton, selectedPool, smartMode, selectedICE, modalButton,scheSmartMode,ExeScreen)} \n                        close={()=>{setAllocateICE(false)}}\n                        content={MiddleContent(inputErrorBorder, setInputErrorBorder, exeTypeLabel, exeIceLabel, icePlaceholder, chooseICEPoolOptions, onChangeChooseICEPool, availableICE, smartMode, setSmartMode,selectedICE, setSelectedICE, ExeScreen, scheSmartMode)}\n                        // modalClass=\" modal-md\"\n                    />\n                </div>\n            :null} \n            \n        </>\n    );\n} \n\nconst MiddleContent = (inputErrorBorder, setInputErrorBorder, exeTypeLabel, exeIceLabel, icePlaceholder,chooseICEPoolOptions, onChangeChooseICEPool, availableICE, smartMode, setSmartMode, selectedICE, setSelectedICE, ExeScreen, scheSmartMode) => {\n\n    const setSelectedICEState = (value) => {\n        if(value==='normal' ) setSelectedICE(\"\");\n        else setSelectedICE({});\n    }\n\n    return(\n        <div >\n            {ExeScreen!==undefined && ExeScreen===true ?\n                <div className='adminControl-ice popup-content'>\n                    <div>\n                        <span className=\"leftControl\" title=\"Execution type\">{exeTypeLabel}</span>\n                        <select onChange={(event)=>{setSmartMode(event.target.value);setSelectedICEState(event.target.value)}} id='executionType'>\n                            <option smart=\"false\" value='normal' >Normal Execution</option>\n                            <option smart=\"true\" value='smartModule' >Module Smart Execution</option>\n                            <option\tsmart=\"true\" value='smartScenario'>Scenario Smart Execution</option>\n                        </select>\n                    </div>\n                </div>:null\n            }\n            <div className='adminControl-ice popup-content'>\n                <div>\n                    <span className=\"leftControl\" title=\"Token Name\">Select ICE Pool</span>\n                    <select id='chooseICEPool' onChange={(event)=>{onChangeChooseICEPool(event.target.value)}} >\n                        <option value='unallocated'>Unallocated ICE</option>\n                        {chooseICEPoolOptions.map((e,index)=>(\n                            <option key={index} value={e[0]}>{e[1].poolname}</option>\n                        ))}\n                    </select>\n                </div>\n            </div>\n            <div className='adminControl-ice popup-content'>\n\t\t\t\t<div>\n\t\t\t\t\t<span className=\"leftControl\" title=\"Token Name\">{exeIceLabel}</span>\n                    <DropDownList ExeScreen={ExeScreen} inputErrorBorder={inputErrorBorder} setInputErrorBorder={setInputErrorBorder} placeholder={icePlaceholder} data={availableICE} smartMode={(ExeScreen===true?smartMode:scheSmartMode)} selectedICE={selectedICE} setSelectedICE={setSelectedICE} />\n\t\t\t\t</div>\n\t\t\t</div>\n\n            <div className='adminControl-ice popup-content popup-content-status'>\n\t\t\t\t<div>\n\t\t\t\t\t<span className=\"leftControl\" title=\"Token Name\">ICE Status:</span>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ul className=\"e__IceStatus\">\n\t\t\t\t\t\t\t<li className=\"popup-li\">\n\t\t\t\t\t\t\t\t<label title='available' className=\"legends\">\n\t\t\t\t\t\t\t\t\t<span id='status' className=\"status-available\"></span>\n\t\t\t\t\t\t\t\t\t Available\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<label title='unavailable' className=\"legends\">\n\t\t\t\t\t\t\t\t\t<span id='status' className=\"status-unavailable\" ></span>\n                                    Unavailable\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<label title='do not disturb' className=\"legends\">\n\t\t\t\t\t\t\t\t\t<span id='status' className=\"status-dnd\"></span>\n\t\t\t\t\t\t\t\t\t Do Not Disturb\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n        </div>\n    )\n}\n\nconst submitModalButton = (setInputErrorBorder, iceNameIdMap, SubmitButton,  selectedPool, smartMode, selectedICE, modalButton, scheSmartMode, ExeScreen) => {\n    const executionData = {};\n    executionData.type = (ExeScreen===true?((smartMode===\"normal\")?\"\":smartMode):scheSmartMode)\n    executionData.poolid =  selectedPool\n    if((ExeScreen===true?smartMode:scheSmartMode) !== \"normal\") executionData.targetUser = Object.keys(selectedICE);\n    else executionData.targetUser = selectedICE\n\n    const buttonAction = () => {\n        if(ExeScreen!==true && selectedICE===\"\") setInputErrorBorder(true);\n        else SubmitButton(executionData, iceNameIdMap);\n    }\n\n    return(\n        <div>\n            <button type=\"button\" onClick={()=>{buttonAction()}} >{modalButton}</button>\n        </div>\n    )\n}\n\nexport default AllocateICEPopup;","import React, { useEffect, useState, Fragment} from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport {useDispatch, useSelector} from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { ModalContainer, PopupMsg } from './pages/global';\nimport {v4 as uuid} from 'uuid';\nimport { UPDATE_REPORTDATA } from './pages/plugin/state/action';\nimport * as actionTypes from './pages/login/state/action';\nimport {url} from './App'\n\n/*Component SocketFactory\n  use: creates/updates socket connection\n  1 : notify -> used in mindmap screen assign notification updates header header notify\n  2 : result_ExecutionDataInfo -> execution completion popups\n*/\n\nconst SocketFactory = () => {\n    const [showAfterExecution,setShowAfterExecution] = useState({show:false})\n    const [reportData,setReportData] = useState(undefined)\n    const [popupState,setPopupState] = useState({show:false,title:\"\",content:\"\"})\n    const userInfo = useSelector(state=>state.login.userinfo);\n    const socket = useSelector(state=>state.login.socket);\n    const dispatch = useDispatch()\n    const history = useHistory();\n    useEffect(()=>{\n      if(socket){\n        socket.on('notify',(value)=> {\n          if (value.count === 0 && 'notifyMsg' in value) {\n            dispatch({type: actionTypes.UPDATE_NOTIFY, payload: value});\n          }\n        });\n        socket.on(\"result_ExecutionDataInfo\",(result)=> {\n            executionDATA(result)\n        });\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[socket])\n    useEffect(()=>{\n        var userName = Buffer.from((userInfo && userInfo.username)?userInfo.username:uuid()).toString('base64')\n        var socket = socketIOClient(url, { forceNew: true, reconnect: true, query: {check: 'notify', key: userName}});\n        dispatch({type:actionTypes.SET_SOCKET,payload:socket})\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[userInfo])\n\n    const PostExecution = () =>{\n     return(\n        <div className=\"afterExecution-modal\">\n            <ModalContainer \n                title={\"Execute Test Suite\"}\n                content={\n                    <p style={{cursor:'default'}}>{showAfterExecution.content} <br />\n                    <p> Go to <span onClick={()=>{redirectToReports();setShowAfterExecution({show:false})}} style={{color:'#643693',cursor:'pointer',fontWeight:'bold'}}>Reports</span></p></p>\n                }\n                close={()=>setShowAfterExecution({show:false})}\n                footer={\n                    <button onClick={()=>setShowAfterExecution({show:false})}>Ok</button>\n                }\n            />\n        </div>\n    )\n};\n    \n    const redirectToReports = () =>{\n        dispatch({type: UPDATE_REPORTDATA, payload: reportData});\n        setPopupState({show:false})\n        window.localStorage['navigateScreen'] = \"reports\";\n        history.replace(\"/reports\");\n    }\n\n    const executionDATA = (result) => {\n        var data = result.status\n        var testSuiteIds = result.testSuiteDetails;\n        var msg = \"\";\n        testSuiteIds[0][\"projectidts\"] = testSuiteIds[0][\"projectid\"];\n        msg = testSuiteIds[0][\"testsuitename\"]\n        setReportData(result)\n        \n        if (data === \"Terminate\") {\n            setShowAfterExecution({show:true, title:msg,content: \"Execution terminated - By Program.\" })\n        } \n        else if (data === \"UserTerminate\") {\n            setShowAfterExecution({show:true, title:msg,content:\"Execution terminated - By User.\" })\n        } \n        else if (data === \"unavailableLocalServer\") {\n            setPopupState({show:true, 'title': 'Execute Test Suite', 'content': \"No Intelligent Core Engine (ICE) connection found with the Avo Assure logged in username. Please run the ICE batch file once again and connect to Server.\"});\n        } \n        else if (data === \"success\") {\n            setShowAfterExecution({show:true,title:msg,content:\"Execution completed successfully.\" })\n        } else if(data === \"Completed\"){\n            setPopupState({show:true,'title': 'Scheduled Execution Complete', 'content':msg});\n        } else if(data === 'accessibilityTestingSuccess') {\n            setPopupState({show:true, 'title': 'Accessibility Testing ', 'content':msg + \": Accessibility Testing completed Successfully.\"});\n        } else if(data === 'accessibilityTestingTerminate'){\n            setPopupState({show:true, 'title': 'Accessibility Testing ', 'content':\"Accessibility Testing Terminated.\"});\n        }\n        else setPopupState({show:true, 'title': \"Execute Test Suite\", 'content':\"Failed to execute.\"});\n    }\n    return(\n        <Fragment>\n            {popupState.show && <PopupMsg content={popupState.content} title={popupState.title} submit={()=>setPopupState({show:false})} close={()=>setPopupState({show:false})} submitText={\"Ok\"} />}\n            { showAfterExecution.show && <PostExecution/> }\n        </Fragment>\n    )\n}\n\nexport default SocketFactory;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}